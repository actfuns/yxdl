package pomelo.area;

import com.google.protobuf.AbstractMessage;
import com.google.protobuf.AbstractMessageLite;
import com.google.protobuf.AbstractParser;
import com.google.protobuf.ByteString;
import com.google.protobuf.CodedInputStream;
import com.google.protobuf.CodedOutputStream;
import com.google.protobuf.Descriptors;
import com.google.protobuf.ExtensionRegistry;
import com.google.protobuf.ExtensionRegistryLite;
import com.google.protobuf.GeneratedMessage;
import com.google.protobuf.InvalidProtocolBufferException;
import com.google.protobuf.Message;
import com.google.protobuf.MessageLite;
import com.google.protobuf.MessageOrBuilder;
import com.google.protobuf.Parser;
import com.google.protobuf.RepeatedFieldBuilder;
import com.google.protobuf.SingleFieldBuilder;
import com.google.protobuf.UnknownFieldSet;

import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectStreamException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import pomelo.Common;


public final class PetHandler {
    public static void registerAllExtensions(ExtensionRegistry registry) {
    }

    public static final class GetAllPetsBaseInfoRequest
            extends GeneratedMessage
            implements GetAllPetsBaseInfoRequestOrBuilder {
        private static final GetAllPetsBaseInfoRequest defaultInstance = new GetAllPetsBaseInfoRequest(true);
        private final UnknownFieldSet unknownFields;

        private GetAllPetsBaseInfoRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private GetAllPetsBaseInfoRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static GetAllPetsBaseInfoRequest getDefaultInstance() {
            return defaultInstance;
        }

        public GetAllPetsBaseInfoRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private GetAllPetsBaseInfoRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            continue;
                    }
                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_GetAllPetsBaseInfoRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_GetAllPetsBaseInfoRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GetAllPetsBaseInfoRequest.class, Builder.class);
        }

        public static Parser<GetAllPetsBaseInfoRequest> PARSER = (Parser<GetAllPetsBaseInfoRequest>) new AbstractParser<GetAllPetsBaseInfoRequest>() {
            public PetHandler.GetAllPetsBaseInfoRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.GetAllPetsBaseInfoRequest(input, extensionRegistry);
            }
        };
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<GetAllPetsBaseInfoRequest> getParserForType() {
            return PARSER;
        }

        private void initFields() {
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static GetAllPetsBaseInfoRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (GetAllPetsBaseInfoRequest) PARSER.parseFrom(data);
        }

        public static GetAllPetsBaseInfoRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetAllPetsBaseInfoRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GetAllPetsBaseInfoRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (GetAllPetsBaseInfoRequest) PARSER.parseFrom(data);
        }

        public static GetAllPetsBaseInfoRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetAllPetsBaseInfoRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GetAllPetsBaseInfoRequest parseFrom(InputStream input) throws IOException {
            return (GetAllPetsBaseInfoRequest) PARSER.parseFrom(input);
        }

        public static GetAllPetsBaseInfoRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetAllPetsBaseInfoRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static GetAllPetsBaseInfoRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (GetAllPetsBaseInfoRequest) PARSER.parseDelimitedFrom(input);
        }

        public static GetAllPetsBaseInfoRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetAllPetsBaseInfoRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static GetAllPetsBaseInfoRequest parseFrom(CodedInputStream input) throws IOException {
            return (GetAllPetsBaseInfoRequest) PARSER.parseFrom(input);
        }

        public static GetAllPetsBaseInfoRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetAllPetsBaseInfoRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(GetAllPetsBaseInfoRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.GetAllPetsBaseInfoRequestOrBuilder {
            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_GetAllPetsBaseInfoRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_GetAllPetsBaseInfoRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.GetAllPetsBaseInfoRequest.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.GetAllPetsBaseInfoRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_GetAllPetsBaseInfoRequest_descriptor;
            }

            public PetHandler.GetAllPetsBaseInfoRequest getDefaultInstanceForType() {
                return PetHandler.GetAllPetsBaseInfoRequest.getDefaultInstance();
            }

            public PetHandler.GetAllPetsBaseInfoRequest build() {
                PetHandler.GetAllPetsBaseInfoRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.GetAllPetsBaseInfoRequest buildPartial() {
                PetHandler.GetAllPetsBaseInfoRequest result = new PetHandler.GetAllPetsBaseInfoRequest(this);
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.GetAllPetsBaseInfoRequest)
                    return mergeFrom((PetHandler.GetAllPetsBaseInfoRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.GetAllPetsBaseInfoRequest other) {
                if (other == PetHandler.GetAllPetsBaseInfoRequest.getDefaultInstance()) return this;
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.GetAllPetsBaseInfoRequest parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.GetAllPetsBaseInfoRequest) PetHandler.GetAllPetsBaseInfoRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.GetAllPetsBaseInfoRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class PetInfo
            extends GeneratedMessage
            implements PetInfoOrBuilder {
        private final UnknownFieldSet unknownFields;


        private PetInfo(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }


        private PetInfo(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }


        public static PetInfo getDefaultInstance() {
            return defaultInstance;
        }


        public PetInfo getDefaultInstanceForType() {
            return defaultInstance;
        }


        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }


        private PetInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.id_ = bs;
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.name_ = bs;
                            break;
                        case 24:
                            this.bitField0_ |= 0x4;
                            this.level_ = input.readInt32();
                            break;
                        case 32:
                            this.bitField0_ |= 0x8;
                            this.hp_ = input.readInt32();
                            break;
                        case 40:
                            this.bitField0_ |= 0x10;
                            this.mp_ = input.readInt32();
                            break;
                        case 48:
                            this.bitField0_ |= 0x20;
                            this.maxHP_ = input.readInt32();
                            break;
                        case 56:
                            this.bitField0_ |= 0x40;
                            this.maxMP_ = input.readInt32();
                            break;
                        case 64:
                            this.bitField0_ |= 0x80;
                            this.minPhy_ = input.readInt32();
                            break;
                        case 72:
                            this.bitField0_ |= 0x100;
                            this.maxPhy_ = input.readInt32();
                            break;
                        case 80:
                            this.bitField0_ |= 0x200;
                            this.minMag_ = input.readInt32();
                            break;
                        case 88:
                            this.bitField0_ |= 0x400;
                            this.maxMag_ = input.readInt32();
                            break;
                        case 96:
                            this.bitField0_ |= 0x800;
                            this.hit_ = input.readInt32();
                            break;
                        case 104:
                            this.bitField0_ |= 0x1000;
                            this.dodge_ = input.readInt32();
                            break;
                        case 112:
                            this.bitField0_ |= 0x2000;
                            this.crit_ = input.readInt32();
                            break;
                        case 120:
                            this.bitField0_ |= 0x4000;
                            this.resCrit_ = input.readInt32();
                            break;
                        case 128:
                            this.bitField0_ |= 0x8000;
                            this.ac_ = input.readInt32();
                            break;
                        case 136:
                            this.bitField0_ |= 0x10000;
                            this.resist_ = input.readInt32();
                            break;
                        case 144:
                            this.bitField0_ |= 0x20000;
                            this.ignoreAc_ = input.readInt32();
                            break;
                        case 152:
                            this.bitField0_ |= 0x40000;
                            this.ignoreResist_ = input.readInt32();
                            break;
                        case 160:
                            this.bitField0_ |= 0x80000;
                            this.exp_ = input.readInt32();
                            break;
                        case 168:
                            this.bitField0_ |= 0x100000;
                            this.upgradeExp_ = input.readInt32();
                            break;
                        case 176:
                            this.bitField0_ |= 0x200000;
                            this.transformLevel_ = input.readInt32();
                            break;
                        case 184:
                            this.bitField0_ |= 0x400000;
                            this.upGradeLevel_ = input.readInt32();
                            break;
                        case 192:
                            this.bitField0_ |= 0x800000;
                            this.upGradeNeedLevel_ = input.readInt32();
                            break;
                        case 200:
                            this.bitField0_ |= 0x1000000;
                            this.fightPower_ = input.readInt32();
                            break;
                        case 208:
                            this.bitField0_ |= 0x2000000;
                            this.stamina_ = input.readInt32();
                            break;
                        case 216:
                            this.bitField0_ |= 0x4000000;
                            this.maxStamina_ = input.readInt32();
                            break;
                        case 224:
                            this.bitField0_ |= 0x8000000;
                            this.loyalty_ = input.readInt32();
                            break;
                        case 232:
                            this.bitField0_ |= 0x10000000;
                            this.maxLoyalty_ = input.readInt32();
                            break;
                        case 240:
                            this.bitField0_ |= 0x20000000;
                            this.templateId_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }


        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_PetInfo_descriptor;
        }


        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_PetInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(PetInfo.class, Builder.class);
        }


        public static Parser<PetInfo> PARSER = (Parser<PetInfo>) new AbstractParser<PetInfo>() {
            public PetHandler.PetInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.PetInfo(input, extensionRegistry);
            }
        };


        private int bitField0_;


        public static final int ID_FIELD_NUMBER = 1;


        private Object id_;


        public static final int NAME_FIELD_NUMBER = 2;


        private Object name_;


        public static final int LEVEL_FIELD_NUMBER = 3;


        private int level_;


        public static final int HP_FIELD_NUMBER = 4;


        private int hp_;


        public static final int MP_FIELD_NUMBER = 5;


        private int mp_;


        public static final int MAXHP_FIELD_NUMBER = 6;


        private int maxHP_;


        public static final int MAXMP_FIELD_NUMBER = 7;


        private int maxMP_;


        public static final int MINPHY_FIELD_NUMBER = 8;


        private int minPhy_;


        public static final int MAXPHY_FIELD_NUMBER = 9;


        private int maxPhy_;


        public static final int MINMAG_FIELD_NUMBER = 10;


        private int minMag_;


        public static final int MAXMAG_FIELD_NUMBER = 11;


        private int maxMag_;


        public static final int HIT_FIELD_NUMBER = 12;


        private int hit_;


        public static final int DODGE_FIELD_NUMBER = 13;


        private int dodge_;


        public static final int CRIT_FIELD_NUMBER = 14;


        private int crit_;


        public static final int RESCRIT_FIELD_NUMBER = 15;


        private int resCrit_;


        public static final int AC_FIELD_NUMBER = 16;


        private int ac_;


        public static final int RESIST_FIELD_NUMBER = 17;


        private int resist_;


        public static final int IGNOREAC_FIELD_NUMBER = 18;


        private int ignoreAc_;


        public static final int IGNORERESIST_FIELD_NUMBER = 19;


        private int ignoreResist_;


        public static final int EXP_FIELD_NUMBER = 20;


        private int exp_;


        public static final int UPGRADEEXP_FIELD_NUMBER = 21;


        private int upgradeExp_;


        public static final int TRANSFORMLEVEL_FIELD_NUMBER = 22;


        private int transformLevel_;


        public static final int UPGRADELEVEL_FIELD_NUMBER = 23;


        private int upGradeLevel_;


        public static final int UPGRADENEEDLEVEL_FIELD_NUMBER = 24;


        private int upGradeNeedLevel_;


        public static final int FIGHTPOWER_FIELD_NUMBER = 25;


        private int fightPower_;


        public static final int STAMINA_FIELD_NUMBER = 26;


        private int stamina_;


        public static final int MAXSTAMINA_FIELD_NUMBER = 27;


        private int maxStamina_;


        public static final int LOYALTY_FIELD_NUMBER = 28;


        private int loyalty_;


        public static final int MAXLOYALTY_FIELD_NUMBER = 29;


        private int maxLoyalty_;


        public static final int TEMPLATEID_FIELD_NUMBER = 30;


        private static final PetInfo defaultInstance = new PetInfo(true);
        private int templateId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<PetInfo> getParserForType() {
            return PARSER;
        }

        public boolean hasId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getId() {
            Object ref = this.id_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.id_ = s;
            return s;
        }

        public ByteString getIdBytes() {
            Object ref = this.id_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.id_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasName() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getName() {
            Object ref = this.name_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.name_ = s;
            return s;
        }

        public ByteString getNameBytes() {
            Object ref = this.name_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.name_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasLevel() {
            return ((this.bitField0_ & 0x4) == 4);
        }

        public int getLevel() {
            return this.level_;
        }

        public boolean hasHp() {
            return ((this.bitField0_ & 0x8) == 8);
        }

        public int getHp() {
            return this.hp_;
        }

        public boolean hasMp() {
            return ((this.bitField0_ & 0x10) == 16);
        }

        public int getMp() {
            return this.mp_;
        }

        public boolean hasMaxHP() {
            return ((this.bitField0_ & 0x20) == 32);
        }

        public int getMaxHP() {
            return this.maxHP_;
        }

        public boolean hasMaxMP() {
            return ((this.bitField0_ & 0x40) == 64);
        }

        public int getMaxMP() {
            return this.maxMP_;
        }

        public boolean hasMinPhy() {
            return ((this.bitField0_ & 0x80) == 128);
        }

        public int getMinPhy() {
            return this.minPhy_;
        }

        public boolean hasMaxPhy() {
            return ((this.bitField0_ & 0x100) == 256);
        }

        public int getMaxPhy() {
            return this.maxPhy_;
        }

        public boolean hasMinMag() {
            return ((this.bitField0_ & 0x200) == 512);
        }

        public int getMinMag() {
            return this.minMag_;
        }

        public boolean hasMaxMag() {
            return ((this.bitField0_ & 0x400) == 1024);
        }

        public int getMaxMag() {
            return this.maxMag_;
        }

        public boolean hasHit() {
            return ((this.bitField0_ & 0x800) == 2048);
        }

        public int getHit() {
            return this.hit_;
        }

        public boolean hasDodge() {
            return ((this.bitField0_ & 0x1000) == 4096);
        }

        public int getDodge() {
            return this.dodge_;
        }

        public boolean hasCrit() {
            return ((this.bitField0_ & 0x2000) == 8192);
        }

        public int getCrit() {
            return this.crit_;
        }

        public boolean hasResCrit() {
            return ((this.bitField0_ & 0x4000) == 16384);
        }

        public int getResCrit() {
            return this.resCrit_;
        }

        public boolean hasAc() {
            return ((this.bitField0_ & 0x8000) == 32768);
        }

        public int getAc() {
            return this.ac_;
        }

        public boolean hasResist() {
            return ((this.bitField0_ & 0x10000) == 65536);
        }

        public int getResist() {
            return this.resist_;
        }

        public boolean hasIgnoreAc() {
            return ((this.bitField0_ & 0x20000) == 131072);
        }

        public int getIgnoreAc() {
            return this.ignoreAc_;
        }

        public boolean hasIgnoreResist() {
            return ((this.bitField0_ & 0x40000) == 262144);
        }

        public int getIgnoreResist() {
            return this.ignoreResist_;
        }

        public boolean hasExp() {
            return ((this.bitField0_ & 0x80000) == 524288);
        }

        public int getExp() {
            return this.exp_;
        }

        public boolean hasUpgradeExp() {
            return ((this.bitField0_ & 0x100000) == 1048576);
        }

        public int getUpgradeExp() {
            return this.upgradeExp_;
        }

        public boolean hasTransformLevel() {
            return ((this.bitField0_ & 0x200000) == 2097152);
        }

        public int getTransformLevel() {
            return this.transformLevel_;
        }

        public boolean hasUpGradeLevel() {
            return ((this.bitField0_ & 0x400000) == 4194304);
        }

        public int getUpGradeLevel() {
            return this.upGradeLevel_;
        }

        public boolean hasUpGradeNeedLevel() {
            return ((this.bitField0_ & 0x800000) == 8388608);
        }

        public int getUpGradeNeedLevel() {
            return this.upGradeNeedLevel_;
        }

        public boolean hasFightPower() {
            return ((this.bitField0_ & 0x1000000) == 16777216);
        }

        public int getFightPower() {
            return this.fightPower_;
        }

        public boolean hasStamina() {
            return ((this.bitField0_ & 0x2000000) == 33554432);
        }

        public int getStamina() {
            return this.stamina_;
        }

        public boolean hasMaxStamina() {
            return ((this.bitField0_ & 0x4000000) == 67108864);
        }

        public int getMaxStamina() {
            return this.maxStamina_;
        }

        public boolean hasLoyalty() {
            return ((this.bitField0_ & 0x8000000) == 134217728);
        }

        public int getLoyalty() {
            return this.loyalty_;
        }

        public boolean hasMaxLoyalty() {
            return ((this.bitField0_ & 0x10000000) == 268435456);
        }

        public int getMaxLoyalty() {
            return this.maxLoyalty_;
        }

        public boolean hasTemplateId() {
            return ((this.bitField0_ & 0x20000000) == 536870912);
        }

        public int getTemplateId() {
            return this.templateId_;
        }

        private void initFields() {
            this.id_ = "";
            this.name_ = "";
            this.level_ = 0;
            this.hp_ = 0;
            this.mp_ = 0;
            this.maxHP_ = 0;
            this.maxMP_ = 0;
            this.minPhy_ = 0;
            this.maxPhy_ = 0;
            this.minMag_ = 0;
            this.maxMag_ = 0;
            this.hit_ = 0;
            this.dodge_ = 0;
            this.crit_ = 0;
            this.resCrit_ = 0;
            this.ac_ = 0;
            this.resist_ = 0;
            this.ignoreAc_ = 0;
            this.ignoreResist_ = 0;
            this.exp_ = 0;
            this.upgradeExp_ = 0;
            this.transformLevel_ = 0;
            this.upGradeLevel_ = 0;
            this.upGradeNeedLevel_ = 0;
            this.fightPower_ = 0;
            this.stamina_ = 0;
            this.maxStamina_ = 0;
            this.loyalty_ = 0;
            this.maxLoyalty_ = 0;
            this.templateId_ = 0;
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasName()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasLevel()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasHp()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasMp()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasMaxHP()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasMaxMP()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasMinPhy()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasMaxPhy()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasMinMag()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasMaxMag()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasHit()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasDodge()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasCrit()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasResCrit()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasAc()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasResist()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasIgnoreAc()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasIgnoreResist()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasExp()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasUpgradeExp()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasTransformLevel()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasUpGradeLevel()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasUpGradeNeedLevel()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasFightPower()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasStamina()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasMaxStamina()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasLoyalty()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasMaxLoyalty()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasTemplateId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        static {
            defaultInstance.initFields();
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1)
                output.writeBytes(1, getIdBytes());
            if ((this.bitField0_ & 0x2) == 2)
                output.writeBytes(2, getNameBytes());
            if ((this.bitField0_ & 0x4) == 4)
                output.writeInt32(3, this.level_);
            if ((this.bitField0_ & 0x8) == 8)
                output.writeInt32(4, this.hp_);
            if ((this.bitField0_ & 0x10) == 16)
                output.writeInt32(5, this.mp_);
            if ((this.bitField0_ & 0x20) == 32)
                output.writeInt32(6, this.maxHP_);
            if ((this.bitField0_ & 0x40) == 64)
                output.writeInt32(7, this.maxMP_);
            if ((this.bitField0_ & 0x80) == 128)
                output.writeInt32(8, this.minPhy_);
            if ((this.bitField0_ & 0x100) == 256)
                output.writeInt32(9, this.maxPhy_);
            if ((this.bitField0_ & 0x200) == 512)
                output.writeInt32(10, this.minMag_);
            if ((this.bitField0_ & 0x400) == 1024)
                output.writeInt32(11, this.maxMag_);
            if ((this.bitField0_ & 0x800) == 2048)
                output.writeInt32(12, this.hit_);
            if ((this.bitField0_ & 0x1000) == 4096)
                output.writeInt32(13, this.dodge_);
            if ((this.bitField0_ & 0x2000) == 8192)
                output.writeInt32(14, this.crit_);
            if ((this.bitField0_ & 0x4000) == 16384)
                output.writeInt32(15, this.resCrit_);
            if ((this.bitField0_ & 0x8000) == 32768)
                output.writeInt32(16, this.ac_);
            if ((this.bitField0_ & 0x10000) == 65536)
                output.writeInt32(17, this.resist_);
            if ((this.bitField0_ & 0x20000) == 131072)
                output.writeInt32(18, this.ignoreAc_);
            if ((this.bitField0_ & 0x40000) == 262144)
                output.writeInt32(19, this.ignoreResist_);
            if ((this.bitField0_ & 0x80000) == 524288)
                output.writeInt32(20, this.exp_);
            if ((this.bitField0_ & 0x100000) == 1048576)
                output.writeInt32(21, this.upgradeExp_);
            if ((this.bitField0_ & 0x200000) == 2097152)
                output.writeInt32(22, this.transformLevel_);
            if ((this.bitField0_ & 0x400000) == 4194304)
                output.writeInt32(23, this.upGradeLevel_);
            if ((this.bitField0_ & 0x800000) == 8388608)
                output.writeInt32(24, this.upGradeNeedLevel_);
            if ((this.bitField0_ & 0x1000000) == 16777216)
                output.writeInt32(25, this.fightPower_);
            if ((this.bitField0_ & 0x2000000) == 33554432)
                output.writeInt32(26, this.stamina_);
            if ((this.bitField0_ & 0x4000000) == 67108864)
                output.writeInt32(27, this.maxStamina_);
            if ((this.bitField0_ & 0x8000000) == 134217728)
                output.writeInt32(28, this.loyalty_);
            if ((this.bitField0_ & 0x10000000) == 268435456)
                output.writeInt32(29, this.maxLoyalty_);
            if ((this.bitField0_ & 0x20000000) == 536870912)
                output.writeInt32(30, this.templateId_);
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1)
                return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1)
                size += CodedOutputStream.computeBytesSize(1, getIdBytes());
            if ((this.bitField0_ & 0x2) == 2)
                size += CodedOutputStream.computeBytesSize(2, getNameBytes());
            if ((this.bitField0_ & 0x4) == 4)
                size += CodedOutputStream.computeInt32Size(3, this.level_);
            if ((this.bitField0_ & 0x8) == 8)
                size += CodedOutputStream.computeInt32Size(4, this.hp_);
            if ((this.bitField0_ & 0x10) == 16)
                size += CodedOutputStream.computeInt32Size(5, this.mp_);
            if ((this.bitField0_ & 0x20) == 32)
                size += CodedOutputStream.computeInt32Size(6, this.maxHP_);
            if ((this.bitField0_ & 0x40) == 64)
                size += CodedOutputStream.computeInt32Size(7, this.maxMP_);
            if ((this.bitField0_ & 0x80) == 128)
                size += CodedOutputStream.computeInt32Size(8, this.minPhy_);
            if ((this.bitField0_ & 0x100) == 256)
                size += CodedOutputStream.computeInt32Size(9, this.maxPhy_);
            if ((this.bitField0_ & 0x200) == 512)
                size += CodedOutputStream.computeInt32Size(10, this.minMag_);
            if ((this.bitField0_ & 0x400) == 1024)
                size += CodedOutputStream.computeInt32Size(11, this.maxMag_);
            if ((this.bitField0_ & 0x800) == 2048)
                size += CodedOutputStream.computeInt32Size(12, this.hit_);
            if ((this.bitField0_ & 0x1000) == 4096)
                size += CodedOutputStream.computeInt32Size(13, this.dodge_);
            if ((this.bitField0_ & 0x2000) == 8192)
                size += CodedOutputStream.computeInt32Size(14, this.crit_);
            if ((this.bitField0_ & 0x4000) == 16384)
                size += CodedOutputStream.computeInt32Size(15, this.resCrit_);
            if ((this.bitField0_ & 0x8000) == 32768)
                size += CodedOutputStream.computeInt32Size(16, this.ac_);
            if ((this.bitField0_ & 0x10000) == 65536)
                size += CodedOutputStream.computeInt32Size(17, this.resist_);
            if ((this.bitField0_ & 0x20000) == 131072)
                size += CodedOutputStream.computeInt32Size(18, this.ignoreAc_);
            if ((this.bitField0_ & 0x40000) == 262144)
                size += CodedOutputStream.computeInt32Size(19, this.ignoreResist_);
            if ((this.bitField0_ & 0x80000) == 524288)
                size += CodedOutputStream.computeInt32Size(20, this.exp_);
            if ((this.bitField0_ & 0x100000) == 1048576)
                size += CodedOutputStream.computeInt32Size(21, this.upgradeExp_);
            if ((this.bitField0_ & 0x200000) == 2097152)
                size += CodedOutputStream.computeInt32Size(22, this.transformLevel_);
            if ((this.bitField0_ & 0x400000) == 4194304)
                size += CodedOutputStream.computeInt32Size(23, this.upGradeLevel_);
            if ((this.bitField0_ & 0x800000) == 8388608)
                size += CodedOutputStream.computeInt32Size(24, this.upGradeNeedLevel_);
            if ((this.bitField0_ & 0x1000000) == 16777216)
                size += CodedOutputStream.computeInt32Size(25, this.fightPower_);
            if ((this.bitField0_ & 0x2000000) == 33554432)
                size += CodedOutputStream.computeInt32Size(26, this.stamina_);
            if ((this.bitField0_ & 0x4000000) == 67108864)
                size += CodedOutputStream.computeInt32Size(27, this.maxStamina_);
            if ((this.bitField0_ & 0x8000000) == 134217728)
                size += CodedOutputStream.computeInt32Size(28, this.loyalty_);
            if ((this.bitField0_ & 0x10000000) == 268435456)
                size += CodedOutputStream.computeInt32Size(29, this.maxLoyalty_);
            if ((this.bitField0_ & 0x20000000) == 536870912)
                size += CodedOutputStream.computeInt32Size(30, this.templateId_);
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static PetInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (PetInfo) PARSER.parseFrom(data);
        }

        public static PetInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetInfo) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PetInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (PetInfo) PARSER.parseFrom(data);
        }

        public static PetInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetInfo) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PetInfo parseFrom(InputStream input) throws IOException {
            return (PetInfo) PARSER.parseFrom(input);
        }

        public static PetInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetInfo) PARSER.parseFrom(input, extensionRegistry);
        }

        public static PetInfo parseDelimitedFrom(InputStream input) throws IOException {
            return (PetInfo) PARSER.parseDelimitedFrom(input);
        }

        public static PetInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetInfo) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static PetInfo parseFrom(CodedInputStream input) throws IOException {
            return (PetInfo) PARSER.parseFrom(input);
        }

        public static PetInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetInfo) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(PetInfo prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.PetInfoOrBuilder {
            private int bitField0_;
            private Object id_;
            private Object name_;
            private int level_;
            private int hp_;
            private int mp_;
            private int maxHP_;
            private int maxMP_;
            private int minPhy_;
            private int maxPhy_;
            private int minMag_;
            private int maxMag_;
            private int hit_;
            private int dodge_;
            private int crit_;
            private int resCrit_;
            private int ac_;
            private int resist_;
            private int ignoreAc_;
            private int ignoreResist_;
            private int exp_;
            private int upgradeExp_;
            private int transformLevel_;
            private int upGradeLevel_;
            private int upGradeNeedLevel_;
            private int fightPower_;
            private int stamina_;
            private int maxStamina_;
            private int loyalty_;
            private int maxLoyalty_;
            private int templateId_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_PetInfo_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_PetInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.PetInfo.class, Builder.class);
            }

            private Builder() {
                this.id_ = "";
                this.name_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.id_ = "";
                this.name_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.PetInfo.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.id_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.name_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.level_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.hp_ = 0;
                this.bitField0_ &= 0xFFFFFFF7;
                this.mp_ = 0;
                this.bitField0_ &= 0xFFFFFFEF;
                this.maxHP_ = 0;
                this.bitField0_ &= 0xFFFFFFDF;
                this.maxMP_ = 0;
                this.bitField0_ &= 0xFFFFFFBF;
                this.minPhy_ = 0;
                this.bitField0_ &= 0xFFFFFF7F;
                this.maxPhy_ = 0;
                this.bitField0_ &= 0xFFFFFEFF;
                this.minMag_ = 0;
                this.bitField0_ &= 0xFFFFFDFF;
                this.maxMag_ = 0;
                this.bitField0_ &= 0xFFFFFBFF;
                this.hit_ = 0;
                this.bitField0_ &= 0xFFFFF7FF;
                this.dodge_ = 0;
                this.bitField0_ &= 0xFFFFEFFF;
                this.crit_ = 0;
                this.bitField0_ &= 0xFFFFDFFF;
                this.resCrit_ = 0;
                this.bitField0_ &= 0xFFFFBFFF;
                this.ac_ = 0;
                this.bitField0_ &= 0xFFFF7FFF;
                this.resist_ = 0;
                this.bitField0_ &= 0xFFFEFFFF;
                this.ignoreAc_ = 0;
                this.bitField0_ &= 0xFFFDFFFF;
                this.ignoreResist_ = 0;
                this.bitField0_ &= 0xFFFBFFFF;
                this.exp_ = 0;
                this.bitField0_ &= 0xFFF7FFFF;
                this.upgradeExp_ = 0;
                this.bitField0_ &= 0xFFEFFFFF;
                this.transformLevel_ = 0;
                this.bitField0_ &= 0xFFDFFFFF;
                this.upGradeLevel_ = 0;
                this.bitField0_ &= 0xFFBFFFFF;
                this.upGradeNeedLevel_ = 0;
                this.bitField0_ &= 0xFF7FFFFF;
                this.fightPower_ = 0;
                this.bitField0_ &= 0xFEFFFFFF;
                this.stamina_ = 0;
                this.bitField0_ &= 0xFDFFFFFF;
                this.maxStamina_ = 0;
                this.bitField0_ &= 0xFBFFFFFF;
                this.loyalty_ = 0;
                this.bitField0_ &= 0xF7FFFFFF;
                this.maxLoyalty_ = 0;
                this.bitField0_ &= 0xEFFFFFFF;
                this.templateId_ = 0;
                this.bitField0_ &= 0xDFFFFFFF;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_PetInfo_descriptor;
            }

            public PetHandler.PetInfo getDefaultInstanceForType() {
                return PetHandler.PetInfo.getDefaultInstance();
            }

            public PetHandler.PetInfo build() {
                PetHandler.PetInfo result = buildPartial();
                if (!result.isInitialized())
                    throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.PetInfo buildPartial() {
                PetHandler.PetInfo result = new PetHandler.PetInfo(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1)
                    to_bitField0_ |= 0x1;
                result.id_ = this.id_;
                if ((from_bitField0_ & 0x2) == 2)
                    to_bitField0_ |= 0x2;
                result.name_ = this.name_;
                if ((from_bitField0_ & 0x4) == 4)
                    to_bitField0_ |= 0x4;
                result.level_ = this.level_;
                if ((from_bitField0_ & 0x8) == 8)
                    to_bitField0_ |= 0x8;
                result.hp_ = this.hp_;
                if ((from_bitField0_ & 0x10) == 16)
                    to_bitField0_ |= 0x10;
                result.mp_ = this.mp_;
                if ((from_bitField0_ & 0x20) == 32)
                    to_bitField0_ |= 0x20;
                result.maxHP_ = this.maxHP_;
                if ((from_bitField0_ & 0x40) == 64)
                    to_bitField0_ |= 0x40;
                result.maxMP_ = this.maxMP_;
                if ((from_bitField0_ & 0x80) == 128)
                    to_bitField0_ |= 0x80;
                result.minPhy_ = this.minPhy_;
                if ((from_bitField0_ & 0x100) == 256)
                    to_bitField0_ |= 0x100;
                result.maxPhy_ = this.maxPhy_;
                if ((from_bitField0_ & 0x200) == 512)
                    to_bitField0_ |= 0x200;
                result.minMag_ = this.minMag_;
                if ((from_bitField0_ & 0x400) == 1024)
                    to_bitField0_ |= 0x400;
                result.maxMag_ = this.maxMag_;
                if ((from_bitField0_ & 0x800) == 2048)
                    to_bitField0_ |= 0x800;
                result.hit_ = this.hit_;
                if ((from_bitField0_ & 0x1000) == 4096)
                    to_bitField0_ |= 0x1000;
                result.dodge_ = this.dodge_;
                if ((from_bitField0_ & 0x2000) == 8192)
                    to_bitField0_ |= 0x2000;
                result.crit_ = this.crit_;
                if ((from_bitField0_ & 0x4000) == 16384)
                    to_bitField0_ |= 0x4000;
                result.resCrit_ = this.resCrit_;
                if ((from_bitField0_ & 0x8000) == 32768)
                    to_bitField0_ |= 0x8000;
                result.ac_ = this.ac_;
                if ((from_bitField0_ & 0x10000) == 65536)
                    to_bitField0_ |= 0x10000;
                result.resist_ = this.resist_;
                if ((from_bitField0_ & 0x20000) == 131072)
                    to_bitField0_ |= 0x20000;
                result.ignoreAc_ = this.ignoreAc_;
                if ((from_bitField0_ & 0x40000) == 262144)
                    to_bitField0_ |= 0x40000;
                result.ignoreResist_ = this.ignoreResist_;
                if ((from_bitField0_ & 0x80000) == 524288)
                    to_bitField0_ |= 0x80000;
                result.exp_ = this.exp_;
                if ((from_bitField0_ & 0x100000) == 1048576)
                    to_bitField0_ |= 0x100000;
                result.upgradeExp_ = this.upgradeExp_;
                if ((from_bitField0_ & 0x200000) == 2097152)
                    to_bitField0_ |= 0x200000;
                result.transformLevel_ = this.transformLevel_;
                if ((from_bitField0_ & 0x400000) == 4194304)
                    to_bitField0_ |= 0x400000;
                result.upGradeLevel_ = this.upGradeLevel_;
                if ((from_bitField0_ & 0x800000) == 8388608)
                    to_bitField0_ |= 0x800000;
                result.upGradeNeedLevel_ = this.upGradeNeedLevel_;
                if ((from_bitField0_ & 0x1000000) == 16777216)
                    to_bitField0_ |= 0x1000000;
                result.fightPower_ = this.fightPower_;
                if ((from_bitField0_ & 0x2000000) == 33554432)
                    to_bitField0_ |= 0x2000000;
                result.stamina_ = this.stamina_;
                if ((from_bitField0_ & 0x4000000) == 67108864)
                    to_bitField0_ |= 0x4000000;
                result.maxStamina_ = this.maxStamina_;
                if ((from_bitField0_ & 0x8000000) == 134217728)
                    to_bitField0_ |= 0x8000000;
                result.loyalty_ = this.loyalty_;
                if ((from_bitField0_ & 0x10000000) == 268435456)
                    to_bitField0_ |= 0x10000000;
                result.maxLoyalty_ = this.maxLoyalty_;
                if ((from_bitField0_ & 0x20000000) == 536870912)
                    to_bitField0_ |= 0x20000000;
                result.templateId_ = this.templateId_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.PetInfo)
                    return mergeFrom((PetHandler.PetInfo) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.PetInfo other) {
                if (other == PetHandler.PetInfo.getDefaultInstance())
                    return this;
                if (other.hasId()) {
                    this.bitField0_ |= 0x1;
                    this.id_ = other.id_;
                    onChanged();
                }
                if (other.hasName()) {
                    this.bitField0_ |= 0x2;
                    this.name_ = other.name_;
                    onChanged();
                }
                if (other.hasLevel())
                    setLevel(other.getLevel());
                if (other.hasHp())
                    setHp(other.getHp());
                if (other.hasMp())
                    setMp(other.getMp());
                if (other.hasMaxHP())
                    setMaxHP(other.getMaxHP());
                if (other.hasMaxMP())
                    setMaxMP(other.getMaxMP());
                if (other.hasMinPhy())
                    setMinPhy(other.getMinPhy());
                if (other.hasMaxPhy())
                    setMaxPhy(other.getMaxPhy());
                if (other.hasMinMag())
                    setMinMag(other.getMinMag());
                if (other.hasMaxMag())
                    setMaxMag(other.getMaxMag());
                if (other.hasHit())
                    setHit(other.getHit());
                if (other.hasDodge())
                    setDodge(other.getDodge());
                if (other.hasCrit())
                    setCrit(other.getCrit());
                if (other.hasResCrit())
                    setResCrit(other.getResCrit());
                if (other.hasAc())
                    setAc(other.getAc());
                if (other.hasResist())
                    setResist(other.getResist());
                if (other.hasIgnoreAc())
                    setIgnoreAc(other.getIgnoreAc());
                if (other.hasIgnoreResist())
                    setIgnoreResist(other.getIgnoreResist());
                if (other.hasExp())
                    setExp(other.getExp());
                if (other.hasUpgradeExp())
                    setUpgradeExp(other.getUpgradeExp());
                if (other.hasTransformLevel())
                    setTransformLevel(other.getTransformLevel());
                if (other.hasUpGradeLevel())
                    setUpGradeLevel(other.getUpGradeLevel());
                if (other.hasUpGradeNeedLevel())
                    setUpGradeNeedLevel(other.getUpGradeNeedLevel());
                if (other.hasFightPower())
                    setFightPower(other.getFightPower());
                if (other.hasStamina())
                    setStamina(other.getStamina());
                if (other.hasMaxStamina())
                    setMaxStamina(other.getMaxStamina());
                if (other.hasLoyalty())
                    setLoyalty(other.getLoyalty());
                if (other.hasMaxLoyalty())
                    setMaxLoyalty(other.getMaxLoyalty());
                if (other.hasTemplateId())
                    setTemplateId(other.getTemplateId());
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasId())
                    return false;
                if (!hasName())
                    return false;
                if (!hasLevel())
                    return false;
                if (!hasHp())
                    return false;
                if (!hasMp())
                    return false;
                if (!hasMaxHP())
                    return false;
                if (!hasMaxMP())
                    return false;
                if (!hasMinPhy())
                    return false;
                if (!hasMaxPhy())
                    return false;
                if (!hasMinMag())
                    return false;
                if (!hasMaxMag())
                    return false;
                if (!hasHit())
                    return false;
                if (!hasDodge())
                    return false;
                if (!hasCrit())
                    return false;
                if (!hasResCrit())
                    return false;
                if (!hasAc())
                    return false;
                if (!hasResist())
                    return false;
                if (!hasIgnoreAc())
                    return false;
                if (!hasIgnoreResist())
                    return false;
                if (!hasExp())
                    return false;
                if (!hasUpgradeExp())
                    return false;
                if (!hasTransformLevel())
                    return false;
                if (!hasUpGradeLevel())
                    return false;
                if (!hasUpGradeNeedLevel())
                    return false;
                if (!hasFightPower())
                    return false;
                if (!hasStamina())
                    return false;
                if (!hasMaxStamina())
                    return false;
                if (!hasLoyalty())
                    return false;
                if (!hasMaxLoyalty())
                    return false;
                if (!hasTemplateId())
                    return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.PetInfo parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.PetInfo) PetHandler.PetInfo.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.PetInfo) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null)
                        mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasId() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getId() {
                Object ref = this.id_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8())
                        this.id_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getIdBytes() {
                Object ref = this.id_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.id_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setId(String value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.id_ = value;
                onChanged();
                return this;
            }

            public Builder clearId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.id_ = PetHandler.PetInfo.getDefaultInstance().getId();
                onChanged();
                return this;
            }

            public Builder setIdBytes(ByteString value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.id_ = value;
                onChanged();
                return this;
            }

            public boolean hasName() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getName() {
                Object ref = this.name_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8())
                        this.name_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getNameBytes() {
                Object ref = this.name_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.name_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setName(String value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.name_ = value;
                onChanged();
                return this;
            }

            public Builder clearName() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.name_ = PetHandler.PetInfo.getDefaultInstance().getName();
                onChanged();
                return this;
            }

            public Builder setNameBytes(ByteString value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.name_ = value;
                onChanged();
                return this;
            }

            public boolean hasLevel() {
                return ((this.bitField0_ & 0x4) == 4);
            }

            public int getLevel() {
                return this.level_;
            }

            public Builder setLevel(int value) {
                this.bitField0_ |= 0x4;
                this.level_ = value;
                onChanged();
                return this;
            }

            public Builder clearLevel() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.level_ = 0;
                onChanged();
                return this;
            }

            public boolean hasHp() {
                return ((this.bitField0_ & 0x8) == 8);
            }

            public int getHp() {
                return this.hp_;
            }

            public Builder setHp(int value) {
                this.bitField0_ |= 0x8;
                this.hp_ = value;
                onChanged();
                return this;
            }

            public Builder clearHp() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.hp_ = 0;
                onChanged();
                return this;
            }

            public boolean hasMp() {
                return ((this.bitField0_ & 0x10) == 16);
            }

            public int getMp() {
                return this.mp_;
            }

            public Builder setMp(int value) {
                this.bitField0_ |= 0x10;
                this.mp_ = value;
                onChanged();
                return this;
            }

            public Builder clearMp() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.mp_ = 0;
                onChanged();
                return this;
            }

            public boolean hasMaxHP() {
                return ((this.bitField0_ & 0x20) == 32);
            }

            public int getMaxHP() {
                return this.maxHP_;
            }

            public Builder setMaxHP(int value) {
                this.bitField0_ |= 0x20;
                this.maxHP_ = value;
                onChanged();
                return this;
            }

            public Builder clearMaxHP() {
                this.bitField0_ &= 0xFFFFFFDF;
                this.maxHP_ = 0;
                onChanged();
                return this;
            }

            public boolean hasMaxMP() {
                return ((this.bitField0_ & 0x40) == 64);
            }

            public int getMaxMP() {
                return this.maxMP_;
            }

            public Builder setMaxMP(int value) {
                this.bitField0_ |= 0x40;
                this.maxMP_ = value;
                onChanged();
                return this;
            }

            public Builder clearMaxMP() {
                this.bitField0_ &= 0xFFFFFFBF;
                this.maxMP_ = 0;
                onChanged();
                return this;
            }

            public boolean hasMinPhy() {
                return ((this.bitField0_ & 0x80) == 128);
            }

            public int getMinPhy() {
                return this.minPhy_;
            }

            public Builder setMinPhy(int value) {
                this.bitField0_ |= 0x80;
                this.minPhy_ = value;
                onChanged();
                return this;
            }

            public Builder clearMinPhy() {
                this.bitField0_ &= 0xFFFFFF7F;
                this.minPhy_ = 0;
                onChanged();
                return this;
            }

            public boolean hasMaxPhy() {
                return ((this.bitField0_ & 0x100) == 256);
            }

            public int getMaxPhy() {
                return this.maxPhy_;
            }

            public Builder setMaxPhy(int value) {
                this.bitField0_ |= 0x100;
                this.maxPhy_ = value;
                onChanged();
                return this;
            }

            public Builder clearMaxPhy() {
                this.bitField0_ &= 0xFFFFFEFF;
                this.maxPhy_ = 0;
                onChanged();
                return this;
            }

            public boolean hasMinMag() {
                return ((this.bitField0_ & 0x200) == 512);
            }

            public int getMinMag() {
                return this.minMag_;
            }

            public Builder setMinMag(int value) {
                this.bitField0_ |= 0x200;
                this.minMag_ = value;
                onChanged();
                return this;
            }

            public Builder clearMinMag() {
                this.bitField0_ &= 0xFFFFFDFF;
                this.minMag_ = 0;
                onChanged();
                return this;
            }

            public boolean hasMaxMag() {
                return ((this.bitField0_ & 0x400) == 1024);
            }

            public int getMaxMag() {
                return this.maxMag_;
            }

            public Builder setMaxMag(int value) {
                this.bitField0_ |= 0x400;
                this.maxMag_ = value;
                onChanged();
                return this;
            }

            public Builder clearMaxMag() {
                this.bitField0_ &= 0xFFFFFBFF;
                this.maxMag_ = 0;
                onChanged();
                return this;
            }

            public boolean hasHit() {
                return ((this.bitField0_ & 0x800) == 2048);
            }

            public int getHit() {
                return this.hit_;
            }

            public Builder setHit(int value) {
                this.bitField0_ |= 0x800;
                this.hit_ = value;
                onChanged();
                return this;
            }

            public Builder clearHit() {
                this.bitField0_ &= 0xFFFFF7FF;
                this.hit_ = 0;
                onChanged();
                return this;
            }

            public boolean hasDodge() {
                return ((this.bitField0_ & 0x1000) == 4096);
            }

            public int getDodge() {
                return this.dodge_;
            }

            public Builder setDodge(int value) {
                this.bitField0_ |= 0x1000;
                this.dodge_ = value;
                onChanged();
                return this;
            }

            public Builder clearDodge() {
                this.bitField0_ &= 0xFFFFEFFF;
                this.dodge_ = 0;
                onChanged();
                return this;
            }

            public boolean hasCrit() {
                return ((this.bitField0_ & 0x2000) == 8192);
            }

            public int getCrit() {
                return this.crit_;
            }

            public Builder setCrit(int value) {
                this.bitField0_ |= 0x2000;
                this.crit_ = value;
                onChanged();
                return this;
            }

            public Builder clearCrit() {
                this.bitField0_ &= 0xFFFFDFFF;
                this.crit_ = 0;
                onChanged();
                return this;
            }

            public boolean hasResCrit() {
                return ((this.bitField0_ & 0x4000) == 16384);
            }

            public int getResCrit() {
                return this.resCrit_;
            }

            public Builder setResCrit(int value) {
                this.bitField0_ |= 0x4000;
                this.resCrit_ = value;
                onChanged();
                return this;
            }

            public Builder clearResCrit() {
                this.bitField0_ &= 0xFFFFBFFF;
                this.resCrit_ = 0;
                onChanged();
                return this;
            }

            public boolean hasAc() {
                return ((this.bitField0_ & 0x8000) == 32768);
            }

            public int getAc() {
                return this.ac_;
            }

            public Builder setAc(int value) {
                this.bitField0_ |= 0x8000;
                this.ac_ = value;
                onChanged();
                return this;
            }

            public Builder clearAc() {
                this.bitField0_ &= 0xFFFF7FFF;
                this.ac_ = 0;
                onChanged();
                return this;
            }

            public boolean hasResist() {
                return ((this.bitField0_ & 0x10000) == 65536);
            }

            public int getResist() {
                return this.resist_;
            }

            public Builder setResist(int value) {
                this.bitField0_ |= 0x10000;
                this.resist_ = value;
                onChanged();
                return this;
            }

            public Builder clearResist() {
                this.bitField0_ &= 0xFFFEFFFF;
                this.resist_ = 0;
                onChanged();
                return this;
            }

            public boolean hasIgnoreAc() {
                return ((this.bitField0_ & 0x20000) == 131072);
            }

            public int getIgnoreAc() {
                return this.ignoreAc_;
            }

            public Builder setIgnoreAc(int value) {
                this.bitField0_ |= 0x20000;
                this.ignoreAc_ = value;
                onChanged();
                return this;
            }

            public Builder clearIgnoreAc() {
                this.bitField0_ &= 0xFFFDFFFF;
                this.ignoreAc_ = 0;
                onChanged();
                return this;
            }

            public boolean hasIgnoreResist() {
                return ((this.bitField0_ & 0x40000) == 262144);
            }

            public int getIgnoreResist() {
                return this.ignoreResist_;
            }

            public Builder setIgnoreResist(int value) {
                this.bitField0_ |= 0x40000;
                this.ignoreResist_ = value;
                onChanged();
                return this;
            }

            public Builder clearIgnoreResist() {
                this.bitField0_ &= 0xFFFBFFFF;
                this.ignoreResist_ = 0;
                onChanged();
                return this;
            }

            public boolean hasExp() {
                return ((this.bitField0_ & 0x80000) == 524288);
            }

            public int getExp() {
                return this.exp_;
            }

            public Builder setExp(int value) {
                this.bitField0_ |= 0x80000;
                this.exp_ = value;
                onChanged();
                return this;
            }

            public Builder clearExp() {
                this.bitField0_ &= 0xFFF7FFFF;
                this.exp_ = 0;
                onChanged();
                return this;
            }

            public boolean hasUpgradeExp() {
                return ((this.bitField0_ & 0x100000) == 1048576);
            }

            public int getUpgradeExp() {
                return this.upgradeExp_;
            }

            public Builder setUpgradeExp(int value) {
                this.bitField0_ |= 0x100000;
                this.upgradeExp_ = value;
                onChanged();
                return this;
            }

            public Builder clearUpgradeExp() {
                this.bitField0_ &= 0xFFEFFFFF;
                this.upgradeExp_ = 0;
                onChanged();
                return this;
            }

            public boolean hasTransformLevel() {
                return ((this.bitField0_ & 0x200000) == 2097152);
            }

            public int getTransformLevel() {
                return this.transformLevel_;
            }

            public Builder setTransformLevel(int value) {
                this.bitField0_ |= 0x200000;
                this.transformLevel_ = value;
                onChanged();
                return this;
            }

            public Builder clearTransformLevel() {
                this.bitField0_ &= 0xFFDFFFFF;
                this.transformLevel_ = 0;
                onChanged();
                return this;
            }

            public boolean hasUpGradeLevel() {
                return ((this.bitField0_ & 0x400000) == 4194304);
            }

            public int getUpGradeLevel() {
                return this.upGradeLevel_;
            }

            public Builder setUpGradeLevel(int value) {
                this.bitField0_ |= 0x400000;
                this.upGradeLevel_ = value;
                onChanged();
                return this;
            }

            public Builder clearUpGradeLevel() {
                this.bitField0_ &= 0xFFBFFFFF;
                this.upGradeLevel_ = 0;
                onChanged();
                return this;
            }

            public boolean hasUpGradeNeedLevel() {
                return ((this.bitField0_ & 0x800000) == 8388608);
            }

            public int getUpGradeNeedLevel() {
                return this.upGradeNeedLevel_;
            }

            public Builder setUpGradeNeedLevel(int value) {
                this.bitField0_ |= 0x800000;
                this.upGradeNeedLevel_ = value;
                onChanged();
                return this;
            }

            public Builder clearUpGradeNeedLevel() {
                this.bitField0_ &= 0xFF7FFFFF;
                this.upGradeNeedLevel_ = 0;
                onChanged();
                return this;
            }

            public boolean hasFightPower() {
                return ((this.bitField0_ & 0x1000000) == 16777216);
            }

            public int getFightPower() {
                return this.fightPower_;
            }

            public Builder setFightPower(int value) {
                this.bitField0_ |= 0x1000000;
                this.fightPower_ = value;
                onChanged();
                return this;
            }

            public Builder clearFightPower() {
                this.bitField0_ &= 0xFEFFFFFF;
                this.fightPower_ = 0;
                onChanged();
                return this;
            }

            public boolean hasStamina() {
                return ((this.bitField0_ & 0x2000000) == 33554432);
            }

            public int getStamina() {
                return this.stamina_;
            }

            public Builder setStamina(int value) {
                this.bitField0_ |= 0x2000000;
                this.stamina_ = value;
                onChanged();
                return this;
            }

            public Builder clearStamina() {
                this.bitField0_ &= 0xFDFFFFFF;
                this.stamina_ = 0;
                onChanged();
                return this;
            }

            public boolean hasMaxStamina() {
                return ((this.bitField0_ & 0x4000000) == 67108864);
            }

            public int getMaxStamina() {
                return this.maxStamina_;
            }

            public Builder setMaxStamina(int value) {
                this.bitField0_ |= 0x4000000;
                this.maxStamina_ = value;
                onChanged();
                return this;
            }

            public Builder clearMaxStamina() {
                this.bitField0_ &= 0xFBFFFFFF;
                this.maxStamina_ = 0;
                onChanged();
                return this;
            }

            public boolean hasLoyalty() {
                return ((this.bitField0_ & 0x8000000) == 134217728);
            }

            public int getLoyalty() {
                return this.loyalty_;
            }

            public Builder setLoyalty(int value) {
                this.bitField0_ |= 0x8000000;
                this.loyalty_ = value;
                onChanged();
                return this;
            }

            public Builder clearLoyalty() {
                this.bitField0_ &= 0xF7FFFFFF;
                this.loyalty_ = 0;
                onChanged();
                return this;
            }

            public boolean hasMaxLoyalty() {
                return ((this.bitField0_ & 0x10000000) == 268435456);
            }

            public int getMaxLoyalty() {
                return this.maxLoyalty_;
            }

            public Builder setMaxLoyalty(int value) {
                this.bitField0_ |= 0x10000000;
                this.maxLoyalty_ = value;
                onChanged();
                return this;
            }

            public Builder clearMaxLoyalty() {
                this.bitField0_ &= 0xEFFFFFFF;
                this.maxLoyalty_ = 0;
                onChanged();
                return this;
            }

            public boolean hasTemplateId() {
                return ((this.bitField0_ & 0x20000000) == 536870912);
            }

            public int getTemplateId() {
                return this.templateId_;
            }

            public Builder setTemplateId(int value) {
                this.bitField0_ |= 0x20000000;
                this.templateId_ = value;
                onChanged();
                return this;
            }

            public Builder clearTemplateId() {
                this.bitField0_ &= 0xDFFFFFFF;
                this.templateId_ = 0;
                onChanged();
                return this;
            }
        }
    }

    public static final class PetBaseInfo extends GeneratedMessage implements PetBaseInfoOrBuilder {
        private static final PetBaseInfo defaultInstance = new PetBaseInfo(true);
        private final UnknownFieldSet unknownFields;

        private PetBaseInfo(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private PetBaseInfo(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static PetBaseInfo getDefaultInstance() {
            return defaultInstance;
        }

        public PetBaseInfo getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private PetBaseInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.id_ = bs;
                            break;
                        case 24:
                            this.bitField0_ |= 0x4;
                            this.level_ = input.readInt32();
                            break;
                        case 32:
                            this.bitField0_ |= 0x10;
                            this.hp_ = input.readInt32();
                            break;
                        case 176:
                            this.bitField0_ |= 0x8;
                            this.transformLevel_ = input.readInt32();
                            break;
                        case 240:
                            this.bitField0_ |= 0x2;
                            this.templateId_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_PetBaseInfo_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_PetBaseInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(PetBaseInfo.class, Builder.class);
        }

        public static Parser<PetBaseInfo> PARSER = (Parser<PetBaseInfo>) new AbstractParser<PetBaseInfo>() {
            public PetHandler.PetBaseInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.PetBaseInfo(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int ID_FIELD_NUMBER = 1;
        private Object id_;
        public static final int TEMPLATEID_FIELD_NUMBER = 30;
        private int templateId_;
        public static final int LEVEL_FIELD_NUMBER = 3;
        private int level_;
        public static final int TRANSFORMLEVEL_FIELD_NUMBER = 22;
        private int transformLevel_;
        public static final int HP_FIELD_NUMBER = 4;
        private int hp_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<PetBaseInfo> getParserForType() {
            return PARSER;
        }

        public boolean hasId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getId() {
            Object ref = this.id_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.id_ = s;
            return s;
        }

        public ByteString getIdBytes() {
            Object ref = this.id_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.id_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        static {
            defaultInstance.initFields();
        }


        public boolean hasTemplateId() {
            return ((this.bitField0_ & 0x2) == 2);
        }


        public int getTemplateId() {
            return this.templateId_;
        }


        public boolean hasLevel() {
            return ((this.bitField0_ & 0x4) == 4);
        }


        public int getLevel() {
            return this.level_;
        }


        public boolean hasTransformLevel() {
            return ((this.bitField0_ & 0x8) == 8);
        }


        public int getTransformLevel() {
            return this.transformLevel_;
        }


        public boolean hasHp() {
            return ((this.bitField0_ & 0x10) == 16);
        }


        public int getHp() {
            return this.hp_;
        }


        private void initFields() {
            this.id_ = "";
            this.templateId_ = 0;
            this.level_ = 0;
            this.transformLevel_ = 0;
            this.hp_ = 0;
        }


        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
                return true;
            }
            if (isInitialized == 0) {
                return false;
            }
            if (!hasId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasTemplateId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasLevel()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasTransformLevel()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasHp()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }


        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) {
                output.writeBytes(1, getIdBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                output.writeInt32(3, this.level_);
            }
            if ((this.bitField0_ & 0x10) == 16) {
                output.writeInt32(4, this.hp_);
            }
            if ((this.bitField0_ & 0x8) == 8) {
                output.writeInt32(22, this.transformLevel_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                output.writeInt32(30, this.templateId_);
            }
            getUnknownFields().writeTo(output);
        }


        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) {
                size += CodedOutputStream.computeBytesSize(1, getIdBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                size += CodedOutputStream.computeInt32Size(3, this.level_);
            }
            if ((this.bitField0_ & 0x10) == 16) {
                size += CodedOutputStream.computeInt32Size(4, this.hp_);
            }
            if ((this.bitField0_ & 0x8) == 8) {
                size += CodedOutputStream.computeInt32Size(22, this.transformLevel_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                size += CodedOutputStream.computeInt32Size(30, this.templateId_);
            }
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }


        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }


        public static PetBaseInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (PetBaseInfo) PARSER.parseFrom(data);
        }


        public static PetBaseInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetBaseInfo) PARSER.parseFrom(data, extensionRegistry);
        }


        public static PetBaseInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (PetBaseInfo) PARSER.parseFrom(data);
        }


        public static PetBaseInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetBaseInfo) PARSER.parseFrom(data, extensionRegistry);
        }


        public static PetBaseInfo parseFrom(InputStream input) throws IOException {
            return (PetBaseInfo) PARSER.parseFrom(input);
        }


        public static PetBaseInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetBaseInfo) PARSER.parseFrom(input, extensionRegistry);
        }


        public static PetBaseInfo parseDelimitedFrom(InputStream input) throws IOException {
            return (PetBaseInfo) PARSER.parseDelimitedFrom(input);
        }


        public static PetBaseInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetBaseInfo) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }


        public static PetBaseInfo parseFrom(CodedInputStream input) throws IOException {
            return (PetBaseInfo) PARSER.parseFrom(input);
        }


        public static PetBaseInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetBaseInfo) PARSER.parseFrom(input, extensionRegistry);
        }


        public static Builder newBuilder() {
            return Builder.create();
        }


        public Builder newBuilderForType() {
            return newBuilder();
        }


        public static Builder newBuilder(PetBaseInfo prototype) {
            return newBuilder().mergeFrom(prototype);
        }


        public Builder toBuilder() {
            return newBuilder(this);
        }


        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }


        public static final class Builder
                extends GeneratedMessage.Builder<Builder>
                implements PetHandler.PetBaseInfoOrBuilder {
            private int bitField0_;


            private Object id_;


            private int templateId_;


            private int level_;


            private int transformLevel_;


            private int hp_;


            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_PetBaseInfo_descriptor;
            }


            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_PetBaseInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.PetBaseInfo.class, Builder.class);
            }


            private Builder() {
                this.id_ = "";
                maybeForceBuilderInitialization();
            }


            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.id_ = "";
                maybeForceBuilderInitialization();
            }


            private void maybeForceBuilderInitialization() {
                if (PetHandler.PetBaseInfo.alwaysUseFieldBuilders) ;
            }


            private static Builder create() {
                return new Builder();
            }


            public Builder clear() {
                super.clear();
                this.id_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.templateId_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                this.level_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.transformLevel_ = 0;
                this.bitField0_ &= 0xFFFFFFF7;
                this.hp_ = 0;
                this.bitField0_ &= 0xFFFFFFEF;
                return this;
            }


            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }


            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_PetBaseInfo_descriptor;
            }


            public PetHandler.PetBaseInfo getDefaultInstanceForType() {
                return PetHandler.PetBaseInfo.getDefaultInstance();
            }


            public PetHandler.PetBaseInfo build() {
                PetHandler.PetBaseInfo result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }


            public PetHandler.PetBaseInfo buildPartial() {
                PetHandler.PetBaseInfo result = new PetHandler.PetBaseInfo(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) {
                    to_bitField0_ |= 0x1;
                }
                result.id_ = this.id_;
                if ((from_bitField0_ & 0x2) == 2) {
                    to_bitField0_ |= 0x2;
                }
                result.templateId_ = this.templateId_;
                if ((from_bitField0_ & 0x4) == 4) {
                    to_bitField0_ |= 0x4;
                }
                result.level_ = this.level_;
                if ((from_bitField0_ & 0x8) == 8) {
                    to_bitField0_ |= 0x8;
                }
                result.transformLevel_ = this.transformLevel_;
                if ((from_bitField0_ & 0x10) == 16) {
                    to_bitField0_ |= 0x10;
                }
                result.hp_ = this.hp_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }


            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.PetBaseInfo) {
                    return mergeFrom((PetHandler.PetBaseInfo) other);
                }
                super.mergeFrom(other);
                return this;
            }


            public Builder mergeFrom(PetHandler.PetBaseInfo other) {
                if (other == PetHandler.PetBaseInfo.getDefaultInstance()) {
                    return this;
                }
                if (other.hasId()) {
                    this.bitField0_ |= 0x1;
                    this.id_ = other.id_;
                    onChanged();
                }
                if (other.hasTemplateId()) {
                    setTemplateId(other.getTemplateId());
                }
                if (other.hasLevel()) {
                    setLevel(other.getLevel());
                }
                if (other.hasTransformLevel()) {
                    setTransformLevel(other.getTransformLevel());
                }
                if (other.hasHp()) {
                    setHp(other.getHp());
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }


            public final boolean isInitialized() {
                if (!hasId()) {
                    return false;
                }
                if (!hasTemplateId()) {
                    return false;
                }
                if (!hasLevel()) {
                    return false;
                }
                if (!hasTransformLevel()) {
                    return false;
                }
                if (!hasHp()) {
                    return false;
                }
                return true;
            }


            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.PetBaseInfo parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.PetBaseInfo) PetHandler.PetBaseInfo.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.PetBaseInfo) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }


            public boolean hasId() {
                return ((this.bitField0_ & 0x1) == 1);
            }


            public String getId() {
                Object ref = this.id_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.id_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getIdBytes() {
                Object ref = this.id_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.id_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setId(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1;
                this.id_ = value;
                onChanged();
                return this;
            }


            public Builder clearId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.id_ = PetHandler.PetBaseInfo.getDefaultInstance().getId();
                onChanged();
                return this;
            }


            public Builder setIdBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1;
                this.id_ = value;
                onChanged();
                return this;
            }


            public boolean hasTemplateId() {
                return ((this.bitField0_ & 0x2) == 2);
            }


            public int getTemplateId() {
                return this.templateId_;
            }


            public Builder setTemplateId(int value) {
                this.bitField0_ |= 0x2;
                this.templateId_ = value;
                onChanged();
                return this;
            }


            public Builder clearTemplateId() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.templateId_ = 0;
                onChanged();
                return this;
            }


            public boolean hasLevel() {
                return ((this.bitField0_ & 0x4) == 4);
            }


            public int getLevel() {
                return this.level_;
            }


            public Builder setLevel(int value) {
                this.bitField0_ |= 0x4;
                this.level_ = value;
                onChanged();
                return this;
            }


            public Builder clearLevel() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.level_ = 0;
                onChanged();
                return this;
            }


            public boolean hasTransformLevel() {
                return ((this.bitField0_ & 0x8) == 8);
            }


            public int getTransformLevel() {
                return this.transformLevel_;
            }


            public Builder setTransformLevel(int value) {
                this.bitField0_ |= 0x8;
                this.transformLevel_ = value;
                onChanged();
                return this;
            }


            public Builder clearTransformLevel() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.transformLevel_ = 0;
                onChanged();
                return this;
            }


            public boolean hasHp() {
                return ((this.bitField0_ & 0x10) == 16);
            }


            public int getHp() {
                return this.hp_;
            }


            public Builder setHp(int value) {
                this.bitField0_ |= 0x10;
                this.hp_ = value;
                onChanged();
                return this;
            }


            public Builder clearHp() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.hp_ = 0;
                onChanged();
                return this;
            }
        }
    }


    public static final class GetAllPetsBaseInfoResponse
            extends GeneratedMessage
            implements GetAllPetsBaseInfoResponseOrBuilder {
        private static final GetAllPetsBaseInfoResponse defaultInstance = new GetAllPetsBaseInfoResponse(true);
        private final UnknownFieldSet unknownFields;

        private GetAllPetsBaseInfoResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private GetAllPetsBaseInfoResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static GetAllPetsBaseInfoResponse getDefaultInstance() {
            return defaultInstance;
        }

        public GetAllPetsBaseInfoResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private GetAllPetsBaseInfoResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 26:
                            if ((mutable_bitField0_ & 0x4) != 4) {
                                this.s2CPetBaseInfo_ = new ArrayList<>();
                                mutable_bitField0_ |= 0x4;
                            }
                            this.s2CPetBaseInfo_.add(input.readMessage(PetHandler.PetBaseInfo.PARSER, extensionRegistry));
                            break;
                        case 34:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x4;
                            this.s2CFightingPetId_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                if ((mutable_bitField0_ & 0x4) == 4)
                    this.s2CPetBaseInfo_ = Collections.unmodifiableList(this.s2CPetBaseInfo_);
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_GetAllPetsBaseInfoResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_GetAllPetsBaseInfoResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GetAllPetsBaseInfoResponse.class, Builder.class);
        }

        public static Parser<GetAllPetsBaseInfoResponse> PARSER = (Parser<GetAllPetsBaseInfoResponse>) new AbstractParser<GetAllPetsBaseInfoResponse>() {
            public PetHandler.GetAllPetsBaseInfoResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.GetAllPetsBaseInfoResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int S2C_PETBASEINFO_FIELD_NUMBER = 3;
        private List<PetHandler.PetBaseInfo> s2CPetBaseInfo_;
        public static final int S2C_FIGHTINGPETID_FIELD_NUMBER = 4;
        private Object s2CFightingPetId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<GetAllPetsBaseInfoResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        static {
            defaultInstance.initFields();
        }


        public List<PetHandler.PetBaseInfo> getS2CPetBaseInfoList() {
            return this.s2CPetBaseInfo_;
        }

        public List<? extends PetHandler.PetBaseInfoOrBuilder> getS2CPetBaseInfoOrBuilderList() {
            return (List) this.s2CPetBaseInfo_;
        }

        public int getS2CPetBaseInfoCount() {
            return this.s2CPetBaseInfo_.size();
        }

        public PetHandler.PetBaseInfo getS2CPetBaseInfo(int index) {
            return this.s2CPetBaseInfo_.get(index);
        }

        public PetHandler.PetBaseInfoOrBuilder getS2CPetBaseInfoOrBuilder(int index) {
            return this.s2CPetBaseInfo_.get(index);
        }

        public boolean hasS2CFightingPetId() {
            return ((this.bitField0_ & 0x4) == 4);
        }

        public String getS2CFightingPetId() {
            Object ref = this.s2CFightingPetId_;
            if (ref instanceof String)
                return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8())
                this.s2CFightingPetId_ = s;
            return s;
        }

        public ByteString getS2CFightingPetIdBytes() {
            Object ref = this.s2CFightingPetId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CFightingPetId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.s2CPetBaseInfo_ = Collections.emptyList();
            this.s2CFightingPetId_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasS2CFightingPetId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            for (int i = 0; i < getS2CPetBaseInfoCount(); i++) {
                if (!getS2CPetBaseInfo(i).isInitialized()) {
                    this.memoizedIsInitialized = 0;
                    return false;
                }
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1)
                output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2)
                output.writeBytes(2, getS2CMsgBytes());
            for (int i = 0; i < this.s2CPetBaseInfo_.size(); i++)
                output.writeMessage(3, (MessageLite) this.s2CPetBaseInfo_.get(i));
            if ((this.bitField0_ & 0x4) == 4)
                output.writeBytes(4, getS2CFightingPetIdBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1)
                return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1)
                size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2)
                size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            for (int i = 0; i < this.s2CPetBaseInfo_.size(); i++)
                size += CodedOutputStream.computeMessageSize(3, (MessageLite) this.s2CPetBaseInfo_.get(i));
            if ((this.bitField0_ & 0x4) == 4)
                size += CodedOutputStream.computeBytesSize(4, getS2CFightingPetIdBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static GetAllPetsBaseInfoResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (GetAllPetsBaseInfoResponse) PARSER.parseFrom(data);
        }

        public static GetAllPetsBaseInfoResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetAllPetsBaseInfoResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GetAllPetsBaseInfoResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (GetAllPetsBaseInfoResponse) PARSER.parseFrom(data);
        }

        public static GetAllPetsBaseInfoResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetAllPetsBaseInfoResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GetAllPetsBaseInfoResponse parseFrom(InputStream input) throws IOException {
            return (GetAllPetsBaseInfoResponse) PARSER.parseFrom(input);
        }

        public static GetAllPetsBaseInfoResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetAllPetsBaseInfoResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static GetAllPetsBaseInfoResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (GetAllPetsBaseInfoResponse) PARSER.parseDelimitedFrom(input);
        }

        public static GetAllPetsBaseInfoResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetAllPetsBaseInfoResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static GetAllPetsBaseInfoResponse parseFrom(CodedInputStream input) throws IOException {
            return (GetAllPetsBaseInfoResponse) PARSER.parseFrom(input);
        }

        public static GetAllPetsBaseInfoResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetAllPetsBaseInfoResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(GetAllPetsBaseInfoResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder
                extends GeneratedMessage.Builder<Builder>
                implements PetHandler.GetAllPetsBaseInfoResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;
            private List<PetHandler.PetBaseInfo> s2CPetBaseInfo_;
            private RepeatedFieldBuilder<PetHandler.PetBaseInfo, PetHandler.PetBaseInfo.Builder, PetHandler.PetBaseInfoOrBuilder> s2CPetBaseInfoBuilder_;
            private Object s2CFightingPetId_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_GetAllPetsBaseInfoResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_GetAllPetsBaseInfoResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.GetAllPetsBaseInfoResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                this.s2CPetBaseInfo_ = Collections.emptyList();
                this.s2CFightingPetId_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                this.s2CPetBaseInfo_ = Collections.emptyList();
                this.s2CFightingPetId_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.GetAllPetsBaseInfoResponse.alwaysUseFieldBuilders)
                    getS2CPetBaseInfoFieldBuilder();
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                if (this.s2CPetBaseInfoBuilder_ == null) {
                    this.s2CPetBaseInfo_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFB;
                } else {
                    this.s2CPetBaseInfoBuilder_.clear();
                }
                this.s2CFightingPetId_ = "";
                this.bitField0_ &= 0xFFFFFFF7;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_GetAllPetsBaseInfoResponse_descriptor;
            }

            public PetHandler.GetAllPetsBaseInfoResponse getDefaultInstanceForType() {
                return PetHandler.GetAllPetsBaseInfoResponse.getDefaultInstance();
            }

            public PetHandler.GetAllPetsBaseInfoResponse build() {
                PetHandler.GetAllPetsBaseInfoResponse result = buildPartial();
                if (!result.isInitialized())
                    throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.GetAllPetsBaseInfoResponse buildPartial() {
                PetHandler.GetAllPetsBaseInfoResponse result = new PetHandler.GetAllPetsBaseInfoResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1)
                    to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2)
                    to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                if (this.s2CPetBaseInfoBuilder_ == null) {
                    if ((this.bitField0_ & 0x4) == 4) {
                        this.s2CPetBaseInfo_ = Collections.unmodifiableList(this.s2CPetBaseInfo_);
                        this.bitField0_ &= 0xFFFFFFFB;
                    }
                    result.s2CPetBaseInfo_ = this.s2CPetBaseInfo_;
                } else {
                    result.s2CPetBaseInfo_ = this.s2CPetBaseInfoBuilder_.build();
                }
                if ((from_bitField0_ & 0x8) == 8)
                    to_bitField0_ |= 0x4;
                result.s2CFightingPetId_ = this.s2CFightingPetId_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.GetAllPetsBaseInfoResponse)
                    return mergeFrom((PetHandler.GetAllPetsBaseInfoResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.GetAllPetsBaseInfoResponse other) {
                if (other == PetHandler.GetAllPetsBaseInfoResponse.getDefaultInstance())
                    return this;
                if (other.hasS2CCode())
                    setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (this.s2CPetBaseInfoBuilder_ == null) {
                    if (!other.s2CPetBaseInfo_.isEmpty()) {
                        if (this.s2CPetBaseInfo_.isEmpty()) {
                            this.s2CPetBaseInfo_ = other.s2CPetBaseInfo_;
                            this.bitField0_ &= 0xFFFFFFFB;
                        } else {
                            ensureS2CPetBaseInfoIsMutable();
                            this.s2CPetBaseInfo_.addAll(other.s2CPetBaseInfo_);
                        }
                        onChanged();
                    }
                } else if (!other.s2CPetBaseInfo_.isEmpty()) {
                    if (this.s2CPetBaseInfoBuilder_.isEmpty()) {
                        this.s2CPetBaseInfoBuilder_.dispose();
                        this.s2CPetBaseInfoBuilder_ = null;
                        this.s2CPetBaseInfo_ = other.s2CPetBaseInfo_;
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.s2CPetBaseInfoBuilder_ = PetHandler.GetAllPetsBaseInfoResponse.alwaysUseFieldBuilders ? getS2CPetBaseInfoFieldBuilder() : null;
                    } else {
                        this.s2CPetBaseInfoBuilder_.addAllMessages(other.s2CPetBaseInfo_);
                    }
                }
                if (other.hasS2CFightingPetId()) {
                    this.bitField0_ |= 0x8;
                    this.s2CFightingPetId_ = other.s2CFightingPetId_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode())
                    return false;
                if (!hasS2CFightingPetId())
                    return false;
                for (int i = 0; i < getS2CPetBaseInfoCount(); i++) {
                    if (!getS2CPetBaseInfo(i).isInitialized())
                        return false;
                }
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.GetAllPetsBaseInfoResponse parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.GetAllPetsBaseInfoResponse) PetHandler.GetAllPetsBaseInfoResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.GetAllPetsBaseInfoResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null)
                        mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8())
                        this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = PetHandler.GetAllPetsBaseInfoResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            private void ensureS2CPetBaseInfoIsMutable() {
                if ((this.bitField0_ & 0x4) != 4) {
                    this.s2CPetBaseInfo_ = new ArrayList<>(this.s2CPetBaseInfo_);
                    this.bitField0_ |= 0x4;
                }
            }

            public List<PetHandler.PetBaseInfo> getS2CPetBaseInfoList() {
                if (this.s2CPetBaseInfoBuilder_ == null)
                    return Collections.unmodifiableList(this.s2CPetBaseInfo_);
                return this.s2CPetBaseInfoBuilder_.getMessageList();
            }

            public int getS2CPetBaseInfoCount() {
                if (this.s2CPetBaseInfoBuilder_ == null)
                    return this.s2CPetBaseInfo_.size();
                return this.s2CPetBaseInfoBuilder_.getCount();
            }

            public PetHandler.PetBaseInfo getS2CPetBaseInfo(int index) {
                if (this.s2CPetBaseInfoBuilder_ == null)
                    return this.s2CPetBaseInfo_.get(index);
                return (PetHandler.PetBaseInfo) this.s2CPetBaseInfoBuilder_.getMessage(index);
            }

            public Builder setS2CPetBaseInfo(int index, PetHandler.PetBaseInfo value) {
                if (this.s2CPetBaseInfoBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureS2CPetBaseInfoIsMutable();
                    this.s2CPetBaseInfo_.set(index, value);
                    onChanged();
                } else {
                    this.s2CPetBaseInfoBuilder_.setMessage(index, value);
                }
                return this;
            }

            public Builder setS2CPetBaseInfo(int index, PetHandler.PetBaseInfo.Builder builderForValue) {
                if (this.s2CPetBaseInfoBuilder_ == null) {
                    ensureS2CPetBaseInfoIsMutable();
                    this.s2CPetBaseInfo_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    this.s2CPetBaseInfoBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            public Builder addS2CPetBaseInfo(PetHandler.PetBaseInfo value) {
                if (this.s2CPetBaseInfoBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureS2CPetBaseInfoIsMutable();
                    this.s2CPetBaseInfo_.add(value);
                    onChanged();
                } else {
                    this.s2CPetBaseInfoBuilder_.addMessage(value);
                }
                return this;
            }

            public Builder addS2CPetBaseInfo(int index, PetHandler.PetBaseInfo value) {
                if (this.s2CPetBaseInfoBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureS2CPetBaseInfoIsMutable();
                    this.s2CPetBaseInfo_.add(index, value);
                    onChanged();
                } else {
                    this.s2CPetBaseInfoBuilder_.addMessage(index, value);
                }
                return this;
            }

            public Builder addS2CPetBaseInfo(PetHandler.PetBaseInfo.Builder builderForValue) {
                if (this.s2CPetBaseInfoBuilder_ == null) {
                    ensureS2CPetBaseInfoIsMutable();
                    this.s2CPetBaseInfo_.add(builderForValue.build());
                    onChanged();
                } else {
                    this.s2CPetBaseInfoBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            public Builder addS2CPetBaseInfo(int index, PetHandler.PetBaseInfo.Builder builderForValue) {
                if (this.s2CPetBaseInfoBuilder_ == null) {
                    ensureS2CPetBaseInfoIsMutable();
                    this.s2CPetBaseInfo_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    this.s2CPetBaseInfoBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            public Builder addAllS2CPetBaseInfo(Iterable<? extends PetHandler.PetBaseInfo> values) {
                if (this.s2CPetBaseInfoBuilder_ == null) {
                    ensureS2CPetBaseInfoIsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.s2CPetBaseInfo_);
                    onChanged();
                } else {
                    this.s2CPetBaseInfoBuilder_.addAllMessages(values);
                }
                return this;
            }

            public Builder clearS2CPetBaseInfo() {
                if (this.s2CPetBaseInfoBuilder_ == null) {
                    this.s2CPetBaseInfo_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFB;
                    onChanged();
                } else {
                    this.s2CPetBaseInfoBuilder_.clear();
                }
                return this;
            }

            public Builder removeS2CPetBaseInfo(int index) {
                if (this.s2CPetBaseInfoBuilder_ == null) {
                    ensureS2CPetBaseInfoIsMutable();
                    this.s2CPetBaseInfo_.remove(index);
                    onChanged();
                } else {
                    this.s2CPetBaseInfoBuilder_.remove(index);
                }
                return this;
            }

            public PetHandler.PetBaseInfo.Builder getS2CPetBaseInfoBuilder(int index) {
                return (PetHandler.PetBaseInfo.Builder) getS2CPetBaseInfoFieldBuilder().getBuilder(index);
            }

            public PetHandler.PetBaseInfoOrBuilder getS2CPetBaseInfoOrBuilder(int index) {
                if (this.s2CPetBaseInfoBuilder_ == null)
                    return this.s2CPetBaseInfo_.get(index);
                return (PetHandler.PetBaseInfoOrBuilder) this.s2CPetBaseInfoBuilder_.getMessageOrBuilder(index);
            }

            public List<? extends PetHandler.PetBaseInfoOrBuilder> getS2CPetBaseInfoOrBuilderList() {
                if (this.s2CPetBaseInfoBuilder_ != null)
                    return this.s2CPetBaseInfoBuilder_.getMessageOrBuilderList();
                return Collections.unmodifiableList((List) this.s2CPetBaseInfo_);
            }

            public PetHandler.PetBaseInfo.Builder addS2CPetBaseInfoBuilder() {
                return (PetHandler.PetBaseInfo.Builder) getS2CPetBaseInfoFieldBuilder().addBuilder(PetHandler.PetBaseInfo.getDefaultInstance());
            }

            public PetHandler.PetBaseInfo.Builder addS2CPetBaseInfoBuilder(int index) {
                return (PetHandler.PetBaseInfo.Builder) getS2CPetBaseInfoFieldBuilder().addBuilder(index, PetHandler.PetBaseInfo.getDefaultInstance());
            }

            public List<PetHandler.PetBaseInfo.Builder> getS2CPetBaseInfoBuilderList() {
                return getS2CPetBaseInfoFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilder<PetHandler.PetBaseInfo, PetHandler.PetBaseInfo.Builder, PetHandler.PetBaseInfoOrBuilder> getS2CPetBaseInfoFieldBuilder() {
                if (this.s2CPetBaseInfoBuilder_ == null) {
                    this.s2CPetBaseInfoBuilder_ = new RepeatedFieldBuilder(this.s2CPetBaseInfo_, ((this.bitField0_ & 0x4) == 4), getParentForChildren(), isClean());
                    this.s2CPetBaseInfo_ = null;
                }
                return this.s2CPetBaseInfoBuilder_;
            }

            public boolean hasS2CFightingPetId() {
                return ((this.bitField0_ & 0x8) == 8);
            }

            public String getS2CFightingPetId() {
                Object ref = this.s2CFightingPetId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8())
                        this.s2CFightingPetId_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CFightingPetIdBytes() {
                Object ref = this.s2CFightingPetId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CFightingPetId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CFightingPetId(String value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x8;
                this.s2CFightingPetId_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CFightingPetId() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.s2CFightingPetId_ = PetHandler.GetAllPetsBaseInfoResponse.getDefaultInstance().getS2CFightingPetId();
                onChanged();
                return this;
            }

            public Builder setS2CFightingPetIdBytes(ByteString value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x8;
                this.s2CFightingPetId_ = value;
                onChanged();
                return this;
            }
        }
    }

    public static final class GetPetInfoRequest
            extends GeneratedMessage implements GetPetInfoRequestOrBuilder {
        private static final GetPetInfoRequest defaultInstance = new GetPetInfoRequest(true);
        private final UnknownFieldSet unknownFields;

        private GetPetInfoRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private GetPetInfoRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static GetPetInfoRequest getDefaultInstance() {
            return defaultInstance;
        }

        public GetPetInfoRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private GetPetInfoRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.s2CPetId_ = bs;
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2COwnId_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_GetPetInfoRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_GetPetInfoRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GetPetInfoRequest.class, Builder.class);
        }

        public static Parser<GetPetInfoRequest> PARSER = (Parser<GetPetInfoRequest>) new AbstractParser<GetPetInfoRequest>() {
            public PetHandler.GetPetInfoRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.GetPetInfoRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_PETID_FIELD_NUMBER = 1;
        private Object s2CPetId_;
        public static final int S2C_OWNID_FIELD_NUMBER = 2;
        private Object s2COwnId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<GetPetInfoRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CPetId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getS2CPetId() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CPetId_ = s;
            return s;
        }

        public ByteString getS2CPetIdBytes() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CPetId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasS2COwnId() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2COwnId() {
            Object ref = this.s2COwnId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2COwnId_ = s;
            return s;
        }

        public ByteString getS2COwnIdBytes() {
            Object ref = this.s2COwnId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2COwnId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CPetId_ = "";
            this.s2COwnId_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CPetId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasS2COwnId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeBytes(1, getS2CPetIdBytes());
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2COwnIdBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeBytesSize(1, getS2CPetIdBytes());
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2COwnIdBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static GetPetInfoRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (GetPetInfoRequest) PARSER.parseFrom(data);
        }

        public static GetPetInfoRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetPetInfoRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GetPetInfoRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (GetPetInfoRequest) PARSER.parseFrom(data);
        }

        public static GetPetInfoRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetPetInfoRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GetPetInfoRequest parseFrom(InputStream input) throws IOException {
            return (GetPetInfoRequest) PARSER.parseFrom(input);
        }

        public static GetPetInfoRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetPetInfoRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static GetPetInfoRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (GetPetInfoRequest) PARSER.parseDelimitedFrom(input);
        }

        public static GetPetInfoRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetPetInfoRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static GetPetInfoRequest parseFrom(CodedInputStream input) throws IOException {
            return (GetPetInfoRequest) PARSER.parseFrom(input);
        }

        public static GetPetInfoRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetPetInfoRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(GetPetInfoRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.GetPetInfoRequestOrBuilder {
            private int bitField0_;
            private Object s2CPetId_;
            private Object s2COwnId_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_GetPetInfoRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_GetPetInfoRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.GetPetInfoRequest.class, Builder.class);
            }

            private Builder() {
                this.s2CPetId_ = "";
                this.s2COwnId_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CPetId_ = "";
                this.s2COwnId_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.GetPetInfoRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CPetId_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2COwnId_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_GetPetInfoRequest_descriptor;
            }

            public PetHandler.GetPetInfoRequest getDefaultInstanceForType() {
                return PetHandler.GetPetInfoRequest.getDefaultInstance();
            }

            public PetHandler.GetPetInfoRequest build() {
                PetHandler.GetPetInfoRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.GetPetInfoRequest buildPartial() {
                PetHandler.GetPetInfoRequest result = new PetHandler.GetPetInfoRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CPetId_ = this.s2CPetId_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2COwnId_ = this.s2COwnId_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.GetPetInfoRequest)
                    return mergeFrom((PetHandler.GetPetInfoRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.GetPetInfoRequest other) {
                if (other == PetHandler.GetPetInfoRequest.getDefaultInstance()) return this;
                if (other.hasS2CPetId()) {
                    this.bitField0_ |= 0x1;
                    this.s2CPetId_ = other.s2CPetId_;
                    onChanged();
                }
                if (other.hasS2COwnId()) {
                    this.bitField0_ |= 0x2;
                    this.s2COwnId_ = other.s2COwnId_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CPetId()) return false;
                if (!hasS2COwnId()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.GetPetInfoRequest parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.GetPetInfoRequest) PetHandler.GetPetInfoRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.GetPetInfoRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CPetId() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getS2CPetId() {
                Object ref = this.s2CPetId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CPetId_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CPetIdBytes() {
                Object ref = this.s2CPetId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CPetId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CPetId(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CPetId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CPetId_ = PetHandler.GetPetInfoRequest.getDefaultInstance().getS2CPetId();
                onChanged();
                return this;
            }

            public Builder setS2CPetIdBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }

            public boolean hasS2COwnId() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2COwnId() {
                Object ref = this.s2COwnId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2COwnId_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2COwnIdBytes() {
                Object ref = this.s2COwnId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2COwnId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2COwnId(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2COwnId_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2COwnId() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2COwnId_ = PetHandler.GetPetInfoRequest.getDefaultInstance().getS2COwnId();
                onChanged();
                return this;
            }

            public Builder setS2COwnIdBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2COwnId_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class GetPetInfoResponse
            extends GeneratedMessage
            implements GetPetInfoResponseOrBuilder {
        private static final GetPetInfoResponse defaultInstance = new GetPetInfoResponse(true);
        private final UnknownFieldSet unknownFields;

        private GetPetInfoResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private GetPetInfoResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static GetPetInfoResponse getDefaultInstance() {
            return defaultInstance;
        }

        public GetPetInfoResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private GetPetInfoResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    PetHandler.PetInfo.Builder subBuilder;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 26:
                            subBuilder = null;
                            if ((this.bitField0_ & 0x4) == 4) subBuilder = this.s2CPet_.toBuilder();
                            this.s2CPet_ = (PetHandler.PetInfo) input.readMessage(PetHandler.PetInfo.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.s2CPet_);
                                this.s2CPet_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x4;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_GetPetInfoResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_GetPetInfoResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GetPetInfoResponse.class, Builder.class);
        }

        public static Parser<GetPetInfoResponse> PARSER = (Parser<GetPetInfoResponse>) new AbstractParser<GetPetInfoResponse>() {
            public PetHandler.GetPetInfoResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.GetPetInfoResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int S2C_PET_FIELD_NUMBER = 3;
        private PetHandler.PetInfo s2CPet_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<GetPetInfoResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        static {
            defaultInstance.initFields();
        }


        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }


        public boolean hasS2CPet() {
            return ((this.bitField0_ & 0x4) == 4);
        }


        public PetHandler.PetInfo getS2CPet() {
            return this.s2CPet_;
        }


        public PetHandler.PetInfoOrBuilder getS2CPetOrBuilder() {
            return this.s2CPet_;
        }


        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.s2CPet_ = PetHandler.PetInfo.getDefaultInstance();
        }


        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
                return true;
            }
            if (isInitialized == 0) {
                return false;
            }
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (hasS2CPet() && !getS2CPet().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }


        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) {
                output.writeInt32(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                output.writeBytes(2, getS2CMsgBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                output.writeMessage(3, (MessageLite) this.s2CPet_);
            }
            getUnknownFields().writeTo(output);
        }


        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) {
                size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                size += CodedOutputStream.computeMessageSize(3, (MessageLite) this.s2CPet_);
            }
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }


        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }


        public static GetPetInfoResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (GetPetInfoResponse) PARSER.parseFrom(data);
        }


        public static GetPetInfoResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetPetInfoResponse) PARSER.parseFrom(data, extensionRegistry);
        }


        public static GetPetInfoResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (GetPetInfoResponse) PARSER.parseFrom(data);
        }


        public static GetPetInfoResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetPetInfoResponse) PARSER.parseFrom(data, extensionRegistry);
        }


        public static GetPetInfoResponse parseFrom(InputStream input) throws IOException {
            return (GetPetInfoResponse) PARSER.parseFrom(input);
        }


        public static GetPetInfoResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetPetInfoResponse) PARSER.parseFrom(input, extensionRegistry);
        }


        public static GetPetInfoResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (GetPetInfoResponse) PARSER.parseDelimitedFrom(input);
        }


        public static GetPetInfoResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetPetInfoResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }


        public static GetPetInfoResponse parseFrom(CodedInputStream input) throws IOException {
            return (GetPetInfoResponse) PARSER.parseFrom(input);
        }


        public static GetPetInfoResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetPetInfoResponse) PARSER.parseFrom(input, extensionRegistry);
        }


        public static Builder newBuilder() {
            return Builder.create();
        }


        public Builder newBuilderForType() {
            return newBuilder();
        }


        public static Builder newBuilder(GetPetInfoResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }


        public Builder toBuilder() {
            return newBuilder(this);
        }


        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }


        public static final class Builder
                extends GeneratedMessage.Builder<Builder>
                implements PetHandler.GetPetInfoResponseOrBuilder {
            private int bitField0_;


            private int s2CCode_;


            private Object s2CMsg_;


            private PetHandler.PetInfo s2CPet_;


            private SingleFieldBuilder<PetHandler.PetInfo, PetHandler.PetInfo.Builder, PetHandler.PetInfoOrBuilder> s2CPetBuilder_;


            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_GetPetInfoResponse_descriptor;
            }


            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_GetPetInfoResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.GetPetInfoResponse.class, Builder.class);
            }


            private Builder() {
                this.s2CMsg_ = "";
                this.s2CPet_ = PetHandler.PetInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }


            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                this.s2CPet_ = PetHandler.PetInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }


            private void maybeForceBuilderInitialization() {
                if (PetHandler.GetPetInfoResponse.alwaysUseFieldBuilders) {
                    getS2CPetFieldBuilder();
                }
            }


            private static Builder create() {
                return new Builder();
            }


            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                if (this.s2CPetBuilder_ == null) {
                    this.s2CPet_ = PetHandler.PetInfo.getDefaultInstance();
                } else {
                    this.s2CPetBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }


            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }


            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_GetPetInfoResponse_descriptor;
            }


            public PetHandler.GetPetInfoResponse getDefaultInstanceForType() {
                return PetHandler.GetPetInfoResponse.getDefaultInstance();
            }


            public PetHandler.GetPetInfoResponse build() {
                PetHandler.GetPetInfoResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }


            public PetHandler.GetPetInfoResponse buildPartial() {
                PetHandler.GetPetInfoResponse result = new PetHandler.GetPetInfoResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) {
                    to_bitField0_ |= 0x1;
                }
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) {
                    to_bitField0_ |= 0x2;
                }
                result.s2CMsg_ = this.s2CMsg_;
                if ((from_bitField0_ & 0x4) == 4) {
                    to_bitField0_ |= 0x4;
                }
                if (this.s2CPetBuilder_ == null) {
                    result.s2CPet_ = this.s2CPet_;
                } else {
                    result.s2CPet_ = (PetHandler.PetInfo) this.s2CPetBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }


            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.GetPetInfoResponse) {
                    return mergeFrom((PetHandler.GetPetInfoResponse) other);
                }
                super.mergeFrom(other);
                return this;
            }


            public Builder mergeFrom(PetHandler.GetPetInfoResponse other) {
                if (other == PetHandler.GetPetInfoResponse.getDefaultInstance()) {
                    return this;
                }
                if (other.hasS2CCode()) {
                    setS2CCode(other.getS2CCode());
                }
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (other.hasS2CPet()) {
                    mergeS2CPet(other.getS2CPet());
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }


            public final boolean isInitialized() {
                if (!hasS2CCode()) {
                    return false;
                }
                if (hasS2CPet() && !getS2CPet().isInitialized()) {
                    return false;
                }
                return true;
            }


            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.GetPetInfoResponse parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.GetPetInfoResponse) PetHandler.GetPetInfoResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.GetPetInfoResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }


            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }


            public int getS2CCode() {
                return this.s2CCode_;
            }


            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }


            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }


            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }


            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.s2CMsg_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setS2CMsg(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }


            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = PetHandler.GetPetInfoResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }


            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }


            public boolean hasS2CPet() {
                return ((this.bitField0_ & 0x4) == 4);
            }


            public PetHandler.PetInfo getS2CPet() {
                if (this.s2CPetBuilder_ == null) {
                    return this.s2CPet_;
                }
                return (PetHandler.PetInfo) this.s2CPetBuilder_.getMessage();
            }


            public Builder setS2CPet(PetHandler.PetInfo value) {
                if (this.s2CPetBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.s2CPet_ = value;
                    onChanged();
                } else {
                    this.s2CPetBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }


            public Builder setS2CPet(PetHandler.PetInfo.Builder builderForValue) {
                if (this.s2CPetBuilder_ == null) {
                    this.s2CPet_ = builderForValue.build();
                    onChanged();
                } else {
                    this.s2CPetBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x4;
                return this;
            }


            public Builder mergeS2CPet(PetHandler.PetInfo value) {
                if (this.s2CPetBuilder_ == null) {
                    if ((this.bitField0_ & 0x4) == 4 && this.s2CPet_ != PetHandler.PetInfo.getDefaultInstance()) {
                        this.s2CPet_ = PetHandler.PetInfo.newBuilder(this.s2CPet_).mergeFrom(value).buildPartial();
                    } else {
                        this.s2CPet_ = value;
                    }
                    onChanged();
                } else {
                    this.s2CPetBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }


            public Builder clearS2CPet() {
                if (this.s2CPetBuilder_ == null) {
                    this.s2CPet_ = PetHandler.PetInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.s2CPetBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }


            public PetHandler.PetInfo.Builder getS2CPetBuilder() {
                this.bitField0_ |= 0x4;
                onChanged();
                return (PetHandler.PetInfo.Builder) getS2CPetFieldBuilder().getBuilder();
            }


            public PetHandler.PetInfoOrBuilder getS2CPetOrBuilder() {
                if (this.s2CPetBuilder_ != null) {
                    return (PetHandler.PetInfoOrBuilder) this.s2CPetBuilder_.getMessageOrBuilder();
                }
                return this.s2CPet_;
            }


            private SingleFieldBuilder<PetHandler.PetInfo, PetHandler.PetInfo.Builder, PetHandler.PetInfoOrBuilder> getS2CPetFieldBuilder() {
                if (this.s2CPetBuilder_ == null) {
                    this.s2CPetBuilder_ = new SingleFieldBuilder(getS2CPet(), getParentForChildren(), isClean());
                    this.s2CPet_ = null;
                }
                return this.s2CPetBuilder_;
            }
        }
    }


    public static final class DevelopPetRequest
            extends GeneratedMessage
            implements DevelopPetRequestOrBuilder {
        private static final DevelopPetRequest defaultInstance = new DevelopPetRequest(true);
        private final UnknownFieldSet unknownFields;

        private DevelopPetRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private DevelopPetRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static DevelopPetRequest getDefaultInstance() {
            return defaultInstance;
        }

        public DevelopPetRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private DevelopPetRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CType_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CItemCode_ = bs;
                            break;
                        case 26:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x4;
                            this.s2CPetId_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_DevelopPetRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_DevelopPetRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(DevelopPetRequest.class, Builder.class);
        }

        public static Parser<DevelopPetRequest> PARSER = (Parser<DevelopPetRequest>) new AbstractParser<DevelopPetRequest>() {
            public PetHandler.DevelopPetRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.DevelopPetRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_TYPE_FIELD_NUMBER = 1;
        private int s2CType_;
        public static final int S2C_ITEMCODE_FIELD_NUMBER = 2;
        private Object s2CItemCode_;
        public static final int S2C_PETID_FIELD_NUMBER = 3;
        private Object s2CPetId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<DevelopPetRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CType() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CType() {
            return this.s2CType_;
        }

        public boolean hasS2CItemCode() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CItemCode() {
            Object ref = this.s2CItemCode_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CItemCode_ = s;
            return s;
        }

        public ByteString getS2CItemCodeBytes() {
            Object ref = this.s2CItemCode_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CItemCode_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasS2CPetId() {
            return ((this.bitField0_ & 0x4) == 4);
        }

        public String getS2CPetId() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CPetId_ = s;
            return s;
        }

        public ByteString getS2CPetIdBytes() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CPetId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CType_ = 0;
            this.s2CItemCode_ = "";
            this.s2CPetId_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CType()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasS2CItemCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasS2CPetId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CType_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CItemCodeBytes());
            if ((this.bitField0_ & 0x4) == 4) output.writeBytes(3, getS2CPetIdBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CType_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CItemCodeBytes());
            if ((this.bitField0_ & 0x4) == 4) size += CodedOutputStream.computeBytesSize(3, getS2CPetIdBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static DevelopPetRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (DevelopPetRequest) PARSER.parseFrom(data);
        }

        public static DevelopPetRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (DevelopPetRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static DevelopPetRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (DevelopPetRequest) PARSER.parseFrom(data);
        }

        public static DevelopPetRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (DevelopPetRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static DevelopPetRequest parseFrom(InputStream input) throws IOException {
            return (DevelopPetRequest) PARSER.parseFrom(input);
        }

        public static DevelopPetRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DevelopPetRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static DevelopPetRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (DevelopPetRequest) PARSER.parseDelimitedFrom(input);
        }

        public static DevelopPetRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DevelopPetRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static DevelopPetRequest parseFrom(CodedInputStream input) throws IOException {
            return (DevelopPetRequest) PARSER.parseFrom(input);
        }

        public static DevelopPetRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DevelopPetRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(DevelopPetRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.DevelopPetRequestOrBuilder {
            private int bitField0_;
            private int s2CType_;
            private Object s2CItemCode_;
            private Object s2CPetId_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_DevelopPetRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_DevelopPetRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.DevelopPetRequest.class, Builder.class);
            }

            private Builder() {
                this.s2CItemCode_ = "";
                this.s2CPetId_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CItemCode_ = "";
                this.s2CPetId_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.DevelopPetRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CType_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CItemCode_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CPetId_ = "";
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_DevelopPetRequest_descriptor;
            }

            public PetHandler.DevelopPetRequest getDefaultInstanceForType() {
                return PetHandler.DevelopPetRequest.getDefaultInstance();
            }

            public PetHandler.DevelopPetRequest build() {
                PetHandler.DevelopPetRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.DevelopPetRequest buildPartial() {
                PetHandler.DevelopPetRequest result = new PetHandler.DevelopPetRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CType_ = this.s2CType_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CItemCode_ = this.s2CItemCode_;
                if ((from_bitField0_ & 0x4) == 4) to_bitField0_ |= 0x4;
                result.s2CPetId_ = this.s2CPetId_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.DevelopPetRequest)
                    return mergeFrom((PetHandler.DevelopPetRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.DevelopPetRequest other) {
                if (other == PetHandler.DevelopPetRequest.getDefaultInstance()) return this;
                if (other.hasS2CType()) setS2CType(other.getS2CType());
                if (other.hasS2CItemCode()) {
                    this.bitField0_ |= 0x2;
                    this.s2CItemCode_ = other.s2CItemCode_;
                    onChanged();
                }
                if (other.hasS2CPetId()) {
                    this.bitField0_ |= 0x4;
                    this.s2CPetId_ = other.s2CPetId_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CType()) return false;
                if (!hasS2CItemCode()) return false;
                if (!hasS2CPetId()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.DevelopPetRequest parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.DevelopPetRequest) PetHandler.DevelopPetRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.DevelopPetRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CType() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CType() {
                return this.s2CType_;
            }

            public Builder setS2CType(int value) {
                this.bitField0_ |= 0x1;
                this.s2CType_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CType() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CType_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CItemCode() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CItemCode() {
                Object ref = this.s2CItemCode_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CItemCode_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CItemCodeBytes() {
                Object ref = this.s2CItemCode_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CItemCode_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CItemCode(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CItemCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CItemCode() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CItemCode_ = PetHandler.DevelopPetRequest.getDefaultInstance().getS2CItemCode();
                onChanged();
                return this;
            }

            public Builder setS2CItemCodeBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CItemCode_ = value;
                onChanged();
                return this;
            }

            public boolean hasS2CPetId() {
                return ((this.bitField0_ & 0x4) == 4);
            }

            public String getS2CPetId() {
                Object ref = this.s2CPetId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CPetId_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CPetIdBytes() {
                Object ref = this.s2CPetId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CPetId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CPetId(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x4;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CPetId() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.s2CPetId_ = PetHandler.DevelopPetRequest.getDefaultInstance().getS2CPetId();
                onChanged();
                return this;
            }

            public Builder setS2CPetIdBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x4;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class DevelopPetResponse
            extends GeneratedMessage
            implements DevelopPetResponseOrBuilder {
        private static final DevelopPetResponse defaultInstance = new DevelopPetResponse(true);
        private final UnknownFieldSet unknownFields;

        private DevelopPetResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private DevelopPetResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static DevelopPetResponse getDefaultInstance() {
            return defaultInstance;
        }

        public DevelopPetResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private DevelopPetResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_DevelopPetResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_DevelopPetResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(DevelopPetResponse.class, Builder.class);
        }

        public static Parser<DevelopPetResponse> PARSER = (Parser<DevelopPetResponse>) new AbstractParser<DevelopPetResponse>() {
            public PetHandler.DevelopPetResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.DevelopPetResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<DevelopPetResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static DevelopPetResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (DevelopPetResponse) PARSER.parseFrom(data);
        }

        public static DevelopPetResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (DevelopPetResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static DevelopPetResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (DevelopPetResponse) PARSER.parseFrom(data);
        }

        public static DevelopPetResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (DevelopPetResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static DevelopPetResponse parseFrom(InputStream input) throws IOException {
            return (DevelopPetResponse) PARSER.parseFrom(input);
        }

        public static DevelopPetResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DevelopPetResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static DevelopPetResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (DevelopPetResponse) PARSER.parseDelimitedFrom(input);
        }

        public static DevelopPetResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DevelopPetResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static DevelopPetResponse parseFrom(CodedInputStream input) throws IOException {
            return (DevelopPetResponse) PARSER.parseFrom(input);
        }

        public static DevelopPetResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DevelopPetResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(DevelopPetResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.DevelopPetResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_DevelopPetResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_DevelopPetResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.DevelopPetResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.DevelopPetResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_DevelopPetResponse_descriptor;
            }

            public PetHandler.DevelopPetResponse getDefaultInstanceForType() {
                return PetHandler.DevelopPetResponse.getDefaultInstance();
            }

            public PetHandler.DevelopPetResponse build() {
                PetHandler.DevelopPetResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.DevelopPetResponse buildPartial() {
                PetHandler.DevelopPetResponse result = new PetHandler.DevelopPetResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.DevelopPetResponse)
                    return mergeFrom((PetHandler.DevelopPetResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.DevelopPetResponse other) {
                if (other == PetHandler.DevelopPetResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.DevelopPetResponse parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.DevelopPetResponse) PetHandler.DevelopPetResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.DevelopPetResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = PetHandler.DevelopPetResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class ChangePetNameRequest
            extends GeneratedMessage
            implements ChangePetNameRequestOrBuilder {
        private static final ChangePetNameRequest defaultInstance = new ChangePetNameRequest(true);
        private final UnknownFieldSet unknownFields;

        private ChangePetNameRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private ChangePetNameRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static ChangePetNameRequest getDefaultInstance() {
            return defaultInstance;
        }

        public ChangePetNameRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ChangePetNameRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.s2CPetId_ = bs;
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CPetName_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_ChangePetNameRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_ChangePetNameRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(ChangePetNameRequest.class, Builder.class);
        }

        public static Parser<ChangePetNameRequest> PARSER = (Parser<ChangePetNameRequest>) new AbstractParser<ChangePetNameRequest>() {
            public PetHandler.ChangePetNameRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.ChangePetNameRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_PETID_FIELD_NUMBER = 1;
        private Object s2CPetId_;
        public static final int S2C_PETNAME_FIELD_NUMBER = 2;
        private Object s2CPetName_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<ChangePetNameRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CPetId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getS2CPetId() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CPetId_ = s;
            return s;
        }

        public ByteString getS2CPetIdBytes() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CPetId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasS2CPetName() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CPetName() {
            Object ref = this.s2CPetName_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CPetName_ = s;
            return s;
        }

        public ByteString getS2CPetNameBytes() {
            Object ref = this.s2CPetName_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CPetName_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CPetId_ = "";
            this.s2CPetName_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CPetId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasS2CPetName()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeBytes(1, getS2CPetIdBytes());
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CPetNameBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeBytesSize(1, getS2CPetIdBytes());
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CPetNameBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static ChangePetNameRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (ChangePetNameRequest) PARSER.parseFrom(data);
        }

        public static ChangePetNameRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ChangePetNameRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ChangePetNameRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (ChangePetNameRequest) PARSER.parseFrom(data);
        }

        public static ChangePetNameRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ChangePetNameRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ChangePetNameRequest parseFrom(InputStream input) throws IOException {
            return (ChangePetNameRequest) PARSER.parseFrom(input);
        }

        public static ChangePetNameRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangePetNameRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static ChangePetNameRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (ChangePetNameRequest) PARSER.parseDelimitedFrom(input);
        }

        public static ChangePetNameRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangePetNameRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static ChangePetNameRequest parseFrom(CodedInputStream input) throws IOException {
            return (ChangePetNameRequest) PARSER.parseFrom(input);
        }

        public static ChangePetNameRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangePetNameRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ChangePetNameRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.ChangePetNameRequestOrBuilder {
            private int bitField0_;
            private Object s2CPetId_;
            private Object s2CPetName_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_ChangePetNameRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_ChangePetNameRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.ChangePetNameRequest.class, Builder.class);
            }

            private Builder() {
                this.s2CPetId_ = "";
                this.s2CPetName_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CPetId_ = "";
                this.s2CPetName_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.ChangePetNameRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CPetId_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CPetName_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_ChangePetNameRequest_descriptor;
            }

            public PetHandler.ChangePetNameRequest getDefaultInstanceForType() {
                return PetHandler.ChangePetNameRequest.getDefaultInstance();
            }

            public PetHandler.ChangePetNameRequest build() {
                PetHandler.ChangePetNameRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.ChangePetNameRequest buildPartial() {
                PetHandler.ChangePetNameRequest result = new PetHandler.ChangePetNameRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CPetId_ = this.s2CPetId_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CPetName_ = this.s2CPetName_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.ChangePetNameRequest)
                    return mergeFrom((PetHandler.ChangePetNameRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.ChangePetNameRequest other) {
                if (other == PetHandler.ChangePetNameRequest.getDefaultInstance()) return this;
                if (other.hasS2CPetId()) {
                    this.bitField0_ |= 0x1;
                    this.s2CPetId_ = other.s2CPetId_;
                    onChanged();
                }
                if (other.hasS2CPetName()) {
                    this.bitField0_ |= 0x2;
                    this.s2CPetName_ = other.s2CPetName_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CPetId()) return false;
                if (!hasS2CPetName()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.ChangePetNameRequest parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.ChangePetNameRequest) PetHandler.ChangePetNameRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.ChangePetNameRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CPetId() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getS2CPetId() {
                Object ref = this.s2CPetId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CPetId_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CPetIdBytes() {
                Object ref = this.s2CPetId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CPetId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CPetId(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CPetId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CPetId_ = PetHandler.ChangePetNameRequest.getDefaultInstance().getS2CPetId();
                onChanged();
                return this;
            }

            public Builder setS2CPetIdBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }

            public boolean hasS2CPetName() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CPetName() {
                Object ref = this.s2CPetName_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CPetName_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CPetNameBytes() {
                Object ref = this.s2CPetName_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CPetName_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CPetName(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CPetName_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CPetName() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CPetName_ = PetHandler.ChangePetNameRequest.getDefaultInstance().getS2CPetName();
                onChanged();
                return this;
            }

            public Builder setS2CPetNameBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CPetName_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class ChangePetNameResponse
            extends GeneratedMessage
            implements ChangePetNameResponseOrBuilder {
        private static final ChangePetNameResponse defaultInstance = new ChangePetNameResponse(true);
        private final UnknownFieldSet unknownFields;

        private ChangePetNameResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private ChangePetNameResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static ChangePetNameResponse getDefaultInstance() {
            return defaultInstance;
        }

        public ChangePetNameResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ChangePetNameResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_ChangePetNameResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_ChangePetNameResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(ChangePetNameResponse.class, Builder.class);
        }

        public static Parser<ChangePetNameResponse> PARSER = (Parser<ChangePetNameResponse>) new AbstractParser<ChangePetNameResponse>() {
            public PetHandler.ChangePetNameResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.ChangePetNameResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<ChangePetNameResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static ChangePetNameResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (ChangePetNameResponse) PARSER.parseFrom(data);
        }

        public static ChangePetNameResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ChangePetNameResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ChangePetNameResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (ChangePetNameResponse) PARSER.parseFrom(data);
        }

        public static ChangePetNameResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ChangePetNameResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ChangePetNameResponse parseFrom(InputStream input) throws IOException {
            return (ChangePetNameResponse) PARSER.parseFrom(input);
        }

        public static ChangePetNameResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangePetNameResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static ChangePetNameResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (ChangePetNameResponse) PARSER.parseDelimitedFrom(input);
        }

        public static ChangePetNameResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangePetNameResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static ChangePetNameResponse parseFrom(CodedInputStream input) throws IOException {
            return (ChangePetNameResponse) PARSER.parseFrom(input);
        }

        public static ChangePetNameResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangePetNameResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ChangePetNameResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.ChangePetNameResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_ChangePetNameResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_ChangePetNameResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.ChangePetNameResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.ChangePetNameResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_ChangePetNameResponse_descriptor;
            }

            public PetHandler.ChangePetNameResponse getDefaultInstanceForType() {
                return PetHandler.ChangePetNameResponse.getDefaultInstance();
            }

            public PetHandler.ChangePetNameResponse build() {
                PetHandler.ChangePetNameResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.ChangePetNameResponse buildPartial() {
                PetHandler.ChangePetNameResponse result = new PetHandler.ChangePetNameResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.ChangePetNameResponse)
                    return mergeFrom((PetHandler.ChangePetNameResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.ChangePetNameResponse other) {
                if (other == PetHandler.ChangePetNameResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.ChangePetNameResponse parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.ChangePetNameResponse) PetHandler.ChangePetNameResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.ChangePetNameResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = PetHandler.ChangePetNameResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class FreePetRequest
            extends GeneratedMessage
            implements FreePetRequestOrBuilder {
        private static final FreePetRequest defaultInstance = new FreePetRequest(true);
        private final UnknownFieldSet unknownFields;

        private FreePetRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private FreePetRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static FreePetRequest getDefaultInstance() {
            return defaultInstance;
        }

        public FreePetRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private FreePetRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.s2CPetId_ = bs;
                            break;
                        case 16:
                            this.bitField0_ |= 0x2;
                            this.s2CType_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_FreePetRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_FreePetRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(FreePetRequest.class, Builder.class);
        }

        public static Parser<FreePetRequest> PARSER = (Parser<FreePetRequest>) new AbstractParser<FreePetRequest>() {
            public PetHandler.FreePetRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.FreePetRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_PETID_FIELD_NUMBER = 1;
        private Object s2CPetId_;
        public static final int S2C_TYPE_FIELD_NUMBER = 2;
        private int s2CType_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<FreePetRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CPetId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getS2CPetId() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CPetId_ = s;
            return s;
        }

        public ByteString getS2CPetIdBytes() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CPetId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasS2CType() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public int getS2CType() {
            return this.s2CType_;
        }

        private void initFields() {
            this.s2CPetId_ = "";
            this.s2CType_ = 0;
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CPetId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasS2CType()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeBytes(1, getS2CPetIdBytes());
            if ((this.bitField0_ & 0x2) == 2) output.writeInt32(2, this.s2CType_);
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeBytesSize(1, getS2CPetIdBytes());
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeInt32Size(2, this.s2CType_);
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static FreePetRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (FreePetRequest) PARSER.parseFrom(data);
        }

        public static FreePetRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (FreePetRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static FreePetRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (FreePetRequest) PARSER.parseFrom(data);
        }

        public static FreePetRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (FreePetRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static FreePetRequest parseFrom(InputStream input) throws IOException {
            return (FreePetRequest) PARSER.parseFrom(input);
        }

        public static FreePetRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (FreePetRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static FreePetRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (FreePetRequest) PARSER.parseDelimitedFrom(input);
        }

        public static FreePetRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (FreePetRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static FreePetRequest parseFrom(CodedInputStream input) throws IOException {
            return (FreePetRequest) PARSER.parseFrom(input);
        }

        public static FreePetRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (FreePetRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(FreePetRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.FreePetRequestOrBuilder {
            private int bitField0_;
            private Object s2CPetId_;
            private int s2CType_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_FreePetRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_FreePetRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.FreePetRequest.class, Builder.class);
            }

            private Builder() {
                this.s2CPetId_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CPetId_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.FreePetRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CPetId_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CType_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_FreePetRequest_descriptor;
            }

            public PetHandler.FreePetRequest getDefaultInstanceForType() {
                return PetHandler.FreePetRequest.getDefaultInstance();
            }

            public PetHandler.FreePetRequest build() {
                PetHandler.FreePetRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.FreePetRequest buildPartial() {
                PetHandler.FreePetRequest result = new PetHandler.FreePetRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CPetId_ = this.s2CPetId_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CType_ = this.s2CType_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.FreePetRequest) return mergeFrom((PetHandler.FreePetRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.FreePetRequest other) {
                if (other == PetHandler.FreePetRequest.getDefaultInstance()) return this;
                if (other.hasS2CPetId()) {
                    this.bitField0_ |= 0x1;
                    this.s2CPetId_ = other.s2CPetId_;
                    onChanged();
                }
                if (other.hasS2CType()) setS2CType(other.getS2CType());
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CPetId()) return false;
                if (!hasS2CType()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.FreePetRequest parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.FreePetRequest) PetHandler.FreePetRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.FreePetRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CPetId() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getS2CPetId() {
                Object ref = this.s2CPetId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CPetId_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CPetIdBytes() {
                Object ref = this.s2CPetId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CPetId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CPetId(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CPetId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CPetId_ = PetHandler.FreePetRequest.getDefaultInstance().getS2CPetId();
                onChanged();
                return this;
            }

            public Builder setS2CPetIdBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }

            public boolean hasS2CType() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public int getS2CType() {
                return this.s2CType_;
            }

            public Builder setS2CType(int value) {
                this.bitField0_ |= 0x2;
                this.s2CType_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CType() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CType_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class FreePetResponse
            extends GeneratedMessage
            implements FreePetResponseOrBuilder {
        private static final FreePetResponse defaultInstance = new FreePetResponse(true);
        private final UnknownFieldSet unknownFields;

        private FreePetResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private FreePetResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static FreePetResponse getDefaultInstance() {
            return defaultInstance;
        }

        public FreePetResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private FreePetResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_FreePetResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_FreePetResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(FreePetResponse.class, Builder.class);
        }

        public static Parser<FreePetResponse> PARSER = (Parser<FreePetResponse>) new AbstractParser<FreePetResponse>() {
            public PetHandler.FreePetResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.FreePetResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<FreePetResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static FreePetResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (FreePetResponse) PARSER.parseFrom(data);
        }

        public static FreePetResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (FreePetResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static FreePetResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (FreePetResponse) PARSER.parseFrom(data);
        }

        public static FreePetResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (FreePetResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static FreePetResponse parseFrom(InputStream input) throws IOException {
            return (FreePetResponse) PARSER.parseFrom(input);
        }

        public static FreePetResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (FreePetResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static FreePetResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (FreePetResponse) PARSER.parseDelimitedFrom(input);
        }

        public static FreePetResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (FreePetResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static FreePetResponse parseFrom(CodedInputStream input) throws IOException {
            return (FreePetResponse) PARSER.parseFrom(input);
        }

        public static FreePetResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (FreePetResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(FreePetResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.FreePetResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_FreePetResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_FreePetResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.FreePetResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.FreePetResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_FreePetResponse_descriptor;
            }

            public PetHandler.FreePetResponse getDefaultInstanceForType() {
                return PetHandler.FreePetResponse.getDefaultInstance();
            }

            public PetHandler.FreePetResponse build() {
                PetHandler.FreePetResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.FreePetResponse buildPartial() {
                PetHandler.FreePetResponse result = new PetHandler.FreePetResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.FreePetResponse) return mergeFrom((PetHandler.FreePetResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.FreePetResponse other) {
                if (other == PetHandler.FreePetResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.FreePetResponse parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.FreePetResponse) PetHandler.FreePetResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.FreePetResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = PetHandler.FreePetResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class PetOutFightRequest
            extends GeneratedMessage
            implements PetOutFightRequestOrBuilder {
        private static final PetOutFightRequest defaultInstance = new PetOutFightRequest(true);
        private final UnknownFieldSet unknownFields;

        private PetOutFightRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private PetOutFightRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static PetOutFightRequest getDefaultInstance() {
            return defaultInstance;
        }

        public PetOutFightRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private PetOutFightRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.s2CPetId_ = bs;
                            break;
                        case 16:
                            this.bitField0_ |= 0x2;
                            this.s2CType_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_PetOutFightRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_PetOutFightRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetOutFightRequest.class, Builder.class);
        }

        public static Parser<PetOutFightRequest> PARSER = (Parser<PetOutFightRequest>) new AbstractParser<PetOutFightRequest>() {
            public PetHandler.PetOutFightRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.PetOutFightRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_PETID_FIELD_NUMBER = 1;
        private Object s2CPetId_;
        public static final int S2C_TYPE_FIELD_NUMBER = 2;
        private int s2CType_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<PetOutFightRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CPetId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getS2CPetId() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CPetId_ = s;
            return s;
        }

        public ByteString getS2CPetIdBytes() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CPetId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasS2CType() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public int getS2CType() {
            return this.s2CType_;
        }

        private void initFields() {
            this.s2CPetId_ = "";
            this.s2CType_ = 0;
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CPetId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasS2CType()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeBytes(1, getS2CPetIdBytes());
            if ((this.bitField0_ & 0x2) == 2) output.writeInt32(2, this.s2CType_);
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeBytesSize(1, getS2CPetIdBytes());
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeInt32Size(2, this.s2CType_);
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static PetOutFightRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (PetOutFightRequest) PARSER.parseFrom(data);
        }

        public static PetOutFightRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetOutFightRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PetOutFightRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (PetOutFightRequest) PARSER.parseFrom(data);
        }

        public static PetOutFightRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetOutFightRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PetOutFightRequest parseFrom(InputStream input) throws IOException {
            return (PetOutFightRequest) PARSER.parseFrom(input);
        }

        public static PetOutFightRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetOutFightRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static PetOutFightRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (PetOutFightRequest) PARSER.parseDelimitedFrom(input);
        }

        public static PetOutFightRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetOutFightRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static PetOutFightRequest parseFrom(CodedInputStream input) throws IOException {
            return (PetOutFightRequest) PARSER.parseFrom(input);
        }

        public static PetOutFightRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetOutFightRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(PetOutFightRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.PetOutFightRequestOrBuilder {
            private int bitField0_;
            private Object s2CPetId_;
            private int s2CType_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_PetOutFightRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_PetOutFightRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.PetOutFightRequest.class, Builder.class);
            }

            private Builder() {
                this.s2CPetId_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CPetId_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.PetOutFightRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CPetId_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CType_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_PetOutFightRequest_descriptor;
            }

            public PetHandler.PetOutFightRequest getDefaultInstanceForType() {
                return PetHandler.PetOutFightRequest.getDefaultInstance();
            }

            public PetHandler.PetOutFightRequest build() {
                PetHandler.PetOutFightRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.PetOutFightRequest buildPartial() {
                PetHandler.PetOutFightRequest result = new PetHandler.PetOutFightRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CPetId_ = this.s2CPetId_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CType_ = this.s2CType_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.PetOutFightRequest)
                    return mergeFrom((PetHandler.PetOutFightRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.PetOutFightRequest other) {
                if (other == PetHandler.PetOutFightRequest.getDefaultInstance()) return this;
                if (other.hasS2CPetId()) {
                    this.bitField0_ |= 0x1;
                    this.s2CPetId_ = other.s2CPetId_;
                    onChanged();
                }
                if (other.hasS2CType()) setS2CType(other.getS2CType());
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CPetId()) return false;
                if (!hasS2CType()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.PetOutFightRequest parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.PetOutFightRequest) PetHandler.PetOutFightRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.PetOutFightRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CPetId() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getS2CPetId() {
                Object ref = this.s2CPetId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CPetId_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CPetIdBytes() {
                Object ref = this.s2CPetId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CPetId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CPetId(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CPetId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CPetId_ = PetHandler.PetOutFightRequest.getDefaultInstance().getS2CPetId();
                onChanged();
                return this;
            }

            public Builder setS2CPetIdBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }

            public boolean hasS2CType() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public int getS2CType() {
                return this.s2CType_;
            }

            public Builder setS2CType(int value) {
                this.bitField0_ |= 0x2;
                this.s2CType_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CType() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CType_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class PetOutFightResponse
            extends GeneratedMessage
            implements PetOutFightResponseOrBuilder {
        private static final PetOutFightResponse defaultInstance = new PetOutFightResponse(true);
        private final UnknownFieldSet unknownFields;

        private PetOutFightResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private PetOutFightResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static PetOutFightResponse getDefaultInstance() {
            return defaultInstance;
        }

        public PetOutFightResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private PetOutFightResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_PetOutFightResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_PetOutFightResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetOutFightResponse.class, Builder.class);
        }

        public static Parser<PetOutFightResponse> PARSER = (Parser<PetOutFightResponse>) new AbstractParser<PetOutFightResponse>() {
            public PetHandler.PetOutFightResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.PetOutFightResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<PetOutFightResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static PetOutFightResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (PetOutFightResponse) PARSER.parseFrom(data);
        }

        public static PetOutFightResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetOutFightResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PetOutFightResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (PetOutFightResponse) PARSER.parseFrom(data);
        }

        public static PetOutFightResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetOutFightResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PetOutFightResponse parseFrom(InputStream input) throws IOException {
            return (PetOutFightResponse) PARSER.parseFrom(input);
        }

        public static PetOutFightResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetOutFightResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static PetOutFightResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (PetOutFightResponse) PARSER.parseDelimitedFrom(input);
        }

        public static PetOutFightResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetOutFightResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static PetOutFightResponse parseFrom(CodedInputStream input) throws IOException {
            return (PetOutFightResponse) PARSER.parseFrom(input);
        }

        public static PetOutFightResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetOutFightResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(PetOutFightResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.PetOutFightResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_PetOutFightResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_PetOutFightResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.PetOutFightResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.PetOutFightResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_PetOutFightResponse_descriptor;
            }

            public PetHandler.PetOutFightResponse getDefaultInstanceForType() {
                return PetHandler.PetOutFightResponse.getDefaultInstance();
            }

            public PetHandler.PetOutFightResponse build() {
                PetHandler.PetOutFightResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.PetOutFightResponse buildPartial() {
                PetHandler.PetOutFightResponse result = new PetHandler.PetOutFightResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.PetOutFightResponse)
                    return mergeFrom((PetHandler.PetOutFightResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.PetOutFightResponse other) {
                if (other == PetHandler.PetOutFightResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.PetOutFightResponse parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.PetOutFightResponse) PetHandler.PetOutFightResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.PetOutFightResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = PetHandler.PetOutFightResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class PetReliveRequest
            extends GeneratedMessage
            implements PetReliveRequestOrBuilder {
        private static final PetReliveRequest defaultInstance = new PetReliveRequest(true);
        private final UnknownFieldSet unknownFields;

        private PetReliveRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private PetReliveRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static PetReliveRequest getDefaultInstance() {
            return defaultInstance;
        }

        public PetReliveRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private PetReliveRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.s2CPetId_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_PetReliveRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_PetReliveRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetReliveRequest.class, Builder.class);
        }

        public static Parser<PetReliveRequest> PARSER = (Parser<PetReliveRequest>) new AbstractParser<PetReliveRequest>() {
            public PetHandler.PetReliveRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.PetReliveRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_PETID_FIELD_NUMBER = 1;
        private Object s2CPetId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<PetReliveRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CPetId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getS2CPetId() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CPetId_ = s;
            return s;
        }

        public ByteString getS2CPetIdBytes() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CPetId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CPetId_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CPetId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeBytes(1, getS2CPetIdBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeBytesSize(1, getS2CPetIdBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static PetReliveRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (PetReliveRequest) PARSER.parseFrom(data);
        }

        public static PetReliveRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetReliveRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PetReliveRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (PetReliveRequest) PARSER.parseFrom(data);
        }

        public static PetReliveRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetReliveRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PetReliveRequest parseFrom(InputStream input) throws IOException {
            return (PetReliveRequest) PARSER.parseFrom(input);
        }

        public static PetReliveRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetReliveRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static PetReliveRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (PetReliveRequest) PARSER.parseDelimitedFrom(input);
        }

        public static PetReliveRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetReliveRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static PetReliveRequest parseFrom(CodedInputStream input) throws IOException {
            return (PetReliveRequest) PARSER.parseFrom(input);
        }

        public static PetReliveRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetReliveRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(PetReliveRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.PetReliveRequestOrBuilder {
            private int bitField0_;
            private Object s2CPetId_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_PetReliveRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_PetReliveRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.PetReliveRequest.class, Builder.class);
            }

            private Builder() {
                this.s2CPetId_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CPetId_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.PetReliveRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CPetId_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_PetReliveRequest_descriptor;
            }

            public PetHandler.PetReliveRequest getDefaultInstanceForType() {
                return PetHandler.PetReliveRequest.getDefaultInstance();
            }

            public PetHandler.PetReliveRequest build() {
                PetHandler.PetReliveRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.PetReliveRequest buildPartial() {
                PetHandler.PetReliveRequest result = new PetHandler.PetReliveRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CPetId_ = this.s2CPetId_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.PetReliveRequest) return mergeFrom((PetHandler.PetReliveRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.PetReliveRequest other) {
                if (other == PetHandler.PetReliveRequest.getDefaultInstance()) return this;
                if (other.hasS2CPetId()) {
                    this.bitField0_ |= 0x1;
                    this.s2CPetId_ = other.s2CPetId_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CPetId()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.PetReliveRequest parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.PetReliveRequest) PetHandler.PetReliveRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.PetReliveRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CPetId() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getS2CPetId() {
                Object ref = this.s2CPetId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CPetId_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CPetIdBytes() {
                Object ref = this.s2CPetId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CPetId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CPetId(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CPetId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CPetId_ = PetHandler.PetReliveRequest.getDefaultInstance().getS2CPetId();
                onChanged();
                return this;
            }

            public Builder setS2CPetIdBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class PetReliveResponse
            extends GeneratedMessage
            implements PetReliveResponseOrBuilder {
        private static final PetReliveResponse defaultInstance = new PetReliveResponse(true);
        private final UnknownFieldSet unknownFields;

        private PetReliveResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private PetReliveResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static PetReliveResponse getDefaultInstance() {
            return defaultInstance;
        }

        public PetReliveResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private PetReliveResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_PetReliveResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_PetReliveResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetReliveResponse.class, Builder.class);
        }

        public static Parser<PetReliveResponse> PARSER = (Parser<PetReliveResponse>) new AbstractParser<PetReliveResponse>() {
            public PetHandler.PetReliveResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.PetReliveResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<PetReliveResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static PetReliveResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (PetReliveResponse) PARSER.parseFrom(data);
        }

        public static PetReliveResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetReliveResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PetReliveResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (PetReliveResponse) PARSER.parseFrom(data);
        }

        public static PetReliveResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetReliveResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PetReliveResponse parseFrom(InputStream input) throws IOException {
            return (PetReliveResponse) PARSER.parseFrom(input);
        }

        public static PetReliveResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetReliveResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static PetReliveResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (PetReliveResponse) PARSER.parseDelimitedFrom(input);
        }

        public static PetReliveResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetReliveResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static PetReliveResponse parseFrom(CodedInputStream input) throws IOException {
            return (PetReliveResponse) PARSER.parseFrom(input);
        }

        public static PetReliveResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetReliveResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(PetReliveResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.PetReliveResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_PetReliveResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_PetReliveResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.PetReliveResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.PetReliveResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_PetReliveResponse_descriptor;
            }

            public PetHandler.PetReliveResponse getDefaultInstanceForType() {
                return PetHandler.PetReliveResponse.getDefaultInstance();
            }

            public PetHandler.PetReliveResponse build() {
                PetHandler.PetReliveResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.PetReliveResponse buildPartial() {
                PetHandler.PetReliveResponse result = new PetHandler.PetReliveResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.PetReliveResponse)
                    return mergeFrom((PetHandler.PetReliveResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.PetReliveResponse other) {
                if (other == PetHandler.PetReliveResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.PetReliveResponse parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.PetReliveResponse) PetHandler.PetReliveResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.PetReliveResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = PetHandler.PetReliveResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class RandPetNameRequest
            extends GeneratedMessage
            implements RandPetNameRequestOrBuilder {
        private static final RandPetNameRequest defaultInstance = new RandPetNameRequest(true);
        private final UnknownFieldSet unknownFields;

        private RandPetNameRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private RandPetNameRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static RandPetNameRequest getDefaultInstance() {
            return defaultInstance;
        }

        public RandPetNameRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private RandPetNameRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            continue;
                    }
                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_RandPetNameRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_RandPetNameRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(RandPetNameRequest.class, Builder.class);
        }

        public static Parser<RandPetNameRequest> PARSER = (Parser<RandPetNameRequest>) new AbstractParser<RandPetNameRequest>() {
            public PetHandler.RandPetNameRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.RandPetNameRequest(input, extensionRegistry);
            }
        };
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<RandPetNameRequest> getParserForType() {
            return PARSER;
        }

        private void initFields() {
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static RandPetNameRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (RandPetNameRequest) PARSER.parseFrom(data);
        }

        public static RandPetNameRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (RandPetNameRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static RandPetNameRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (RandPetNameRequest) PARSER.parseFrom(data);
        }

        public static RandPetNameRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (RandPetNameRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static RandPetNameRequest parseFrom(InputStream input) throws IOException {
            return (RandPetNameRequest) PARSER.parseFrom(input);
        }

        public static RandPetNameRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (RandPetNameRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static RandPetNameRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (RandPetNameRequest) PARSER.parseDelimitedFrom(input);
        }

        public static RandPetNameRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (RandPetNameRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static RandPetNameRequest parseFrom(CodedInputStream input) throws IOException {
            return (RandPetNameRequest) PARSER.parseFrom(input);
        }

        public static RandPetNameRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (RandPetNameRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(RandPetNameRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.RandPetNameRequestOrBuilder {
            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_RandPetNameRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_RandPetNameRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.RandPetNameRequest.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.RandPetNameRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_RandPetNameRequest_descriptor;
            }

            public PetHandler.RandPetNameRequest getDefaultInstanceForType() {
                return PetHandler.RandPetNameRequest.getDefaultInstance();
            }

            public PetHandler.RandPetNameRequest build() {
                PetHandler.RandPetNameRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.RandPetNameRequest buildPartial() {
                PetHandler.RandPetNameRequest result = new PetHandler.RandPetNameRequest(this);
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.RandPetNameRequest)
                    return mergeFrom((PetHandler.RandPetNameRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.RandPetNameRequest other) {
                if (other == PetHandler.RandPetNameRequest.getDefaultInstance()) return this;
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.RandPetNameRequest parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.RandPetNameRequest) PetHandler.RandPetNameRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.RandPetNameRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class RandPetNameResponse
            extends GeneratedMessage
            implements RandPetNameResponseOrBuilder {
        private static final RandPetNameResponse defaultInstance = new RandPetNameResponse(true);
        private final UnknownFieldSet unknownFields;

        private RandPetNameResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private RandPetNameResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static RandPetNameResponse getDefaultInstance() {
            return defaultInstance;
        }

        public RandPetNameResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private RandPetNameResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_RandPetNameResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_RandPetNameResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(RandPetNameResponse.class, Builder.class);
        }

        public static Parser<RandPetNameResponse> PARSER = (Parser<RandPetNameResponse>) new AbstractParser<RandPetNameResponse>() {
            public PetHandler.RandPetNameResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.RandPetNameResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<RandPetNameResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static RandPetNameResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (RandPetNameResponse) PARSER.parseFrom(data);
        }

        public static RandPetNameResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (RandPetNameResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static RandPetNameResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (RandPetNameResponse) PARSER.parseFrom(data);
        }

        public static RandPetNameResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (RandPetNameResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static RandPetNameResponse parseFrom(InputStream input) throws IOException {
            return (RandPetNameResponse) PARSER.parseFrom(input);
        }

        public static RandPetNameResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (RandPetNameResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static RandPetNameResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (RandPetNameResponse) PARSER.parseDelimitedFrom(input);
        }

        public static RandPetNameResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (RandPetNameResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static RandPetNameResponse parseFrom(CodedInputStream input) throws IOException {
            return (RandPetNameResponse) PARSER.parseFrom(input);
        }

        public static RandPetNameResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (RandPetNameResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(RandPetNameResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.RandPetNameResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_RandPetNameResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_RandPetNameResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.RandPetNameResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.RandPetNameResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_RandPetNameResponse_descriptor;
            }

            public PetHandler.RandPetNameResponse getDefaultInstanceForType() {
                return PetHandler.RandPetNameResponse.getDefaultInstance();
            }

            public PetHandler.RandPetNameResponse build() {
                PetHandler.RandPetNameResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.RandPetNameResponse buildPartial() {
                PetHandler.RandPetNameResponse result = new PetHandler.RandPetNameResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.RandPetNameResponse)
                    return mergeFrom((PetHandler.RandPetNameResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.RandPetNameResponse other) {
                if (other == PetHandler.RandPetNameResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.RandPetNameResponse parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.RandPetNameResponse) PetHandler.RandPetNameResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.RandPetNameResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = PetHandler.RandPetNameResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class UpGradeData
            extends GeneratedMessage
            implements UpGradeDataOrBuilder {
        private static final UpGradeData defaultInstance = new UpGradeData(true);
        private final UnknownFieldSet unknownFields;

        private UpGradeData(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private UpGradeData(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static UpGradeData getDefaultInstance() {
            return defaultInstance;
        }

        public UpGradeData getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private UpGradeData(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.level_ = input.readInt32();
                            break;
                        case 16:
                            this.bitField0_ |= 0x2;
                            this.upLevel_ = input.readInt32();
                            break;
                        case 24:
                            this.bitField0_ |= 0x4;
                            this.reqLevel_ = input.readInt32();
                            break;
                        case 32:
                            this.bitField0_ |= 0x8;
                            this.downLevel_ = input.readInt32();
                            break;
                        case 42:
                            if ((mutable_bitField0_ & 0x10) != 16) {
                                this.attrs_ = new ArrayList<>();
                                mutable_bitField0_ |= 0x10;
                            }
                            this.attrs_.add(input.readMessage(Common.AttributeBase.PARSER, extensionRegistry));
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                if ((mutable_bitField0_ & 0x10) == 16) this.attrs_ = Collections.unmodifiableList(this.attrs_);
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_UpGradeData_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_UpGradeData_fieldAccessorTable.ensureFieldAccessorsInitialized(UpGradeData.class, Builder.class);
        }

        public static Parser<UpGradeData> PARSER = (Parser<UpGradeData>) new AbstractParser<UpGradeData>() {
            public PetHandler.UpGradeData parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.UpGradeData(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int LEVEL_FIELD_NUMBER = 1;
        private int level_;
        public static final int UPLEVEL_FIELD_NUMBER = 2;
        private int upLevel_;
        public static final int REQLEVEL_FIELD_NUMBER = 3;
        private int reqLevel_;
        public static final int DOWNLEVEL_FIELD_NUMBER = 4;
        private int downLevel_;
        public static final int ATTRS_FIELD_NUMBER = 5;
        private List<Common.AttributeBase> attrs_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<UpGradeData> getParserForType() {
            return PARSER;
        }

        public boolean hasLevel() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getLevel() {
            return this.level_;
        }

        public boolean hasUpLevel() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public int getUpLevel() {
            return this.upLevel_;
        }

        static {
            defaultInstance.initFields();
        }

        public boolean hasReqLevel() {
            return ((this.bitField0_ & 0x4) == 4);
        }

        public int getReqLevel() {
            return this.reqLevel_;
        }

        public boolean hasDownLevel() {
            return ((this.bitField0_ & 0x8) == 8);
        }

        public int getDownLevel() {
            return this.downLevel_;
        }

        public List<Common.AttributeBase> getAttrsList() {
            return this.attrs_;
        }

        public List<? extends Common.AttributeBaseOrBuilder> getAttrsOrBuilderList() {
            return (List) this.attrs_;
        }

        public int getAttrsCount() {
            return this.attrs_.size();
        }

        public Common.AttributeBase getAttrs(int index) {
            return this.attrs_.get(index);
        }

        public Common.AttributeBaseOrBuilder getAttrsOrBuilder(int index) {
            return (Common.AttributeBaseOrBuilder) this.attrs_.get(index);
        }

        private void initFields() {
            this.level_ = 0;
            this.upLevel_ = 0;
            this.reqLevel_ = 0;
            this.downLevel_ = 0;
            this.attrs_ = Collections.emptyList();
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;
            if (!hasLevel()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasUpLevel()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasReqLevel()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasDownLevel()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            for (int i = 0; i < getAttrsCount(); i++) {
                if (!getAttrs(i).isInitialized()) {
                    this.memoizedIsInitialized = 0;
                    return false;
                }
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1)
                output.writeInt32(1, this.level_);
            if ((this.bitField0_ & 0x2) == 2)
                output.writeInt32(2, this.upLevel_);
            if ((this.bitField0_ & 0x4) == 4)
                output.writeInt32(3, this.reqLevel_);
            if ((this.bitField0_ & 0x8) == 8)
                output.writeInt32(4, this.downLevel_);
            for (int i = 0; i < this.attrs_.size(); i++)
                output.writeMessage(5, (MessageLite) this.attrs_.get(i));
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1)
                return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1)
                size += CodedOutputStream.computeInt32Size(1, this.level_);
            if ((this.bitField0_ & 0x2) == 2)
                size += CodedOutputStream.computeInt32Size(2, this.upLevel_);
            if ((this.bitField0_ & 0x4) == 4)
                size += CodedOutputStream.computeInt32Size(3, this.reqLevel_);
            if ((this.bitField0_ & 0x8) == 8)
                size += CodedOutputStream.computeInt32Size(4, this.downLevel_);
            for (int i = 0; i < this.attrs_.size(); i++)
                size += CodedOutputStream.computeMessageSize(5, (MessageLite) this.attrs_.get(i));
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static UpGradeData parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (UpGradeData) PARSER.parseFrom(data);
        }

        public static UpGradeData parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (UpGradeData) PARSER.parseFrom(data, extensionRegistry);
        }

        public static UpGradeData parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (UpGradeData) PARSER.parseFrom(data);
        }

        public static UpGradeData parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (UpGradeData) PARSER.parseFrom(data, extensionRegistry);
        }

        public static UpGradeData parseFrom(InputStream input) throws IOException {
            return (UpGradeData) PARSER.parseFrom(input);
        }

        public static UpGradeData parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UpGradeData) PARSER.parseFrom(input, extensionRegistry);
        }

        public static UpGradeData parseDelimitedFrom(InputStream input) throws IOException {
            return (UpGradeData) PARSER.parseDelimitedFrom(input);
        }

        public static UpGradeData parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UpGradeData) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static UpGradeData parseFrom(CodedInputStream input) throws IOException {
            return (UpGradeData) PARSER.parseFrom(input);
        }

        public static UpGradeData parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UpGradeData) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(UpGradeData prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.UpGradeDataOrBuilder {
            private int bitField0_;
            private int level_;
            private int upLevel_;
            private int reqLevel_;
            private int downLevel_;
            private List<Common.AttributeBase> attrs_;
            private RepeatedFieldBuilder<Common.AttributeBase, Common.AttributeBase.Builder, Common.AttributeBaseOrBuilder> attrsBuilder_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_UpGradeData_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_UpGradeData_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.UpGradeData.class, Builder.class);
            }

            private Builder() {
                this.attrs_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.attrs_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.UpGradeData.alwaysUseFieldBuilders)
                    getAttrsFieldBuilder();
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.level_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.upLevel_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                this.reqLevel_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.downLevel_ = 0;
                this.bitField0_ &= 0xFFFFFFF7;
                if (this.attrsBuilder_ == null) {
                    this.attrs_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFEF;
                } else {
                    this.attrsBuilder_.clear();
                }
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_UpGradeData_descriptor;
            }

            public PetHandler.UpGradeData getDefaultInstanceForType() {
                return PetHandler.UpGradeData.getDefaultInstance();
            }

            public PetHandler.UpGradeData build() {
                PetHandler.UpGradeData result = buildPartial();
                if (!result.isInitialized())
                    throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.UpGradeData buildPartial() {
                PetHandler.UpGradeData result = new PetHandler.UpGradeData(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1)
                    to_bitField0_ |= 0x1;
                result.level_ = this.level_;
                if ((from_bitField0_ & 0x2) == 2)
                    to_bitField0_ |= 0x2;
                result.upLevel_ = this.upLevel_;
                if ((from_bitField0_ & 0x4) == 4)
                    to_bitField0_ |= 0x4;
                result.reqLevel_ = this.reqLevel_;
                if ((from_bitField0_ & 0x8) == 8)
                    to_bitField0_ |= 0x8;
                result.downLevel_ = this.downLevel_;
                if (this.attrsBuilder_ == null) {
                    if ((this.bitField0_ & 0x10) == 16) {
                        this.attrs_ = Collections.unmodifiableList(this.attrs_);
                        this.bitField0_ &= 0xFFFFFFEF;
                    }
                    result.attrs_ = this.attrs_;
                } else {
                    result.attrs_ = this.attrsBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.UpGradeData)
                    return mergeFrom((PetHandler.UpGradeData) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.UpGradeData other) {
                if (other == PetHandler.UpGradeData.getDefaultInstance())
                    return this;
                if (other.hasLevel())
                    setLevel(other.getLevel());
                if (other.hasUpLevel())
                    setUpLevel(other.getUpLevel());
                if (other.hasReqLevel())
                    setReqLevel(other.getReqLevel());
                if (other.hasDownLevel())
                    setDownLevel(other.getDownLevel());
                if (this.attrsBuilder_ == null) {
                    if (!other.attrs_.isEmpty()) {
                        if (this.attrs_.isEmpty()) {
                            this.attrs_ = other.attrs_;
                            this.bitField0_ &= 0xFFFFFFEF;
                        } else {
                            ensureAttrsIsMutable();
                            this.attrs_.addAll(other.attrs_);
                        }
                        onChanged();
                    }
                } else if (!other.attrs_.isEmpty()) {
                    if (this.attrsBuilder_.isEmpty()) {
                        this.attrsBuilder_.dispose();
                        this.attrsBuilder_ = null;
                        this.attrs_ = other.attrs_;
                        this.bitField0_ &= 0xFFFFFFEF;
                        this.attrsBuilder_ = PetHandler.UpGradeData.alwaysUseFieldBuilders ? getAttrsFieldBuilder() : null;
                    } else {
                        this.attrsBuilder_.addAllMessages(other.attrs_);
                    }
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasLevel())
                    return false;
                if (!hasUpLevel())
                    return false;
                if (!hasReqLevel())
                    return false;
                if (!hasDownLevel())
                    return false;
                for (int i = 0; i < getAttrsCount(); i++) {
                    if (!getAttrs(i).isInitialized())
                        return false;
                }
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.UpGradeData parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.UpGradeData) PetHandler.UpGradeData.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.UpGradeData) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null)
                        mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasLevel() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getLevel() {
                return this.level_;
            }

            public Builder setLevel(int value) {
                this.bitField0_ |= 0x1;
                this.level_ = value;
                onChanged();
                return this;
            }

            public Builder clearLevel() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.level_ = 0;
                onChanged();
                return this;
            }

            public boolean hasUpLevel() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public int getUpLevel() {
                return this.upLevel_;
            }

            public Builder setUpLevel(int value) {
                this.bitField0_ |= 0x2;
                this.upLevel_ = value;
                onChanged();
                return this;
            }

            public Builder clearUpLevel() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.upLevel_ = 0;
                onChanged();
                return this;
            }

            public boolean hasReqLevel() {
                return ((this.bitField0_ & 0x4) == 4);
            }

            public int getReqLevel() {
                return this.reqLevel_;
            }

            public Builder setReqLevel(int value) {
                this.bitField0_ |= 0x4;
                this.reqLevel_ = value;
                onChanged();
                return this;
            }

            public Builder clearReqLevel() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.reqLevel_ = 0;
                onChanged();
                return this;
            }

            public boolean hasDownLevel() {
                return ((this.bitField0_ & 0x8) == 8);
            }

            public int getDownLevel() {
                return this.downLevel_;
            }

            public Builder setDownLevel(int value) {
                this.bitField0_ |= 0x8;
                this.downLevel_ = value;
                onChanged();
                return this;
            }

            public Builder clearDownLevel() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.downLevel_ = 0;
                onChanged();
                return this;
            }

            private void ensureAttrsIsMutable() {
                if ((this.bitField0_ & 0x10) != 16) {
                    this.attrs_ = new ArrayList<>(this.attrs_);
                    this.bitField0_ |= 0x10;
                }
            }

            public List<Common.AttributeBase> getAttrsList() {
                if (this.attrsBuilder_ == null)
                    return Collections.unmodifiableList(this.attrs_);
                return this.attrsBuilder_.getMessageList();
            }

            public int getAttrsCount() {
                if (this.attrsBuilder_ == null)
                    return this.attrs_.size();
                return this.attrsBuilder_.getCount();
            }

            public Common.AttributeBase getAttrs(int index) {
                if (this.attrsBuilder_ == null)
                    return this.attrs_.get(index);
                return (Common.AttributeBase) this.attrsBuilder_.getMessage(index);
            }

            public Builder setAttrs(int index, Common.AttributeBase value) {
                if (this.attrsBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureAttrsIsMutable();
                    this.attrs_.set(index, value);
                    onChanged();
                } else {
                    this.attrsBuilder_.setMessage(index, (GeneratedMessage) value);
                }
                return this;
            }

            public Builder setAttrs(int index, Common.AttributeBase.Builder builderForValue) {
                if (this.attrsBuilder_ == null) {
                    ensureAttrsIsMutable();
                    this.attrs_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    this.attrsBuilder_.setMessage(index, (GeneratedMessage) builderForValue.build());
                }
                return this;
            }

            public Builder addAttrs(Common.AttributeBase value) {
                if (this.attrsBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureAttrsIsMutable();
                    this.attrs_.add(value);
                    onChanged();
                } else {
                    this.attrsBuilder_.addMessage((GeneratedMessage) value);
                }
                return this;
            }

            public Builder addAttrs(int index, Common.AttributeBase value) {
                if (this.attrsBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureAttrsIsMutable();
                    this.attrs_.add(index, value);
                    onChanged();
                } else {
                    this.attrsBuilder_.addMessage(index, (GeneratedMessage) value);
                }
                return this;
            }

            public Builder addAttrs(Common.AttributeBase.Builder builderForValue) {
                if (this.attrsBuilder_ == null) {
                    ensureAttrsIsMutable();
                    this.attrs_.add(builderForValue.build());
                    onChanged();
                } else {
                    this.attrsBuilder_.addMessage((GeneratedMessage) builderForValue.build());
                }
                return this;
            }

            public Builder addAttrs(int index, Common.AttributeBase.Builder builderForValue) {
                if (this.attrsBuilder_ == null) {
                    ensureAttrsIsMutable();
                    this.attrs_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    this.attrsBuilder_.addMessage(index, (GeneratedMessage) builderForValue.build());
                }
                return this;
            }

            public Builder addAllAttrs(Iterable<? extends Common.AttributeBase> values) {
                if (this.attrsBuilder_ == null) {
                    ensureAttrsIsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.attrs_);
                    onChanged();
                } else {
                    this.attrsBuilder_.addAllMessages(values);
                }
                return this;
            }

            public Builder clearAttrs() {
                if (this.attrsBuilder_ == null) {
                    this.attrs_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFEF;
                    onChanged();
                } else {
                    this.attrsBuilder_.clear();
                }
                return this;
            }

            public Builder removeAttrs(int index) {
                if (this.attrsBuilder_ == null) {
                    ensureAttrsIsMutable();
                    this.attrs_.remove(index);
                    onChanged();
                } else {
                    this.attrsBuilder_.remove(index);
                }
                return this;
            }

            public Common.AttributeBase.Builder getAttrsBuilder(int index) {
                return (Common.AttributeBase.Builder) getAttrsFieldBuilder().getBuilder(index);
            }

            public Common.AttributeBaseOrBuilder getAttrsOrBuilder(int index) {
                if (this.attrsBuilder_ == null)
                    return (Common.AttributeBaseOrBuilder) this.attrs_.get(index);
                return (Common.AttributeBaseOrBuilder) this.attrsBuilder_.getMessageOrBuilder(index);
            }

            public List<? extends Common.AttributeBaseOrBuilder> getAttrsOrBuilderList() {
                if (this.attrsBuilder_ != null)
                    return this.attrsBuilder_.getMessageOrBuilderList();
                return (List) Collections.unmodifiableList(this.attrs_);
            }

            public Common.AttributeBase.Builder addAttrsBuilder() {
                return (Common.AttributeBase.Builder) getAttrsFieldBuilder().addBuilder((GeneratedMessage) Common.AttributeBase.getDefaultInstance());
            }

            public Common.AttributeBase.Builder addAttrsBuilder(int index) {
                return (Common.AttributeBase.Builder) getAttrsFieldBuilder().addBuilder(index, (GeneratedMessage) Common.AttributeBase.getDefaultInstance());
            }

            public List<Common.AttributeBase.Builder> getAttrsBuilderList() {
                return getAttrsFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilder<Common.AttributeBase, Common.AttributeBase.Builder, Common.AttributeBaseOrBuilder> getAttrsFieldBuilder() {
                if (this.attrsBuilder_ == null) {
                    this.attrsBuilder_ = new RepeatedFieldBuilder(this.attrs_, ((this.bitField0_ & 0x10) == 16), getParentForChildren(), isClean());
                    this.attrs_ = null;
                }
                return this.attrsBuilder_;
            }
        }
    }

    public static final class UpGradeInfoRequest extends GeneratedMessage implements UpGradeInfoRequestOrBuilder {
        private static final UpGradeInfoRequest defaultInstance = new UpGradeInfoRequest(true);
        private final UnknownFieldSet unknownFields;

        private UpGradeInfoRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private UpGradeInfoRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static UpGradeInfoRequest getDefaultInstance() {
            return defaultInstance;
        }

        public UpGradeInfoRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private UpGradeInfoRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.s2CPetId_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_UpGradeInfoRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_UpGradeInfoRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(UpGradeInfoRequest.class, Builder.class);
        }

        public static Parser<UpGradeInfoRequest> PARSER = (Parser<UpGradeInfoRequest>) new AbstractParser<UpGradeInfoRequest>() {
            public PetHandler.UpGradeInfoRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.UpGradeInfoRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_PETID_FIELD_NUMBER = 1;
        private Object s2CPetId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<UpGradeInfoRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CPetId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getS2CPetId() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CPetId_ = s;
            return s;
        }

        public ByteString getS2CPetIdBytes() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CPetId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CPetId_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CPetId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeBytes(1, getS2CPetIdBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeBytesSize(1, getS2CPetIdBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static UpGradeInfoRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (UpGradeInfoRequest) PARSER.parseFrom(data);
        }

        public static UpGradeInfoRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (UpGradeInfoRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static UpGradeInfoRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (UpGradeInfoRequest) PARSER.parseFrom(data);
        }

        public static UpGradeInfoRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (UpGradeInfoRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static UpGradeInfoRequest parseFrom(InputStream input) throws IOException {
            return (UpGradeInfoRequest) PARSER.parseFrom(input);
        }

        public static UpGradeInfoRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UpGradeInfoRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static UpGradeInfoRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (UpGradeInfoRequest) PARSER.parseDelimitedFrom(input);
        }

        public static UpGradeInfoRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UpGradeInfoRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static UpGradeInfoRequest parseFrom(CodedInputStream input) throws IOException {
            return (UpGradeInfoRequest) PARSER.parseFrom(input);
        }

        public static UpGradeInfoRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UpGradeInfoRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(UpGradeInfoRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.UpGradeInfoRequestOrBuilder {
            private int bitField0_;
            private Object s2CPetId_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_UpGradeInfoRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_UpGradeInfoRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.UpGradeInfoRequest.class, Builder.class);
            }

            private Builder() {
                this.s2CPetId_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CPetId_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.UpGradeInfoRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CPetId_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_UpGradeInfoRequest_descriptor;
            }

            public PetHandler.UpGradeInfoRequest getDefaultInstanceForType() {
                return PetHandler.UpGradeInfoRequest.getDefaultInstance();
            }

            public PetHandler.UpGradeInfoRequest build() {
                PetHandler.UpGradeInfoRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.UpGradeInfoRequest buildPartial() {
                PetHandler.UpGradeInfoRequest result = new PetHandler.UpGradeInfoRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CPetId_ = this.s2CPetId_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.UpGradeInfoRequest)
                    return mergeFrom((PetHandler.UpGradeInfoRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.UpGradeInfoRequest other) {
                if (other == PetHandler.UpGradeInfoRequest.getDefaultInstance()) return this;
                if (other.hasS2CPetId()) {
                    this.bitField0_ |= 0x1;
                    this.s2CPetId_ = other.s2CPetId_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CPetId()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.UpGradeInfoRequest parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.UpGradeInfoRequest) PetHandler.UpGradeInfoRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.UpGradeInfoRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CPetId() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getS2CPetId() {
                Object ref = this.s2CPetId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CPetId_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CPetIdBytes() {
                Object ref = this.s2CPetId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CPetId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CPetId(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CPetId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CPetId_ = PetHandler.UpGradeInfoRequest.getDefaultInstance().getS2CPetId();
                onChanged();
                return this;
            }

            public Builder setS2CPetIdBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }
    }


    public static final class UpGradeInfoResponse
            extends GeneratedMessage
            implements UpGradeInfoResponseOrBuilder {
        private static final UpGradeInfoResponse defaultInstance = new UpGradeInfoResponse(true);
        private final UnknownFieldSet unknownFields;

        private UpGradeInfoResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private UpGradeInfoResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static UpGradeInfoResponse getDefaultInstance() {
            return defaultInstance;
        }

        public UpGradeInfoResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private UpGradeInfoResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    PetHandler.UpGradeData.Builder subBuilder;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 26:
                            subBuilder = null;
                            if ((this.bitField0_ & 0x4) == 4) subBuilder = this.s2CUpGradeData_.toBuilder();
                            this.s2CUpGradeData_ = (PetHandler.UpGradeData) input.readMessage(PetHandler.UpGradeData.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.s2CUpGradeData_);
                                this.s2CUpGradeData_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x4;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_UpGradeInfoResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_UpGradeInfoResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(UpGradeInfoResponse.class, Builder.class);
        }

        public static Parser<UpGradeInfoResponse> PARSER = (Parser<UpGradeInfoResponse>) new AbstractParser<UpGradeInfoResponse>() {
            public PetHandler.UpGradeInfoResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.UpGradeInfoResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int S2C_UPGRADEDATA_FIELD_NUMBER = 3;
        private PetHandler.UpGradeData s2CUpGradeData_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<UpGradeInfoResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        static {
            defaultInstance.initFields();
        }


        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }


        public boolean hasS2CUpGradeData() {
            return ((this.bitField0_ & 0x4) == 4);
        }


        public PetHandler.UpGradeData getS2CUpGradeData() {
            return this.s2CUpGradeData_;
        }


        public PetHandler.UpGradeDataOrBuilder getS2CUpGradeDataOrBuilder() {
            return this.s2CUpGradeData_;
        }


        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.s2CUpGradeData_ = PetHandler.UpGradeData.getDefaultInstance();
        }


        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
                return true;
            }
            if (isInitialized == 0) {
                return false;
            }
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (hasS2CUpGradeData() && !getS2CUpGradeData().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }


        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) {
                output.writeInt32(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                output.writeBytes(2, getS2CMsgBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                output.writeMessage(3, (MessageLite) this.s2CUpGradeData_);
            }
            getUnknownFields().writeTo(output);
        }


        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) {
                size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                size += CodedOutputStream.computeMessageSize(3, (MessageLite) this.s2CUpGradeData_);
            }
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }


        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }


        public static UpGradeInfoResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (UpGradeInfoResponse) PARSER.parseFrom(data);
        }


        public static UpGradeInfoResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (UpGradeInfoResponse) PARSER.parseFrom(data, extensionRegistry);
        }


        public static UpGradeInfoResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (UpGradeInfoResponse) PARSER.parseFrom(data);
        }


        public static UpGradeInfoResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (UpGradeInfoResponse) PARSER.parseFrom(data, extensionRegistry);
        }


        public static UpGradeInfoResponse parseFrom(InputStream input) throws IOException {
            return (UpGradeInfoResponse) PARSER.parseFrom(input);
        }


        public static UpGradeInfoResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UpGradeInfoResponse) PARSER.parseFrom(input, extensionRegistry);
        }


        public static UpGradeInfoResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (UpGradeInfoResponse) PARSER.parseDelimitedFrom(input);
        }


        public static UpGradeInfoResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UpGradeInfoResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }


        public static UpGradeInfoResponse parseFrom(CodedInputStream input) throws IOException {
            return (UpGradeInfoResponse) PARSER.parseFrom(input);
        }


        public static UpGradeInfoResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UpGradeInfoResponse) PARSER.parseFrom(input, extensionRegistry);
        }


        public static Builder newBuilder() {
            return Builder.create();
        }


        public Builder newBuilderForType() {
            return newBuilder();
        }


        public static Builder newBuilder(UpGradeInfoResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }


        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder
                extends GeneratedMessage.Builder<Builder>
                implements PetHandler.UpGradeInfoResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;
            private PetHandler.UpGradeData s2CUpGradeData_;
            private SingleFieldBuilder<PetHandler.UpGradeData, PetHandler.UpGradeData.Builder, PetHandler.UpGradeDataOrBuilder> s2CUpGradeDataBuilder_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_UpGradeInfoResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_UpGradeInfoResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.UpGradeInfoResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                this.s2CUpGradeData_ = PetHandler.UpGradeData.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                this.s2CUpGradeData_ = PetHandler.UpGradeData.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.UpGradeInfoResponse.alwaysUseFieldBuilders) {
                    getS2CUpGradeDataFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                if (this.s2CUpGradeDataBuilder_ == null) {
                    this.s2CUpGradeData_ = PetHandler.UpGradeData.getDefaultInstance();
                } else {
                    this.s2CUpGradeDataBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_UpGradeInfoResponse_descriptor;
            }

            public PetHandler.UpGradeInfoResponse getDefaultInstanceForType() {
                return PetHandler.UpGradeInfoResponse.getDefaultInstance();
            }

            public PetHandler.UpGradeInfoResponse build() {
                PetHandler.UpGradeInfoResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public PetHandler.UpGradeInfoResponse buildPartial() {
                PetHandler.UpGradeInfoResponse result = new PetHandler.UpGradeInfoResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) {
                    to_bitField0_ |= 0x1;
                }
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) {
                    to_bitField0_ |= 0x2;
                }
                result.s2CMsg_ = this.s2CMsg_;
                if ((from_bitField0_ & 0x4) == 4) {
                    to_bitField0_ |= 0x4;
                }
                if (this.s2CUpGradeDataBuilder_ == null) {
                    result.s2CUpGradeData_ = this.s2CUpGradeData_;
                } else {
                    result.s2CUpGradeData_ = (PetHandler.UpGradeData) this.s2CUpGradeDataBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.UpGradeInfoResponse) {
                    return mergeFrom((PetHandler.UpGradeInfoResponse) other);
                }
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.UpGradeInfoResponse other) {
                if (other == PetHandler.UpGradeInfoResponse.getDefaultInstance()) {
                    return this;
                }
                if (other.hasS2CCode()) {
                    setS2CCode(other.getS2CCode());
                }
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (other.hasS2CUpGradeData()) {
                    mergeS2CUpGradeData(other.getS2CUpGradeData());
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) {
                    return false;
                }
                if (hasS2CUpGradeData() && !getS2CUpGradeData().isInitialized()) {
                    return false;
                }
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.UpGradeInfoResponse parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.UpGradeInfoResponse) PetHandler.UpGradeInfoResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.UpGradeInfoResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.s2CMsg_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = PetHandler.UpGradeInfoResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public boolean hasS2CUpGradeData() {
                return ((this.bitField0_ & 0x4) == 4);
            }

            public PetHandler.UpGradeData getS2CUpGradeData() {
                if (this.s2CUpGradeDataBuilder_ == null) {
                    return this.s2CUpGradeData_;
                }
                return (PetHandler.UpGradeData) this.s2CUpGradeDataBuilder_.getMessage();
            }

            public Builder setS2CUpGradeData(PetHandler.UpGradeData value) {
                if (this.s2CUpGradeDataBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.s2CUpGradeData_ = value;
                    onChanged();
                } else {
                    this.s2CUpGradeDataBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }

            public Builder setS2CUpGradeData(PetHandler.UpGradeData.Builder builderForValue) {
                if (this.s2CUpGradeDataBuilder_ == null) {
                    this.s2CUpGradeData_ = builderForValue.build();
                    onChanged();
                } else {
                    this.s2CUpGradeDataBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x4;
                return this;
            }

            public Builder mergeS2CUpGradeData(PetHandler.UpGradeData value) {
                if (this.s2CUpGradeDataBuilder_ == null) {
                    if ((this.bitField0_ & 0x4) == 4 && this.s2CUpGradeData_ != PetHandler.UpGradeData.getDefaultInstance()) {
                        this.s2CUpGradeData_ = PetHandler.UpGradeData.newBuilder(this.s2CUpGradeData_).mergeFrom(value).buildPartial();
                    } else {
                        this.s2CUpGradeData_ = value;
                    }
                    onChanged();
                } else {
                    this.s2CUpGradeDataBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }

            public Builder clearS2CUpGradeData() {
                if (this.s2CUpGradeDataBuilder_ == null) {
                    this.s2CUpGradeData_ = PetHandler.UpGradeData.getDefaultInstance();
                    onChanged();
                } else {
                    this.s2CUpGradeDataBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }

            public PetHandler.UpGradeData.Builder getS2CUpGradeDataBuilder() {
                this.bitField0_ |= 0x4;
                onChanged();
                return (PetHandler.UpGradeData.Builder) getS2CUpGradeDataFieldBuilder().getBuilder();
            }

            public PetHandler.UpGradeDataOrBuilder getS2CUpGradeDataOrBuilder() {
                if (this.s2CUpGradeDataBuilder_ != null) {
                    return (PetHandler.UpGradeDataOrBuilder) this.s2CUpGradeDataBuilder_.getMessageOrBuilder();
                }
                return this.s2CUpGradeData_;
            }

            private SingleFieldBuilder<PetHandler.UpGradeData, PetHandler.UpGradeData.Builder, PetHandler.UpGradeDataOrBuilder> getS2CUpGradeDataFieldBuilder() {
                if (this.s2CUpGradeDataBuilder_ == null) {
                    this.s2CUpGradeDataBuilder_ = new SingleFieldBuilder(getS2CUpGradeData(), getParentForChildren(), isClean());
                    this.s2CUpGradeData_ = null;
                }
                return this.s2CUpGradeDataBuilder_;
            }
        }
    }

    public static final class UpGradeLevelRequest
            extends GeneratedMessage
            implements UpGradeLevelRequestOrBuilder {
        private static final UpGradeLevelRequest defaultInstance = new UpGradeLevelRequest(true);
        private final UnknownFieldSet unknownFields;

        private UpGradeLevelRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private UpGradeLevelRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static UpGradeLevelRequest getDefaultInstance() {
            return defaultInstance;
        }

        public UpGradeLevelRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private UpGradeLevelRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.s2CPetId_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_UpGradeLevelRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_UpGradeLevelRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(UpGradeLevelRequest.class, Builder.class);
        }

        public static Parser<UpGradeLevelRequest> PARSER = (Parser<UpGradeLevelRequest>) new AbstractParser<UpGradeLevelRequest>() {
            public PetHandler.UpGradeLevelRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.UpGradeLevelRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_PETID_FIELD_NUMBER = 1;
        private Object s2CPetId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<UpGradeLevelRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CPetId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getS2CPetId() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CPetId_ = s;
            return s;
        }

        public ByteString getS2CPetIdBytes() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CPetId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CPetId_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CPetId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeBytes(1, getS2CPetIdBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeBytesSize(1, getS2CPetIdBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static UpGradeLevelRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (UpGradeLevelRequest) PARSER.parseFrom(data);
        }

        public static UpGradeLevelRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (UpGradeLevelRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static UpGradeLevelRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (UpGradeLevelRequest) PARSER.parseFrom(data);
        }

        public static UpGradeLevelRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (UpGradeLevelRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static UpGradeLevelRequest parseFrom(InputStream input) throws IOException {
            return (UpGradeLevelRequest) PARSER.parseFrom(input);
        }

        public static UpGradeLevelRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UpGradeLevelRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static UpGradeLevelRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (UpGradeLevelRequest) PARSER.parseDelimitedFrom(input);
        }

        public static UpGradeLevelRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UpGradeLevelRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static UpGradeLevelRequest parseFrom(CodedInputStream input) throws IOException {
            return (UpGradeLevelRequest) PARSER.parseFrom(input);
        }

        public static UpGradeLevelRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UpGradeLevelRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(UpGradeLevelRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.UpGradeLevelRequestOrBuilder {
            private int bitField0_;
            private Object s2CPetId_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_UpGradeLevelRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_UpGradeLevelRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.UpGradeLevelRequest.class, Builder.class);
            }

            private Builder() {
                this.s2CPetId_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CPetId_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.UpGradeLevelRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CPetId_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_UpGradeLevelRequest_descriptor;
            }

            public PetHandler.UpGradeLevelRequest getDefaultInstanceForType() {
                return PetHandler.UpGradeLevelRequest.getDefaultInstance();
            }

            public PetHandler.UpGradeLevelRequest build() {
                PetHandler.UpGradeLevelRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.UpGradeLevelRequest buildPartial() {
                PetHandler.UpGradeLevelRequest result = new PetHandler.UpGradeLevelRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CPetId_ = this.s2CPetId_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.UpGradeLevelRequest)
                    return mergeFrom((PetHandler.UpGradeLevelRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.UpGradeLevelRequest other) {
                if (other == PetHandler.UpGradeLevelRequest.getDefaultInstance()) return this;
                if (other.hasS2CPetId()) {
                    this.bitField0_ |= 0x1;
                    this.s2CPetId_ = other.s2CPetId_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CPetId()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.UpGradeLevelRequest parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.UpGradeLevelRequest) PetHandler.UpGradeLevelRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.UpGradeLevelRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CPetId() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getS2CPetId() {
                Object ref = this.s2CPetId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CPetId_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CPetIdBytes() {
                Object ref = this.s2CPetId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CPetId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CPetId(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CPetId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CPetId_ = PetHandler.UpGradeLevelRequest.getDefaultInstance().getS2CPetId();
                onChanged();
                return this;
            }

            public Builder setS2CPetIdBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class UpGradeLevelResponse
            extends GeneratedMessage
            implements UpGradeLevelResponseOrBuilder {
        private static final UpGradeLevelResponse defaultInstance = new UpGradeLevelResponse(true);
        private final UnknownFieldSet unknownFields;

        private UpGradeLevelResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private UpGradeLevelResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static UpGradeLevelResponse getDefaultInstance() {
            return defaultInstance;
        }

        public UpGradeLevelResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private UpGradeLevelResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 24:
                            this.bitField0_ |= 0x4;
                            this.s2CCanUpGrade_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_UpGradeLevelResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_UpGradeLevelResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(UpGradeLevelResponse.class, Builder.class);
        }

        public static Parser<UpGradeLevelResponse> PARSER = (Parser<UpGradeLevelResponse>) new AbstractParser<UpGradeLevelResponse>() {
            public PetHandler.UpGradeLevelResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.UpGradeLevelResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int S2C_CANUPGRADE_FIELD_NUMBER = 3;
        private int s2CCanUpGrade_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<UpGradeLevelResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasS2CCanUpGrade() {
            return ((this.bitField0_ & 0x4) == 4);
        }

        public int getS2CCanUpGrade() {
            return this.s2CCanUpGrade_;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.s2CCanUpGrade_ = 0;
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            if ((this.bitField0_ & 0x4) == 4) output.writeInt32(3, this.s2CCanUpGrade_);
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            if ((this.bitField0_ & 0x4) == 4) size += CodedOutputStream.computeInt32Size(3, this.s2CCanUpGrade_);
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static UpGradeLevelResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (UpGradeLevelResponse) PARSER.parseFrom(data);
        }

        public static UpGradeLevelResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (UpGradeLevelResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static UpGradeLevelResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (UpGradeLevelResponse) PARSER.parseFrom(data);
        }

        public static UpGradeLevelResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (UpGradeLevelResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static UpGradeLevelResponse parseFrom(InputStream input) throws IOException {
            return (UpGradeLevelResponse) PARSER.parseFrom(input);
        }

        public static UpGradeLevelResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UpGradeLevelResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static UpGradeLevelResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (UpGradeLevelResponse) PARSER.parseDelimitedFrom(input);
        }

        public static UpGradeLevelResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UpGradeLevelResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static UpGradeLevelResponse parseFrom(CodedInputStream input) throws IOException {
            return (UpGradeLevelResponse) PARSER.parseFrom(input);
        }

        public static UpGradeLevelResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UpGradeLevelResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(UpGradeLevelResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.UpGradeLevelResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;
            private int s2CCanUpGrade_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_UpGradeLevelResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_UpGradeLevelResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.UpGradeLevelResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.UpGradeLevelResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CCanUpGrade_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_UpGradeLevelResponse_descriptor;
            }

            public PetHandler.UpGradeLevelResponse getDefaultInstanceForType() {
                return PetHandler.UpGradeLevelResponse.getDefaultInstance();
            }

            public PetHandler.UpGradeLevelResponse build() {
                PetHandler.UpGradeLevelResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.UpGradeLevelResponse buildPartial() {
                PetHandler.UpGradeLevelResponse result = new PetHandler.UpGradeLevelResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                if ((from_bitField0_ & 0x4) == 4) to_bitField0_ |= 0x4;
                result.s2CCanUpGrade_ = this.s2CCanUpGrade_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.UpGradeLevelResponse)
                    return mergeFrom((PetHandler.UpGradeLevelResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.UpGradeLevelResponse other) {
                if (other == PetHandler.UpGradeLevelResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (other.hasS2CCanUpGrade()) setS2CCanUpGrade(other.getS2CCanUpGrade());
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.UpGradeLevelResponse parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.UpGradeLevelResponse) PetHandler.UpGradeLevelResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.UpGradeLevelResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = PetHandler.UpGradeLevelResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public boolean hasS2CCanUpGrade() {
                return ((this.bitField0_ & 0x4) == 4);
            }

            public int getS2CCanUpGrade() {
                return this.s2CCanUpGrade_;
            }

            public Builder setS2CCanUpGrade(int value) {
                this.bitField0_ |= 0x4;
                this.s2CCanUpGrade_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCanUpGrade() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.s2CCanUpGrade_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class ItemInfo
            extends GeneratedMessage
            implements ItemInfoOrBuilder {
        private static final ItemInfo defaultInstance = new ItemInfo(true);
        private final UnknownFieldSet unknownFields;

        private ItemInfo(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private ItemInfo(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static ItemInfo getDefaultInstance() {
            return defaultInstance;
        }

        public ItemInfo getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ItemInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.code_ = bs;
                            break;
                        case 16:
                            this.bitField0_ |= 0x2;
                            this.num_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_ItemInfo_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_ItemInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(ItemInfo.class, Builder.class);
        }

        public static Parser<ItemInfo> PARSER = (Parser<ItemInfo>) new AbstractParser<ItemInfo>() {
            public PetHandler.ItemInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.ItemInfo(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int CODE_FIELD_NUMBER = 1;
        private Object code_;
        public static final int NUM_FIELD_NUMBER = 2;
        private int num_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<ItemInfo> getParserForType() {
            return PARSER;
        }

        public boolean hasCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getCode() {
            Object ref = this.code_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.code_ = s;
            return s;
        }

        public ByteString getCodeBytes() {
            Object ref = this.code_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.code_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasNum() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public int getNum() {
            return this.num_;
        }

        private void initFields() {
            this.code_ = "";
            this.num_ = 0;
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasNum()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeBytes(1, getCodeBytes());
            if ((this.bitField0_ & 0x2) == 2) output.writeInt32(2, this.num_);
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeBytesSize(1, getCodeBytes());
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeInt32Size(2, this.num_);
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static ItemInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (ItemInfo) PARSER.parseFrom(data);
        }

        public static ItemInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ItemInfo) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ItemInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (ItemInfo) PARSER.parseFrom(data);
        }

        public static ItemInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ItemInfo) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ItemInfo parseFrom(InputStream input) throws IOException {
            return (ItemInfo) PARSER.parseFrom(input);
        }

        public static ItemInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ItemInfo) PARSER.parseFrom(input, extensionRegistry);
        }

        public static ItemInfo parseDelimitedFrom(InputStream input) throws IOException {
            return (ItemInfo) PARSER.parseDelimitedFrom(input);
        }

        public static ItemInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ItemInfo) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static ItemInfo parseFrom(CodedInputStream input) throws IOException {
            return (ItemInfo) PARSER.parseFrom(input);
        }

        public static ItemInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ItemInfo) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ItemInfo prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.ItemInfoOrBuilder {
            private int bitField0_;
            private Object code_;
            private int num_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_ItemInfo_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_ItemInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.ItemInfo.class, Builder.class);
            }

            private Builder() {
                this.code_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.code_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.ItemInfo.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.code_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.num_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_ItemInfo_descriptor;
            }

            public PetHandler.ItemInfo getDefaultInstanceForType() {
                return PetHandler.ItemInfo.getDefaultInstance();
            }

            public PetHandler.ItemInfo build() {
                PetHandler.ItemInfo result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.ItemInfo buildPartial() {
                PetHandler.ItemInfo result = new PetHandler.ItemInfo(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.code_ = this.code_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.num_ = this.num_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.ItemInfo) return mergeFrom((PetHandler.ItemInfo) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.ItemInfo other) {
                if (other == PetHandler.ItemInfo.getDefaultInstance()) return this;
                if (other.hasCode()) {
                    this.bitField0_ |= 0x1;
                    this.code_ = other.code_;
                    onChanged();
                }
                if (other.hasNum()) setNum(other.getNum());
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasCode()) return false;
                if (!hasNum()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.ItemInfo parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.ItemInfo) PetHandler.ItemInfo.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.ItemInfo) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getCode() {
                Object ref = this.code_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.code_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getCodeBytes() {
                Object ref = this.code_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.code_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setCode(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.code_ = value;
                onChanged();
                return this;
            }

            public Builder clearCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.code_ = PetHandler.ItemInfo.getDefaultInstance().getCode();
                onChanged();
                return this;
            }

            public Builder setCodeBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.code_ = value;
                onChanged();
                return this;
            }

            public boolean hasNum() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public int getNum() {
                return this.num_;
            }

            public Builder setNum(int value) {
                this.bitField0_ |= 0x2;
                this.num_ = value;
                onChanged();
                return this;
            }

            public Builder clearNum() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.num_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class UpGradeRandPropertyRequest
            extends GeneratedMessage
            implements UpGradeRandPropertyRequestOrBuilder {
        private static final UpGradeRandPropertyRequest defaultInstance = new UpGradeRandPropertyRequest(true);
        private final UnknownFieldSet unknownFields;

        private UpGradeRandPropertyRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private UpGradeRandPropertyRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static UpGradeRandPropertyRequest getDefaultInstance() {
            return defaultInstance;
        }

        public UpGradeRandPropertyRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private UpGradeRandPropertyRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.s2CPetId_ = bs;
                            break;
                        case 16:
                            this.bitField0_ |= 0x2;
                            this.s2CPos_ = input.readInt32();
                            break;
                        case 26:
                            if ((mutable_bitField0_ & 0x4) != 4) {
                                this.s2CMaterialItems_ = new ArrayList<>();
                                mutable_bitField0_ |= 0x4;
                            }
                            this.s2CMaterialItems_.add(input.readMessage(PetHandler.ItemInfo.PARSER, extensionRegistry));
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                if ((mutable_bitField0_ & 0x4) == 4)
                    this.s2CMaterialItems_ = Collections.unmodifiableList(this.s2CMaterialItems_);
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_UpGradeRandPropertyRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_UpGradeRandPropertyRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(UpGradeRandPropertyRequest.class, Builder.class);
        }

        public static Parser<UpGradeRandPropertyRequest> PARSER = (Parser<UpGradeRandPropertyRequest>) new AbstractParser<UpGradeRandPropertyRequest>() {
            public PetHandler.UpGradeRandPropertyRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.UpGradeRandPropertyRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_PETID_FIELD_NUMBER = 1;
        private Object s2CPetId_;
        public static final int S2C_POS_FIELD_NUMBER = 2;
        private int s2CPos_;
        public static final int S2C_MATERIALITEMS_FIELD_NUMBER = 3;
        private List<PetHandler.ItemInfo> s2CMaterialItems_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<UpGradeRandPropertyRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CPetId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getS2CPetId() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CPetId_ = s;
            return s;
        }

        public ByteString getS2CPetIdBytes() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CPetId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasS2CPos() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public int getS2CPos() {
            return this.s2CPos_;
        }

        static {
            defaultInstance.initFields();
        }


        public List<PetHandler.ItemInfo> getS2CMaterialItemsList() {
            return this.s2CMaterialItems_;
        }

        public List<? extends PetHandler.ItemInfoOrBuilder> getS2CMaterialItemsOrBuilderList() {
            return (List) this.s2CMaterialItems_;
        }

        public int getS2CMaterialItemsCount() {
            return this.s2CMaterialItems_.size();
        }

        public PetHandler.ItemInfo getS2CMaterialItems(int index) {
            return this.s2CMaterialItems_.get(index);
        }

        public PetHandler.ItemInfoOrBuilder getS2CMaterialItemsOrBuilder(int index) {
            return this.s2CMaterialItems_.get(index);
        }

        private void initFields() {
            this.s2CPetId_ = "";
            this.s2CPos_ = 0;
            this.s2CMaterialItems_ = Collections.emptyList();
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
                return true;
            }
            if (isInitialized == 0) {
                return false;
            }
            if (!hasS2CPetId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasS2CPos()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            for (int i = 0; i < getS2CMaterialItemsCount(); i++) {
                if (!getS2CMaterialItems(i).isInitialized()) {
                    this.memoizedIsInitialized = 0;
                    return false;
                }
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) {
                output.writeBytes(1, getS2CPetIdBytes());
            }
            if ((this.bitField0_ & 0x2) == 2) {
                output.writeInt32(2, this.s2CPos_);
            }
            for (int i = 0; i < this.s2CMaterialItems_.size(); i++)
                output.writeMessage(3, (MessageLite) this.s2CMaterialItems_.get(i));
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1)
                return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1)
                size += CodedOutputStream.computeBytesSize(1, getS2CPetIdBytes());
            if ((this.bitField0_ & 0x2) == 2)
                size += CodedOutputStream.computeInt32Size(2, this.s2CPos_);
            for (int i = 0; i < this.s2CMaterialItems_.size(); i++)
                size += CodedOutputStream.computeMessageSize(3, (MessageLite) this.s2CMaterialItems_.get(i));
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static UpGradeRandPropertyRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (UpGradeRandPropertyRequest) PARSER.parseFrom(data);
        }

        public static UpGradeRandPropertyRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (UpGradeRandPropertyRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static UpGradeRandPropertyRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (UpGradeRandPropertyRequest) PARSER.parseFrom(data);
        }

        public static UpGradeRandPropertyRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (UpGradeRandPropertyRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static UpGradeRandPropertyRequest parseFrom(InputStream input) throws IOException {
            return (UpGradeRandPropertyRequest) PARSER.parseFrom(input);
        }

        public static UpGradeRandPropertyRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UpGradeRandPropertyRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static UpGradeRandPropertyRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (UpGradeRandPropertyRequest) PARSER.parseDelimitedFrom(input);
        }

        public static UpGradeRandPropertyRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UpGradeRandPropertyRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static UpGradeRandPropertyRequest parseFrom(CodedInputStream input) throws IOException {
            return (UpGradeRandPropertyRequest) PARSER.parseFrom(input);
        }

        public static UpGradeRandPropertyRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UpGradeRandPropertyRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(UpGradeRandPropertyRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder
                extends GeneratedMessage.Builder<Builder>
                implements PetHandler.UpGradeRandPropertyRequestOrBuilder {
            private int bitField0_;
            private Object s2CPetId_;
            private int s2CPos_;
            private List<PetHandler.ItemInfo> s2CMaterialItems_;
            private RepeatedFieldBuilder<PetHandler.ItemInfo, PetHandler.ItemInfo.Builder, PetHandler.ItemInfoOrBuilder> s2CMaterialItemsBuilder_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_UpGradeRandPropertyRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_UpGradeRandPropertyRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.UpGradeRandPropertyRequest.class, Builder.class);
            }

            private Builder() {
                this.s2CPetId_ = "";
                this.s2CMaterialItems_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CPetId_ = "";
                this.s2CMaterialItems_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.UpGradeRandPropertyRequest.alwaysUseFieldBuilders)
                    getS2CMaterialItemsFieldBuilder();
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CPetId_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CPos_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                if (this.s2CMaterialItemsBuilder_ == null) {
                    this.s2CMaterialItems_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFB;
                } else {
                    this.s2CMaterialItemsBuilder_.clear();
                }
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_UpGradeRandPropertyRequest_descriptor;
            }

            public PetHandler.UpGradeRandPropertyRequest getDefaultInstanceForType() {
                return PetHandler.UpGradeRandPropertyRequest.getDefaultInstance();
            }

            public PetHandler.UpGradeRandPropertyRequest build() {
                PetHandler.UpGradeRandPropertyRequest result = buildPartial();
                if (!result.isInitialized())
                    throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.UpGradeRandPropertyRequest buildPartial() {
                PetHandler.UpGradeRandPropertyRequest result = new PetHandler.UpGradeRandPropertyRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1)
                    to_bitField0_ |= 0x1;
                result.s2CPetId_ = this.s2CPetId_;
                if ((from_bitField0_ & 0x2) == 2)
                    to_bitField0_ |= 0x2;
                result.s2CPos_ = this.s2CPos_;
                if (this.s2CMaterialItemsBuilder_ == null) {
                    if ((this.bitField0_ & 0x4) == 4) {
                        this.s2CMaterialItems_ = Collections.unmodifiableList(this.s2CMaterialItems_);
                        this.bitField0_ &= 0xFFFFFFFB;
                    }
                    result.s2CMaterialItems_ = this.s2CMaterialItems_;
                } else {
                    result.s2CMaterialItems_ = this.s2CMaterialItemsBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.UpGradeRandPropertyRequest)
                    return mergeFrom((PetHandler.UpGradeRandPropertyRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.UpGradeRandPropertyRequest other) {
                if (other == PetHandler.UpGradeRandPropertyRequest.getDefaultInstance())
                    return this;
                if (other.hasS2CPetId()) {
                    this.bitField0_ |= 0x1;
                    this.s2CPetId_ = other.s2CPetId_;
                    onChanged();
                }
                if (other.hasS2CPos())
                    setS2CPos(other.getS2CPos());
                if (this.s2CMaterialItemsBuilder_ == null) {
                    if (!other.s2CMaterialItems_.isEmpty()) {
                        if (this.s2CMaterialItems_.isEmpty()) {
                            this.s2CMaterialItems_ = other.s2CMaterialItems_;
                            this.bitField0_ &= 0xFFFFFFFB;
                        } else {
                            ensureS2CMaterialItemsIsMutable();
                            this.s2CMaterialItems_.addAll(other.s2CMaterialItems_);
                        }
                        onChanged();
                    }
                } else if (!other.s2CMaterialItems_.isEmpty()) {
                    if (this.s2CMaterialItemsBuilder_.isEmpty()) {
                        this.s2CMaterialItemsBuilder_.dispose();
                        this.s2CMaterialItemsBuilder_ = null;
                        this.s2CMaterialItems_ = other.s2CMaterialItems_;
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.s2CMaterialItemsBuilder_ = PetHandler.UpGradeRandPropertyRequest.alwaysUseFieldBuilders ? getS2CMaterialItemsFieldBuilder() : null;
                    } else {
                        this.s2CMaterialItemsBuilder_.addAllMessages(other.s2CMaterialItems_);
                    }
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CPetId())
                    return false;
                if (!hasS2CPos())
                    return false;
                for (int i = 0; i < getS2CMaterialItemsCount(); i++) {
                    if (!getS2CMaterialItems(i).isInitialized())
                        return false;
                }
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.UpGradeRandPropertyRequest parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.UpGradeRandPropertyRequest) PetHandler.UpGradeRandPropertyRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.UpGradeRandPropertyRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null)
                        mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CPetId() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getS2CPetId() {
                Object ref = this.s2CPetId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8())
                        this.s2CPetId_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CPetIdBytes() {
                Object ref = this.s2CPetId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CPetId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CPetId(String value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CPetId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CPetId_ = PetHandler.UpGradeRandPropertyRequest.getDefaultInstance().getS2CPetId();
                onChanged();
                return this;
            }

            public Builder setS2CPetIdBytes(ByteString value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }

            public boolean hasS2CPos() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public int getS2CPos() {
                return this.s2CPos_;
            }

            public Builder setS2CPos(int value) {
                this.bitField0_ |= 0x2;
                this.s2CPos_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CPos() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CPos_ = 0;
                onChanged();
                return this;
            }

            private void ensureS2CMaterialItemsIsMutable() {
                if ((this.bitField0_ & 0x4) != 4) {
                    this.s2CMaterialItems_ = new ArrayList<>(this.s2CMaterialItems_);
                    this.bitField0_ |= 0x4;
                }
            }

            public List<PetHandler.ItemInfo> getS2CMaterialItemsList() {
                if (this.s2CMaterialItemsBuilder_ == null)
                    return Collections.unmodifiableList(this.s2CMaterialItems_);
                return this.s2CMaterialItemsBuilder_.getMessageList();
            }

            public int getS2CMaterialItemsCount() {
                if (this.s2CMaterialItemsBuilder_ == null)
                    return this.s2CMaterialItems_.size();
                return this.s2CMaterialItemsBuilder_.getCount();
            }

            public PetHandler.ItemInfo getS2CMaterialItems(int index) {
                if (this.s2CMaterialItemsBuilder_ == null)
                    return this.s2CMaterialItems_.get(index);
                return (PetHandler.ItemInfo) this.s2CMaterialItemsBuilder_.getMessage(index);
            }

            public Builder setS2CMaterialItems(int index, PetHandler.ItemInfo value) {
                if (this.s2CMaterialItemsBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureS2CMaterialItemsIsMutable();
                    this.s2CMaterialItems_.set(index, value);
                    onChanged();
                } else {
                    this.s2CMaterialItemsBuilder_.setMessage(index, value);
                }
                return this;
            }

            public Builder setS2CMaterialItems(int index, PetHandler.ItemInfo.Builder builderForValue) {
                if (this.s2CMaterialItemsBuilder_ == null) {
                    ensureS2CMaterialItemsIsMutable();
                    this.s2CMaterialItems_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    this.s2CMaterialItemsBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            public Builder addS2CMaterialItems(PetHandler.ItemInfo value) {
                if (this.s2CMaterialItemsBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureS2CMaterialItemsIsMutable();
                    this.s2CMaterialItems_.add(value);
                    onChanged();
                } else {
                    this.s2CMaterialItemsBuilder_.addMessage(value);
                }
                return this;
            }

            public Builder addS2CMaterialItems(int index, PetHandler.ItemInfo value) {
                if (this.s2CMaterialItemsBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureS2CMaterialItemsIsMutable();
                    this.s2CMaterialItems_.add(index, value);
                    onChanged();
                } else {
                    this.s2CMaterialItemsBuilder_.addMessage(index, value);
                }
                return this;
            }

            public Builder addS2CMaterialItems(PetHandler.ItemInfo.Builder builderForValue) {
                if (this.s2CMaterialItemsBuilder_ == null) {
                    ensureS2CMaterialItemsIsMutable();
                    this.s2CMaterialItems_.add(builderForValue.build());
                    onChanged();
                } else {
                    this.s2CMaterialItemsBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            public Builder addS2CMaterialItems(int index, PetHandler.ItemInfo.Builder builderForValue) {
                if (this.s2CMaterialItemsBuilder_ == null) {
                    ensureS2CMaterialItemsIsMutable();
                    this.s2CMaterialItems_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    this.s2CMaterialItemsBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            public Builder addAllS2CMaterialItems(Iterable<? extends PetHandler.ItemInfo> values) {
                if (this.s2CMaterialItemsBuilder_ == null) {
                    ensureS2CMaterialItemsIsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.s2CMaterialItems_);
                    onChanged();
                } else {
                    this.s2CMaterialItemsBuilder_.addAllMessages(values);
                }
                return this;
            }

            public Builder clearS2CMaterialItems() {
                if (this.s2CMaterialItemsBuilder_ == null) {
                    this.s2CMaterialItems_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFB;
                    onChanged();
                } else {
                    this.s2CMaterialItemsBuilder_.clear();
                }
                return this;
            }

            public Builder removeS2CMaterialItems(int index) {
                if (this.s2CMaterialItemsBuilder_ == null) {
                    ensureS2CMaterialItemsIsMutable();
                    this.s2CMaterialItems_.remove(index);
                    onChanged();
                } else {
                    this.s2CMaterialItemsBuilder_.remove(index);
                }
                return this;
            }

            public PetHandler.ItemInfo.Builder getS2CMaterialItemsBuilder(int index) {
                return (PetHandler.ItemInfo.Builder) getS2CMaterialItemsFieldBuilder().getBuilder(index);
            }

            public PetHandler.ItemInfoOrBuilder getS2CMaterialItemsOrBuilder(int index) {
                if (this.s2CMaterialItemsBuilder_ == null)
                    return this.s2CMaterialItems_.get(index);
                return (PetHandler.ItemInfoOrBuilder) this.s2CMaterialItemsBuilder_.getMessageOrBuilder(index);
            }

            public List<? extends PetHandler.ItemInfoOrBuilder> getS2CMaterialItemsOrBuilderList() {
                if (this.s2CMaterialItemsBuilder_ != null)
                    return this.s2CMaterialItemsBuilder_.getMessageOrBuilderList();
                return Collections.unmodifiableList((List) this.s2CMaterialItems_);
            }

            public PetHandler.ItemInfo.Builder addS2CMaterialItemsBuilder() {
                return (PetHandler.ItemInfo.Builder) getS2CMaterialItemsFieldBuilder().addBuilder(PetHandler.ItemInfo.getDefaultInstance());
            }

            public PetHandler.ItemInfo.Builder addS2CMaterialItemsBuilder(int index) {
                return (PetHandler.ItemInfo.Builder) getS2CMaterialItemsFieldBuilder().addBuilder(index, PetHandler.ItemInfo.getDefaultInstance());
            }

            public List<PetHandler.ItemInfo.Builder> getS2CMaterialItemsBuilderList() {
                return getS2CMaterialItemsFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilder<PetHandler.ItemInfo, PetHandler.ItemInfo.Builder, PetHandler.ItemInfoOrBuilder> getS2CMaterialItemsFieldBuilder() {
                if (this.s2CMaterialItemsBuilder_ == null) {
                    this.s2CMaterialItemsBuilder_ = new RepeatedFieldBuilder(this.s2CMaterialItems_, ((this.bitField0_ & 0x4) == 4), getParentForChildren(), isClean());
                    this.s2CMaterialItems_ = null;
                }
                return this.s2CMaterialItemsBuilder_;
            }
        }
    }

    public static final class UpGradeRandPropertyResponse
            extends GeneratedMessage
            implements UpGradeRandPropertyResponseOrBuilder {
        private static final UpGradeRandPropertyResponse defaultInstance = new UpGradeRandPropertyResponse(true);
        private final UnknownFieldSet unknownFields;

        private UpGradeRandPropertyResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private UpGradeRandPropertyResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static UpGradeRandPropertyResponse getDefaultInstance() {
            return defaultInstance;
        }

        public UpGradeRandPropertyResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private UpGradeRandPropertyResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_UpGradeRandPropertyResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_UpGradeRandPropertyResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(UpGradeRandPropertyResponse.class, Builder.class);
        }

        public static Parser<UpGradeRandPropertyResponse> PARSER = (Parser<UpGradeRandPropertyResponse>) new AbstractParser<UpGradeRandPropertyResponse>() {
            public PetHandler.UpGradeRandPropertyResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.UpGradeRandPropertyResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<UpGradeRandPropertyResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static UpGradeRandPropertyResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (UpGradeRandPropertyResponse) PARSER.parseFrom(data);
        }

        public static UpGradeRandPropertyResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (UpGradeRandPropertyResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static UpGradeRandPropertyResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (UpGradeRandPropertyResponse) PARSER.parseFrom(data);
        }

        public static UpGradeRandPropertyResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (UpGradeRandPropertyResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static UpGradeRandPropertyResponse parseFrom(InputStream input) throws IOException {
            return (UpGradeRandPropertyResponse) PARSER.parseFrom(input);
        }

        public static UpGradeRandPropertyResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UpGradeRandPropertyResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static UpGradeRandPropertyResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (UpGradeRandPropertyResponse) PARSER.parseDelimitedFrom(input);
        }

        public static UpGradeRandPropertyResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UpGradeRandPropertyResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static UpGradeRandPropertyResponse parseFrom(CodedInputStream input) throws IOException {
            return (UpGradeRandPropertyResponse) PARSER.parseFrom(input);
        }

        public static UpGradeRandPropertyResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UpGradeRandPropertyResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(UpGradeRandPropertyResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.UpGradeRandPropertyResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_UpGradeRandPropertyResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_UpGradeRandPropertyResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.UpGradeRandPropertyResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.UpGradeRandPropertyResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_UpGradeRandPropertyResponse_descriptor;
            }

            public PetHandler.UpGradeRandPropertyResponse getDefaultInstanceForType() {
                return PetHandler.UpGradeRandPropertyResponse.getDefaultInstance();
            }

            public PetHandler.UpGradeRandPropertyResponse build() {
                PetHandler.UpGradeRandPropertyResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.UpGradeRandPropertyResponse buildPartial() {
                PetHandler.UpGradeRandPropertyResponse result = new PetHandler.UpGradeRandPropertyResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.UpGradeRandPropertyResponse)
                    return mergeFrom((PetHandler.UpGradeRandPropertyResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.UpGradeRandPropertyResponse other) {
                if (other == PetHandler.UpGradeRandPropertyResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.UpGradeRandPropertyResponse parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.UpGradeRandPropertyResponse) PetHandler.UpGradeRandPropertyResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.UpGradeRandPropertyResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = PetHandler.UpGradeRandPropertyResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class ReSetRandPropertyRequest
            extends GeneratedMessage
            implements ReSetRandPropertyRequestOrBuilder {
        private static final ReSetRandPropertyRequest defaultInstance = new ReSetRandPropertyRequest(true);
        private final UnknownFieldSet unknownFields;

        private ReSetRandPropertyRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private ReSetRandPropertyRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static ReSetRandPropertyRequest getDefaultInstance() {
            return defaultInstance;
        }

        public ReSetRandPropertyRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ReSetRandPropertyRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.s2CPetId_ = bs;
                            break;
                        case 16:
                            this.bitField0_ |= 0x2;
                            this.s2CPos_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_ReSetRandPropertyRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_ReSetRandPropertyRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(ReSetRandPropertyRequest.class, Builder.class);
        }

        public static Parser<ReSetRandPropertyRequest> PARSER = (Parser<ReSetRandPropertyRequest>) new AbstractParser<ReSetRandPropertyRequest>() {
            public PetHandler.ReSetRandPropertyRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.ReSetRandPropertyRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_PETID_FIELD_NUMBER = 1;
        private Object s2CPetId_;
        public static final int S2C_POS_FIELD_NUMBER = 2;
        private int s2CPos_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<ReSetRandPropertyRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CPetId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getS2CPetId() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CPetId_ = s;
            return s;
        }

        public ByteString getS2CPetIdBytes() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CPetId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasS2CPos() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public int getS2CPos() {
            return this.s2CPos_;
        }

        private void initFields() {
            this.s2CPetId_ = "";
            this.s2CPos_ = 0;
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CPetId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasS2CPos()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeBytes(1, getS2CPetIdBytes());
            if ((this.bitField0_ & 0x2) == 2) output.writeInt32(2, this.s2CPos_);
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeBytesSize(1, getS2CPetIdBytes());
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeInt32Size(2, this.s2CPos_);
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static ReSetRandPropertyRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (ReSetRandPropertyRequest) PARSER.parseFrom(data);
        }

        public static ReSetRandPropertyRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ReSetRandPropertyRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ReSetRandPropertyRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (ReSetRandPropertyRequest) PARSER.parseFrom(data);
        }

        public static ReSetRandPropertyRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ReSetRandPropertyRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ReSetRandPropertyRequest parseFrom(InputStream input) throws IOException {
            return (ReSetRandPropertyRequest) PARSER.parseFrom(input);
        }

        public static ReSetRandPropertyRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ReSetRandPropertyRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static ReSetRandPropertyRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (ReSetRandPropertyRequest) PARSER.parseDelimitedFrom(input);
        }

        public static ReSetRandPropertyRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ReSetRandPropertyRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static ReSetRandPropertyRequest parseFrom(CodedInputStream input) throws IOException {
            return (ReSetRandPropertyRequest) PARSER.parseFrom(input);
        }

        public static ReSetRandPropertyRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ReSetRandPropertyRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ReSetRandPropertyRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.ReSetRandPropertyRequestOrBuilder {
            private int bitField0_;
            private Object s2CPetId_;
            private int s2CPos_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_ReSetRandPropertyRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_ReSetRandPropertyRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.ReSetRandPropertyRequest.class, Builder.class);
            }

            private Builder() {
                this.s2CPetId_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CPetId_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.ReSetRandPropertyRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CPetId_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CPos_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_ReSetRandPropertyRequest_descriptor;
            }

            public PetHandler.ReSetRandPropertyRequest getDefaultInstanceForType() {
                return PetHandler.ReSetRandPropertyRequest.getDefaultInstance();
            }

            public PetHandler.ReSetRandPropertyRequest build() {
                PetHandler.ReSetRandPropertyRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.ReSetRandPropertyRequest buildPartial() {
                PetHandler.ReSetRandPropertyRequest result = new PetHandler.ReSetRandPropertyRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CPetId_ = this.s2CPetId_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CPos_ = this.s2CPos_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.ReSetRandPropertyRequest)
                    return mergeFrom((PetHandler.ReSetRandPropertyRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.ReSetRandPropertyRequest other) {
                if (other == PetHandler.ReSetRandPropertyRequest.getDefaultInstance()) return this;
                if (other.hasS2CPetId()) {
                    this.bitField0_ |= 0x1;
                    this.s2CPetId_ = other.s2CPetId_;
                    onChanged();
                }
                if (other.hasS2CPos()) setS2CPos(other.getS2CPos());
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CPetId()) return false;
                if (!hasS2CPos()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.ReSetRandPropertyRequest parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.ReSetRandPropertyRequest) PetHandler.ReSetRandPropertyRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.ReSetRandPropertyRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CPetId() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getS2CPetId() {
                Object ref = this.s2CPetId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CPetId_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CPetIdBytes() {
                Object ref = this.s2CPetId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CPetId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CPetId(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CPetId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CPetId_ = PetHandler.ReSetRandPropertyRequest.getDefaultInstance().getS2CPetId();
                onChanged();
                return this;
            }

            public Builder setS2CPetIdBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }

            public boolean hasS2CPos() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public int getS2CPos() {
                return this.s2CPos_;
            }

            public Builder setS2CPos(int value) {
                this.bitField0_ |= 0x2;
                this.s2CPos_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CPos() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CPos_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class ReSetRandPropertyResponse
            extends GeneratedMessage
            implements ReSetRandPropertyResponseOrBuilder {
        private static final ReSetRandPropertyResponse defaultInstance = new ReSetRandPropertyResponse(true);
        private final UnknownFieldSet unknownFields;

        private ReSetRandPropertyResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private ReSetRandPropertyResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static ReSetRandPropertyResponse getDefaultInstance() {
            return defaultInstance;
        }

        public ReSetRandPropertyResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ReSetRandPropertyResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_ReSetRandPropertyResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_ReSetRandPropertyResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(ReSetRandPropertyResponse.class, Builder.class);
        }

        public static Parser<ReSetRandPropertyResponse> PARSER = (Parser<ReSetRandPropertyResponse>) new AbstractParser<ReSetRandPropertyResponse>() {
            public PetHandler.ReSetRandPropertyResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.ReSetRandPropertyResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<ReSetRandPropertyResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static ReSetRandPropertyResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (ReSetRandPropertyResponse) PARSER.parseFrom(data);
        }

        public static ReSetRandPropertyResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ReSetRandPropertyResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ReSetRandPropertyResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (ReSetRandPropertyResponse) PARSER.parseFrom(data);
        }

        public static ReSetRandPropertyResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ReSetRandPropertyResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ReSetRandPropertyResponse parseFrom(InputStream input) throws IOException {
            return (ReSetRandPropertyResponse) PARSER.parseFrom(input);
        }

        public static ReSetRandPropertyResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ReSetRandPropertyResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static ReSetRandPropertyResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (ReSetRandPropertyResponse) PARSER.parseDelimitedFrom(input);
        }

        public static ReSetRandPropertyResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ReSetRandPropertyResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static ReSetRandPropertyResponse parseFrom(CodedInputStream input) throws IOException {
            return (ReSetRandPropertyResponse) PARSER.parseFrom(input);
        }

        public static ReSetRandPropertyResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ReSetRandPropertyResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ReSetRandPropertyResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.ReSetRandPropertyResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_ReSetRandPropertyResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_ReSetRandPropertyResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.ReSetRandPropertyResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.ReSetRandPropertyResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_ReSetRandPropertyResponse_descriptor;
            }

            public PetHandler.ReSetRandPropertyResponse getDefaultInstanceForType() {
                return PetHandler.ReSetRandPropertyResponse.getDefaultInstance();
            }

            public PetHandler.ReSetRandPropertyResponse build() {
                PetHandler.ReSetRandPropertyResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.ReSetRandPropertyResponse buildPartial() {
                PetHandler.ReSetRandPropertyResponse result = new PetHandler.ReSetRandPropertyResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.ReSetRandPropertyResponse)
                    return mergeFrom((PetHandler.ReSetRandPropertyResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.ReSetRandPropertyResponse other) {
                if (other == PetHandler.ReSetRandPropertyResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.ReSetRandPropertyResponse parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.ReSetRandPropertyResponse) PetHandler.ReSetRandPropertyResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.ReSetRandPropertyResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = PetHandler.ReSetRandPropertyResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class RandPropertyListRequest
            extends GeneratedMessage
            implements RandPropertyListRequestOrBuilder {
        private static final RandPropertyListRequest defaultInstance = new RandPropertyListRequest(true);
        private final UnknownFieldSet unknownFields;

        private RandPropertyListRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private RandPropertyListRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static RandPropertyListRequest getDefaultInstance() {
            return defaultInstance;
        }

        public RandPropertyListRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private RandPropertyListRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.s2CPetId_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_RandPropertyListRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_RandPropertyListRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(RandPropertyListRequest.class, Builder.class);
        }

        public static Parser<RandPropertyListRequest> PARSER = (Parser<RandPropertyListRequest>) new AbstractParser<RandPropertyListRequest>() {
            public PetHandler.RandPropertyListRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.RandPropertyListRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_PETID_FIELD_NUMBER = 1;
        private Object s2CPetId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<RandPropertyListRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CPetId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getS2CPetId() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CPetId_ = s;
            return s;
        }

        public ByteString getS2CPetIdBytes() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CPetId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CPetId_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CPetId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeBytes(1, getS2CPetIdBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeBytesSize(1, getS2CPetIdBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static RandPropertyListRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (RandPropertyListRequest) PARSER.parseFrom(data);
        }

        public static RandPropertyListRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (RandPropertyListRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static RandPropertyListRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (RandPropertyListRequest) PARSER.parseFrom(data);
        }

        public static RandPropertyListRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (RandPropertyListRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static RandPropertyListRequest parseFrom(InputStream input) throws IOException {
            return (RandPropertyListRequest) PARSER.parseFrom(input);
        }

        public static RandPropertyListRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (RandPropertyListRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static RandPropertyListRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (RandPropertyListRequest) PARSER.parseDelimitedFrom(input);
        }

        public static RandPropertyListRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (RandPropertyListRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static RandPropertyListRequest parseFrom(CodedInputStream input) throws IOException {
            return (RandPropertyListRequest) PARSER.parseFrom(input);
        }

        public static RandPropertyListRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (RandPropertyListRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(RandPropertyListRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.RandPropertyListRequestOrBuilder {
            private int bitField0_;
            private Object s2CPetId_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_RandPropertyListRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_RandPropertyListRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.RandPropertyListRequest.class, Builder.class);
            }

            private Builder() {
                this.s2CPetId_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CPetId_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.RandPropertyListRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CPetId_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_RandPropertyListRequest_descriptor;
            }

            public PetHandler.RandPropertyListRequest getDefaultInstanceForType() {
                return PetHandler.RandPropertyListRequest.getDefaultInstance();
            }

            public PetHandler.RandPropertyListRequest build() {
                PetHandler.RandPropertyListRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.RandPropertyListRequest buildPartial() {
                PetHandler.RandPropertyListRequest result = new PetHandler.RandPropertyListRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CPetId_ = this.s2CPetId_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.RandPropertyListRequest)
                    return mergeFrom((PetHandler.RandPropertyListRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.RandPropertyListRequest other) {
                if (other == PetHandler.RandPropertyListRequest.getDefaultInstance()) return this;
                if (other.hasS2CPetId()) {
                    this.bitField0_ |= 0x1;
                    this.s2CPetId_ = other.s2CPetId_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CPetId()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.RandPropertyListRequest parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.RandPropertyListRequest) PetHandler.RandPropertyListRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.RandPropertyListRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CPetId() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getS2CPetId() {
                Object ref = this.s2CPetId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CPetId_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CPetIdBytes() {
                Object ref = this.s2CPetId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CPetId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CPetId(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CPetId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CPetId_ = PetHandler.RandPropertyListRequest.getDefaultInstance().getS2CPetId();
                onChanged();
                return this;
            }

            public Builder setS2CPetIdBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class PropertyData
            extends GeneratedMessage
            implements PropertyDataOrBuilder {
        private final UnknownFieldSet unknownFields;


        private PropertyData(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }


        private PropertyData(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }


        public static PropertyData getDefaultInstance() {
            return defaultInstance;
        }


        public PropertyData getDefaultInstanceForType() {
            return defaultInstance;
        }


        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }


        private PropertyData(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.pos_ = input.readInt32();
                            break;
                        case 16:
                            this.bitField0_ |= 0x2;
                            this.id_ = input.readInt32();
                            break;
                        case 24:
                            this.bitField0_ |= 0x4;
                            this.level_ = input.readInt32();
                            break;
                        case 32:
                            this.bitField0_ |= 0x8;
                            this.exp_ = input.readInt32();
                            break;
                        case 42:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x10;
                            this.propertyKey_ = bs;
                            break;
                        case 48:
                            this.bitField0_ |= 0x20;
                            this.propertyValue_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }


        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_PropertyData_descriptor;
        }


        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_PropertyData_fieldAccessorTable.ensureFieldAccessorsInitialized(PropertyData.class, Builder.class);
        }


        public static Parser<PropertyData> PARSER = (Parser<PropertyData>) new AbstractParser<PropertyData>() {
            public PetHandler.PropertyData parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.PropertyData(input, extensionRegistry);
            }
        };


        private int bitField0_;


        public static final int POS_FIELD_NUMBER = 1;


        private int pos_;


        public static final int ID_FIELD_NUMBER = 2;


        private int id_;


        public static final int LEVEL_FIELD_NUMBER = 3;


        private int level_;


        public static final int EXP_FIELD_NUMBER = 4;


        private int exp_;


        public static final int PROPERTYKEY_FIELD_NUMBER = 5;


        private Object propertyKey_;


        public static final int PROPERTYVALUE_FIELD_NUMBER = 6;


        private int propertyValue_;


        private byte memoizedIsInitialized;


        private int memoizedSerializedSize;


        private static final long serialVersionUID = 0L;


        public Parser<PropertyData> getParserForType() {
            return PARSER;
        }


        public boolean hasPos() {
            return ((this.bitField0_ & 0x1) == 1);
        }


        public int getPos() {
            return this.pos_;
        }


        public boolean hasId() {
            return ((this.bitField0_ & 0x2) == 2);
        }


        public int getId() {
            return this.id_;
        }


        private static final PropertyData defaultInstance = new PropertyData(true);

        public boolean hasLevel() {
            return ((this.bitField0_ & 0x4) == 4);
        }

        public int getLevel() {
            return this.level_;
        }

        public boolean hasExp() {
            return ((this.bitField0_ & 0x8) == 8);
        }

        public int getExp() {
            return this.exp_;
        }

        public boolean hasPropertyKey() {
            return ((this.bitField0_ & 0x10) == 16);
        }

        public String getPropertyKey() {
            Object ref = this.propertyKey_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.propertyKey_ = s;
            return s;
        }

        public ByteString getPropertyKeyBytes() {
            Object ref = this.propertyKey_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.propertyKey_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasPropertyValue() {
            return ((this.bitField0_ & 0x20) == 32);
        }

        public int getPropertyValue() {
            return this.propertyValue_;
        }

        private void initFields() {
            this.pos_ = 0;
            this.id_ = 0;
            this.level_ = 0;
            this.exp_ = 0;
            this.propertyKey_ = "";
            this.propertyValue_ = 0;
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasPos()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasLevel()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasExp()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasPropertyKey()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasPropertyValue()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.pos_);
            if ((this.bitField0_ & 0x2) == 2) output.writeInt32(2, this.id_);
            if ((this.bitField0_ & 0x4) == 4) output.writeInt32(3, this.level_);
            if ((this.bitField0_ & 0x8) == 8) output.writeInt32(4, this.exp_);
            if ((this.bitField0_ & 0x10) == 16) output.writeBytes(5, getPropertyKeyBytes());
            if ((this.bitField0_ & 0x20) == 32) output.writeInt32(6, this.propertyValue_);
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.pos_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeInt32Size(2, this.id_);
            if ((this.bitField0_ & 0x4) == 4) size += CodedOutputStream.computeInt32Size(3, this.level_);
            if ((this.bitField0_ & 0x8) == 8) size += CodedOutputStream.computeInt32Size(4, this.exp_);
            if ((this.bitField0_ & 0x10) == 16) size += CodedOutputStream.computeBytesSize(5, getPropertyKeyBytes());
            if ((this.bitField0_ & 0x20) == 32) size += CodedOutputStream.computeInt32Size(6, this.propertyValue_);
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static PropertyData parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (PropertyData) PARSER.parseFrom(data);
        }

        public static PropertyData parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PropertyData) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PropertyData parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (PropertyData) PARSER.parseFrom(data);
        }

        public static PropertyData parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PropertyData) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PropertyData parseFrom(InputStream input) throws IOException {
            return (PropertyData) PARSER.parseFrom(input);
        }

        public static PropertyData parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PropertyData) PARSER.parseFrom(input, extensionRegistry);
        }

        public static PropertyData parseDelimitedFrom(InputStream input) throws IOException {
            return (PropertyData) PARSER.parseDelimitedFrom(input);
        }

        public static PropertyData parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PropertyData) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static PropertyData parseFrom(CodedInputStream input) throws IOException {
            return (PropertyData) PARSER.parseFrom(input);
        }

        public static PropertyData parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PropertyData) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(PropertyData prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.PropertyDataOrBuilder {
            private int bitField0_;
            private int pos_;
            private int id_;
            private int level_;
            private int exp_;
            private Object propertyKey_;
            private int propertyValue_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_PropertyData_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_PropertyData_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.PropertyData.class, Builder.class);
            }

            private Builder() {
                this.propertyKey_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.propertyKey_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.PropertyData.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.pos_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.id_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                this.level_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.exp_ = 0;
                this.bitField0_ &= 0xFFFFFFF7;
                this.propertyKey_ = "";
                this.bitField0_ &= 0xFFFFFFEF;
                this.propertyValue_ = 0;
                this.bitField0_ &= 0xFFFFFFDF;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_PropertyData_descriptor;
            }

            public PetHandler.PropertyData getDefaultInstanceForType() {
                return PetHandler.PropertyData.getDefaultInstance();
            }

            public PetHandler.PropertyData build() {
                PetHandler.PropertyData result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.PropertyData buildPartial() {
                PetHandler.PropertyData result = new PetHandler.PropertyData(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.pos_ = this.pos_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.id_ = this.id_;
                if ((from_bitField0_ & 0x4) == 4) to_bitField0_ |= 0x4;
                result.level_ = this.level_;
                if ((from_bitField0_ & 0x8) == 8) to_bitField0_ |= 0x8;
                result.exp_ = this.exp_;
                if ((from_bitField0_ & 0x10) == 16) to_bitField0_ |= 0x10;
                result.propertyKey_ = this.propertyKey_;
                if ((from_bitField0_ & 0x20) == 32) to_bitField0_ |= 0x20;
                result.propertyValue_ = this.propertyValue_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.PropertyData) return mergeFrom((PetHandler.PropertyData) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.PropertyData other) {
                if (other == PetHandler.PropertyData.getDefaultInstance()) return this;
                if (other.hasPos()) setPos(other.getPos());
                if (other.hasId()) setId(other.getId());
                if (other.hasLevel()) setLevel(other.getLevel());
                if (other.hasExp()) setExp(other.getExp());
                if (other.hasPropertyKey()) {
                    this.bitField0_ |= 0x10;
                    this.propertyKey_ = other.propertyKey_;
                    onChanged();
                }
                if (other.hasPropertyValue()) setPropertyValue(other.getPropertyValue());
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasPos()) return false;
                if (!hasId()) return false;
                if (!hasLevel()) return false;
                if (!hasExp()) return false;
                if (!hasPropertyKey()) return false;
                if (!hasPropertyValue()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.PropertyData parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.PropertyData) PetHandler.PropertyData.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.PropertyData) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasPos() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getPos() {
                return this.pos_;
            }

            public Builder setPos(int value) {
                this.bitField0_ |= 0x1;
                this.pos_ = value;
                onChanged();
                return this;
            }

            public Builder clearPos() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.pos_ = 0;
                onChanged();
                return this;
            }

            public boolean hasId() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public int getId() {
                return this.id_;
            }

            public Builder setId(int value) {
                this.bitField0_ |= 0x2;
                this.id_ = value;
                onChanged();
                return this;
            }

            public Builder clearId() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.id_ = 0;
                onChanged();
                return this;
            }

            public boolean hasLevel() {
                return ((this.bitField0_ & 0x4) == 4);
            }

            public int getLevel() {
                return this.level_;
            }

            public Builder setLevel(int value) {
                this.bitField0_ |= 0x4;
                this.level_ = value;
                onChanged();
                return this;
            }

            public Builder clearLevel() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.level_ = 0;
                onChanged();
                return this;
            }

            public boolean hasExp() {
                return ((this.bitField0_ & 0x8) == 8);
            }

            public int getExp() {
                return this.exp_;
            }

            public Builder setExp(int value) {
                this.bitField0_ |= 0x8;
                this.exp_ = value;
                onChanged();
                return this;
            }

            public Builder clearExp() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.exp_ = 0;
                onChanged();
                return this;
            }

            public boolean hasPropertyKey() {
                return ((this.bitField0_ & 0x10) == 16);
            }

            public String getPropertyKey() {
                Object ref = this.propertyKey_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.propertyKey_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getPropertyKeyBytes() {
                Object ref = this.propertyKey_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.propertyKey_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setPropertyKey(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x10;
                this.propertyKey_ = value;
                onChanged();
                return this;
            }

            public Builder clearPropertyKey() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.propertyKey_ = PetHandler.PropertyData.getDefaultInstance().getPropertyKey();
                onChanged();
                return this;
            }

            public Builder setPropertyKeyBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x10;
                this.propertyKey_ = value;
                onChanged();
                return this;
            }

            public boolean hasPropertyValue() {
                return ((this.bitField0_ & 0x20) == 32);
            }

            public int getPropertyValue() {
                return this.propertyValue_;
            }

            public Builder setPropertyValue(int value) {
                this.bitField0_ |= 0x20;
                this.propertyValue_ = value;
                onChanged();
                return this;
            }

            public Builder clearPropertyValue() {
                this.bitField0_ &= 0xFFFFFFDF;
                this.propertyValue_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class RandPropertyListResponse
            extends GeneratedMessage
            implements RandPropertyListResponseOrBuilder {
        private static final RandPropertyListResponse defaultInstance = new RandPropertyListResponse(true);
        private final UnknownFieldSet unknownFields;

        private RandPropertyListResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private RandPropertyListResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static RandPropertyListResponse getDefaultInstance() {
            return defaultInstance;
        }

        public RandPropertyListResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private RandPropertyListResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 26:
                            if ((mutable_bitField0_ & 0x4) != 4) {
                                this.s2CPropertys_ = new ArrayList<>();
                                mutable_bitField0_ |= 0x4;
                            }
                            this.s2CPropertys_.add(input.readMessage(PetHandler.PropertyData.PARSER, extensionRegistry));
                            break;
                        case 32:
                            this.bitField0_ |= 0x4;
                            this.s2CFightPower_ = input.readInt32();
                            break;
                        case 40:
                            this.bitField0_ |= 0x8;
                            this.s2CAddFightPower_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                if ((mutable_bitField0_ & 0x4) == 4)
                    this.s2CPropertys_ = Collections.unmodifiableList(this.s2CPropertys_);
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_RandPropertyListResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_RandPropertyListResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(RandPropertyListResponse.class, Builder.class);
        }

        public static Parser<RandPropertyListResponse> PARSER = (Parser<RandPropertyListResponse>) new AbstractParser<RandPropertyListResponse>() {
            public PetHandler.RandPropertyListResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.RandPropertyListResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int S2C_PROPERTYS_FIELD_NUMBER = 3;
        private List<PetHandler.PropertyData> s2CPropertys_;
        public static final int S2C_FIGHTPOWER_FIELD_NUMBER = 4;
        private int s2CFightPower_;
        public static final int S2C_ADDFIGHTPOWER_FIELD_NUMBER = 5;
        private int s2CAddFightPower_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<RandPropertyListResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        static {
            defaultInstance.initFields();
        }

        public List<PetHandler.PropertyData> getS2CPropertysList() {
            return this.s2CPropertys_;
        }

        public List<? extends PetHandler.PropertyDataOrBuilder> getS2CPropertysOrBuilderList() {
            return (List) this.s2CPropertys_;
        }

        public int getS2CPropertysCount() {
            return this.s2CPropertys_.size();
        }

        public PetHandler.PropertyData getS2CPropertys(int index) {
            return this.s2CPropertys_.get(index);
        }

        public PetHandler.PropertyDataOrBuilder getS2CPropertysOrBuilder(int index) {
            return this.s2CPropertys_.get(index);
        }

        public boolean hasS2CFightPower() {
            return ((this.bitField0_ & 0x4) == 4);
        }

        public int getS2CFightPower() {
            return this.s2CFightPower_;
        }

        public boolean hasS2CAddFightPower() {
            return ((this.bitField0_ & 0x8) == 8);
        }

        public int getS2CAddFightPower() {
            return this.s2CAddFightPower_;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.s2CPropertys_ = Collections.emptyList();
            this.s2CFightPower_ = 0;
            this.s2CAddFightPower_ = 0;
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasS2CFightPower()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasS2CAddFightPower()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            for (int i = 0; i < getS2CPropertysCount(); i++) {
                if (!getS2CPropertys(i).isInitialized()) {
                    this.memoizedIsInitialized = 0;
                    return false;
                }
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1)
                output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2)
                output.writeBytes(2, getS2CMsgBytes());
            for (int i = 0; i < this.s2CPropertys_.size(); i++)
                output.writeMessage(3, (MessageLite) this.s2CPropertys_.get(i));
            if ((this.bitField0_ & 0x4) == 4)
                output.writeInt32(4, this.s2CFightPower_);
            if ((this.bitField0_ & 0x8) == 8)
                output.writeInt32(5, this.s2CAddFightPower_);
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1)
                return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1)
                size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2)
                size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            for (int i = 0; i < this.s2CPropertys_.size(); i++)
                size += CodedOutputStream.computeMessageSize(3, (MessageLite) this.s2CPropertys_.get(i));
            if ((this.bitField0_ & 0x4) == 4)
                size += CodedOutputStream.computeInt32Size(4, this.s2CFightPower_);
            if ((this.bitField0_ & 0x8) == 8)
                size += CodedOutputStream.computeInt32Size(5, this.s2CAddFightPower_);
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static RandPropertyListResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (RandPropertyListResponse) PARSER.parseFrom(data);
        }

        public static RandPropertyListResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (RandPropertyListResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static RandPropertyListResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (RandPropertyListResponse) PARSER.parseFrom(data);
        }

        public static RandPropertyListResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (RandPropertyListResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static RandPropertyListResponse parseFrom(InputStream input) throws IOException {
            return (RandPropertyListResponse) PARSER.parseFrom(input);
        }

        public static RandPropertyListResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (RandPropertyListResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static RandPropertyListResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (RandPropertyListResponse) PARSER.parseDelimitedFrom(input);
        }

        public static RandPropertyListResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (RandPropertyListResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static RandPropertyListResponse parseFrom(CodedInputStream input) throws IOException {
            return (RandPropertyListResponse) PARSER.parseFrom(input);
        }

        public static RandPropertyListResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (RandPropertyListResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(RandPropertyListResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.RandPropertyListResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;
            private List<PetHandler.PropertyData> s2CPropertys_;
            private RepeatedFieldBuilder<PetHandler.PropertyData, PetHandler.PropertyData.Builder, PetHandler.PropertyDataOrBuilder> s2CPropertysBuilder_;
            private int s2CFightPower_;
            private int s2CAddFightPower_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_RandPropertyListResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_RandPropertyListResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.RandPropertyListResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                this.s2CPropertys_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                this.s2CPropertys_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.RandPropertyListResponse.alwaysUseFieldBuilders)
                    getS2CPropertysFieldBuilder();
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                if (this.s2CPropertysBuilder_ == null) {
                    this.s2CPropertys_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFB;
                } else {
                    this.s2CPropertysBuilder_.clear();
                }
                this.s2CFightPower_ = 0;
                this.bitField0_ &= 0xFFFFFFF7;
                this.s2CAddFightPower_ = 0;
                this.bitField0_ &= 0xFFFFFFEF;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_RandPropertyListResponse_descriptor;
            }

            public PetHandler.RandPropertyListResponse getDefaultInstanceForType() {
                return PetHandler.RandPropertyListResponse.getDefaultInstance();
            }

            public PetHandler.RandPropertyListResponse build() {
                PetHandler.RandPropertyListResponse result = buildPartial();
                if (!result.isInitialized())
                    throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.RandPropertyListResponse buildPartial() {
                PetHandler.RandPropertyListResponse result = new PetHandler.RandPropertyListResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1)
                    to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2)
                    to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                if (this.s2CPropertysBuilder_ == null) {
                    if ((this.bitField0_ & 0x4) == 4) {
                        this.s2CPropertys_ = Collections.unmodifiableList(this.s2CPropertys_);
                        this.bitField0_ &= 0xFFFFFFFB;
                    }
                    result.s2CPropertys_ = this.s2CPropertys_;
                } else {
                    result.s2CPropertys_ = this.s2CPropertysBuilder_.build();
                }
                if ((from_bitField0_ & 0x8) == 8)
                    to_bitField0_ |= 0x4;
                result.s2CFightPower_ = this.s2CFightPower_;
                if ((from_bitField0_ & 0x10) == 16)
                    to_bitField0_ |= 0x8;
                result.s2CAddFightPower_ = this.s2CAddFightPower_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.RandPropertyListResponse)
                    return mergeFrom((PetHandler.RandPropertyListResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.RandPropertyListResponse other) {
                if (other == PetHandler.RandPropertyListResponse.getDefaultInstance())
                    return this;
                if (other.hasS2CCode())
                    setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (this.s2CPropertysBuilder_ == null) {
                    if (!other.s2CPropertys_.isEmpty()) {
                        if (this.s2CPropertys_.isEmpty()) {
                            this.s2CPropertys_ = other.s2CPropertys_;
                            this.bitField0_ &= 0xFFFFFFFB;
                        } else {
                            ensureS2CPropertysIsMutable();
                            this.s2CPropertys_.addAll(other.s2CPropertys_);
                        }
                        onChanged();
                    }
                } else if (!other.s2CPropertys_.isEmpty()) {
                    if (this.s2CPropertysBuilder_.isEmpty()) {
                        this.s2CPropertysBuilder_.dispose();
                        this.s2CPropertysBuilder_ = null;
                        this.s2CPropertys_ = other.s2CPropertys_;
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.s2CPropertysBuilder_ = PetHandler.RandPropertyListResponse.alwaysUseFieldBuilders ? getS2CPropertysFieldBuilder() : null;
                    } else {
                        this.s2CPropertysBuilder_.addAllMessages(other.s2CPropertys_);
                    }
                }
                if (other.hasS2CFightPower())
                    setS2CFightPower(other.getS2CFightPower());
                if (other.hasS2CAddFightPower())
                    setS2CAddFightPower(other.getS2CAddFightPower());
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode())
                    return false;
                if (!hasS2CFightPower())
                    return false;
                if (!hasS2CAddFightPower())
                    return false;
                for (int i = 0; i < getS2CPropertysCount(); i++) {
                    if (!getS2CPropertys(i).isInitialized())
                        return false;
                }
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.RandPropertyListResponse parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.RandPropertyListResponse) PetHandler.RandPropertyListResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.RandPropertyListResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null)
                        mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8())
                        this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = PetHandler.RandPropertyListResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            private void ensureS2CPropertysIsMutable() {
                if ((this.bitField0_ & 0x4) != 4) {
                    this.s2CPropertys_ = new ArrayList<>(this.s2CPropertys_);
                    this.bitField0_ |= 0x4;
                }
            }

            public List<PetHandler.PropertyData> getS2CPropertysList() {
                if (this.s2CPropertysBuilder_ == null)
                    return Collections.unmodifiableList(this.s2CPropertys_);
                return this.s2CPropertysBuilder_.getMessageList();
            }

            public int getS2CPropertysCount() {
                if (this.s2CPropertysBuilder_ == null)
                    return this.s2CPropertys_.size();
                return this.s2CPropertysBuilder_.getCount();
            }

            public PetHandler.PropertyData getS2CPropertys(int index) {
                if (this.s2CPropertysBuilder_ == null)
                    return this.s2CPropertys_.get(index);
                return (PetHandler.PropertyData) this.s2CPropertysBuilder_.getMessage(index);
            }

            public Builder setS2CPropertys(int index, PetHandler.PropertyData value) {
                if (this.s2CPropertysBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureS2CPropertysIsMutable();
                    this.s2CPropertys_.set(index, value);
                    onChanged();
                } else {
                    this.s2CPropertysBuilder_.setMessage(index, value);
                }
                return this;
            }

            public Builder setS2CPropertys(int index, PetHandler.PropertyData.Builder builderForValue) {
                if (this.s2CPropertysBuilder_ == null) {
                    ensureS2CPropertysIsMutable();
                    this.s2CPropertys_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    this.s2CPropertysBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            public Builder addS2CPropertys(PetHandler.PropertyData value) {
                if (this.s2CPropertysBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureS2CPropertysIsMutable();
                    this.s2CPropertys_.add(value);
                    onChanged();
                } else {
                    this.s2CPropertysBuilder_.addMessage(value);
                }
                return this;
            }

            public Builder addS2CPropertys(int index, PetHandler.PropertyData value) {
                if (this.s2CPropertysBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureS2CPropertysIsMutable();
                    this.s2CPropertys_.add(index, value);
                    onChanged();
                } else {
                    this.s2CPropertysBuilder_.addMessage(index, value);
                }
                return this;
            }

            public Builder addS2CPropertys(PetHandler.PropertyData.Builder builderForValue) {
                if (this.s2CPropertysBuilder_ == null) {
                    ensureS2CPropertysIsMutable();
                    this.s2CPropertys_.add(builderForValue.build());
                    onChanged();
                } else {
                    this.s2CPropertysBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            public Builder addS2CPropertys(int index, PetHandler.PropertyData.Builder builderForValue) {
                if (this.s2CPropertysBuilder_ == null) {
                    ensureS2CPropertysIsMutable();
                    this.s2CPropertys_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    this.s2CPropertysBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            public Builder addAllS2CPropertys(Iterable<? extends PetHandler.PropertyData> values) {
                if (this.s2CPropertysBuilder_ == null) {
                    ensureS2CPropertysIsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.s2CPropertys_);
                    onChanged();
                } else {
                    this.s2CPropertysBuilder_.addAllMessages(values);
                }
                return this;
            }

            public Builder clearS2CPropertys() {
                if (this.s2CPropertysBuilder_ == null) {
                    this.s2CPropertys_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFB;
                    onChanged();
                } else {
                    this.s2CPropertysBuilder_.clear();
                }
                return this;
            }

            public Builder removeS2CPropertys(int index) {
                if (this.s2CPropertysBuilder_ == null) {
                    ensureS2CPropertysIsMutable();
                    this.s2CPropertys_.remove(index);
                    onChanged();
                } else {
                    this.s2CPropertysBuilder_.remove(index);
                }
                return this;
            }

            public PetHandler.PropertyData.Builder getS2CPropertysBuilder(int index) {
                return (PetHandler.PropertyData.Builder) getS2CPropertysFieldBuilder().getBuilder(index);
            }

            public PetHandler.PropertyDataOrBuilder getS2CPropertysOrBuilder(int index) {
                if (this.s2CPropertysBuilder_ == null)
                    return this.s2CPropertys_.get(index);
                return (PetHandler.PropertyDataOrBuilder) this.s2CPropertysBuilder_.getMessageOrBuilder(index);
            }

            public List<? extends PetHandler.PropertyDataOrBuilder> getS2CPropertysOrBuilderList() {
                if (this.s2CPropertysBuilder_ != null)
                    return this.s2CPropertysBuilder_.getMessageOrBuilderList();
                return Collections.unmodifiableList((List) this.s2CPropertys_);
            }

            public PetHandler.PropertyData.Builder addS2CPropertysBuilder() {
                return (PetHandler.PropertyData.Builder) getS2CPropertysFieldBuilder().addBuilder(PetHandler.PropertyData.getDefaultInstance());
            }

            public PetHandler.PropertyData.Builder addS2CPropertysBuilder(int index) {
                return (PetHandler.PropertyData.Builder) getS2CPropertysFieldBuilder().addBuilder(index, PetHandler.PropertyData.getDefaultInstance());
            }

            public List<PetHandler.PropertyData.Builder> getS2CPropertysBuilderList() {
                return getS2CPropertysFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilder<PetHandler.PropertyData, PetHandler.PropertyData.Builder, PetHandler.PropertyDataOrBuilder> getS2CPropertysFieldBuilder() {
                if (this.s2CPropertysBuilder_ == null) {
                    this.s2CPropertysBuilder_ = new RepeatedFieldBuilder(this.s2CPropertys_, ((this.bitField0_ & 0x4) == 4), getParentForChildren(), isClean());
                    this.s2CPropertys_ = null;
                }
                return this.s2CPropertysBuilder_;
            }

            public boolean hasS2CFightPower() {
                return ((this.bitField0_ & 0x8) == 8);
            }

            public int getS2CFightPower() {
                return this.s2CFightPower_;
            }

            public Builder setS2CFightPower(int value) {
                this.bitField0_ |= 0x8;
                this.s2CFightPower_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CFightPower() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.s2CFightPower_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CAddFightPower() {
                return ((this.bitField0_ & 0x10) == 16);
            }

            public int getS2CAddFightPower() {
                return this.s2CAddFightPower_;
            }

            public Builder setS2CAddFightPower(int value) {
                this.bitField0_ |= 0x10;
                this.s2CAddFightPower_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CAddFightPower() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.s2CAddFightPower_ = 0;
                onChanged();
                return this;
            }
        }
    }

    public static final class PetIllusionRequest extends GeneratedMessage implements PetIllusionRequestOrBuilder {
        private static final PetIllusionRequest defaultInstance = new PetIllusionRequest(true);
        private final UnknownFieldSet unknownFields;

        private PetIllusionRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private PetIllusionRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static PetIllusionRequest getDefaultInstance() {
            return defaultInstance;
        }

        public PetIllusionRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private PetIllusionRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.s2CPetId_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_PetIllusionRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_PetIllusionRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetIllusionRequest.class, Builder.class);
        }

        public static Parser<PetIllusionRequest> PARSER = (Parser<PetIllusionRequest>) new AbstractParser<PetIllusionRequest>() {
            public PetHandler.PetIllusionRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.PetIllusionRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_PETID_FIELD_NUMBER = 1;
        private Object s2CPetId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<PetIllusionRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CPetId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getS2CPetId() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CPetId_ = s;
            return s;
        }

        public ByteString getS2CPetIdBytes() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CPetId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CPetId_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CPetId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeBytes(1, getS2CPetIdBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeBytesSize(1, getS2CPetIdBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static PetIllusionRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (PetIllusionRequest) PARSER.parseFrom(data);
        }

        public static PetIllusionRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetIllusionRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PetIllusionRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (PetIllusionRequest) PARSER.parseFrom(data);
        }

        public static PetIllusionRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetIllusionRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PetIllusionRequest parseFrom(InputStream input) throws IOException {
            return (PetIllusionRequest) PARSER.parseFrom(input);
        }

        public static PetIllusionRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetIllusionRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static PetIllusionRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (PetIllusionRequest) PARSER.parseDelimitedFrom(input);
        }

        public static PetIllusionRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetIllusionRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static PetIllusionRequest parseFrom(CodedInputStream input) throws IOException {
            return (PetIllusionRequest) PARSER.parseFrom(input);
        }

        public static PetIllusionRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetIllusionRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(PetIllusionRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.PetIllusionRequestOrBuilder {
            private int bitField0_;
            private Object s2CPetId_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_PetIllusionRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_PetIllusionRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.PetIllusionRequest.class, Builder.class);
            }

            private Builder() {
                this.s2CPetId_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CPetId_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.PetIllusionRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CPetId_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_PetIllusionRequest_descriptor;
            }

            public PetHandler.PetIllusionRequest getDefaultInstanceForType() {
                return PetHandler.PetIllusionRequest.getDefaultInstance();
            }

            public PetHandler.PetIllusionRequest build() {
                PetHandler.PetIllusionRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.PetIllusionRequest buildPartial() {
                PetHandler.PetIllusionRequest result = new PetHandler.PetIllusionRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CPetId_ = this.s2CPetId_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.PetIllusionRequest)
                    return mergeFrom((PetHandler.PetIllusionRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.PetIllusionRequest other) {
                if (other == PetHandler.PetIllusionRequest.getDefaultInstance()) return this;
                if (other.hasS2CPetId()) {
                    this.bitField0_ |= 0x1;
                    this.s2CPetId_ = other.s2CPetId_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CPetId()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.PetIllusionRequest parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.PetIllusionRequest) PetHandler.PetIllusionRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.PetIllusionRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CPetId() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getS2CPetId() {
                Object ref = this.s2CPetId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CPetId_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CPetIdBytes() {
                Object ref = this.s2CPetId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CPetId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CPetId(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CPetId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CPetId_ = PetHandler.PetIllusionRequest.getDefaultInstance().getS2CPetId();
                onChanged();
                return this;
            }

            public Builder setS2CPetIdBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }
    }


    public static final class PetIllusionResponse
            extends GeneratedMessage
            implements PetIllusionResponseOrBuilder {
        private static final PetIllusionResponse defaultInstance = new PetIllusionResponse(true);
        private final UnknownFieldSet unknownFields;

        private PetIllusionResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private PetIllusionResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static PetIllusionResponse getDefaultInstance() {
            return defaultInstance;
        }

        public PetIllusionResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private PetIllusionResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 24:
                            this.bitField0_ |= 0x4;
                            this.s2CResult_ = input.readInt32();
                            break;
                        case 32:
                            this.bitField0_ |= 0x8;
                            this.s2CLuckyValue_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_PetIllusionResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_PetIllusionResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetIllusionResponse.class, Builder.class);
        }

        public static Parser<PetIllusionResponse> PARSER = (Parser<PetIllusionResponse>) new AbstractParser<PetIllusionResponse>() {
            public PetHandler.PetIllusionResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.PetIllusionResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int S2C_RESULT_FIELD_NUMBER = 3;
        private int s2CResult_;
        public static final int S2C_LUCKYVALUE_FIELD_NUMBER = 4;
        private int s2CLuckyValue_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<PetIllusionResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasS2CResult() {
            return ((this.bitField0_ & 0x4) == 4);
        }

        public int getS2CResult() {
            return this.s2CResult_;
        }

        public boolean hasS2CLuckyValue() {
            return ((this.bitField0_ & 0x8) == 8);
        }

        public int getS2CLuckyValue() {
            return this.s2CLuckyValue_;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.s2CResult_ = 0;
            this.s2CLuckyValue_ = 0;
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            if ((this.bitField0_ & 0x4) == 4) output.writeInt32(3, this.s2CResult_);
            if ((this.bitField0_ & 0x8) == 8) output.writeInt32(4, this.s2CLuckyValue_);
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            if ((this.bitField0_ & 0x4) == 4) size += CodedOutputStream.computeInt32Size(3, this.s2CResult_);
            if ((this.bitField0_ & 0x8) == 8) size += CodedOutputStream.computeInt32Size(4, this.s2CLuckyValue_);
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static PetIllusionResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (PetIllusionResponse) PARSER.parseFrom(data);
        }

        public static PetIllusionResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetIllusionResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PetIllusionResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (PetIllusionResponse) PARSER.parseFrom(data);
        }

        public static PetIllusionResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetIllusionResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PetIllusionResponse parseFrom(InputStream input) throws IOException {
            return (PetIllusionResponse) PARSER.parseFrom(input);
        }

        public static PetIllusionResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetIllusionResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static PetIllusionResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (PetIllusionResponse) PARSER.parseDelimitedFrom(input);
        }

        public static PetIllusionResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetIllusionResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static PetIllusionResponse parseFrom(CodedInputStream input) throws IOException {
            return (PetIllusionResponse) PARSER.parseFrom(input);
        }

        public static PetIllusionResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetIllusionResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(PetIllusionResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.PetIllusionResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;
            private int s2CResult_;
            private int s2CLuckyValue_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_PetIllusionResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_PetIllusionResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.PetIllusionResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.PetIllusionResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CResult_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.s2CLuckyValue_ = 0;
                this.bitField0_ &= 0xFFFFFFF7;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_PetIllusionResponse_descriptor;
            }

            public PetHandler.PetIllusionResponse getDefaultInstanceForType() {
                return PetHandler.PetIllusionResponse.getDefaultInstance();
            }

            public PetHandler.PetIllusionResponse build() {
                PetHandler.PetIllusionResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.PetIllusionResponse buildPartial() {
                PetHandler.PetIllusionResponse result = new PetHandler.PetIllusionResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                if ((from_bitField0_ & 0x4) == 4) to_bitField0_ |= 0x4;
                result.s2CResult_ = this.s2CResult_;
                if ((from_bitField0_ & 0x8) == 8) to_bitField0_ |= 0x8;
                result.s2CLuckyValue_ = this.s2CLuckyValue_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.PetIllusionResponse)
                    return mergeFrom((PetHandler.PetIllusionResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.PetIllusionResponse other) {
                if (other == PetHandler.PetIllusionResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (other.hasS2CResult()) setS2CResult(other.getS2CResult());
                if (other.hasS2CLuckyValue()) setS2CLuckyValue(other.getS2CLuckyValue());
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.PetIllusionResponse parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.PetIllusionResponse) PetHandler.PetIllusionResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.PetIllusionResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = PetHandler.PetIllusionResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public boolean hasS2CResult() {
                return ((this.bitField0_ & 0x4) == 4);
            }

            public int getS2CResult() {
                return this.s2CResult_;
            }

            public Builder setS2CResult(int value) {
                this.bitField0_ |= 0x4;
                this.s2CResult_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CResult() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.s2CResult_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CLuckyValue() {
                return ((this.bitField0_ & 0x8) == 8);
            }

            public int getS2CLuckyValue() {
                return this.s2CLuckyValue_;
            }

            public Builder setS2CLuckyValue(int value) {
                this.bitField0_ |= 0x8;
                this.s2CLuckyValue_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CLuckyValue() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.s2CLuckyValue_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class PetIllusionInfoRequest
            extends GeneratedMessage
            implements PetIllusionInfoRequestOrBuilder {
        private static final PetIllusionInfoRequest defaultInstance = new PetIllusionInfoRequest(true);
        private final UnknownFieldSet unknownFields;

        private PetIllusionInfoRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private PetIllusionInfoRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static PetIllusionInfoRequest getDefaultInstance() {
            return defaultInstance;
        }

        public PetIllusionInfoRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private PetIllusionInfoRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.s2CPetId_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_PetIllusionInfoRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_PetIllusionInfoRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetIllusionInfoRequest.class, Builder.class);
        }

        public static Parser<PetIllusionInfoRequest> PARSER = (Parser<PetIllusionInfoRequest>) new AbstractParser<PetIllusionInfoRequest>() {
            public PetHandler.PetIllusionInfoRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.PetIllusionInfoRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_PETID_FIELD_NUMBER = 1;
        private Object s2CPetId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<PetIllusionInfoRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CPetId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getS2CPetId() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CPetId_ = s;
            return s;
        }

        public ByteString getS2CPetIdBytes() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CPetId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CPetId_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CPetId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeBytes(1, getS2CPetIdBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeBytesSize(1, getS2CPetIdBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static PetIllusionInfoRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (PetIllusionInfoRequest) PARSER.parseFrom(data);
        }

        public static PetIllusionInfoRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetIllusionInfoRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PetIllusionInfoRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (PetIllusionInfoRequest) PARSER.parseFrom(data);
        }

        public static PetIllusionInfoRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetIllusionInfoRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PetIllusionInfoRequest parseFrom(InputStream input) throws IOException {
            return (PetIllusionInfoRequest) PARSER.parseFrom(input);
        }

        public static PetIllusionInfoRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetIllusionInfoRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static PetIllusionInfoRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (PetIllusionInfoRequest) PARSER.parseDelimitedFrom(input);
        }

        public static PetIllusionInfoRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetIllusionInfoRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static PetIllusionInfoRequest parseFrom(CodedInputStream input) throws IOException {
            return (PetIllusionInfoRequest) PARSER.parseFrom(input);
        }

        public static PetIllusionInfoRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetIllusionInfoRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(PetIllusionInfoRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.PetIllusionInfoRequestOrBuilder {
            private int bitField0_;
            private Object s2CPetId_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_PetIllusionInfoRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_PetIllusionInfoRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.PetIllusionInfoRequest.class, Builder.class);
            }

            private Builder() {
                this.s2CPetId_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CPetId_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.PetIllusionInfoRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CPetId_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_PetIllusionInfoRequest_descriptor;
            }

            public PetHandler.PetIllusionInfoRequest getDefaultInstanceForType() {
                return PetHandler.PetIllusionInfoRequest.getDefaultInstance();
            }

            public PetHandler.PetIllusionInfoRequest build() {
                PetHandler.PetIllusionInfoRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.PetIllusionInfoRequest buildPartial() {
                PetHandler.PetIllusionInfoRequest result = new PetHandler.PetIllusionInfoRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CPetId_ = this.s2CPetId_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.PetIllusionInfoRequest)
                    return mergeFrom((PetHandler.PetIllusionInfoRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.PetIllusionInfoRequest other) {
                if (other == PetHandler.PetIllusionInfoRequest.getDefaultInstance()) return this;
                if (other.hasS2CPetId()) {
                    this.bitField0_ |= 0x1;
                    this.s2CPetId_ = other.s2CPetId_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CPetId()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.PetIllusionInfoRequest parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.PetIllusionInfoRequest) PetHandler.PetIllusionInfoRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.PetIllusionInfoRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CPetId() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getS2CPetId() {
                Object ref = this.s2CPetId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CPetId_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CPetIdBytes() {
                Object ref = this.s2CPetId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CPetId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CPetId(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CPetId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CPetId_ = PetHandler.PetIllusionInfoRequest.getDefaultInstance().getS2CPetId();
                onChanged();
                return this;
            }

            public Builder setS2CPetIdBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class IllusionInfo
            extends GeneratedMessage
            implements IllusionInfoOrBuilder {
        private static final IllusionInfo defaultInstance = new IllusionInfo(true);
        private final UnknownFieldSet unknownFields;

        private IllusionInfo(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private IllusionInfo(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static IllusionInfo getDefaultInstance() {
            return defaultInstance;
        }

        public IllusionInfo getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private IllusionInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.fightPower_ = input.readInt32();
                            break;
                        case 16:
                            this.bitField0_ |= 0x2;
                            this.transformLevel_ = input.readInt32();
                            break;
                        case 24:
                            this.bitField0_ |= 0x4;
                            this.luckyValue_ = input.readInt32();
                            break;
                        case 32:
                            this.bitField0_ |= 0x8;
                            this.luckyLimit_ = input.readInt32();
                            break;
                        case 40:
                            this.bitField0_ |= 0x10;
                            this.needUp_ = input.readInt32();
                            break;
                        case 48:
                            this.bitField0_ |= 0x20;
                            this.successPer_ = input.readInt32();
                            break;
                        case 56:
                            this.bitField0_ |= 0x40;
                            this.itemNum_ = input.readInt32();
                            break;
                        case 66:
                            if ((mutable_bitField0_ & 0x80) != 128) {
                                this.attrs_ = new ArrayList<>();
                                mutable_bitField0_ |= 0x80;
                            }
                            this.attrs_.add(input.readMessage(Common.AttributeBase.PARSER, extensionRegistry));
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                if ((mutable_bitField0_ & 0x80) == 128) this.attrs_ = Collections.unmodifiableList(this.attrs_);
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_IllusionInfo_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_IllusionInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(IllusionInfo.class, Builder.class);
        }

        public static Parser<IllusionInfo> PARSER = (Parser<IllusionInfo>) new AbstractParser<IllusionInfo>() {
            public PetHandler.IllusionInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.IllusionInfo(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int FIGHTPOWER_FIELD_NUMBER = 1;
        private int fightPower_;
        public static final int TRANSFORMLEVEL_FIELD_NUMBER = 2;
        private int transformLevel_;
        public static final int LUCKYVALUE_FIELD_NUMBER = 3;
        private int luckyValue_;
        public static final int LUCKYLIMIT_FIELD_NUMBER = 4;
        private int luckyLimit_;
        public static final int NEEDUP_FIELD_NUMBER = 5;
        private int needUp_;
        public static final int SUCCESSPER_FIELD_NUMBER = 6;
        private int successPer_;
        public static final int ITEMNUM_FIELD_NUMBER = 7;
        private int itemNum_;
        public static final int ATTRS_FIELD_NUMBER = 8;
        private List<Common.AttributeBase> attrs_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<IllusionInfo> getParserForType() {
            return PARSER;
        }

        public boolean hasFightPower() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getFightPower() {
            return this.fightPower_;
        }

        public boolean hasTransformLevel() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public int getTransformLevel() {
            return this.transformLevel_;
        }

        static {
            defaultInstance.initFields();
        }


        public boolean hasLuckyValue() {
            return ((this.bitField0_ & 0x4) == 4);
        }

        public int getLuckyValue() {
            return this.luckyValue_;
        }

        public boolean hasLuckyLimit() {
            return ((this.bitField0_ & 0x8) == 8);
        }

        public int getLuckyLimit() {
            return this.luckyLimit_;
        }

        public boolean hasNeedUp() {
            return ((this.bitField0_ & 0x10) == 16);
        }

        public int getNeedUp() {
            return this.needUp_;
        }

        public boolean hasSuccessPer() {
            return ((this.bitField0_ & 0x20) == 32);
        }

        public int getSuccessPer() {
            return this.successPer_;
        }

        public boolean hasItemNum() {
            return ((this.bitField0_ & 0x40) == 64);
        }

        public int getItemNum() {
            return this.itemNum_;
        }

        public List<Common.AttributeBase> getAttrsList() {
            return this.attrs_;
        }

        public List<? extends Common.AttributeBaseOrBuilder> getAttrsOrBuilderList() {
            return (List) this.attrs_;
        }

        public int getAttrsCount() {
            return this.attrs_.size();
        }

        public Common.AttributeBase getAttrs(int index) {
            return this.attrs_.get(index);
        }

        public Common.AttributeBaseOrBuilder getAttrsOrBuilder(int index) {
            return (Common.AttributeBaseOrBuilder) this.attrs_.get(index);
        }

        private void initFields() {
            this.fightPower_ = 0;
            this.transformLevel_ = 0;
            this.luckyValue_ = 0;
            this.luckyLimit_ = 0;
            this.needUp_ = 0;
            this.successPer_ = 0;
            this.itemNum_ = 0;
            this.attrs_ = Collections.emptyList();
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;
            if (!hasFightPower()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasTransformLevel()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasLuckyValue()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasLuckyLimit()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasNeedUp()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasSuccessPer()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasItemNum()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            for (int i = 0; i < getAttrsCount(); i++) {
                if (!getAttrs(i).isInitialized()) {
                    this.memoizedIsInitialized = 0;
                    return false;
                }
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1)
                output.writeInt32(1, this.fightPower_);
            if ((this.bitField0_ & 0x2) == 2)
                output.writeInt32(2, this.transformLevel_);
            if ((this.bitField0_ & 0x4) == 4)
                output.writeInt32(3, this.luckyValue_);
            if ((this.bitField0_ & 0x8) == 8)
                output.writeInt32(4, this.luckyLimit_);
            if ((this.bitField0_ & 0x10) == 16)
                output.writeInt32(5, this.needUp_);
            if ((this.bitField0_ & 0x20) == 32)
                output.writeInt32(6, this.successPer_);
            if ((this.bitField0_ & 0x40) == 64)
                output.writeInt32(7, this.itemNum_);
            for (int i = 0; i < this.attrs_.size(); i++)
                output.writeMessage(8, (MessageLite) this.attrs_.get(i));
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1)
                return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1)
                size += CodedOutputStream.computeInt32Size(1, this.fightPower_);
            if ((this.bitField0_ & 0x2) == 2)
                size += CodedOutputStream.computeInt32Size(2, this.transformLevel_);
            if ((this.bitField0_ & 0x4) == 4)
                size += CodedOutputStream.computeInt32Size(3, this.luckyValue_);
            if ((this.bitField0_ & 0x8) == 8)
                size += CodedOutputStream.computeInt32Size(4, this.luckyLimit_);
            if ((this.bitField0_ & 0x10) == 16)
                size += CodedOutputStream.computeInt32Size(5, this.needUp_);
            if ((this.bitField0_ & 0x20) == 32)
                size += CodedOutputStream.computeInt32Size(6, this.successPer_);
            if ((this.bitField0_ & 0x40) == 64)
                size += CodedOutputStream.computeInt32Size(7, this.itemNum_);
            for (int i = 0; i < this.attrs_.size(); i++)
                size += CodedOutputStream.computeMessageSize(8, (MessageLite) this.attrs_.get(i));
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static IllusionInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (IllusionInfo) PARSER.parseFrom(data);
        }

        public static IllusionInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (IllusionInfo) PARSER.parseFrom(data, extensionRegistry);
        }

        public static IllusionInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (IllusionInfo) PARSER.parseFrom(data);
        }

        public static IllusionInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (IllusionInfo) PARSER.parseFrom(data, extensionRegistry);
        }

        public static IllusionInfo parseFrom(InputStream input) throws IOException {
            return (IllusionInfo) PARSER.parseFrom(input);
        }

        public static IllusionInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (IllusionInfo) PARSER.parseFrom(input, extensionRegistry);
        }

        public static IllusionInfo parseDelimitedFrom(InputStream input) throws IOException {
            return (IllusionInfo) PARSER.parseDelimitedFrom(input);
        }

        public static IllusionInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (IllusionInfo) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static IllusionInfo parseFrom(CodedInputStream input) throws IOException {
            return (IllusionInfo) PARSER.parseFrom(input);
        }

        public static IllusionInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (IllusionInfo) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(IllusionInfo prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.IllusionInfoOrBuilder {
            private int bitField0_;
            private int fightPower_;
            private int transformLevel_;
            private int luckyValue_;
            private int luckyLimit_;
            private int needUp_;
            private int successPer_;
            private int itemNum_;
            private List<Common.AttributeBase> attrs_;
            private RepeatedFieldBuilder<Common.AttributeBase, Common.AttributeBase.Builder, Common.AttributeBaseOrBuilder> attrsBuilder_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_IllusionInfo_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_IllusionInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.IllusionInfo.class, Builder.class);
            }

            private Builder() {
                this.attrs_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.attrs_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.IllusionInfo.alwaysUseFieldBuilders)
                    getAttrsFieldBuilder();
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.fightPower_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.transformLevel_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                this.luckyValue_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.luckyLimit_ = 0;
                this.bitField0_ &= 0xFFFFFFF7;
                this.needUp_ = 0;
                this.bitField0_ &= 0xFFFFFFEF;
                this.successPer_ = 0;
                this.bitField0_ &= 0xFFFFFFDF;
                this.itemNum_ = 0;
                this.bitField0_ &= 0xFFFFFFBF;
                if (this.attrsBuilder_ == null) {
                    this.attrs_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFF7F;
                } else {
                    this.attrsBuilder_.clear();
                }
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_IllusionInfo_descriptor;
            }

            public PetHandler.IllusionInfo getDefaultInstanceForType() {
                return PetHandler.IllusionInfo.getDefaultInstance();
            }

            public PetHandler.IllusionInfo build() {
                PetHandler.IllusionInfo result = buildPartial();
                if (!result.isInitialized())
                    throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.IllusionInfo buildPartial() {
                PetHandler.IllusionInfo result = new PetHandler.IllusionInfo(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1)
                    to_bitField0_ |= 0x1;
                result.fightPower_ = this.fightPower_;
                if ((from_bitField0_ & 0x2) == 2)
                    to_bitField0_ |= 0x2;
                result.transformLevel_ = this.transformLevel_;
                if ((from_bitField0_ & 0x4) == 4)
                    to_bitField0_ |= 0x4;
                result.luckyValue_ = this.luckyValue_;
                if ((from_bitField0_ & 0x8) == 8)
                    to_bitField0_ |= 0x8;
                result.luckyLimit_ = this.luckyLimit_;
                if ((from_bitField0_ & 0x10) == 16)
                    to_bitField0_ |= 0x10;
                result.needUp_ = this.needUp_;
                if ((from_bitField0_ & 0x20) == 32)
                    to_bitField0_ |= 0x20;
                result.successPer_ = this.successPer_;
                if ((from_bitField0_ & 0x40) == 64)
                    to_bitField0_ |= 0x40;
                result.itemNum_ = this.itemNum_;
                if (this.attrsBuilder_ == null) {
                    if ((this.bitField0_ & 0x80) == 128) {
                        this.attrs_ = Collections.unmodifiableList(this.attrs_);
                        this.bitField0_ &= 0xFFFFFF7F;
                    }
                    result.attrs_ = this.attrs_;
                } else {
                    result.attrs_ = this.attrsBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.IllusionInfo)
                    return mergeFrom((PetHandler.IllusionInfo) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.IllusionInfo other) {
                if (other == PetHandler.IllusionInfo.getDefaultInstance())
                    return this;
                if (other.hasFightPower())
                    setFightPower(other.getFightPower());
                if (other.hasTransformLevel())
                    setTransformLevel(other.getTransformLevel());
                if (other.hasLuckyValue())
                    setLuckyValue(other.getLuckyValue());
                if (other.hasLuckyLimit())
                    setLuckyLimit(other.getLuckyLimit());
                if (other.hasNeedUp())
                    setNeedUp(other.getNeedUp());
                if (other.hasSuccessPer())
                    setSuccessPer(other.getSuccessPer());
                if (other.hasItemNum())
                    setItemNum(other.getItemNum());
                if (this.attrsBuilder_ == null) {
                    if (!other.attrs_.isEmpty()) {
                        if (this.attrs_.isEmpty()) {
                            this.attrs_ = other.attrs_;
                            this.bitField0_ &= 0xFFFFFF7F;
                        } else {
                            ensureAttrsIsMutable();
                            this.attrs_.addAll(other.attrs_);
                        }
                        onChanged();
                    }
                } else if (!other.attrs_.isEmpty()) {
                    if (this.attrsBuilder_.isEmpty()) {
                        this.attrsBuilder_.dispose();
                        this.attrsBuilder_ = null;
                        this.attrs_ = other.attrs_;
                        this.bitField0_ &= 0xFFFFFF7F;
                        this.attrsBuilder_ = PetHandler.IllusionInfo.alwaysUseFieldBuilders ? getAttrsFieldBuilder() : null;
                    } else {
                        this.attrsBuilder_.addAllMessages(other.attrs_);
                    }
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasFightPower())
                    return false;
                if (!hasTransformLevel())
                    return false;
                if (!hasLuckyValue())
                    return false;
                if (!hasLuckyLimit())
                    return false;
                if (!hasNeedUp())
                    return false;
                if (!hasSuccessPer())
                    return false;
                if (!hasItemNum())
                    return false;
                for (int i = 0; i < getAttrsCount(); i++) {
                    if (!getAttrs(i).isInitialized())
                        return false;
                }
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.IllusionInfo parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.IllusionInfo) PetHandler.IllusionInfo.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.IllusionInfo) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null)
                        mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasFightPower() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getFightPower() {
                return this.fightPower_;
            }

            public Builder setFightPower(int value) {
                this.bitField0_ |= 0x1;
                this.fightPower_ = value;
                onChanged();
                return this;
            }

            public Builder clearFightPower() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.fightPower_ = 0;
                onChanged();
                return this;
            }

            public boolean hasTransformLevel() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public int getTransformLevel() {
                return this.transformLevel_;
            }

            public Builder setTransformLevel(int value) {
                this.bitField0_ |= 0x2;
                this.transformLevel_ = value;
                onChanged();
                return this;
            }

            public Builder clearTransformLevel() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.transformLevel_ = 0;
                onChanged();
                return this;
            }

            public boolean hasLuckyValue() {
                return ((this.bitField0_ & 0x4) == 4);
            }

            public int getLuckyValue() {
                return this.luckyValue_;
            }

            public Builder setLuckyValue(int value) {
                this.bitField0_ |= 0x4;
                this.luckyValue_ = value;
                onChanged();
                return this;
            }

            public Builder clearLuckyValue() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.luckyValue_ = 0;
                onChanged();
                return this;
            }

            public boolean hasLuckyLimit() {
                return ((this.bitField0_ & 0x8) == 8);
            }

            public int getLuckyLimit() {
                return this.luckyLimit_;
            }

            public Builder setLuckyLimit(int value) {
                this.bitField0_ |= 0x8;
                this.luckyLimit_ = value;
                onChanged();
                return this;
            }

            public Builder clearLuckyLimit() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.luckyLimit_ = 0;
                onChanged();
                return this;
            }

            public boolean hasNeedUp() {
                return ((this.bitField0_ & 0x10) == 16);
            }

            public int getNeedUp() {
                return this.needUp_;
            }

            public Builder setNeedUp(int value) {
                this.bitField0_ |= 0x10;
                this.needUp_ = value;
                onChanged();
                return this;
            }

            public Builder clearNeedUp() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.needUp_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSuccessPer() {
                return ((this.bitField0_ & 0x20) == 32);
            }

            public int getSuccessPer() {
                return this.successPer_;
            }

            public Builder setSuccessPer(int value) {
                this.bitField0_ |= 0x20;
                this.successPer_ = value;
                onChanged();
                return this;
            }

            public Builder clearSuccessPer() {
                this.bitField0_ &= 0xFFFFFFDF;
                this.successPer_ = 0;
                onChanged();
                return this;
            }

            public boolean hasItemNum() {
                return ((this.bitField0_ & 0x40) == 64);
            }

            public int getItemNum() {
                return this.itemNum_;
            }

            public Builder setItemNum(int value) {
                this.bitField0_ |= 0x40;
                this.itemNum_ = value;
                onChanged();
                return this;
            }

            public Builder clearItemNum() {
                this.bitField0_ &= 0xFFFFFFBF;
                this.itemNum_ = 0;
                onChanged();
                return this;
            }

            private void ensureAttrsIsMutable() {
                if ((this.bitField0_ & 0x80) != 128) {
                    this.attrs_ = new ArrayList<>(this.attrs_);
                    this.bitField0_ |= 0x80;
                }
            }

            public List<Common.AttributeBase> getAttrsList() {
                if (this.attrsBuilder_ == null)
                    return Collections.unmodifiableList(this.attrs_);
                return this.attrsBuilder_.getMessageList();
            }

            public int getAttrsCount() {
                if (this.attrsBuilder_ == null)
                    return this.attrs_.size();
                return this.attrsBuilder_.getCount();
            }

            public Common.AttributeBase getAttrs(int index) {
                if (this.attrsBuilder_ == null)
                    return this.attrs_.get(index);
                return (Common.AttributeBase) this.attrsBuilder_.getMessage(index);
            }

            public Builder setAttrs(int index, Common.AttributeBase value) {
                if (this.attrsBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureAttrsIsMutable();
                    this.attrs_.set(index, value);
                    onChanged();
                } else {
                    this.attrsBuilder_.setMessage(index, (GeneratedMessage) value);
                }
                return this;
            }

            public Builder setAttrs(int index, Common.AttributeBase.Builder builderForValue) {
                if (this.attrsBuilder_ == null) {
                    ensureAttrsIsMutable();
                    this.attrs_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    this.attrsBuilder_.setMessage(index, (GeneratedMessage) builderForValue.build());
                }
                return this;
            }

            public Builder addAttrs(Common.AttributeBase value) {
                if (this.attrsBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureAttrsIsMutable();
                    this.attrs_.add(value);
                    onChanged();
                } else {
                    this.attrsBuilder_.addMessage((GeneratedMessage) value);
                }
                return this;
            }

            public Builder addAttrs(int index, Common.AttributeBase value) {
                if (this.attrsBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureAttrsIsMutable();
                    this.attrs_.add(index, value);
                    onChanged();
                } else {
                    this.attrsBuilder_.addMessage(index, (GeneratedMessage) value);
                }
                return this;
            }

            public Builder addAttrs(Common.AttributeBase.Builder builderForValue) {
                if (this.attrsBuilder_ == null) {
                    ensureAttrsIsMutable();
                    this.attrs_.add(builderForValue.build());
                    onChanged();
                } else {
                    this.attrsBuilder_.addMessage((GeneratedMessage) builderForValue.build());
                }
                return this;
            }

            public Builder addAttrs(int index, Common.AttributeBase.Builder builderForValue) {
                if (this.attrsBuilder_ == null) {
                    ensureAttrsIsMutable();
                    this.attrs_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    this.attrsBuilder_.addMessage(index, (GeneratedMessage) builderForValue.build());
                }
                return this;
            }

            public Builder addAllAttrs(Iterable<? extends Common.AttributeBase> values) {
                if (this.attrsBuilder_ == null) {
                    ensureAttrsIsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.attrs_);
                    onChanged();
                } else {
                    this.attrsBuilder_.addAllMessages(values);
                }
                return this;
            }

            public Builder clearAttrs() {
                if (this.attrsBuilder_ == null) {
                    this.attrs_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFF7F;
                    onChanged();
                } else {
                    this.attrsBuilder_.clear();
                }
                return this;
            }

            public Builder removeAttrs(int index) {
                if (this.attrsBuilder_ == null) {
                    ensureAttrsIsMutable();
                    this.attrs_.remove(index);
                    onChanged();
                } else {
                    this.attrsBuilder_.remove(index);
                }
                return this;
            }

            public Common.AttributeBase.Builder getAttrsBuilder(int index) {
                return (Common.AttributeBase.Builder) getAttrsFieldBuilder().getBuilder(index);
            }

            public Common.AttributeBaseOrBuilder getAttrsOrBuilder(int index) {
                if (this.attrsBuilder_ == null)
                    return (Common.AttributeBaseOrBuilder) this.attrs_.get(index);
                return (Common.AttributeBaseOrBuilder) this.attrsBuilder_.getMessageOrBuilder(index);
            }

            public List<? extends Common.AttributeBaseOrBuilder> getAttrsOrBuilderList() {
                if (this.attrsBuilder_ != null)
                    return this.attrsBuilder_.getMessageOrBuilderList();
                return (List) Collections.unmodifiableList(this.attrs_);
            }

            public Common.AttributeBase.Builder addAttrsBuilder() {
                return (Common.AttributeBase.Builder) getAttrsFieldBuilder().addBuilder((GeneratedMessage) Common.AttributeBase.getDefaultInstance());
            }

            public Common.AttributeBase.Builder addAttrsBuilder(int index) {
                return (Common.AttributeBase.Builder) getAttrsFieldBuilder().addBuilder(index, (GeneratedMessage) Common.AttributeBase.getDefaultInstance());
            }

            public List<Common.AttributeBase.Builder> getAttrsBuilderList() {
                return getAttrsFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilder<Common.AttributeBase, Common.AttributeBase.Builder, Common.AttributeBaseOrBuilder> getAttrsFieldBuilder() {
                if (this.attrsBuilder_ == null) {
                    this.attrsBuilder_ = new RepeatedFieldBuilder(this.attrs_, ((this.bitField0_ & 0x80) == 128), getParentForChildren(), isClean());
                    this.attrs_ = null;
                }
                return this.attrsBuilder_;
            }
        }
    }

    public static final class PetIllusionInfoResponse extends GeneratedMessage implements PetIllusionInfoResponseOrBuilder {
        private static final PetIllusionInfoResponse defaultInstance = new PetIllusionInfoResponse(true);
        private final UnknownFieldSet unknownFields;

        private PetIllusionInfoResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private PetIllusionInfoResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static PetIllusionInfoResponse getDefaultInstance() {
            return defaultInstance;
        }

        public PetIllusionInfoResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private PetIllusionInfoResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    PetHandler.IllusionInfo.Builder subBuilder;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 26:
                            subBuilder = null;
                            if ((this.bitField0_ & 0x4) == 4) subBuilder = this.s2CData_.toBuilder();
                            this.s2CData_ = (PetHandler.IllusionInfo) input.readMessage(PetHandler.IllusionInfo.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.s2CData_);
                                this.s2CData_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x4;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_PetIllusionInfoResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_PetIllusionInfoResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetIllusionInfoResponse.class, Builder.class);
        }

        public static Parser<PetIllusionInfoResponse> PARSER = (Parser<PetIllusionInfoResponse>) new AbstractParser<PetIllusionInfoResponse>() {
            public PetHandler.PetIllusionInfoResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.PetIllusionInfoResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int S2C_DATA_FIELD_NUMBER = 3;
        private PetHandler.IllusionInfo s2CData_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<PetIllusionInfoResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        static {
            defaultInstance.initFields();
        }


        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }


        public boolean hasS2CData() {
            return ((this.bitField0_ & 0x4) == 4);
        }


        public PetHandler.IllusionInfo getS2CData() {
            return this.s2CData_;
        }


        public PetHandler.IllusionInfoOrBuilder getS2CDataOrBuilder() {
            return this.s2CData_;
        }


        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.s2CData_ = PetHandler.IllusionInfo.getDefaultInstance();
        }


        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
                return true;
            }
            if (isInitialized == 0) {
                return false;
            }
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (hasS2CData() && !getS2CData().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }


        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) {
                output.writeInt32(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                output.writeBytes(2, getS2CMsgBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                output.writeMessage(3, (MessageLite) this.s2CData_);
            }
            getUnknownFields().writeTo(output);
        }


        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) {
                size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                size += CodedOutputStream.computeMessageSize(3, (MessageLite) this.s2CData_);
            }
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }


        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }


        public static PetIllusionInfoResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (PetIllusionInfoResponse) PARSER.parseFrom(data);
        }


        public static PetIllusionInfoResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetIllusionInfoResponse) PARSER.parseFrom(data, extensionRegistry);
        }


        public static PetIllusionInfoResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (PetIllusionInfoResponse) PARSER.parseFrom(data);
        }


        public static PetIllusionInfoResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetIllusionInfoResponse) PARSER.parseFrom(data, extensionRegistry);
        }


        public static PetIllusionInfoResponse parseFrom(InputStream input) throws IOException {
            return (PetIllusionInfoResponse) PARSER.parseFrom(input);
        }


        public static PetIllusionInfoResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetIllusionInfoResponse) PARSER.parseFrom(input, extensionRegistry);
        }


        public static PetIllusionInfoResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (PetIllusionInfoResponse) PARSER.parseDelimitedFrom(input);
        }


        public static PetIllusionInfoResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetIllusionInfoResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }


        public static PetIllusionInfoResponse parseFrom(CodedInputStream input) throws IOException {
            return (PetIllusionInfoResponse) PARSER.parseFrom(input);
        }


        public static PetIllusionInfoResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetIllusionInfoResponse) PARSER.parseFrom(input, extensionRegistry);
        }


        public static Builder newBuilder() {
            return Builder.create();
        }


        public Builder newBuilderForType() {
            return newBuilder();
        }


        public static Builder newBuilder(PetIllusionInfoResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }


        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder
                extends GeneratedMessage.Builder<Builder>
                implements PetHandler.PetIllusionInfoResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;
            private PetHandler.IllusionInfo s2CData_;
            private SingleFieldBuilder<PetHandler.IllusionInfo, PetHandler.IllusionInfo.Builder, PetHandler.IllusionInfoOrBuilder> s2CDataBuilder_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_PetIllusionInfoResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_PetIllusionInfoResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.PetIllusionInfoResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                this.s2CData_ = PetHandler.IllusionInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                this.s2CData_ = PetHandler.IllusionInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.PetIllusionInfoResponse.alwaysUseFieldBuilders) {
                    getS2CDataFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                if (this.s2CDataBuilder_ == null) {
                    this.s2CData_ = PetHandler.IllusionInfo.getDefaultInstance();
                } else {
                    this.s2CDataBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_PetIllusionInfoResponse_descriptor;
            }

            public PetHandler.PetIllusionInfoResponse getDefaultInstanceForType() {
                return PetHandler.PetIllusionInfoResponse.getDefaultInstance();
            }

            public PetHandler.PetIllusionInfoResponse build() {
                PetHandler.PetIllusionInfoResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public PetHandler.PetIllusionInfoResponse buildPartial() {
                PetHandler.PetIllusionInfoResponse result = new PetHandler.PetIllusionInfoResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) {
                    to_bitField0_ |= 0x1;
                }
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) {
                    to_bitField0_ |= 0x2;
                }
                result.s2CMsg_ = this.s2CMsg_;
                if ((from_bitField0_ & 0x4) == 4) {
                    to_bitField0_ |= 0x4;
                }
                if (this.s2CDataBuilder_ == null) {
                    result.s2CData_ = this.s2CData_;
                } else {
                    result.s2CData_ = (PetHandler.IllusionInfo) this.s2CDataBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.PetIllusionInfoResponse) {
                    return mergeFrom((PetHandler.PetIllusionInfoResponse) other);
                }
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.PetIllusionInfoResponse other) {
                if (other == PetHandler.PetIllusionInfoResponse.getDefaultInstance()) {
                    return this;
                }
                if (other.hasS2CCode()) {
                    setS2CCode(other.getS2CCode());
                }
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (other.hasS2CData()) {
                    mergeS2CData(other.getS2CData());
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) {
                    return false;
                }
                if (hasS2CData() && !getS2CData().isInitialized()) {
                    return false;
                }
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.PetIllusionInfoResponse parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.PetIllusionInfoResponse) PetHandler.PetIllusionInfoResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.PetIllusionInfoResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.s2CMsg_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = PetHandler.PetIllusionInfoResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public boolean hasS2CData() {
                return ((this.bitField0_ & 0x4) == 4);
            }

            public PetHandler.IllusionInfo getS2CData() {
                if (this.s2CDataBuilder_ == null) {
                    return this.s2CData_;
                }
                return (PetHandler.IllusionInfo) this.s2CDataBuilder_.getMessage();
            }

            public Builder setS2CData(PetHandler.IllusionInfo value) {
                if (this.s2CDataBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.s2CData_ = value;
                    onChanged();
                } else {
                    this.s2CDataBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }

            public Builder setS2CData(PetHandler.IllusionInfo.Builder builderForValue) {
                if (this.s2CDataBuilder_ == null) {
                    this.s2CData_ = builderForValue.build();
                    onChanged();
                } else {
                    this.s2CDataBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x4;
                return this;
            }

            public Builder mergeS2CData(PetHandler.IllusionInfo value) {
                if (this.s2CDataBuilder_ == null) {
                    if ((this.bitField0_ & 0x4) == 4 && this.s2CData_ != PetHandler.IllusionInfo.getDefaultInstance()) {
                        this.s2CData_ = PetHandler.IllusionInfo.newBuilder(this.s2CData_).mergeFrom(value).buildPartial();
                    } else {
                        this.s2CData_ = value;
                    }
                    onChanged();
                } else {
                    this.s2CDataBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }

            public Builder clearS2CData() {
                if (this.s2CDataBuilder_ == null) {
                    this.s2CData_ = PetHandler.IllusionInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.s2CDataBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }

            public PetHandler.IllusionInfo.Builder getS2CDataBuilder() {
                this.bitField0_ |= 0x4;
                onChanged();
                return (PetHandler.IllusionInfo.Builder) getS2CDataFieldBuilder().getBuilder();
            }

            public PetHandler.IllusionInfoOrBuilder getS2CDataOrBuilder() {
                if (this.s2CDataBuilder_ != null) {
                    return (PetHandler.IllusionInfoOrBuilder) this.s2CDataBuilder_.getMessageOrBuilder();
                }
                return this.s2CData_;
            }

            private SingleFieldBuilder<PetHandler.IllusionInfo, PetHandler.IllusionInfo.Builder, PetHandler.IllusionInfoOrBuilder> getS2CDataFieldBuilder() {
                if (this.s2CDataBuilder_ == null) {
                    this.s2CDataBuilder_ = new SingleFieldBuilder(getS2CData(), getParentForChildren(), isClean());
                    this.s2CData_ = null;
                }
                return this.s2CDataBuilder_;
            }
        }
    }

    public static final class PetIllusionReviewRequest
            extends GeneratedMessage
            implements PetIllusionReviewRequestOrBuilder {
        private static final PetIllusionReviewRequest defaultInstance = new PetIllusionReviewRequest(true);
        private final UnknownFieldSet unknownFields;

        private PetIllusionReviewRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private PetIllusionReviewRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static PetIllusionReviewRequest getDefaultInstance() {
            return defaultInstance;
        }

        public PetIllusionReviewRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private PetIllusionReviewRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.s2CPetId_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_PetIllusionReviewRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_PetIllusionReviewRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetIllusionReviewRequest.class, Builder.class);
        }

        public static Parser<PetIllusionReviewRequest> PARSER = (Parser<PetIllusionReviewRequest>) new AbstractParser<PetIllusionReviewRequest>() {
            public PetHandler.PetIllusionReviewRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.PetIllusionReviewRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_PETID_FIELD_NUMBER = 1;
        private Object s2CPetId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<PetIllusionReviewRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CPetId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getS2CPetId() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CPetId_ = s;
            return s;
        }

        public ByteString getS2CPetIdBytes() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CPetId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CPetId_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CPetId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeBytes(1, getS2CPetIdBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeBytesSize(1, getS2CPetIdBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static PetIllusionReviewRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (PetIllusionReviewRequest) PARSER.parseFrom(data);
        }

        public static PetIllusionReviewRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetIllusionReviewRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PetIllusionReviewRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (PetIllusionReviewRequest) PARSER.parseFrom(data);
        }

        public static PetIllusionReviewRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetIllusionReviewRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PetIllusionReviewRequest parseFrom(InputStream input) throws IOException {
            return (PetIllusionReviewRequest) PARSER.parseFrom(input);
        }

        public static PetIllusionReviewRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetIllusionReviewRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static PetIllusionReviewRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (PetIllusionReviewRequest) PARSER.parseDelimitedFrom(input);
        }

        public static PetIllusionReviewRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetIllusionReviewRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static PetIllusionReviewRequest parseFrom(CodedInputStream input) throws IOException {
            return (PetIllusionReviewRequest) PARSER.parseFrom(input);
        }

        public static PetIllusionReviewRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetIllusionReviewRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(PetIllusionReviewRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.PetIllusionReviewRequestOrBuilder {
            private int bitField0_;
            private Object s2CPetId_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_PetIllusionReviewRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_PetIllusionReviewRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.PetIllusionReviewRequest.class, Builder.class);
            }

            private Builder() {
                this.s2CPetId_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CPetId_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.PetIllusionReviewRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CPetId_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_PetIllusionReviewRequest_descriptor;
            }

            public PetHandler.PetIllusionReviewRequest getDefaultInstanceForType() {
                return PetHandler.PetIllusionReviewRequest.getDefaultInstance();
            }

            public PetHandler.PetIllusionReviewRequest build() {
                PetHandler.PetIllusionReviewRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.PetIllusionReviewRequest buildPartial() {
                PetHandler.PetIllusionReviewRequest result = new PetHandler.PetIllusionReviewRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CPetId_ = this.s2CPetId_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.PetIllusionReviewRequest)
                    return mergeFrom((PetHandler.PetIllusionReviewRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.PetIllusionReviewRequest other) {
                if (other == PetHandler.PetIllusionReviewRequest.getDefaultInstance()) return this;
                if (other.hasS2CPetId()) {
                    this.bitField0_ |= 0x1;
                    this.s2CPetId_ = other.s2CPetId_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CPetId()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.PetIllusionReviewRequest parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.PetIllusionReviewRequest) PetHandler.PetIllusionReviewRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.PetIllusionReviewRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CPetId() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getS2CPetId() {
                Object ref = this.s2CPetId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CPetId_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CPetIdBytes() {
                Object ref = this.s2CPetId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CPetId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CPetId(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CPetId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CPetId_ = PetHandler.PetIllusionReviewRequest.getDefaultInstance().getS2CPetId();
                onChanged();
                return this;
            }

            public Builder setS2CPetIdBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class IllusionReview
            extends GeneratedMessage
            implements IllusionReviewOrBuilder {
        private static final IllusionReview defaultInstance = new IllusionReview(true);
        private final UnknownFieldSet unknownFields;

        private IllusionReview(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private IllusionReview(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static IllusionReview getDefaultInstance() {
            return defaultInstance;
        }

        public IllusionReview getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private IllusionReview(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.fightPower_ = input.readInt32();
                            break;
                        case 16:
                            this.bitField0_ |= 0x2;
                            this.transformLevel_ = input.readInt32();
                            break;
                        case 24:
                            this.bitField0_ |= 0x4;
                            this.luckyLimit_ = input.readInt32();
                            break;
                        case 32:
                            this.bitField0_ |= 0x8;
                            this.needUp_ = input.readInt32();
                            break;
                        case 40:
                            this.bitField0_ |= 0x10;
                            this.successPer_ = input.readInt32();
                            break;
                        case 48:
                            this.bitField0_ |= 0x20;
                            this.itemNum_ = input.readInt32();
                            break;
                        case 58:
                            if ((mutable_bitField0_ & 0x40) != 64) {
                                this.attrs_ = new ArrayList<>();
                                mutable_bitField0_ |= 0x40;
                            }
                            this.attrs_.add(input.readMessage(Common.AttributeBase.PARSER, extensionRegistry));
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                if ((mutable_bitField0_ & 0x40) == 64) this.attrs_ = Collections.unmodifiableList(this.attrs_);
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_IllusionReview_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_IllusionReview_fieldAccessorTable.ensureFieldAccessorsInitialized(IllusionReview.class, Builder.class);
        }

        public static Parser<IllusionReview> PARSER = (Parser<IllusionReview>) new AbstractParser<IllusionReview>() {
            public PetHandler.IllusionReview parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.IllusionReview(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int FIGHTPOWER_FIELD_NUMBER = 1;
        private int fightPower_;
        public static final int TRANSFORMLEVEL_FIELD_NUMBER = 2;
        private int transformLevel_;
        public static final int LUCKYLIMIT_FIELD_NUMBER = 3;
        private int luckyLimit_;
        public static final int NEEDUP_FIELD_NUMBER = 4;
        private int needUp_;
        public static final int SUCCESSPER_FIELD_NUMBER = 5;
        private int successPer_;
        public static final int ITEMNUM_FIELD_NUMBER = 6;
        private int itemNum_;
        public static final int ATTRS_FIELD_NUMBER = 7;
        private List<Common.AttributeBase> attrs_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<IllusionReview> getParserForType() {
            return PARSER;
        }

        public boolean hasFightPower() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getFightPower() {
            return this.fightPower_;
        }

        public boolean hasTransformLevel() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public int getTransformLevel() {
            return this.transformLevel_;
        }

        static {
            defaultInstance.initFields();
        }


        public boolean hasLuckyLimit() {
            return ((this.bitField0_ & 0x4) == 4);
        }


        public int getLuckyLimit() {
            return this.luckyLimit_;
        }


        public boolean hasNeedUp() {
            return ((this.bitField0_ & 0x8) == 8);
        }


        public int getNeedUp() {
            return this.needUp_;
        }


        public boolean hasSuccessPer() {
            return ((this.bitField0_ & 0x10) == 16);
        }


        public int getSuccessPer() {
            return this.successPer_;
        }


        public boolean hasItemNum() {
            return ((this.bitField0_ & 0x20) == 32);
        }


        public int getItemNum() {
            return this.itemNum_;
        }


        public List<Common.AttributeBase> getAttrsList() {
            return this.attrs_;
        }


        public List<? extends Common.AttributeBaseOrBuilder> getAttrsOrBuilderList() {
            return (List) this.attrs_;
        }


        public int getAttrsCount() {
            return this.attrs_.size();
        }


        public Common.AttributeBase getAttrs(int index) {
            return this.attrs_.get(index);
        }


        public Common.AttributeBaseOrBuilder getAttrsOrBuilder(int index) {
            return (Common.AttributeBaseOrBuilder) this.attrs_.get(index);
        }


        private void initFields() {
            this.fightPower_ = 0;
            this.transformLevel_ = 0;
            this.luckyLimit_ = 0;
            this.needUp_ = 0;
            this.successPer_ = 0;
            this.itemNum_ = 0;
            this.attrs_ = Collections.emptyList();
        }


        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
                return true;
            }
            if (isInitialized == 0) {
                return false;
            }
            if (!hasFightPower()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasTransformLevel()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasLuckyLimit()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasNeedUp()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasSuccessPer()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasItemNum()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            for (int i = 0; i < getAttrsCount(); i++) {
                if (!getAttrs(i).isInitialized()) {
                    this.memoizedIsInitialized = 0;
                    return false;
                }
            }
            this.memoizedIsInitialized = 1;
            return true;
        }


        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) {
                output.writeInt32(1, this.fightPower_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                output.writeInt32(2, this.transformLevel_);
            }
            if ((this.bitField0_ & 0x4) == 4) {
                output.writeInt32(3, this.luckyLimit_);
            }
            if ((this.bitField0_ & 0x8) == 8) {
                output.writeInt32(4, this.needUp_);
            }
            if ((this.bitField0_ & 0x10) == 16) {
                output.writeInt32(5, this.successPer_);
            }
            if ((this.bitField0_ & 0x20) == 32) {
                output.writeInt32(6, this.itemNum_);
            }
            for (int i = 0; i < this.attrs_.size(); i++) {
                output.writeMessage(7, (MessageLite) this.attrs_.get(i));
            }
            getUnknownFields().writeTo(output);
        }


        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) {
                size += CodedOutputStream.computeInt32Size(1, this.fightPower_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                size += CodedOutputStream.computeInt32Size(2, this.transformLevel_);
            }
            if ((this.bitField0_ & 0x4) == 4) {
                size += CodedOutputStream.computeInt32Size(3, this.luckyLimit_);
            }
            if ((this.bitField0_ & 0x8) == 8) {
                size += CodedOutputStream.computeInt32Size(4, this.needUp_);
            }
            if ((this.bitField0_ & 0x10) == 16) {
                size += CodedOutputStream.computeInt32Size(5, this.successPer_);
            }
            if ((this.bitField0_ & 0x20) == 32) {
                size += CodedOutputStream.computeInt32Size(6, this.itemNum_);
            }
            for (int i = 0; i < this.attrs_.size(); i++) {
                size += CodedOutputStream.computeMessageSize(7, (MessageLite) this.attrs_.get(i));
            }
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }


        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }


        public static IllusionReview parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (IllusionReview) PARSER.parseFrom(data);
        }


        public static IllusionReview parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (IllusionReview) PARSER.parseFrom(data, extensionRegistry);
        }


        public static IllusionReview parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (IllusionReview) PARSER.parseFrom(data);
        }


        public static IllusionReview parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (IllusionReview) PARSER.parseFrom(data, extensionRegistry);
        }


        public static IllusionReview parseFrom(InputStream input) throws IOException {
            return (IllusionReview) PARSER.parseFrom(input);
        }


        public static IllusionReview parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (IllusionReview) PARSER.parseFrom(input, extensionRegistry);
        }


        public static IllusionReview parseDelimitedFrom(InputStream input) throws IOException {
            return (IllusionReview) PARSER.parseDelimitedFrom(input);
        }


        public static IllusionReview parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (IllusionReview) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }


        public static IllusionReview parseFrom(CodedInputStream input) throws IOException {
            return (IllusionReview) PARSER.parseFrom(input);
        }


        public static IllusionReview parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (IllusionReview) PARSER.parseFrom(input, extensionRegistry);
        }


        public static Builder newBuilder() {
            return Builder.create();
        }


        public Builder newBuilderForType() {
            return newBuilder();
        }


        public static Builder newBuilder(IllusionReview prototype) {
            return newBuilder().mergeFrom(prototype);
        }


        public Builder toBuilder() {
            return newBuilder(this);
        }


        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }


        public static final class Builder
                extends GeneratedMessage.Builder<Builder>
                implements PetHandler.IllusionReviewOrBuilder {
            private int bitField0_;


            private int fightPower_;


            private int transformLevel_;


            private int luckyLimit_;


            private int needUp_;


            private int successPer_;


            private int itemNum_;


            private List<Common.AttributeBase> attrs_;


            private RepeatedFieldBuilder<Common.AttributeBase, Common.AttributeBase.Builder, Common.AttributeBaseOrBuilder> attrsBuilder_;


            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_IllusionReview_descriptor;
            }


            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_IllusionReview_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.IllusionReview.class, Builder.class);
            }


            private Builder() {
                this.attrs_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }


            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.attrs_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }


            private void maybeForceBuilderInitialization() {
                if (PetHandler.IllusionReview.alwaysUseFieldBuilders) {
                    getAttrsFieldBuilder();
                }
            }


            private static Builder create() {
                return new Builder();
            }


            public Builder clear() {
                super.clear();
                this.fightPower_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.transformLevel_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                this.luckyLimit_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.needUp_ = 0;
                this.bitField0_ &= 0xFFFFFFF7;
                this.successPer_ = 0;
                this.bitField0_ &= 0xFFFFFFEF;
                this.itemNum_ = 0;
                this.bitField0_ &= 0xFFFFFFDF;
                if (this.attrsBuilder_ == null) {
                    this.attrs_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFBF;
                } else {
                    this.attrsBuilder_.clear();
                }
                return this;
            }


            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }


            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_IllusionReview_descriptor;
            }


            public PetHandler.IllusionReview getDefaultInstanceForType() {
                return PetHandler.IllusionReview.getDefaultInstance();
            }


            public PetHandler.IllusionReview build() {
                PetHandler.IllusionReview result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }


            public PetHandler.IllusionReview buildPartial() {
                PetHandler.IllusionReview result = new PetHandler.IllusionReview(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) {
                    to_bitField0_ |= 0x1;
                }
                result.fightPower_ = this.fightPower_;
                if ((from_bitField0_ & 0x2) == 2) {
                    to_bitField0_ |= 0x2;
                }
                result.transformLevel_ = this.transformLevel_;
                if ((from_bitField0_ & 0x4) == 4) {
                    to_bitField0_ |= 0x4;
                }
                result.luckyLimit_ = this.luckyLimit_;
                if ((from_bitField0_ & 0x8) == 8) {
                    to_bitField0_ |= 0x8;
                }
                result.needUp_ = this.needUp_;
                if ((from_bitField0_ & 0x10) == 16) {
                    to_bitField0_ |= 0x10;
                }
                result.successPer_ = this.successPer_;
                if ((from_bitField0_ & 0x20) == 32) {
                    to_bitField0_ |= 0x20;
                }
                result.itemNum_ = this.itemNum_;
                if (this.attrsBuilder_ == null) {
                    if ((this.bitField0_ & 0x40) == 64) {
                        this.attrs_ = Collections.unmodifiableList(this.attrs_);
                        this.bitField0_ &= 0xFFFFFFBF;
                    }
                    result.attrs_ = this.attrs_;
                } else {
                    result.attrs_ = this.attrsBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }


            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.IllusionReview) {
                    return mergeFrom((PetHandler.IllusionReview) other);
                }
                super.mergeFrom(other);
                return this;
            }


            public Builder mergeFrom(PetHandler.IllusionReview other) {
                if (other == PetHandler.IllusionReview.getDefaultInstance()) {
                    return this;
                }
                if (other.hasFightPower()) {
                    setFightPower(other.getFightPower());
                }
                if (other.hasTransformLevel()) {
                    setTransformLevel(other.getTransformLevel());
                }
                if (other.hasLuckyLimit()) {
                    setLuckyLimit(other.getLuckyLimit());
                }
                if (other.hasNeedUp()) {
                    setNeedUp(other.getNeedUp());
                }
                if (other.hasSuccessPer()) {
                    setSuccessPer(other.getSuccessPer());
                }
                if (other.hasItemNum()) {
                    setItemNum(other.getItemNum());
                }
                if (this.attrsBuilder_ == null) {
                    if (!other.attrs_.isEmpty()) {
                        if (this.attrs_.isEmpty()) {
                            this.attrs_ = other.attrs_;
                            this.bitField0_ &= 0xFFFFFFBF;
                        } else {
                            ensureAttrsIsMutable();
                            this.attrs_.addAll(other.attrs_);
                        }
                        onChanged();
                    }
                } else if (!other.attrs_.isEmpty()) {
                    if (this.attrsBuilder_.isEmpty()) {
                        this.attrsBuilder_.dispose();
                        this.attrsBuilder_ = null;
                        this.attrs_ = other.attrs_;
                        this.bitField0_ &= 0xFFFFFFBF;
                        this.attrsBuilder_ = PetHandler.IllusionReview.alwaysUseFieldBuilders ? getAttrsFieldBuilder() : null;
                    } else {
                        this.attrsBuilder_.addAllMessages(other.attrs_);
                    }
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }


            public final boolean isInitialized() {
                if (!hasFightPower()) {
                    return false;
                }
                if (!hasTransformLevel()) {
                    return false;
                }
                if (!hasLuckyLimit()) {
                    return false;
                }
                if (!hasNeedUp()) {
                    return false;
                }
                if (!hasSuccessPer()) {
                    return false;
                }
                if (!hasItemNum()) {
                    return false;
                }
                for (int i = 0; i < getAttrsCount(); i++) {
                    if (!getAttrs(i).isInitialized()) {
                        return false;
                    }
                }
                return true;
            }


            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.IllusionReview parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.IllusionReview) PetHandler.IllusionReview.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.IllusionReview) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }


            public boolean hasFightPower() {
                return ((this.bitField0_ & 0x1) == 1);
            }


            public int getFightPower() {
                return this.fightPower_;
            }


            public Builder setFightPower(int value) {
                this.bitField0_ |= 0x1;
                this.fightPower_ = value;
                onChanged();
                return this;
            }


            public Builder clearFightPower() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.fightPower_ = 0;
                onChanged();
                return this;
            }


            public boolean hasTransformLevel() {
                return ((this.bitField0_ & 0x2) == 2);
            }


            public int getTransformLevel() {
                return this.transformLevel_;
            }


            public Builder setTransformLevel(int value) {
                this.bitField0_ |= 0x2;
                this.transformLevel_ = value;
                onChanged();
                return this;
            }


            public Builder clearTransformLevel() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.transformLevel_ = 0;
                onChanged();
                return this;
            }


            public boolean hasLuckyLimit() {
                return ((this.bitField0_ & 0x4) == 4);
            }


            public int getLuckyLimit() {
                return this.luckyLimit_;
            }


            public Builder setLuckyLimit(int value) {
                this.bitField0_ |= 0x4;
                this.luckyLimit_ = value;
                onChanged();
                return this;
            }


            public Builder clearLuckyLimit() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.luckyLimit_ = 0;
                onChanged();
                return this;
            }


            public boolean hasNeedUp() {
                return ((this.bitField0_ & 0x8) == 8);
            }


            public int getNeedUp() {
                return this.needUp_;
            }


            public Builder setNeedUp(int value) {
                this.bitField0_ |= 0x8;
                this.needUp_ = value;
                onChanged();
                return this;
            }


            public Builder clearNeedUp() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.needUp_ = 0;
                onChanged();
                return this;
            }


            public boolean hasSuccessPer() {
                return ((this.bitField0_ & 0x10) == 16);
            }


            public int getSuccessPer() {
                return this.successPer_;
            }


            public Builder setSuccessPer(int value) {
                this.bitField0_ |= 0x10;
                this.successPer_ = value;
                onChanged();
                return this;
            }


            public Builder clearSuccessPer() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.successPer_ = 0;
                onChanged();
                return this;
            }


            public boolean hasItemNum() {
                return ((this.bitField0_ & 0x20) == 32);
            }


            public int getItemNum() {
                return this.itemNum_;
            }


            public Builder setItemNum(int value) {
                this.bitField0_ |= 0x20;
                this.itemNum_ = value;
                onChanged();
                return this;
            }


            public Builder clearItemNum() {
                this.bitField0_ &= 0xFFFFFFDF;
                this.itemNum_ = 0;
                onChanged();
                return this;
            }


            private void ensureAttrsIsMutable() {
                if ((this.bitField0_ & 0x40) != 64) {
                    this.attrs_ = new ArrayList<>(this.attrs_);
                    this.bitField0_ |= 0x40;
                }
            }


            public List<Common.AttributeBase> getAttrsList() {
                if (this.attrsBuilder_ == null) {
                    return Collections.unmodifiableList(this.attrs_);
                }
                return this.attrsBuilder_.getMessageList();
            }


            public int getAttrsCount() {
                if (this.attrsBuilder_ == null) {
                    return this.attrs_.size();
                }
                return this.attrsBuilder_.getCount();
            }


            public Common.AttributeBase getAttrs(int index) {
                if (this.attrsBuilder_ == null) {
                    return this.attrs_.get(index);
                }
                return (Common.AttributeBase) this.attrsBuilder_.getMessage(index);
            }


            public Builder setAttrs(int index, Common.AttributeBase value) {
                if (this.attrsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureAttrsIsMutable();
                    this.attrs_.set(index, value);
                    onChanged();
                } else {
                    this.attrsBuilder_.setMessage(index, (GeneratedMessage) value);
                }
                return this;
            }


            public Builder setAttrs(int index, Common.AttributeBase.Builder builderForValue) {
                if (this.attrsBuilder_ == null) {
                    ensureAttrsIsMutable();
                    this.attrs_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    this.attrsBuilder_.setMessage(index, (GeneratedMessage) builderForValue.build());
                }
                return this;
            }


            public Builder addAttrs(Common.AttributeBase value) {
                if (this.attrsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureAttrsIsMutable();
                    this.attrs_.add(value);
                    onChanged();
                } else {
                    this.attrsBuilder_.addMessage((GeneratedMessage) value);
                }
                return this;
            }


            public Builder addAttrs(int index, Common.AttributeBase value) {
                if (this.attrsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureAttrsIsMutable();
                    this.attrs_.add(index, value);
                    onChanged();
                } else {
                    this.attrsBuilder_.addMessage(index, (GeneratedMessage) value);
                }
                return this;
            }


            public Builder addAttrs(Common.AttributeBase.Builder builderForValue) {
                if (this.attrsBuilder_ == null) {
                    ensureAttrsIsMutable();
                    this.attrs_.add(builderForValue.build());
                    onChanged();
                } else {
                    this.attrsBuilder_.addMessage((GeneratedMessage) builderForValue.build());
                }
                return this;
            }


            public Builder addAttrs(int index, Common.AttributeBase.Builder builderForValue) {
                if (this.attrsBuilder_ == null) {
                    ensureAttrsIsMutable();
                    this.attrs_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    this.attrsBuilder_.addMessage(index, (GeneratedMessage) builderForValue.build());
                }
                return this;
            }


            public Builder addAllAttrs(Iterable<? extends Common.AttributeBase> values) {
                if (this.attrsBuilder_ == null) {
                    ensureAttrsIsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.attrs_);
                    onChanged();
                } else {
                    this.attrsBuilder_.addAllMessages(values);
                }
                return this;
            }


            public Builder clearAttrs() {
                if (this.attrsBuilder_ == null) {
                    this.attrs_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFBF;
                    onChanged();
                } else {
                    this.attrsBuilder_.clear();
                }
                return this;
            }


            public Builder removeAttrs(int index) {
                if (this.attrsBuilder_ == null) {
                    ensureAttrsIsMutable();
                    this.attrs_.remove(index);
                    onChanged();
                } else {
                    this.attrsBuilder_.remove(index);
                }
                return this;
            }


            public Common.AttributeBase.Builder getAttrsBuilder(int index) {
                return (Common.AttributeBase.Builder) getAttrsFieldBuilder().getBuilder(index);
            }


            public Common.AttributeBaseOrBuilder getAttrsOrBuilder(int index) {
                if (this.attrsBuilder_ == null) {
                    return (Common.AttributeBaseOrBuilder) this.attrs_.get(index);
                }
                return (Common.AttributeBaseOrBuilder) this.attrsBuilder_.getMessageOrBuilder(index);
            }


            public List<? extends Common.AttributeBaseOrBuilder> getAttrsOrBuilderList() {
                if (this.attrsBuilder_ != null) {
                    return this.attrsBuilder_.getMessageOrBuilderList();
                }
                return (List) Collections.unmodifiableList(this.attrs_);
            }


            public Common.AttributeBase.Builder addAttrsBuilder() {
                return (Common.AttributeBase.Builder) getAttrsFieldBuilder().addBuilder((GeneratedMessage) Common.AttributeBase.getDefaultInstance());
            }


            public Common.AttributeBase.Builder addAttrsBuilder(int index) {
                return (Common.AttributeBase.Builder) getAttrsFieldBuilder().addBuilder(index, (GeneratedMessage) Common.AttributeBase.getDefaultInstance());
            }


            public List<Common.AttributeBase.Builder> getAttrsBuilderList() {
                return getAttrsFieldBuilder().getBuilderList();
            }


            private RepeatedFieldBuilder<Common.AttributeBase, Common.AttributeBase.Builder, Common.AttributeBaseOrBuilder> getAttrsFieldBuilder() {
                if (this.attrsBuilder_ == null) {
                    this.attrsBuilder_ = new RepeatedFieldBuilder(this.attrs_, ((this.bitField0_ & 0x40) == 64), getParentForChildren(), isClean());
                    this.attrs_ = null;
                }
                return this.attrsBuilder_;
            }
        }
    }


    public static final class PetIllusionReviewResponse
            extends GeneratedMessage
            implements PetIllusionReviewResponseOrBuilder {
        private static final PetIllusionReviewResponse defaultInstance = new PetIllusionReviewResponse(true);
        private final UnknownFieldSet unknownFields;

        private PetIllusionReviewResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private PetIllusionReviewResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static PetIllusionReviewResponse getDefaultInstance() {
            return defaultInstance;
        }

        public PetIllusionReviewResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private PetIllusionReviewResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 26:
                            if ((mutable_bitField0_ & 0x4) != 4) {
                                this.s2CData_ = new ArrayList<>();
                                mutable_bitField0_ |= 0x4;
                            }
                            this.s2CData_.add(input.readMessage(PetHandler.IllusionReview.PARSER, extensionRegistry));
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                if ((mutable_bitField0_ & 0x4) == 4) this.s2CData_ = Collections.unmodifiableList(this.s2CData_);
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_PetIllusionReviewResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_PetIllusionReviewResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetIllusionReviewResponse.class, Builder.class);
        }

        public static Parser<PetIllusionReviewResponse> PARSER = (Parser<PetIllusionReviewResponse>) new AbstractParser<PetIllusionReviewResponse>() {
            public PetHandler.PetIllusionReviewResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.PetIllusionReviewResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int S2C_DATA_FIELD_NUMBER = 3;
        private List<PetHandler.IllusionReview> s2CData_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<PetIllusionReviewResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        static {
            defaultInstance.initFields();
        }


        public List<PetHandler.IllusionReview> getS2CDataList() {
            return this.s2CData_;
        }


        public List<? extends PetHandler.IllusionReviewOrBuilder> getS2CDataOrBuilderList() {
            return (List) this.s2CData_;
        }


        public int getS2CDataCount() {
            return this.s2CData_.size();
        }


        public PetHandler.IllusionReview getS2CData(int index) {
            return this.s2CData_.get(index);
        }


        public PetHandler.IllusionReviewOrBuilder getS2CDataOrBuilder(int index) {
            return this.s2CData_.get(index);
        }


        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.s2CData_ = Collections.emptyList();
        }


        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
                return true;
            }
            if (isInitialized == 0) {
                return false;
            }
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            for (int i = 0; i < getS2CDataCount(); i++) {
                if (!getS2CData(i).isInitialized()) {
                    this.memoizedIsInitialized = 0;
                    return false;
                }
            }
            this.memoizedIsInitialized = 1;
            return true;
        }


        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) {
                output.writeInt32(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                output.writeBytes(2, getS2CMsgBytes());
            }
            for (int i = 0; i < this.s2CData_.size(); i++) {
                output.writeMessage(3, (MessageLite) this.s2CData_.get(i));
            }
            getUnknownFields().writeTo(output);
        }


        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) {
                size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            }
            for (int i = 0; i < this.s2CData_.size(); i++) {
                size += CodedOutputStream.computeMessageSize(3, (MessageLite) this.s2CData_.get(i));
            }
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }


        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }


        public static PetIllusionReviewResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (PetIllusionReviewResponse) PARSER.parseFrom(data);
        }


        public static PetIllusionReviewResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetIllusionReviewResponse) PARSER.parseFrom(data, extensionRegistry);
        }


        public static PetIllusionReviewResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (PetIllusionReviewResponse) PARSER.parseFrom(data);
        }


        public static PetIllusionReviewResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetIllusionReviewResponse) PARSER.parseFrom(data, extensionRegistry);
        }


        public static PetIllusionReviewResponse parseFrom(InputStream input) throws IOException {
            return (PetIllusionReviewResponse) PARSER.parseFrom(input);
        }


        public static PetIllusionReviewResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetIllusionReviewResponse) PARSER.parseFrom(input, extensionRegistry);
        }


        public static PetIllusionReviewResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (PetIllusionReviewResponse) PARSER.parseDelimitedFrom(input);
        }


        public static PetIllusionReviewResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetIllusionReviewResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }


        public static PetIllusionReviewResponse parseFrom(CodedInputStream input) throws IOException {
            return (PetIllusionReviewResponse) PARSER.parseFrom(input);
        }


        public static PetIllusionReviewResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetIllusionReviewResponse) PARSER.parseFrom(input, extensionRegistry);
        }


        public static Builder newBuilder() {
            return Builder.create();
        }


        public Builder newBuilderForType() {
            return newBuilder();
        }


        public static Builder newBuilder(PetIllusionReviewResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }


        public Builder toBuilder() {
            return newBuilder(this);
        }


        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }


        public static final class Builder
                extends GeneratedMessage.Builder<Builder>
                implements PetHandler.PetIllusionReviewResponseOrBuilder {
            private int bitField0_;


            private int s2CCode_;


            private Object s2CMsg_;


            private List<PetHandler.IllusionReview> s2CData_;


            private RepeatedFieldBuilder<PetHandler.IllusionReview, PetHandler.IllusionReview.Builder, PetHandler.IllusionReviewOrBuilder> s2CDataBuilder_;


            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_PetIllusionReviewResponse_descriptor;
            }


            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_PetIllusionReviewResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.PetIllusionReviewResponse.class, Builder.class);
            }


            private Builder() {
                this.s2CMsg_ = "";
                this.s2CData_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }


            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                this.s2CData_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }


            private void maybeForceBuilderInitialization() {
                if (PetHandler.PetIllusionReviewResponse.alwaysUseFieldBuilders) {
                    getS2CDataFieldBuilder();
                }
            }


            private static Builder create() {
                return new Builder();
            }


            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                if (this.s2CDataBuilder_ == null) {
                    this.s2CData_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFB;
                } else {
                    this.s2CDataBuilder_.clear();
                }
                return this;
            }


            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }


            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_PetIllusionReviewResponse_descriptor;
            }


            public PetHandler.PetIllusionReviewResponse getDefaultInstanceForType() {
                return PetHandler.PetIllusionReviewResponse.getDefaultInstance();
            }


            public PetHandler.PetIllusionReviewResponse build() {
                PetHandler.PetIllusionReviewResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }


            public PetHandler.PetIllusionReviewResponse buildPartial() {
                PetHandler.PetIllusionReviewResponse result = new PetHandler.PetIllusionReviewResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) {
                    to_bitField0_ |= 0x1;
                }
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) {
                    to_bitField0_ |= 0x2;
                }
                result.s2CMsg_ = this.s2CMsg_;
                if (this.s2CDataBuilder_ == null) {
                    if ((this.bitField0_ & 0x4) == 4) {
                        this.s2CData_ = Collections.unmodifiableList(this.s2CData_);
                        this.bitField0_ &= 0xFFFFFFFB;
                    }
                    result.s2CData_ = this.s2CData_;
                } else {
                    result.s2CData_ = this.s2CDataBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }


            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.PetIllusionReviewResponse) {
                    return mergeFrom((PetHandler.PetIllusionReviewResponse) other);
                }
                super.mergeFrom(other);
                return this;
            }


            public Builder mergeFrom(PetHandler.PetIllusionReviewResponse other) {
                if (other == PetHandler.PetIllusionReviewResponse.getDefaultInstance()) {
                    return this;
                }
                if (other.hasS2CCode()) {
                    setS2CCode(other.getS2CCode());
                }
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (this.s2CDataBuilder_ == null) {
                    if (!other.s2CData_.isEmpty()) {
                        if (this.s2CData_.isEmpty()) {
                            this.s2CData_ = other.s2CData_;
                            this.bitField0_ &= 0xFFFFFFFB;
                        } else {
                            ensureS2CDataIsMutable();
                            this.s2CData_.addAll(other.s2CData_);
                        }
                        onChanged();
                    }
                } else if (!other.s2CData_.isEmpty()) {
                    if (this.s2CDataBuilder_.isEmpty()) {
                        this.s2CDataBuilder_.dispose();
                        this.s2CDataBuilder_ = null;
                        this.s2CData_ = other.s2CData_;
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.s2CDataBuilder_ = PetHandler.PetIllusionReviewResponse.alwaysUseFieldBuilders ? getS2CDataFieldBuilder() : null;
                    } else {
                        this.s2CDataBuilder_.addAllMessages(other.s2CData_);
                    }
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }


            public final boolean isInitialized() {
                if (!hasS2CCode()) {
                    return false;
                }
                for (int i = 0; i < getS2CDataCount(); i++) {
                    if (!getS2CData(i).isInitialized()) {
                        return false;
                    }
                }
                return true;
            }


            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.PetIllusionReviewResponse parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.PetIllusionReviewResponse) PetHandler.PetIllusionReviewResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.PetIllusionReviewResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }


            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }


            public int getS2CCode() {
                return this.s2CCode_;
            }


            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }


            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }


            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }


            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.s2CMsg_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setS2CMsg(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }


            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = PetHandler.PetIllusionReviewResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }


            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }


            private void ensureS2CDataIsMutable() {
                if ((this.bitField0_ & 0x4) != 4) {
                    this.s2CData_ = new ArrayList<>(this.s2CData_);
                    this.bitField0_ |= 0x4;
                }
            }


            public List<PetHandler.IllusionReview> getS2CDataList() {
                if (this.s2CDataBuilder_ == null) {
                    return Collections.unmodifiableList(this.s2CData_);
                }
                return this.s2CDataBuilder_.getMessageList();
            }


            public int getS2CDataCount() {
                if (this.s2CDataBuilder_ == null) {
                    return this.s2CData_.size();
                }
                return this.s2CDataBuilder_.getCount();
            }


            public PetHandler.IllusionReview getS2CData(int index) {
                if (this.s2CDataBuilder_ == null) {
                    return this.s2CData_.get(index);
                }
                return (PetHandler.IllusionReview) this.s2CDataBuilder_.getMessage(index);
            }


            public Builder setS2CData(int index, PetHandler.IllusionReview value) {
                if (this.s2CDataBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureS2CDataIsMutable();
                    this.s2CData_.set(index, value);
                    onChanged();
                } else {
                    this.s2CDataBuilder_.setMessage(index, value);
                }
                return this;
            }


            public Builder setS2CData(int index, PetHandler.IllusionReview.Builder builderForValue) {
                if (this.s2CDataBuilder_ == null) {
                    ensureS2CDataIsMutable();
                    this.s2CData_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    this.s2CDataBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }


            public Builder addS2CData(PetHandler.IllusionReview value) {
                if (this.s2CDataBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureS2CDataIsMutable();
                    this.s2CData_.add(value);
                    onChanged();
                } else {
                    this.s2CDataBuilder_.addMessage(value);
                }
                return this;
            }


            public Builder addS2CData(int index, PetHandler.IllusionReview value) {
                if (this.s2CDataBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureS2CDataIsMutable();
                    this.s2CData_.add(index, value);
                    onChanged();
                } else {
                    this.s2CDataBuilder_.addMessage(index, value);
                }
                return this;
            }


            public Builder addS2CData(PetHandler.IllusionReview.Builder builderForValue) {
                if (this.s2CDataBuilder_ == null) {
                    ensureS2CDataIsMutable();
                    this.s2CData_.add(builderForValue.build());
                    onChanged();
                } else {
                    this.s2CDataBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }


            public Builder addS2CData(int index, PetHandler.IllusionReview.Builder builderForValue) {
                if (this.s2CDataBuilder_ == null) {
                    ensureS2CDataIsMutable();
                    this.s2CData_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    this.s2CDataBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }


            public Builder addAllS2CData(Iterable<? extends PetHandler.IllusionReview> values) {
                if (this.s2CDataBuilder_ == null) {
                    ensureS2CDataIsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.s2CData_);
                    onChanged();
                } else {
                    this.s2CDataBuilder_.addAllMessages(values);
                }
                return this;
            }


            public Builder clearS2CData() {
                if (this.s2CDataBuilder_ == null) {
                    this.s2CData_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFB;
                    onChanged();
                } else {
                    this.s2CDataBuilder_.clear();
                }
                return this;
            }


            public Builder removeS2CData(int index) {
                if (this.s2CDataBuilder_ == null) {
                    ensureS2CDataIsMutable();
                    this.s2CData_.remove(index);
                    onChanged();
                } else {
                    this.s2CDataBuilder_.remove(index);
                }
                return this;
            }


            public PetHandler.IllusionReview.Builder getS2CDataBuilder(int index) {
                return (PetHandler.IllusionReview.Builder) getS2CDataFieldBuilder().getBuilder(index);
            }


            public PetHandler.IllusionReviewOrBuilder getS2CDataOrBuilder(int index) {
                if (this.s2CDataBuilder_ == null) {
                    return this.s2CData_.get(index);
                }
                return (PetHandler.IllusionReviewOrBuilder) this.s2CDataBuilder_.getMessageOrBuilder(index);
            }


            public List<? extends PetHandler.IllusionReviewOrBuilder> getS2CDataOrBuilderList() {
                if (this.s2CDataBuilder_ != null) {
                    return this.s2CDataBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList((List) this.s2CData_);
            }


            public PetHandler.IllusionReview.Builder addS2CDataBuilder() {
                return (PetHandler.IllusionReview.Builder) getS2CDataFieldBuilder().addBuilder(PetHandler.IllusionReview.getDefaultInstance());
            }


            public PetHandler.IllusionReview.Builder addS2CDataBuilder(int index) {
                return (PetHandler.IllusionReview.Builder) getS2CDataFieldBuilder().addBuilder(index, PetHandler.IllusionReview.getDefaultInstance());
            }


            public List<PetHandler.IllusionReview.Builder> getS2CDataBuilderList() {
                return getS2CDataFieldBuilder().getBuilderList();
            }


            private RepeatedFieldBuilder<PetHandler.IllusionReview, PetHandler.IllusionReview.Builder, PetHandler.IllusionReviewOrBuilder> getS2CDataFieldBuilder() {
                if (this.s2CDataBuilder_ == null) {
                    this.s2CDataBuilder_ = new RepeatedFieldBuilder(this.s2CData_, ((this.bitField0_ & 0x4) == 4), getParentForChildren(), isClean());
                    this.s2CData_ = null;
                }
                return this.s2CDataBuilder_;
            }
        }
    }


    public static final class PetComprehendSkillRequest
            extends GeneratedMessage
            implements PetComprehendSkillRequestOrBuilder {
        private static final PetComprehendSkillRequest defaultInstance = new PetComprehendSkillRequest(true);
        private final UnknownFieldSet unknownFields;

        private PetComprehendSkillRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private PetComprehendSkillRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static PetComprehendSkillRequest getDefaultInstance() {
            return defaultInstance;
        }

        public PetComprehendSkillRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private PetComprehendSkillRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int length, limit, tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.s2CPetId_ = bs;
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CSkillBookCode_ = bs;
                            break;
                        case 24:
                            if ((mutable_bitField0_ & 0x4) != 4) {
                                this.s2CLockPos_ = new ArrayList<>();
                                mutable_bitField0_ |= 0x4;
                            }
                            this.s2CLockPos_.add(Integer.valueOf(input.readInt32()));
                            break;
                        case 26:
                            length = input.readRawVarint32();
                            limit = input.pushLimit(length);
                            if ((mutable_bitField0_ & 0x4) != 4 && input.getBytesUntilLimit() > 0) {
                                this.s2CLockPos_ = new ArrayList<>();
                                mutable_bitField0_ |= 0x4;
                            }
                            while (input.getBytesUntilLimit() > 0)
                                this.s2CLockPos_.add(Integer.valueOf(input.readInt32()));
                            input.popLimit(limit);
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                if ((mutable_bitField0_ & 0x4) == 4) this.s2CLockPos_ = Collections.unmodifiableList(this.s2CLockPos_);
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_PetComprehendSkillRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_PetComprehendSkillRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetComprehendSkillRequest.class, Builder.class);
        }

        public static Parser<PetComprehendSkillRequest> PARSER = (Parser<PetComprehendSkillRequest>) new AbstractParser<PetComprehendSkillRequest>() {
            public PetHandler.PetComprehendSkillRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.PetComprehendSkillRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_PETID_FIELD_NUMBER = 1;
        private Object s2CPetId_;
        public static final int S2C_SKILLBOOKCODE_FIELD_NUMBER = 2;
        private Object s2CSkillBookCode_;
        public static final int S2C_LOCKPOS_FIELD_NUMBER = 3;
        private List<Integer> s2CLockPos_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<PetComprehendSkillRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CPetId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getS2CPetId() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CPetId_ = s;
            return s;
        }

        public ByteString getS2CPetIdBytes() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CPetId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasS2CSkillBookCode() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        static {
            defaultInstance.initFields();
        }


        public String getS2CSkillBookCode() {
            Object ref = this.s2CSkillBookCode_;
            if (ref instanceof String) {
                return (String) ref;
            }
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.s2CSkillBookCode_ = s;
            }
            return s;
        }


        public ByteString getS2CSkillBookCodeBytes() {
            Object ref = this.s2CSkillBookCode_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CSkillBookCode_ = b;
                return b;
            }
            return (ByteString) ref;
        }


        public List<Integer> getS2CLockPosList() {
            return this.s2CLockPos_;
        }


        public int getS2CLockPosCount() {
            return this.s2CLockPos_.size();
        }


        public int getS2CLockPos(int index) {
            return ((Integer) this.s2CLockPos_.get(index)).intValue();
        }


        private void initFields() {
            this.s2CPetId_ = "";
            this.s2CSkillBookCode_ = "";
            this.s2CLockPos_ = Collections.emptyList();
        }


        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
                return true;
            }
            if (isInitialized == 0) {
                return false;
            }
            if (!hasS2CPetId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasS2CSkillBookCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }


        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) {
                output.writeBytes(1, getS2CPetIdBytes());
            }
            if ((this.bitField0_ & 0x2) == 2) {
                output.writeBytes(2, getS2CSkillBookCodeBytes());
            }
            for (int i = 0; i < this.s2CLockPos_.size(); i++) {
                output.writeInt32(3, ((Integer) this.s2CLockPos_.get(i)).intValue());
            }
            getUnknownFields().writeTo(output);
        }


        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) {
                size += CodedOutputStream.computeBytesSize(1, getS2CPetIdBytes());
            }
            if ((this.bitField0_ & 0x2) == 2) {
                size += CodedOutputStream.computeBytesSize(2, getS2CSkillBookCodeBytes());
            }
            int dataSize = 0;
            for (int i = 0; i < this.s2CLockPos_.size(); i++) {
                dataSize += CodedOutputStream.computeInt32SizeNoTag(((Integer) this.s2CLockPos_.get(i)).intValue());
            }
            size += dataSize;
            size += 1 * getS2CLockPosList().size();
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }


        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }


        public static PetComprehendSkillRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (PetComprehendSkillRequest) PARSER.parseFrom(data);
        }


        public static PetComprehendSkillRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetComprehendSkillRequest) PARSER.parseFrom(data, extensionRegistry);
        }


        public static PetComprehendSkillRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (PetComprehendSkillRequest) PARSER.parseFrom(data);
        }


        public static PetComprehendSkillRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetComprehendSkillRequest) PARSER.parseFrom(data, extensionRegistry);
        }


        public static PetComprehendSkillRequest parseFrom(InputStream input) throws IOException {
            return (PetComprehendSkillRequest) PARSER.parseFrom(input);
        }


        public static PetComprehendSkillRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetComprehendSkillRequest) PARSER.parseFrom(input, extensionRegistry);
        }


        public static PetComprehendSkillRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (PetComprehendSkillRequest) PARSER.parseDelimitedFrom(input);
        }


        public static PetComprehendSkillRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetComprehendSkillRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }


        public static PetComprehendSkillRequest parseFrom(CodedInputStream input) throws IOException {
            return (PetComprehendSkillRequest) PARSER.parseFrom(input);
        }


        public static PetComprehendSkillRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetComprehendSkillRequest) PARSER.parseFrom(input, extensionRegistry);
        }


        public static Builder newBuilder() {
            return Builder.create();
        }


        public Builder newBuilderForType() {
            return newBuilder();
        }


        public static Builder newBuilder(PetComprehendSkillRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }


        public Builder toBuilder() {
            return newBuilder(this);
        }


        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }


        public static final class Builder
                extends GeneratedMessage.Builder<Builder>
                implements PetHandler.PetComprehendSkillRequestOrBuilder {
            private int bitField0_;


            private Object s2CPetId_;


            private Object s2CSkillBookCode_;


            private List<Integer> s2CLockPos_;


            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_PetComprehendSkillRequest_descriptor;
            }


            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_PetComprehendSkillRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.PetComprehendSkillRequest.class, Builder.class);
            }


            private Builder() {
                this.s2CPetId_ = "";
                this.s2CSkillBookCode_ = "";
                this.s2CLockPos_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }


            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CPetId_ = "";
                this.s2CSkillBookCode_ = "";
                this.s2CLockPos_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }


            private void maybeForceBuilderInitialization() {
                if (PetHandler.PetComprehendSkillRequest.alwaysUseFieldBuilders) ;
            }


            private static Builder create() {
                return new Builder();
            }


            public Builder clear() {
                super.clear();
                this.s2CPetId_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CSkillBookCode_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CLockPos_ = Collections.emptyList();
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }


            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }


            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_PetComprehendSkillRequest_descriptor;
            }


            public PetHandler.PetComprehendSkillRequest getDefaultInstanceForType() {
                return PetHandler.PetComprehendSkillRequest.getDefaultInstance();
            }


            public PetHandler.PetComprehendSkillRequest build() {
                PetHandler.PetComprehendSkillRequest result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }


            public PetHandler.PetComprehendSkillRequest buildPartial() {
                PetHandler.PetComprehendSkillRequest result = new PetHandler.PetComprehendSkillRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) {
                    to_bitField0_ |= 0x1;
                }
                result.s2CPetId_ = this.s2CPetId_;
                if ((from_bitField0_ & 0x2) == 2) {
                    to_bitField0_ |= 0x2;
                }
                result.s2CSkillBookCode_ = this.s2CSkillBookCode_;
                if ((this.bitField0_ & 0x4) == 4) {
                    this.s2CLockPos_ = Collections.unmodifiableList(this.s2CLockPos_);
                    this.bitField0_ &= 0xFFFFFFFB;
                }
                result.s2CLockPos_ = this.s2CLockPos_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }


            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.PetComprehendSkillRequest) {
                    return mergeFrom((PetHandler.PetComprehendSkillRequest) other);
                }
                super.mergeFrom(other);
                return this;
            }


            public Builder mergeFrom(PetHandler.PetComprehendSkillRequest other) {
                if (other == PetHandler.PetComprehendSkillRequest.getDefaultInstance()) {
                    return this;
                }
                if (other.hasS2CPetId()) {
                    this.bitField0_ |= 0x1;
                    this.s2CPetId_ = other.s2CPetId_;
                    onChanged();
                }
                if (other.hasS2CSkillBookCode()) {
                    this.bitField0_ |= 0x2;
                    this.s2CSkillBookCode_ = other.s2CSkillBookCode_;
                    onChanged();
                }
                if (!other.s2CLockPos_.isEmpty()) {
                    if (this.s2CLockPos_.isEmpty()) {
                        this.s2CLockPos_ = other.s2CLockPos_;
                        this.bitField0_ &= 0xFFFFFFFB;
                    } else {
                        ensureS2CLockPosIsMutable();
                        this.s2CLockPos_.addAll(other.s2CLockPos_);
                    }
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }


            public final boolean isInitialized() {
                if (!hasS2CPetId()) {
                    return false;
                }
                if (!hasS2CSkillBookCode()) {
                    return false;
                }
                return true;
            }


            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.PetComprehendSkillRequest parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.PetComprehendSkillRequest) PetHandler.PetComprehendSkillRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.PetComprehendSkillRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }


            public boolean hasS2CPetId() {
                return ((this.bitField0_ & 0x1) == 1);
            }


            public String getS2CPetId() {
                Object ref = this.s2CPetId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.s2CPetId_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getS2CPetIdBytes() {
                Object ref = this.s2CPetId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CPetId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setS2CPetId(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }


            public Builder clearS2CPetId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CPetId_ = PetHandler.PetComprehendSkillRequest.getDefaultInstance().getS2CPetId();
                onChanged();
                return this;
            }


            public Builder setS2CPetIdBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }


            public boolean hasS2CSkillBookCode() {
                return ((this.bitField0_ & 0x2) == 2);
            }


            public String getS2CSkillBookCode() {
                Object ref = this.s2CSkillBookCode_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.s2CSkillBookCode_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getS2CSkillBookCodeBytes() {
                Object ref = this.s2CSkillBookCode_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CSkillBookCode_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setS2CSkillBookCode(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CSkillBookCode_ = value;
                onChanged();
                return this;
            }


            public Builder clearS2CSkillBookCode() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CSkillBookCode_ = PetHandler.PetComprehendSkillRequest.getDefaultInstance().getS2CSkillBookCode();
                onChanged();
                return this;
            }


            public Builder setS2CSkillBookCodeBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CSkillBookCode_ = value;
                onChanged();
                return this;
            }


            private void ensureS2CLockPosIsMutable() {
                if ((this.bitField0_ & 0x4) != 4) {
                    this.s2CLockPos_ = new ArrayList<>(this.s2CLockPos_);
                    this.bitField0_ |= 0x4;
                }
            }


            public List<Integer> getS2CLockPosList() {
                return Collections.unmodifiableList(this.s2CLockPos_);
            }


            public int getS2CLockPosCount() {
                return this.s2CLockPos_.size();
            }


            public int getS2CLockPos(int index) {
                return ((Integer) this.s2CLockPos_.get(index)).intValue();
            }


            public Builder setS2CLockPos(int index, int value) {
                ensureS2CLockPosIsMutable();
                this.s2CLockPos_.set(index, Integer.valueOf(value));
                onChanged();
                return this;
            }


            public Builder addS2CLockPos(int value) {
                ensureS2CLockPosIsMutable();
                this.s2CLockPos_.add(Integer.valueOf(value));
                onChanged();
                return this;
            }


            public Builder addAllS2CLockPos(Iterable<? extends Integer> values) {
                ensureS2CLockPosIsMutable();
                AbstractMessageLite.Builder.addAll(values, this.s2CLockPos_);
                onChanged();
                return this;
            }


            public Builder clearS2CLockPos() {
                this.s2CLockPos_ = Collections.emptyList();
                this.bitField0_ &= 0xFFFFFFFB;
                onChanged();
                return this;
            }
        }
    }


    public static final class ResultData
            extends GeneratedMessage
            implements ResultDataOrBuilder {
        private static final ResultData defaultInstance = new ResultData(true);
        private final UnknownFieldSet unknownFields;

        private ResultData(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private ResultData(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static ResultData getDefaultInstance() {
            return defaultInstance;
        }

        public ResultData getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ResultData(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.result_ = input.readInt32();
                            break;
                        case 16:
                            this.bitField0_ |= 0x2;
                            this.srcSkillId_ = input.readInt32();
                            break;
                        case 24:
                            this.bitField0_ |= 0x4;
                            this.srcSkillLevel_ = input.readInt32();
                            break;
                        case 32:
                            this.bitField0_ |= 0x8;
                            this.destSkillId_ = input.readInt32();
                            break;
                        case 40:
                            this.bitField0_ |= 0x10;
                            this.destSkillLevel_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_ResultData_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_ResultData_fieldAccessorTable.ensureFieldAccessorsInitialized(ResultData.class, Builder.class);
        }

        public static Parser<ResultData> PARSER = (Parser<ResultData>) new AbstractParser<ResultData>() {
            public PetHandler.ResultData parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.ResultData(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int RESULT_FIELD_NUMBER = 1;
        private int result_;
        public static final int SRCSKILLID_FIELD_NUMBER = 2;
        private int srcSkillId_;
        public static final int SRCSKILLLEVEL_FIELD_NUMBER = 3;
        private int srcSkillLevel_;
        public static final int DESTSKILLID_FIELD_NUMBER = 4;
        private int destSkillId_;
        public static final int DESTSKILLLEVEL_FIELD_NUMBER = 5;
        private int destSkillLevel_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<ResultData> getParserForType() {
            return PARSER;
        }

        public boolean hasResult() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getResult() {
            return this.result_;
        }

        public boolean hasSrcSkillId() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public int getSrcSkillId() {
            return this.srcSkillId_;
        }

        public boolean hasSrcSkillLevel() {
            return ((this.bitField0_ & 0x4) == 4);
        }

        public int getSrcSkillLevel() {
            return this.srcSkillLevel_;
        }

        public boolean hasDestSkillId() {
            return ((this.bitField0_ & 0x8) == 8);
        }

        public int getDestSkillId() {
            return this.destSkillId_;
        }

        public boolean hasDestSkillLevel() {
            return ((this.bitField0_ & 0x10) == 16);
        }

        public int getDestSkillLevel() {
            return this.destSkillLevel_;
        }

        private void initFields() {
            this.result_ = 0;
            this.srcSkillId_ = 0;
            this.srcSkillLevel_ = 0;
            this.destSkillId_ = 0;
            this.destSkillLevel_ = 0;
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasResult()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasSrcSkillId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasSrcSkillLevel()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasDestSkillId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasDestSkillLevel()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.result_);
            if ((this.bitField0_ & 0x2) == 2) output.writeInt32(2, this.srcSkillId_);
            if ((this.bitField0_ & 0x4) == 4) output.writeInt32(3, this.srcSkillLevel_);
            if ((this.bitField0_ & 0x8) == 8) output.writeInt32(4, this.destSkillId_);
            if ((this.bitField0_ & 0x10) == 16) output.writeInt32(5, this.destSkillLevel_);
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.result_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeInt32Size(2, this.srcSkillId_);
            if ((this.bitField0_ & 0x4) == 4) size += CodedOutputStream.computeInt32Size(3, this.srcSkillLevel_);
            if ((this.bitField0_ & 0x8) == 8) size += CodedOutputStream.computeInt32Size(4, this.destSkillId_);
            if ((this.bitField0_ & 0x10) == 16) size += CodedOutputStream.computeInt32Size(5, this.destSkillLevel_);
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static ResultData parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (ResultData) PARSER.parseFrom(data);
        }

        public static ResultData parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ResultData) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ResultData parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (ResultData) PARSER.parseFrom(data);
        }

        public static ResultData parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ResultData) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ResultData parseFrom(InputStream input) throws IOException {
            return (ResultData) PARSER.parseFrom(input);
        }

        public static ResultData parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ResultData) PARSER.parseFrom(input, extensionRegistry);
        }

        public static ResultData parseDelimitedFrom(InputStream input) throws IOException {
            return (ResultData) PARSER.parseDelimitedFrom(input);
        }

        public static ResultData parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ResultData) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static ResultData parseFrom(CodedInputStream input) throws IOException {
            return (ResultData) PARSER.parseFrom(input);
        }

        public static ResultData parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ResultData) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ResultData prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.ResultDataOrBuilder {
            private int bitField0_;
            private int result_;
            private int srcSkillId_;
            private int srcSkillLevel_;
            private int destSkillId_;
            private int destSkillLevel_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_ResultData_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_ResultData_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.ResultData.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.ResultData.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.result_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.srcSkillId_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                this.srcSkillLevel_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.destSkillId_ = 0;
                this.bitField0_ &= 0xFFFFFFF7;
                this.destSkillLevel_ = 0;
                this.bitField0_ &= 0xFFFFFFEF;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_ResultData_descriptor;
            }

            public PetHandler.ResultData getDefaultInstanceForType() {
                return PetHandler.ResultData.getDefaultInstance();
            }

            public PetHandler.ResultData build() {
                PetHandler.ResultData result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.ResultData buildPartial() {
                PetHandler.ResultData result = new PetHandler.ResultData(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.result_ = this.result_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.srcSkillId_ = this.srcSkillId_;
                if ((from_bitField0_ & 0x4) == 4) to_bitField0_ |= 0x4;
                result.srcSkillLevel_ = this.srcSkillLevel_;
                if ((from_bitField0_ & 0x8) == 8) to_bitField0_ |= 0x8;
                result.destSkillId_ = this.destSkillId_;
                if ((from_bitField0_ & 0x10) == 16) to_bitField0_ |= 0x10;
                result.destSkillLevel_ = this.destSkillLevel_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.ResultData) return mergeFrom((PetHandler.ResultData) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.ResultData other) {
                if (other == PetHandler.ResultData.getDefaultInstance()) return this;
                if (other.hasResult()) setResult(other.getResult());
                if (other.hasSrcSkillId()) setSrcSkillId(other.getSrcSkillId());
                if (other.hasSrcSkillLevel()) setSrcSkillLevel(other.getSrcSkillLevel());
                if (other.hasDestSkillId()) setDestSkillId(other.getDestSkillId());
                if (other.hasDestSkillLevel()) setDestSkillLevel(other.getDestSkillLevel());
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasResult()) return false;
                if (!hasSrcSkillId()) return false;
                if (!hasSrcSkillLevel()) return false;
                if (!hasDestSkillId()) return false;
                if (!hasDestSkillLevel()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.ResultData parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.ResultData) PetHandler.ResultData.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.ResultData) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasResult() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getResult() {
                return this.result_;
            }

            public Builder setResult(int value) {
                this.bitField0_ |= 0x1;
                this.result_ = value;
                onChanged();
                return this;
            }

            public Builder clearResult() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.result_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSrcSkillId() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public int getSrcSkillId() {
                return this.srcSkillId_;
            }

            public Builder setSrcSkillId(int value) {
                this.bitField0_ |= 0x2;
                this.srcSkillId_ = value;
                onChanged();
                return this;
            }

            public Builder clearSrcSkillId() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.srcSkillId_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSrcSkillLevel() {
                return ((this.bitField0_ & 0x4) == 4);
            }

            public int getSrcSkillLevel() {
                return this.srcSkillLevel_;
            }

            public Builder setSrcSkillLevel(int value) {
                this.bitField0_ |= 0x4;
                this.srcSkillLevel_ = value;
                onChanged();
                return this;
            }

            public Builder clearSrcSkillLevel() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.srcSkillLevel_ = 0;
                onChanged();
                return this;
            }

            public boolean hasDestSkillId() {
                return ((this.bitField0_ & 0x8) == 8);
            }

            public int getDestSkillId() {
                return this.destSkillId_;
            }

            public Builder setDestSkillId(int value) {
                this.bitField0_ |= 0x8;
                this.destSkillId_ = value;
                onChanged();
                return this;
            }

            public Builder clearDestSkillId() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.destSkillId_ = 0;
                onChanged();
                return this;
            }

            public boolean hasDestSkillLevel() {
                return ((this.bitField0_ & 0x10) == 16);
            }

            public int getDestSkillLevel() {
                return this.destSkillLevel_;
            }

            public Builder setDestSkillLevel(int value) {
                this.bitField0_ |= 0x10;
                this.destSkillLevel_ = value;
                onChanged();
                return this;
            }

            public Builder clearDestSkillLevel() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.destSkillLevel_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class PetComprehendSkillResponse
            extends GeneratedMessage
            implements PetComprehendSkillResponseOrBuilder {
        private static final PetComprehendSkillResponse defaultInstance = new PetComprehendSkillResponse(true);
        private final UnknownFieldSet unknownFields;

        private PetComprehendSkillResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private PetComprehendSkillResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static PetComprehendSkillResponse getDefaultInstance() {
            return defaultInstance;
        }

        public PetComprehendSkillResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private PetComprehendSkillResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    PetHandler.ResultData.Builder subBuilder;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 26:
                            subBuilder = null;
                            if ((this.bitField0_ & 0x4) == 4) subBuilder = this.s2CResultData_.toBuilder();
                            this.s2CResultData_ = (PetHandler.ResultData) input.readMessage(PetHandler.ResultData.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.s2CResultData_);
                                this.s2CResultData_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x4;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_PetComprehendSkillResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_PetComprehendSkillResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetComprehendSkillResponse.class, Builder.class);
        }

        public static Parser<PetComprehendSkillResponse> PARSER = (Parser<PetComprehendSkillResponse>) new AbstractParser<PetComprehendSkillResponse>() {
            public PetHandler.PetComprehendSkillResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.PetComprehendSkillResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int S2C_RESULTDATA_FIELD_NUMBER = 3;
        private PetHandler.ResultData s2CResultData_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<PetComprehendSkillResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        static {
            defaultInstance.initFields();
        }


        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }


        public boolean hasS2CResultData() {
            return ((this.bitField0_ & 0x4) == 4);
        }


        public PetHandler.ResultData getS2CResultData() {
            return this.s2CResultData_;
        }


        public PetHandler.ResultDataOrBuilder getS2CResultDataOrBuilder() {
            return this.s2CResultData_;
        }


        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.s2CResultData_ = PetHandler.ResultData.getDefaultInstance();
        }


        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
                return true;
            }
            if (isInitialized == 0) {
                return false;
            }
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (hasS2CResultData() && !getS2CResultData().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }


        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) {
                output.writeInt32(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                output.writeBytes(2, getS2CMsgBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                output.writeMessage(3, (MessageLite) this.s2CResultData_);
            }
            getUnknownFields().writeTo(output);
        }


        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) {
                size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                size += CodedOutputStream.computeMessageSize(3, (MessageLite) this.s2CResultData_);
            }
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }


        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }


        public static PetComprehendSkillResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (PetComprehendSkillResponse) PARSER.parseFrom(data);
        }


        public static PetComprehendSkillResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetComprehendSkillResponse) PARSER.parseFrom(data, extensionRegistry);
        }


        public static PetComprehendSkillResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (PetComprehendSkillResponse) PARSER.parseFrom(data);
        }


        public static PetComprehendSkillResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetComprehendSkillResponse) PARSER.parseFrom(data, extensionRegistry);
        }


        public static PetComprehendSkillResponse parseFrom(InputStream input) throws IOException {
            return (PetComprehendSkillResponse) PARSER.parseFrom(input);
        }


        public static PetComprehendSkillResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetComprehendSkillResponse) PARSER.parseFrom(input, extensionRegistry);
        }


        public static PetComprehendSkillResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (PetComprehendSkillResponse) PARSER.parseDelimitedFrom(input);
        }


        public static PetComprehendSkillResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetComprehendSkillResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }


        public static PetComprehendSkillResponse parseFrom(CodedInputStream input) throws IOException {
            return (PetComprehendSkillResponse) PARSER.parseFrom(input);
        }


        public static PetComprehendSkillResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetComprehendSkillResponse) PARSER.parseFrom(input, extensionRegistry);
        }


        public static Builder newBuilder() {
            return Builder.create();
        }


        public Builder newBuilderForType() {
            return newBuilder();
        }


        public static Builder newBuilder(PetComprehendSkillResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }


        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder
                extends GeneratedMessage.Builder<Builder>
                implements PetHandler.PetComprehendSkillResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;
            private PetHandler.ResultData s2CResultData_;
            private SingleFieldBuilder<PetHandler.ResultData, PetHandler.ResultData.Builder, PetHandler.ResultDataOrBuilder> s2CResultDataBuilder_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_PetComprehendSkillResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_PetComprehendSkillResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.PetComprehendSkillResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                this.s2CResultData_ = PetHandler.ResultData.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                this.s2CResultData_ = PetHandler.ResultData.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.PetComprehendSkillResponse.alwaysUseFieldBuilders) {
                    getS2CResultDataFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                if (this.s2CResultDataBuilder_ == null) {
                    this.s2CResultData_ = PetHandler.ResultData.getDefaultInstance();
                } else {
                    this.s2CResultDataBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_PetComprehendSkillResponse_descriptor;
            }

            public PetHandler.PetComprehendSkillResponse getDefaultInstanceForType() {
                return PetHandler.PetComprehendSkillResponse.getDefaultInstance();
            }

            public PetHandler.PetComprehendSkillResponse build() {
                PetHandler.PetComprehendSkillResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public PetHandler.PetComprehendSkillResponse buildPartial() {
                PetHandler.PetComprehendSkillResponse result = new PetHandler.PetComprehendSkillResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) {
                    to_bitField0_ |= 0x1;
                }
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) {
                    to_bitField0_ |= 0x2;
                }
                result.s2CMsg_ = this.s2CMsg_;
                if ((from_bitField0_ & 0x4) == 4) {
                    to_bitField0_ |= 0x4;
                }
                if (this.s2CResultDataBuilder_ == null) {
                    result.s2CResultData_ = this.s2CResultData_;
                } else {
                    result.s2CResultData_ = (PetHandler.ResultData) this.s2CResultDataBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.PetComprehendSkillResponse) {
                    return mergeFrom((PetHandler.PetComprehendSkillResponse) other);
                }
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.PetComprehendSkillResponse other) {
                if (other == PetHandler.PetComprehendSkillResponse.getDefaultInstance()) {
                    return this;
                }
                if (other.hasS2CCode()) {
                    setS2CCode(other.getS2CCode());
                }
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (other.hasS2CResultData()) {
                    mergeS2CResultData(other.getS2CResultData());
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) {
                    return false;
                }
                if (hasS2CResultData() && !getS2CResultData().isInitialized()) {
                    return false;
                }
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.PetComprehendSkillResponse parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.PetComprehendSkillResponse) PetHandler.PetComprehendSkillResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.PetComprehendSkillResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.s2CMsg_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = PetHandler.PetComprehendSkillResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public boolean hasS2CResultData() {
                return ((this.bitField0_ & 0x4) == 4);
            }

            public PetHandler.ResultData getS2CResultData() {
                if (this.s2CResultDataBuilder_ == null) {
                    return this.s2CResultData_;
                }
                return (PetHandler.ResultData) this.s2CResultDataBuilder_.getMessage();
            }

            public Builder setS2CResultData(PetHandler.ResultData value) {
                if (this.s2CResultDataBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.s2CResultData_ = value;
                    onChanged();
                } else {
                    this.s2CResultDataBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }

            public Builder setS2CResultData(PetHandler.ResultData.Builder builderForValue) {
                if (this.s2CResultDataBuilder_ == null) {
                    this.s2CResultData_ = builderForValue.build();
                    onChanged();
                } else {
                    this.s2CResultDataBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x4;
                return this;
            }

            public Builder mergeS2CResultData(PetHandler.ResultData value) {
                if (this.s2CResultDataBuilder_ == null) {
                    if ((this.bitField0_ & 0x4) == 4 && this.s2CResultData_ != PetHandler.ResultData.getDefaultInstance()) {
                        this.s2CResultData_ = PetHandler.ResultData.newBuilder(this.s2CResultData_).mergeFrom(value).buildPartial();
                    } else {
                        this.s2CResultData_ = value;
                    }
                    onChanged();
                } else {
                    this.s2CResultDataBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }

            public Builder clearS2CResultData() {
                if (this.s2CResultDataBuilder_ == null) {
                    this.s2CResultData_ = PetHandler.ResultData.getDefaultInstance();
                    onChanged();
                } else {
                    this.s2CResultDataBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }

            public PetHandler.ResultData.Builder getS2CResultDataBuilder() {
                this.bitField0_ |= 0x4;
                onChanged();
                return (PetHandler.ResultData.Builder) getS2CResultDataFieldBuilder().getBuilder();
            }

            public PetHandler.ResultDataOrBuilder getS2CResultDataOrBuilder() {
                if (this.s2CResultDataBuilder_ != null) {
                    return (PetHandler.ResultDataOrBuilder) this.s2CResultDataBuilder_.getMessageOrBuilder();
                }
                return this.s2CResultData_;
            }

            private SingleFieldBuilder<PetHandler.ResultData, PetHandler.ResultData.Builder, PetHandler.ResultDataOrBuilder> getS2CResultDataFieldBuilder() {
                if (this.s2CResultDataBuilder_ == null) {
                    this.s2CResultDataBuilder_ = new SingleFieldBuilder(getS2CResultData(), getParentForChildren(), isClean());
                    this.s2CResultData_ = null;
                }
                return this.s2CResultDataBuilder_;
            }
        }
    }

    public static final class PetSkillListRequest
            extends GeneratedMessage
            implements PetSkillListRequestOrBuilder {
        private static final PetSkillListRequest defaultInstance = new PetSkillListRequest(true);
        private final UnknownFieldSet unknownFields;

        private PetSkillListRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private PetSkillListRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static PetSkillListRequest getDefaultInstance() {
            return defaultInstance;
        }

        public PetSkillListRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private PetSkillListRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.s2CPetId_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_PetSkillListRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_PetSkillListRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetSkillListRequest.class, Builder.class);
        }

        public static Parser<PetSkillListRequest> PARSER = (Parser<PetSkillListRequest>) new AbstractParser<PetSkillListRequest>() {
            public PetHandler.PetSkillListRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.PetSkillListRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_PETID_FIELD_NUMBER = 1;
        private Object s2CPetId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<PetSkillListRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CPetId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getS2CPetId() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CPetId_ = s;
            return s;
        }

        public ByteString getS2CPetIdBytes() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CPetId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CPetId_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CPetId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeBytes(1, getS2CPetIdBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeBytesSize(1, getS2CPetIdBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static PetSkillListRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (PetSkillListRequest) PARSER.parseFrom(data);
        }

        public static PetSkillListRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetSkillListRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PetSkillListRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (PetSkillListRequest) PARSER.parseFrom(data);
        }

        public static PetSkillListRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetSkillListRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PetSkillListRequest parseFrom(InputStream input) throws IOException {
            return (PetSkillListRequest) PARSER.parseFrom(input);
        }

        public static PetSkillListRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetSkillListRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static PetSkillListRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (PetSkillListRequest) PARSER.parseDelimitedFrom(input);
        }

        public static PetSkillListRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetSkillListRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static PetSkillListRequest parseFrom(CodedInputStream input) throws IOException {
            return (PetSkillListRequest) PARSER.parseFrom(input);
        }

        public static PetSkillListRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetSkillListRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(PetSkillListRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.PetSkillListRequestOrBuilder {
            private int bitField0_;
            private Object s2CPetId_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_PetSkillListRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_PetSkillListRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.PetSkillListRequest.class, Builder.class);
            }

            private Builder() {
                this.s2CPetId_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CPetId_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.PetSkillListRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CPetId_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_PetSkillListRequest_descriptor;
            }

            public PetHandler.PetSkillListRequest getDefaultInstanceForType() {
                return PetHandler.PetSkillListRequest.getDefaultInstance();
            }

            public PetHandler.PetSkillListRequest build() {
                PetHandler.PetSkillListRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.PetSkillListRequest buildPartial() {
                PetHandler.PetSkillListRequest result = new PetHandler.PetSkillListRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CPetId_ = this.s2CPetId_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.PetSkillListRequest)
                    return mergeFrom((PetHandler.PetSkillListRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.PetSkillListRequest other) {
                if (other == PetHandler.PetSkillListRequest.getDefaultInstance()) return this;
                if (other.hasS2CPetId()) {
                    this.bitField0_ |= 0x1;
                    this.s2CPetId_ = other.s2CPetId_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CPetId()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.PetSkillListRequest parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.PetSkillListRequest) PetHandler.PetSkillListRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.PetSkillListRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CPetId() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getS2CPetId() {
                Object ref = this.s2CPetId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CPetId_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CPetIdBytes() {
                Object ref = this.s2CPetId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CPetId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CPetId(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CPetId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CPetId_ = PetHandler.PetSkillListRequest.getDefaultInstance().getS2CPetId();
                onChanged();
                return this;
            }

            public Builder setS2CPetIdBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class SkillInfo
            extends GeneratedMessage
            implements SkillInfoOrBuilder {
        private static final SkillInfo defaultInstance = new SkillInfo(true);
        private final UnknownFieldSet unknownFields;

        private SkillInfo(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private SkillInfo(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static SkillInfo getDefaultInstance() {
            return defaultInstance;
        }

        public SkillInfo getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private SkillInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.id_ = input.readInt32();
                            break;
                        case 16:
                            this.bitField0_ |= 0x2;
                            this.level_ = input.readInt32();
                            break;
                        case 24:
                            this.bitField0_ |= 0x4;
                            this.pos_ = input.readInt32();
                            break;
                        case 32:
                            this.bitField0_ |= 0x8;
                            this.inborn_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_SkillInfo_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_SkillInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(SkillInfo.class, Builder.class);
        }

        public static Parser<SkillInfo> PARSER = (Parser<SkillInfo>) new AbstractParser<SkillInfo>() {
            public PetHandler.SkillInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.SkillInfo(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int ID_FIELD_NUMBER = 1;
        private int id_;
        public static final int LEVEL_FIELD_NUMBER = 2;
        private int level_;
        public static final int POS_FIELD_NUMBER = 3;
        private int pos_;
        public static final int INBORN_FIELD_NUMBER = 4;
        private int inborn_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<SkillInfo> getParserForType() {
            return PARSER;
        }

        public boolean hasId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getId() {
            return this.id_;
        }

        public boolean hasLevel() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public int getLevel() {
            return this.level_;
        }

        public boolean hasPos() {
            return ((this.bitField0_ & 0x4) == 4);
        }

        public int getPos() {
            return this.pos_;
        }

        public boolean hasInborn() {
            return ((this.bitField0_ & 0x8) == 8);
        }

        public int getInborn() {
            return this.inborn_;
        }

        private void initFields() {
            this.id_ = 0;
            this.level_ = 0;
            this.pos_ = 0;
            this.inborn_ = 0;
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasLevel()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasPos()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasInborn()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.id_);
            if ((this.bitField0_ & 0x2) == 2) output.writeInt32(2, this.level_);
            if ((this.bitField0_ & 0x4) == 4) output.writeInt32(3, this.pos_);
            if ((this.bitField0_ & 0x8) == 8) output.writeInt32(4, this.inborn_);
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.id_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeInt32Size(2, this.level_);
            if ((this.bitField0_ & 0x4) == 4) size += CodedOutputStream.computeInt32Size(3, this.pos_);
            if ((this.bitField0_ & 0x8) == 8) size += CodedOutputStream.computeInt32Size(4, this.inborn_);
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static SkillInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (SkillInfo) PARSER.parseFrom(data);
        }

        public static SkillInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (SkillInfo) PARSER.parseFrom(data, extensionRegistry);
        }

        public static SkillInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (SkillInfo) PARSER.parseFrom(data);
        }

        public static SkillInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (SkillInfo) PARSER.parseFrom(data, extensionRegistry);
        }

        public static SkillInfo parseFrom(InputStream input) throws IOException {
            return (SkillInfo) PARSER.parseFrom(input);
        }

        public static SkillInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (SkillInfo) PARSER.parseFrom(input, extensionRegistry);
        }

        public static SkillInfo parseDelimitedFrom(InputStream input) throws IOException {
            return (SkillInfo) PARSER.parseDelimitedFrom(input);
        }

        public static SkillInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (SkillInfo) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static SkillInfo parseFrom(CodedInputStream input) throws IOException {
            return (SkillInfo) PARSER.parseFrom(input);
        }

        public static SkillInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (SkillInfo) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(SkillInfo prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.SkillInfoOrBuilder {
            private int bitField0_;
            private int id_;
            private int level_;
            private int pos_;
            private int inborn_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_SkillInfo_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_SkillInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.SkillInfo.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.SkillInfo.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.id_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.level_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                this.pos_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.inborn_ = 0;
                this.bitField0_ &= 0xFFFFFFF7;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_SkillInfo_descriptor;
            }

            public PetHandler.SkillInfo getDefaultInstanceForType() {
                return PetHandler.SkillInfo.getDefaultInstance();
            }

            public PetHandler.SkillInfo build() {
                PetHandler.SkillInfo result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.SkillInfo buildPartial() {
                PetHandler.SkillInfo result = new PetHandler.SkillInfo(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.id_ = this.id_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.level_ = this.level_;
                if ((from_bitField0_ & 0x4) == 4) to_bitField0_ |= 0x4;
                result.pos_ = this.pos_;
                if ((from_bitField0_ & 0x8) == 8) to_bitField0_ |= 0x8;
                result.inborn_ = this.inborn_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.SkillInfo) return mergeFrom((PetHandler.SkillInfo) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.SkillInfo other) {
                if (other == PetHandler.SkillInfo.getDefaultInstance()) return this;
                if (other.hasId()) setId(other.getId());
                if (other.hasLevel()) setLevel(other.getLevel());
                if (other.hasPos()) setPos(other.getPos());
                if (other.hasInborn()) setInborn(other.getInborn());
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasId()) return false;
                if (!hasLevel()) return false;
                if (!hasPos()) return false;
                if (!hasInborn()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.SkillInfo parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.SkillInfo) PetHandler.SkillInfo.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.SkillInfo) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasId() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getId() {
                return this.id_;
            }

            public Builder setId(int value) {
                this.bitField0_ |= 0x1;
                this.id_ = value;
                onChanged();
                return this;
            }

            public Builder clearId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.id_ = 0;
                onChanged();
                return this;
            }

            public boolean hasLevel() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public int getLevel() {
                return this.level_;
            }

            public Builder setLevel(int value) {
                this.bitField0_ |= 0x2;
                this.level_ = value;
                onChanged();
                return this;
            }

            public Builder clearLevel() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.level_ = 0;
                onChanged();
                return this;
            }

            public boolean hasPos() {
                return ((this.bitField0_ & 0x4) == 4);
            }

            public int getPos() {
                return this.pos_;
            }

            public Builder setPos(int value) {
                this.bitField0_ |= 0x4;
                this.pos_ = value;
                onChanged();
                return this;
            }

            public Builder clearPos() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.pos_ = 0;
                onChanged();
                return this;
            }

            public boolean hasInborn() {
                return ((this.bitField0_ & 0x8) == 8);
            }

            public int getInborn() {
                return this.inborn_;
            }

            public Builder setInborn(int value) {
                this.bitField0_ |= 0x8;
                this.inborn_ = value;
                onChanged();
                return this;
            }

            public Builder clearInborn() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.inborn_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class PetSkillListResponse
            extends GeneratedMessage
            implements PetSkillListResponseOrBuilder {
        private static final PetSkillListResponse defaultInstance = new PetSkillListResponse(true);
        private final UnknownFieldSet unknownFields;

        private PetSkillListResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private PetSkillListResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static PetSkillListResponse getDefaultInstance() {
            return defaultInstance;
        }

        public PetSkillListResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private PetSkillListResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 26:
                            if ((mutable_bitField0_ & 0x4) != 4) {
                                this.s2CData_ = new ArrayList<>();
                                mutable_bitField0_ |= 0x4;
                            }
                            this.s2CData_.add(input.readMessage(PetHandler.SkillInfo.PARSER, extensionRegistry));
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                if ((mutable_bitField0_ & 0x4) == 4) this.s2CData_ = Collections.unmodifiableList(this.s2CData_);
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_PetSkillListResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_PetSkillListResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetSkillListResponse.class, Builder.class);
        }

        public static Parser<PetSkillListResponse> PARSER = (Parser<PetSkillListResponse>) new AbstractParser<PetSkillListResponse>() {
            public PetHandler.PetSkillListResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.PetSkillListResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int S2C_DATA_FIELD_NUMBER = 3;
        private List<PetHandler.SkillInfo> s2CData_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<PetSkillListResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        static {
            defaultInstance.initFields();
        }


        public List<PetHandler.SkillInfo> getS2CDataList() {
            return this.s2CData_;
        }


        public List<? extends PetHandler.SkillInfoOrBuilder> getS2CDataOrBuilderList() {
            return (List) this.s2CData_;
        }


        public int getS2CDataCount() {
            return this.s2CData_.size();
        }


        public PetHandler.SkillInfo getS2CData(int index) {
            return this.s2CData_.get(index);
        }


        public PetHandler.SkillInfoOrBuilder getS2CDataOrBuilder(int index) {
            return this.s2CData_.get(index);
        }


        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.s2CData_ = Collections.emptyList();
        }


        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
                return true;
            }
            if (isInitialized == 0) {
                return false;
            }
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            for (int i = 0; i < getS2CDataCount(); i++) {
                if (!getS2CData(i).isInitialized()) {
                    this.memoizedIsInitialized = 0;
                    return false;
                }
            }
            this.memoizedIsInitialized = 1;
            return true;
        }


        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) {
                output.writeInt32(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                output.writeBytes(2, getS2CMsgBytes());
            }
            for (int i = 0; i < this.s2CData_.size(); i++) {
                output.writeMessage(3, (MessageLite) this.s2CData_.get(i));
            }
            getUnknownFields().writeTo(output);
        }


        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) {
                size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            }
            for (int i = 0; i < this.s2CData_.size(); i++) {
                size += CodedOutputStream.computeMessageSize(3, (MessageLite) this.s2CData_.get(i));
            }
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }


        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }


        public static PetSkillListResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (PetSkillListResponse) PARSER.parseFrom(data);
        }


        public static PetSkillListResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetSkillListResponse) PARSER.parseFrom(data, extensionRegistry);
        }


        public static PetSkillListResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (PetSkillListResponse) PARSER.parseFrom(data);
        }


        public static PetSkillListResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetSkillListResponse) PARSER.parseFrom(data, extensionRegistry);
        }


        public static PetSkillListResponse parseFrom(InputStream input) throws IOException {
            return (PetSkillListResponse) PARSER.parseFrom(input);
        }


        public static PetSkillListResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetSkillListResponse) PARSER.parseFrom(input, extensionRegistry);
        }


        public static PetSkillListResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (PetSkillListResponse) PARSER.parseDelimitedFrom(input);
        }


        public static PetSkillListResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetSkillListResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }


        public static PetSkillListResponse parseFrom(CodedInputStream input) throws IOException {
            return (PetSkillListResponse) PARSER.parseFrom(input);
        }


        public static PetSkillListResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetSkillListResponse) PARSER.parseFrom(input, extensionRegistry);
        }


        public static Builder newBuilder() {
            return Builder.create();
        }


        public Builder newBuilderForType() {
            return newBuilder();
        }


        public static Builder newBuilder(PetSkillListResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }


        public Builder toBuilder() {
            return newBuilder(this);
        }


        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }


        public static final class Builder
                extends GeneratedMessage.Builder<Builder>
                implements PetHandler.PetSkillListResponseOrBuilder {
            private int bitField0_;

            private int s2CCode_;

            private Object s2CMsg_;

            private List<PetHandler.SkillInfo> s2CData_;

            private RepeatedFieldBuilder<PetHandler.SkillInfo, PetHandler.SkillInfo.Builder, PetHandler.SkillInfoOrBuilder> s2CDataBuilder_;


            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_PetSkillListResponse_descriptor;
            }


            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_PetSkillListResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.PetSkillListResponse.class, Builder.class);
            }


            private Builder() {
                this.s2CMsg_ = "";
                this.s2CData_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }


            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                this.s2CData_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }


            private void maybeForceBuilderInitialization() {
                if (PetHandler.PetSkillListResponse.alwaysUseFieldBuilders) {
                    getS2CDataFieldBuilder();
                }
            }


            private static Builder create() {
                return new Builder();
            }


            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                if (this.s2CDataBuilder_ == null) {
                    this.s2CData_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFB;
                } else {
                    this.s2CDataBuilder_.clear();
                }
                return this;
            }


            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }


            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_PetSkillListResponse_descriptor;
            }


            public PetHandler.PetSkillListResponse getDefaultInstanceForType() {
                return PetHandler.PetSkillListResponse.getDefaultInstance();
            }


            public PetHandler.PetSkillListResponse build() {
                PetHandler.PetSkillListResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }


            public PetHandler.PetSkillListResponse buildPartial() {
                PetHandler.PetSkillListResponse result = new PetHandler.PetSkillListResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) {
                    to_bitField0_ |= 0x1;
                }
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) {
                    to_bitField0_ |= 0x2;
                }
                result.s2CMsg_ = this.s2CMsg_;
                if (this.s2CDataBuilder_ == null) {
                    if ((this.bitField0_ & 0x4) == 4) {
                        this.s2CData_ = Collections.unmodifiableList(this.s2CData_);
                        this.bitField0_ &= 0xFFFFFFFB;
                    }
                    result.s2CData_ = this.s2CData_;
                } else {
                    result.s2CData_ = this.s2CDataBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }


            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.PetSkillListResponse) {
                    return mergeFrom((PetHandler.PetSkillListResponse) other);
                }
                super.mergeFrom(other);
                return this;
            }


            public Builder mergeFrom(PetHandler.PetSkillListResponse other) {
                if (other == PetHandler.PetSkillListResponse.getDefaultInstance()) {
                    return this;
                }
                if (other.hasS2CCode()) {
                    setS2CCode(other.getS2CCode());
                }
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (this.s2CDataBuilder_ == null) {
                    if (!other.s2CData_.isEmpty()) {
                        if (this.s2CData_.isEmpty()) {
                            this.s2CData_ = other.s2CData_;
                            this.bitField0_ &= 0xFFFFFFFB;
                        } else {
                            ensureS2CDataIsMutable();
                            this.s2CData_.addAll(other.s2CData_);
                        }
                        onChanged();
                    }
                } else if (!other.s2CData_.isEmpty()) {
                    if (this.s2CDataBuilder_.isEmpty()) {
                        this.s2CDataBuilder_.dispose();
                        this.s2CDataBuilder_ = null;
                        this.s2CData_ = other.s2CData_;
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.s2CDataBuilder_ = PetHandler.PetSkillListResponse.alwaysUseFieldBuilders ? getS2CDataFieldBuilder() : null;
                    } else {
                        this.s2CDataBuilder_.addAllMessages(other.s2CData_);
                    }
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }


            public final boolean isInitialized() {
                if (!hasS2CCode()) {
                    return false;
                }
                for (int i = 0; i < getS2CDataCount(); i++) {
                    if (!getS2CData(i).isInitialized()) {
                        return false;
                    }
                }
                return true;
            }


            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.PetSkillListResponse parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.PetSkillListResponse) PetHandler.PetSkillListResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.PetSkillListResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }


            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }


            public int getS2CCode() {
                return this.s2CCode_;
            }


            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }


            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }


            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }


            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.s2CMsg_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setS2CMsg(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }


            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = PetHandler.PetSkillListResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }


            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }


            private void ensureS2CDataIsMutable() {
                if ((this.bitField0_ & 0x4) != 4) {
                    this.s2CData_ = new ArrayList<>(this.s2CData_);
                    this.bitField0_ |= 0x4;
                }
            }


            public List<PetHandler.SkillInfo> getS2CDataList() {
                if (this.s2CDataBuilder_ == null) {
                    return Collections.unmodifiableList(this.s2CData_);
                }
                return this.s2CDataBuilder_.getMessageList();
            }


            public int getS2CDataCount() {
                if (this.s2CDataBuilder_ == null) {
                    return this.s2CData_.size();
                }
                return this.s2CDataBuilder_.getCount();
            }


            public PetHandler.SkillInfo getS2CData(int index) {
                if (this.s2CDataBuilder_ == null) {
                    return this.s2CData_.get(index);
                }
                return (PetHandler.SkillInfo) this.s2CDataBuilder_.getMessage(index);
            }


            public Builder setS2CData(int index, PetHandler.SkillInfo value) {
                if (this.s2CDataBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureS2CDataIsMutable();
                    this.s2CData_.set(index, value);
                    onChanged();
                } else {
                    this.s2CDataBuilder_.setMessage(index, value);
                }
                return this;
            }


            public Builder setS2CData(int index, PetHandler.SkillInfo.Builder builderForValue) {
                if (this.s2CDataBuilder_ == null) {
                    ensureS2CDataIsMutable();
                    this.s2CData_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    this.s2CDataBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }


            public Builder addS2CData(PetHandler.SkillInfo value) {
                if (this.s2CDataBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureS2CDataIsMutable();
                    this.s2CData_.add(value);
                    onChanged();
                } else {
                    this.s2CDataBuilder_.addMessage(value);
                }
                return this;
            }


            public Builder addS2CData(int index, PetHandler.SkillInfo value) {
                if (this.s2CDataBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureS2CDataIsMutable();
                    this.s2CData_.add(index, value);
                    onChanged();
                } else {
                    this.s2CDataBuilder_.addMessage(index, value);
                }
                return this;
            }


            public Builder addS2CData(PetHandler.SkillInfo.Builder builderForValue) {
                if (this.s2CDataBuilder_ == null) {
                    ensureS2CDataIsMutable();
                    this.s2CData_.add(builderForValue.build());
                    onChanged();
                } else {
                    this.s2CDataBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }


            public Builder addS2CData(int index, PetHandler.SkillInfo.Builder builderForValue) {
                if (this.s2CDataBuilder_ == null) {
                    ensureS2CDataIsMutable();
                    this.s2CData_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    this.s2CDataBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }


            public Builder addAllS2CData(Iterable<? extends PetHandler.SkillInfo> values) {
                if (this.s2CDataBuilder_ == null) {
                    ensureS2CDataIsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.s2CData_);
                    onChanged();
                } else {
                    this.s2CDataBuilder_.addAllMessages(values);
                }
                return this;
            }


            public Builder clearS2CData() {
                if (this.s2CDataBuilder_ == null) {
                    this.s2CData_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFB;
                    onChanged();
                } else {
                    this.s2CDataBuilder_.clear();
                }
                return this;
            }


            public Builder removeS2CData(int index) {
                if (this.s2CDataBuilder_ == null) {
                    ensureS2CDataIsMutable();
                    this.s2CData_.remove(index);
                    onChanged();
                } else {
                    this.s2CDataBuilder_.remove(index);
                }
                return this;
            }


            public PetHandler.SkillInfo.Builder getS2CDataBuilder(int index) {
                return (PetHandler.SkillInfo.Builder) getS2CDataFieldBuilder().getBuilder(index);
            }


            public PetHandler.SkillInfoOrBuilder getS2CDataOrBuilder(int index) {
                if (this.s2CDataBuilder_ == null) {
                    return this.s2CData_.get(index);
                }
                return (PetHandler.SkillInfoOrBuilder) this.s2CDataBuilder_.getMessageOrBuilder(index);
            }


            public List<? extends PetHandler.SkillInfoOrBuilder> getS2CDataOrBuilderList() {
                if (this.s2CDataBuilder_ != null) {
                    return this.s2CDataBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList((List) this.s2CData_);
            }


            public PetHandler.SkillInfo.Builder addS2CDataBuilder() {
                return (PetHandler.SkillInfo.Builder) getS2CDataFieldBuilder().addBuilder(PetHandler.SkillInfo.getDefaultInstance());
            }


            public PetHandler.SkillInfo.Builder addS2CDataBuilder(int index) {
                return (PetHandler.SkillInfo.Builder) getS2CDataFieldBuilder().addBuilder(index, PetHandler.SkillInfo.getDefaultInstance());
            }


            public List<PetHandler.SkillInfo.Builder> getS2CDataBuilderList() {
                return getS2CDataFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilder<PetHandler.SkillInfo, PetHandler.SkillInfo.Builder, PetHandler.SkillInfoOrBuilder> getS2CDataFieldBuilder() {
                if (this.s2CDataBuilder_ == null) {
                    this.s2CDataBuilder_ = new RepeatedFieldBuilder(this.s2CData_, ((this.bitField0_ & 0x4) == 4), getParentForChildren(), isClean());
                    this.s2CData_ = null;
                }
                return this.s2CDataBuilder_;
            }
        }
    }

    public static final class PetOnHookSetRequest
            extends GeneratedMessage
            implements PetOnHookSetRequestOrBuilder {
        private static final PetOnHookSetRequest defaultInstance = new PetOnHookSetRequest(true);
        private final UnknownFieldSet unknownFields;

        private PetOnHookSetRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private PetOnHookSetRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static PetOnHookSetRequest getDefaultInstance() {
            return defaultInstance;
        }

        public PetOnHookSetRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private PetOnHookSetRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.s2CPetId_ = bs;
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2COnHookData_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_PetOnHookSetRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_PetOnHookSetRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetOnHookSetRequest.class, Builder.class);
        }

        public static Parser<PetOnHookSetRequest> PARSER = (Parser<PetOnHookSetRequest>) new AbstractParser<PetOnHookSetRequest>() {
            public PetHandler.PetOnHookSetRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.PetOnHookSetRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_PETID_FIELD_NUMBER = 1;
        private Object s2CPetId_;
        public static final int S2C_ONHOOKDATA_FIELD_NUMBER = 2;
        private Object s2COnHookData_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<PetOnHookSetRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CPetId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getS2CPetId() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CPetId_ = s;
            return s;
        }

        public ByteString getS2CPetIdBytes() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CPetId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasS2COnHookData() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2COnHookData() {
            Object ref = this.s2COnHookData_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2COnHookData_ = s;
            return s;
        }

        public ByteString getS2COnHookDataBytes() {
            Object ref = this.s2COnHookData_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2COnHookData_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CPetId_ = "";
            this.s2COnHookData_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CPetId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasS2COnHookData()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeBytes(1, getS2CPetIdBytes());
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2COnHookDataBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeBytesSize(1, getS2CPetIdBytes());
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2COnHookDataBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static PetOnHookSetRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (PetOnHookSetRequest) PARSER.parseFrom(data);
        }

        public static PetOnHookSetRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetOnHookSetRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PetOnHookSetRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (PetOnHookSetRequest) PARSER.parseFrom(data);
        }

        public static PetOnHookSetRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetOnHookSetRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PetOnHookSetRequest parseFrom(InputStream input) throws IOException {
            return (PetOnHookSetRequest) PARSER.parseFrom(input);
        }

        public static PetOnHookSetRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetOnHookSetRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static PetOnHookSetRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (PetOnHookSetRequest) PARSER.parseDelimitedFrom(input);
        }

        public static PetOnHookSetRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetOnHookSetRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static PetOnHookSetRequest parseFrom(CodedInputStream input) throws IOException {
            return (PetOnHookSetRequest) PARSER.parseFrom(input);
        }

        public static PetOnHookSetRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetOnHookSetRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(PetOnHookSetRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.PetOnHookSetRequestOrBuilder {
            private int bitField0_;
            private Object s2CPetId_;
            private Object s2COnHookData_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_PetOnHookSetRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_PetOnHookSetRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.PetOnHookSetRequest.class, Builder.class);
            }

            private Builder() {
                this.s2CPetId_ = "";
                this.s2COnHookData_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CPetId_ = "";
                this.s2COnHookData_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.PetOnHookSetRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CPetId_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2COnHookData_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_PetOnHookSetRequest_descriptor;
            }

            public PetHandler.PetOnHookSetRequest getDefaultInstanceForType() {
                return PetHandler.PetOnHookSetRequest.getDefaultInstance();
            }

            public PetHandler.PetOnHookSetRequest build() {
                PetHandler.PetOnHookSetRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.PetOnHookSetRequest buildPartial() {
                PetHandler.PetOnHookSetRequest result = new PetHandler.PetOnHookSetRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CPetId_ = this.s2CPetId_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2COnHookData_ = this.s2COnHookData_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.PetOnHookSetRequest)
                    return mergeFrom((PetHandler.PetOnHookSetRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.PetOnHookSetRequest other) {
                if (other == PetHandler.PetOnHookSetRequest.getDefaultInstance()) return this;
                if (other.hasS2CPetId()) {
                    this.bitField0_ |= 0x1;
                    this.s2CPetId_ = other.s2CPetId_;
                    onChanged();
                }
                if (other.hasS2COnHookData()) {
                    this.bitField0_ |= 0x2;
                    this.s2COnHookData_ = other.s2COnHookData_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CPetId()) return false;
                if (!hasS2COnHookData()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.PetOnHookSetRequest parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.PetOnHookSetRequest) PetHandler.PetOnHookSetRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.PetOnHookSetRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CPetId() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getS2CPetId() {
                Object ref = this.s2CPetId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CPetId_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CPetIdBytes() {
                Object ref = this.s2CPetId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CPetId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CPetId(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CPetId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CPetId_ = PetHandler.PetOnHookSetRequest.getDefaultInstance().getS2CPetId();
                onChanged();
                return this;
            }

            public Builder setS2CPetIdBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }

            public boolean hasS2COnHookData() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2COnHookData() {
                Object ref = this.s2COnHookData_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2COnHookData_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2COnHookDataBytes() {
                Object ref = this.s2COnHookData_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2COnHookData_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2COnHookData(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2COnHookData_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2COnHookData() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2COnHookData_ = PetHandler.PetOnHookSetRequest.getDefaultInstance().getS2COnHookData();
                onChanged();
                return this;
            }

            public Builder setS2COnHookDataBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2COnHookData_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class PetOnHookSetResponse
            extends GeneratedMessage
            implements PetOnHookSetResponseOrBuilder {
        private static final PetOnHookSetResponse defaultInstance = new PetOnHookSetResponse(true);
        private final UnknownFieldSet unknownFields;

        private PetOnHookSetResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private PetOnHookSetResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static PetOnHookSetResponse getDefaultInstance() {
            return defaultInstance;
        }

        public PetOnHookSetResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private PetOnHookSetResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_PetOnHookSetResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_PetOnHookSetResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetOnHookSetResponse.class, Builder.class);
        }

        public static Parser<PetOnHookSetResponse> PARSER = (Parser<PetOnHookSetResponse>) new AbstractParser<PetOnHookSetResponse>() {
            public PetHandler.PetOnHookSetResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.PetOnHookSetResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<PetOnHookSetResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static PetOnHookSetResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (PetOnHookSetResponse) PARSER.parseFrom(data);
        }

        public static PetOnHookSetResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetOnHookSetResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PetOnHookSetResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (PetOnHookSetResponse) PARSER.parseFrom(data);
        }

        public static PetOnHookSetResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetOnHookSetResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PetOnHookSetResponse parseFrom(InputStream input) throws IOException {
            return (PetOnHookSetResponse) PARSER.parseFrom(input);
        }

        public static PetOnHookSetResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetOnHookSetResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static PetOnHookSetResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (PetOnHookSetResponse) PARSER.parseDelimitedFrom(input);
        }

        public static PetOnHookSetResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetOnHookSetResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static PetOnHookSetResponse parseFrom(CodedInputStream input) throws IOException {
            return (PetOnHookSetResponse) PARSER.parseFrom(input);
        }

        public static PetOnHookSetResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetOnHookSetResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(PetOnHookSetResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.PetOnHookSetResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_PetOnHookSetResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_PetOnHookSetResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.PetOnHookSetResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.PetOnHookSetResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_PetOnHookSetResponse_descriptor;
            }

            public PetHandler.PetOnHookSetResponse getDefaultInstanceForType() {
                return PetHandler.PetOnHookSetResponse.getDefaultInstance();
            }

            public PetHandler.PetOnHookSetResponse build() {
                PetHandler.PetOnHookSetResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.PetOnHookSetResponse buildPartial() {
                PetHandler.PetOnHookSetResponse result = new PetHandler.PetOnHookSetResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.PetOnHookSetResponse)
                    return mergeFrom((PetHandler.PetOnHookSetResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.PetOnHookSetResponse other) {
                if (other == PetHandler.PetOnHookSetResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.PetOnHookSetResponse parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.PetOnHookSetResponse) PetHandler.PetOnHookSetResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.PetOnHookSetResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = PetHandler.PetOnHookSetResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class PetOnHookGetRequest
            extends GeneratedMessage
            implements PetOnHookGetRequestOrBuilder {
        private static final PetOnHookGetRequest defaultInstance = new PetOnHookGetRequest(true);
        private final UnknownFieldSet unknownFields;

        private PetOnHookGetRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private PetOnHookGetRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static PetOnHookGetRequest getDefaultInstance() {
            return defaultInstance;
        }

        public PetOnHookGetRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private PetOnHookGetRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.s2CPetId_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_PetOnHookGetRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_PetOnHookGetRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetOnHookGetRequest.class, Builder.class);
        }

        public static Parser<PetOnHookGetRequest> PARSER = (Parser<PetOnHookGetRequest>) new AbstractParser<PetOnHookGetRequest>() {
            public PetHandler.PetOnHookGetRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.PetOnHookGetRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_PETID_FIELD_NUMBER = 1;
        private Object s2CPetId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<PetOnHookGetRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CPetId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getS2CPetId() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CPetId_ = s;
            return s;
        }

        public ByteString getS2CPetIdBytes() {
            Object ref = this.s2CPetId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CPetId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CPetId_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CPetId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeBytes(1, getS2CPetIdBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeBytesSize(1, getS2CPetIdBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static PetOnHookGetRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (PetOnHookGetRequest) PARSER.parseFrom(data);
        }

        public static PetOnHookGetRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetOnHookGetRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PetOnHookGetRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (PetOnHookGetRequest) PARSER.parseFrom(data);
        }

        public static PetOnHookGetRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetOnHookGetRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PetOnHookGetRequest parseFrom(InputStream input) throws IOException {
            return (PetOnHookGetRequest) PARSER.parseFrom(input);
        }

        public static PetOnHookGetRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetOnHookGetRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static PetOnHookGetRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (PetOnHookGetRequest) PARSER.parseDelimitedFrom(input);
        }

        public static PetOnHookGetRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetOnHookGetRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static PetOnHookGetRequest parseFrom(CodedInputStream input) throws IOException {
            return (PetOnHookGetRequest) PARSER.parseFrom(input);
        }

        public static PetOnHookGetRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetOnHookGetRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(PetOnHookGetRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.PetOnHookGetRequestOrBuilder {
            private int bitField0_;
            private Object s2CPetId_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_PetOnHookGetRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_PetOnHookGetRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.PetOnHookGetRequest.class, Builder.class);
            }

            private Builder() {
                this.s2CPetId_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CPetId_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.PetOnHookGetRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CPetId_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_PetOnHookGetRequest_descriptor;
            }

            public PetHandler.PetOnHookGetRequest getDefaultInstanceForType() {
                return PetHandler.PetOnHookGetRequest.getDefaultInstance();
            }

            public PetHandler.PetOnHookGetRequest build() {
                PetHandler.PetOnHookGetRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.PetOnHookGetRequest buildPartial() {
                PetHandler.PetOnHookGetRequest result = new PetHandler.PetOnHookGetRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CPetId_ = this.s2CPetId_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.PetOnHookGetRequest)
                    return mergeFrom((PetHandler.PetOnHookGetRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.PetOnHookGetRequest other) {
                if (other == PetHandler.PetOnHookGetRequest.getDefaultInstance()) return this;
                if (other.hasS2CPetId()) {
                    this.bitField0_ |= 0x1;
                    this.s2CPetId_ = other.s2CPetId_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CPetId()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.PetOnHookGetRequest parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.PetOnHookGetRequest) PetHandler.PetOnHookGetRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.PetOnHookGetRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CPetId() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getS2CPetId() {
                Object ref = this.s2CPetId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CPetId_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CPetIdBytes() {
                Object ref = this.s2CPetId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CPetId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CPetId(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CPetId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CPetId_ = PetHandler.PetOnHookGetRequest.getDefaultInstance().getS2CPetId();
                onChanged();
                return this;
            }

            public Builder setS2CPetIdBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.s2CPetId_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class PetOnHookGetResponse
            extends GeneratedMessage
            implements PetOnHookGetResponseOrBuilder {
        private static final PetOnHookGetResponse defaultInstance = new PetOnHookGetResponse(true);
        private final UnknownFieldSet unknownFields;

        private PetOnHookGetResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private PetOnHookGetResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static PetOnHookGetResponse getDefaultInstance() {
            return defaultInstance;
        }

        public PetOnHookGetResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private PetOnHookGetResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 26:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x4;
                            this.s2CData_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_PetOnHookGetResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_PetOnHookGetResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetOnHookGetResponse.class, Builder.class);
        }

        public static Parser<PetOnHookGetResponse> PARSER = (Parser<PetOnHookGetResponse>) new AbstractParser<PetOnHookGetResponse>() {
            public PetHandler.PetOnHookGetResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.PetOnHookGetResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int S2C_DATA_FIELD_NUMBER = 3;
        private Object s2CData_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<PetOnHookGetResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasS2CData() {
            return ((this.bitField0_ & 0x4) == 4);
        }

        public String getS2CData() {
            Object ref = this.s2CData_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CData_ = s;
            return s;
        }

        public ByteString getS2CDataBytes() {
            Object ref = this.s2CData_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CData_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.s2CData_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasS2CData()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            if ((this.bitField0_ & 0x4) == 4) output.writeBytes(3, getS2CDataBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            if ((this.bitField0_ & 0x4) == 4) size += CodedOutputStream.computeBytesSize(3, getS2CDataBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static PetOnHookGetResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (PetOnHookGetResponse) PARSER.parseFrom(data);
        }

        public static PetOnHookGetResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetOnHookGetResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PetOnHookGetResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (PetOnHookGetResponse) PARSER.parseFrom(data);
        }

        public static PetOnHookGetResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PetOnHookGetResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static PetOnHookGetResponse parseFrom(InputStream input) throws IOException {
            return (PetOnHookGetResponse) PARSER.parseFrom(input);
        }

        public static PetOnHookGetResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetOnHookGetResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static PetOnHookGetResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (PetOnHookGetResponse) PARSER.parseDelimitedFrom(input);
        }

        public static PetOnHookGetResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetOnHookGetResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static PetOnHookGetResponse parseFrom(CodedInputStream input) throws IOException {
            return (PetOnHookGetResponse) PARSER.parseFrom(input);
        }

        public static PetOnHookGetResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PetOnHookGetResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(PetOnHookGetResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.PetOnHookGetResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;
            private Object s2CData_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_PetOnHookGetResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_PetOnHookGetResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.PetOnHookGetResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                this.s2CData_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                this.s2CData_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.PetOnHookGetResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CData_ = "";
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_PetOnHookGetResponse_descriptor;
            }

            public PetHandler.PetOnHookGetResponse getDefaultInstanceForType() {
                return PetHandler.PetOnHookGetResponse.getDefaultInstance();
            }

            public PetHandler.PetOnHookGetResponse build() {
                PetHandler.PetOnHookGetResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.PetOnHookGetResponse buildPartial() {
                PetHandler.PetOnHookGetResponse result = new PetHandler.PetOnHookGetResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                if ((from_bitField0_ & 0x4) == 4) to_bitField0_ |= 0x4;
                result.s2CData_ = this.s2CData_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.PetOnHookGetResponse)
                    return mergeFrom((PetHandler.PetOnHookGetResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.PetOnHookGetResponse other) {
                if (other == PetHandler.PetOnHookGetResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (other.hasS2CData()) {
                    this.bitField0_ |= 0x4;
                    this.s2CData_ = other.s2CData_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                if (!hasS2CData()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.PetOnHookGetResponse parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.PetOnHookGetResponse) PetHandler.PetOnHookGetResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.PetOnHookGetResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = PetHandler.PetOnHookGetResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public boolean hasS2CData() {
                return ((this.bitField0_ & 0x4) == 4);
            }

            public String getS2CData() {
                Object ref = this.s2CData_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CData_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CDataBytes() {
                Object ref = this.s2CData_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CData_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CData(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x4;
                this.s2CData_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CData() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.s2CData_ = PetHandler.PetOnHookGetResponse.getDefaultInstance().getS2CData();
                onChanged();
                return this;
            }

            public Builder setS2CDataBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x4;
                this.s2CData_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class ChangePetPkModelRequest
            extends GeneratedMessage
            implements ChangePetPkModelRequestOrBuilder {
        private static final ChangePetPkModelRequest defaultInstance = new ChangePetPkModelRequest(true);
        private final UnknownFieldSet unknownFields;

        private ChangePetPkModelRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private ChangePetPkModelRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static ChangePetPkModelRequest getDefaultInstance() {
            return defaultInstance;
        }

        public ChangePetPkModelRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ChangePetPkModelRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.c2SModel_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_ChangePetPkModelRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_ChangePetPkModelRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(ChangePetPkModelRequest.class, Builder.class);
        }

        public static Parser<ChangePetPkModelRequest> PARSER = (Parser<ChangePetPkModelRequest>) new AbstractParser<ChangePetPkModelRequest>() {
            public PetHandler.ChangePetPkModelRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.ChangePetPkModelRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int C2S_MODEL_FIELD_NUMBER = 1;
        private int c2SModel_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<ChangePetPkModelRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasC2SModel() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getC2SModel() {
            return this.c2SModel_;
        }

        private void initFields() {
            this.c2SModel_ = 0;
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasC2SModel()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.c2SModel_);
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.c2SModel_);
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static ChangePetPkModelRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (ChangePetPkModelRequest) PARSER.parseFrom(data);
        }

        public static ChangePetPkModelRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ChangePetPkModelRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ChangePetPkModelRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (ChangePetPkModelRequest) PARSER.parseFrom(data);
        }

        public static ChangePetPkModelRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ChangePetPkModelRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ChangePetPkModelRequest parseFrom(InputStream input) throws IOException {
            return (ChangePetPkModelRequest) PARSER.parseFrom(input);
        }

        public static ChangePetPkModelRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangePetPkModelRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static ChangePetPkModelRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (ChangePetPkModelRequest) PARSER.parseDelimitedFrom(input);
        }

        public static ChangePetPkModelRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangePetPkModelRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static ChangePetPkModelRequest parseFrom(CodedInputStream input) throws IOException {
            return (ChangePetPkModelRequest) PARSER.parseFrom(input);
        }

        public static ChangePetPkModelRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangePetPkModelRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ChangePetPkModelRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.ChangePetPkModelRequestOrBuilder {
            private int bitField0_;
            private int c2SModel_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_ChangePetPkModelRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_ChangePetPkModelRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.ChangePetPkModelRequest.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.ChangePetPkModelRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.c2SModel_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_ChangePetPkModelRequest_descriptor;
            }

            public PetHandler.ChangePetPkModelRequest getDefaultInstanceForType() {
                return PetHandler.ChangePetPkModelRequest.getDefaultInstance();
            }

            public PetHandler.ChangePetPkModelRequest build() {
                PetHandler.ChangePetPkModelRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.ChangePetPkModelRequest buildPartial() {
                PetHandler.ChangePetPkModelRequest result = new PetHandler.ChangePetPkModelRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.c2SModel_ = this.c2SModel_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.ChangePetPkModelRequest)
                    return mergeFrom((PetHandler.ChangePetPkModelRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.ChangePetPkModelRequest other) {
                if (other == PetHandler.ChangePetPkModelRequest.getDefaultInstance()) return this;
                if (other.hasC2SModel()) setC2SModel(other.getC2SModel());
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasC2SModel()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.ChangePetPkModelRequest parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.ChangePetPkModelRequest) PetHandler.ChangePetPkModelRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.ChangePetPkModelRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasC2SModel() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getC2SModel() {
                return this.c2SModel_;
            }

            public Builder setC2SModel(int value) {
                this.bitField0_ |= 0x1;
                this.c2SModel_ = value;
                onChanged();
                return this;
            }

            public Builder clearC2SModel() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.c2SModel_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class ChangePetPkModelResponse
            extends GeneratedMessage
            implements ChangePetPkModelResponseOrBuilder {
        private static final ChangePetPkModelResponse defaultInstance = new ChangePetPkModelResponse(true);
        private final UnknownFieldSet unknownFields;

        private ChangePetPkModelResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private ChangePetPkModelResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static ChangePetPkModelResponse getDefaultInstance() {
            return defaultInstance;
        }

        public ChangePetPkModelResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ChangePetPkModelResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_ChangePetPkModelResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_ChangePetPkModelResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(ChangePetPkModelResponse.class, Builder.class);
        }

        public static Parser<ChangePetPkModelResponse> PARSER = (Parser<ChangePetPkModelResponse>) new AbstractParser<ChangePetPkModelResponse>() {
            public PetHandler.ChangePetPkModelResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.ChangePetPkModelResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<ChangePetPkModelResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static ChangePetPkModelResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (ChangePetPkModelResponse) PARSER.parseFrom(data);
        }

        public static ChangePetPkModelResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ChangePetPkModelResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ChangePetPkModelResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (ChangePetPkModelResponse) PARSER.parseFrom(data);
        }

        public static ChangePetPkModelResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ChangePetPkModelResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ChangePetPkModelResponse parseFrom(InputStream input) throws IOException {
            return (ChangePetPkModelResponse) PARSER.parseFrom(input);
        }

        public static ChangePetPkModelResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangePetPkModelResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static ChangePetPkModelResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (ChangePetPkModelResponse) PARSER.parseDelimitedFrom(input);
        }

        public static ChangePetPkModelResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangePetPkModelResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static ChangePetPkModelResponse parseFrom(CodedInputStream input) throws IOException {
            return (ChangePetPkModelResponse) PARSER.parseFrom(input);
        }

        public static ChangePetPkModelResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangePetPkModelResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ChangePetPkModelResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.ChangePetPkModelResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_ChangePetPkModelResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_ChangePetPkModelResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.ChangePetPkModelResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.ChangePetPkModelResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_ChangePetPkModelResponse_descriptor;
            }

            public PetHandler.ChangePetPkModelResponse getDefaultInstanceForType() {
                return PetHandler.ChangePetPkModelResponse.getDefaultInstance();
            }

            public PetHandler.ChangePetPkModelResponse build() {
                PetHandler.ChangePetPkModelResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.ChangePetPkModelResponse buildPartial() {
                PetHandler.ChangePetPkModelResponse result = new PetHandler.ChangePetPkModelResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.ChangePetPkModelResponse)
                    return mergeFrom((PetHandler.ChangePetPkModelResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.ChangePetPkModelResponse other) {
                if (other == PetHandler.ChangePetPkModelResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.ChangePetPkModelResponse parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.ChangePetPkModelResponse) PetHandler.ChangePetPkModelResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.ChangePetPkModelResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = PetHandler.ChangePetPkModelResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class OnPetDetailPush
            extends GeneratedMessage
            implements OnPetDetailPushOrBuilder {
        private static final OnPetDetailPush defaultInstance = new OnPetDetailPush(true);
        private final UnknownFieldSet unknownFields;

        private OnPetDetailPush(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private OnPetDetailPush(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static OnPetDetailPush getDefaultInstance() {
            return defaultInstance;
        }

        public OnPetDetailPush getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private OnPetDetailPush(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    PetHandler.PetInfo.Builder subBuilder;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 26:
                            subBuilder = null;
                            if ((this.bitField0_ & 0x4) == 4) subBuilder = this.s2CPet_.toBuilder();
                            this.s2CPet_ = (PetHandler.PetInfo) input.readMessage(PetHandler.PetInfo.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.s2CPet_);
                                this.s2CPet_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x4;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_OnPetDetailPush_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_OnPetDetailPush_fieldAccessorTable.ensureFieldAccessorsInitialized(OnPetDetailPush.class, Builder.class);
        }

        public static Parser<OnPetDetailPush> PARSER = (Parser<OnPetDetailPush>) new AbstractParser<OnPetDetailPush>() {
            public PetHandler.OnPetDetailPush parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.OnPetDetailPush(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int S2C_PET_FIELD_NUMBER = 3;
        private PetHandler.PetInfo s2CPet_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<OnPetDetailPush> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8())
                this.s2CMsg_ = s;
            return s;
        }

        static {
            defaultInstance.initFields();
        }


        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }


        public boolean hasS2CPet() {
            return ((this.bitField0_ & 0x4) == 4);
        }


        public PetHandler.PetInfo getS2CPet() {
            return this.s2CPet_;
        }


        public PetHandler.PetInfoOrBuilder getS2CPetOrBuilder() {
            return this.s2CPet_;
        }


        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.s2CPet_ = PetHandler.PetInfo.getDefaultInstance();
        }


        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
                return true;
            }
            if (isInitialized == 0) {
                return false;
            }
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (hasS2CPet() && !getS2CPet().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }


        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) {
                output.writeInt32(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                output.writeBytes(2, getS2CMsgBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                output.writeMessage(3, (MessageLite) this.s2CPet_);
            }
            getUnknownFields().writeTo(output);
        }


        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) {
                size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                size += CodedOutputStream.computeMessageSize(3, (MessageLite) this.s2CPet_);
            }
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }


        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }


        public static OnPetDetailPush parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (OnPetDetailPush) PARSER.parseFrom(data);
        }


        public static OnPetDetailPush parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (OnPetDetailPush) PARSER.parseFrom(data, extensionRegistry);
        }


        public static OnPetDetailPush parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (OnPetDetailPush) PARSER.parseFrom(data);
        }


        public static OnPetDetailPush parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (OnPetDetailPush) PARSER.parseFrom(data, extensionRegistry);
        }


        public static OnPetDetailPush parseFrom(InputStream input) throws IOException {
            return (OnPetDetailPush) PARSER.parseFrom(input);
        }


        public static OnPetDetailPush parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (OnPetDetailPush) PARSER.parseFrom(input, extensionRegistry);
        }


        public static OnPetDetailPush parseDelimitedFrom(InputStream input) throws IOException {
            return (OnPetDetailPush) PARSER.parseDelimitedFrom(input);
        }


        public static OnPetDetailPush parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (OnPetDetailPush) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }


        public static OnPetDetailPush parseFrom(CodedInputStream input) throws IOException {
            return (OnPetDetailPush) PARSER.parseFrom(input);
        }


        public static OnPetDetailPush parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (OnPetDetailPush) PARSER.parseFrom(input, extensionRegistry);
        }


        public static Builder newBuilder() {
            return Builder.create();
        }


        public Builder newBuilderForType() {
            return newBuilder();
        }


        public static Builder newBuilder(OnPetDetailPush prototype) {
            return newBuilder().mergeFrom(prototype);
        }


        public Builder toBuilder() {
            return newBuilder(this);
        }


        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }


        public static final class Builder
                extends GeneratedMessage.Builder<Builder>
                implements PetHandler.OnPetDetailPushOrBuilder {
            private int bitField0_;


            private int s2CCode_;


            private Object s2CMsg_;


            private PetHandler.PetInfo s2CPet_;


            private SingleFieldBuilder<PetHandler.PetInfo, PetHandler.PetInfo.Builder, PetHandler.PetInfoOrBuilder> s2CPetBuilder_;


            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_OnPetDetailPush_descriptor;
            }


            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_OnPetDetailPush_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.OnPetDetailPush.class, Builder.class);
            }


            private Builder() {
                this.s2CMsg_ = "";
                this.s2CPet_ = PetHandler.PetInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }


            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                this.s2CPet_ = PetHandler.PetInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }


            private void maybeForceBuilderInitialization() {
                if (PetHandler.OnPetDetailPush.alwaysUseFieldBuilders) {
                    getS2CPetFieldBuilder();
                }
            }


            private static Builder create() {
                return new Builder();
            }


            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                if (this.s2CPetBuilder_ == null) {
                    this.s2CPet_ = PetHandler.PetInfo.getDefaultInstance();
                } else {
                    this.s2CPetBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }


            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }


            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_OnPetDetailPush_descriptor;
            }


            public PetHandler.OnPetDetailPush getDefaultInstanceForType() {
                return PetHandler.OnPetDetailPush.getDefaultInstance();
            }


            public PetHandler.OnPetDetailPush build() {
                PetHandler.OnPetDetailPush result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }


            public PetHandler.OnPetDetailPush buildPartial() {
                PetHandler.OnPetDetailPush result = new PetHandler.OnPetDetailPush(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) {
                    to_bitField0_ |= 0x1;
                }
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) {
                    to_bitField0_ |= 0x2;
                }
                result.s2CMsg_ = this.s2CMsg_;
                if ((from_bitField0_ & 0x4) == 4) {
                    to_bitField0_ |= 0x4;
                }
                if (this.s2CPetBuilder_ == null) {
                    result.s2CPet_ = this.s2CPet_;
                } else {
                    result.s2CPet_ = (PetHandler.PetInfo) this.s2CPetBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }


            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.OnPetDetailPush) {
                    return mergeFrom((PetHandler.OnPetDetailPush) other);
                }
                super.mergeFrom(other);
                return this;
            }


            public Builder mergeFrom(PetHandler.OnPetDetailPush other) {
                if (other == PetHandler.OnPetDetailPush.getDefaultInstance()) {
                    return this;
                }
                if (other.hasS2CCode()) {
                    setS2CCode(other.getS2CCode());
                }
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (other.hasS2CPet()) {
                    mergeS2CPet(other.getS2CPet());
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }


            public final boolean isInitialized() {
                if (!hasS2CCode()) {
                    return false;
                }
                if (hasS2CPet() && !getS2CPet().isInitialized()) {
                    return false;
                }
                return true;
            }


            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.OnPetDetailPush parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.OnPetDetailPush) PetHandler.OnPetDetailPush.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.OnPetDetailPush) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }


            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }


            public int getS2CCode() {
                return this.s2CCode_;
            }


            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }


            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }


            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }


            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.s2CMsg_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setS2CMsg(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }


            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = PetHandler.OnPetDetailPush.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }


            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }


            public boolean hasS2CPet() {
                return ((this.bitField0_ & 0x4) == 4);
            }


            public PetHandler.PetInfo getS2CPet() {
                if (this.s2CPetBuilder_ == null) {
                    return this.s2CPet_;
                }
                return (PetHandler.PetInfo) this.s2CPetBuilder_.getMessage();
            }


            public Builder setS2CPet(PetHandler.PetInfo value) {
                if (this.s2CPetBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.s2CPet_ = value;
                    onChanged();
                } else {
                    this.s2CPetBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }


            public Builder setS2CPet(PetHandler.PetInfo.Builder builderForValue) {
                if (this.s2CPetBuilder_ == null) {
                    this.s2CPet_ = builderForValue.build();
                    onChanged();
                } else {
                    this.s2CPetBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x4;
                return this;
            }


            public Builder mergeS2CPet(PetHandler.PetInfo value) {
                if (this.s2CPetBuilder_ == null) {
                    if ((this.bitField0_ & 0x4) == 4 && this.s2CPet_ != PetHandler.PetInfo.getDefaultInstance()) {
                        this.s2CPet_ = PetHandler.PetInfo.newBuilder(this.s2CPet_).mergeFrom(value).buildPartial();
                    } else {
                        this.s2CPet_ = value;
                    }
                    onChanged();
                } else {
                    this.s2CPetBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }


            public Builder clearS2CPet() {
                if (this.s2CPetBuilder_ == null) {
                    this.s2CPet_ = PetHandler.PetInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.s2CPetBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }


            public PetHandler.PetInfo.Builder getS2CPetBuilder() {
                this.bitField0_ |= 0x4;
                onChanged();
                return (PetHandler.PetInfo.Builder) getS2CPetFieldBuilder().getBuilder();
            }


            public PetHandler.PetInfoOrBuilder getS2CPetOrBuilder() {
                if (this.s2CPetBuilder_ != null) {
                    return (PetHandler.PetInfoOrBuilder) this.s2CPetBuilder_.getMessageOrBuilder();
                }
                return this.s2CPet_;
            }


            private SingleFieldBuilder<PetHandler.PetInfo, PetHandler.PetInfo.Builder, PetHandler.PetInfoOrBuilder> getS2CPetFieldBuilder() {
                if (this.s2CPetBuilder_ == null) {
                    this.s2CPetBuilder_ = new SingleFieldBuilder(getS2CPet(), getParentForChildren(), isClean());
                    this.s2CPet_ = null;
                }
                return this.s2CPetBuilder_;
            }
        }
    }


    public static final class OnPetExpPush
            extends GeneratedMessage
            implements OnPetExpPushOrBuilder {
        private static final OnPetExpPush defaultInstance = new OnPetExpPush(true);
        private final UnknownFieldSet unknownFields;

        private OnPetExpPush(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private OnPetExpPush(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static OnPetExpPush getDefaultInstance() {
            return defaultInstance;
        }

        public OnPetExpPush getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private OnPetExpPush(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 24:
                            this.bitField0_ |= 0x4;
                            this.s2CExp_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PetHandler.internal_static_pomelo_area_OnPetExpPush_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return PetHandler.internal_static_pomelo_area_OnPetExpPush_fieldAccessorTable.ensureFieldAccessorsInitialized(OnPetExpPush.class, Builder.class);
        }

        public static Parser<OnPetExpPush> PARSER = (Parser<OnPetExpPush>) new AbstractParser<OnPetExpPush>() {
            public PetHandler.OnPetExpPush parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new PetHandler.OnPetExpPush(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int S2C_EXP_FIELD_NUMBER = 3;
        private int s2CExp_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<OnPetExpPush> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasS2CExp() {
            return ((this.bitField0_ & 0x4) == 4);
        }

        public int getS2CExp() {
            return this.s2CExp_;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.s2CExp_ = 0;
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasS2CExp()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            if ((this.bitField0_ & 0x4) == 4) output.writeInt32(3, this.s2CExp_);
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            if ((this.bitField0_ & 0x4) == 4) size += CodedOutputStream.computeInt32Size(3, this.s2CExp_);
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static OnPetExpPush parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (OnPetExpPush) PARSER.parseFrom(data);
        }

        public static OnPetExpPush parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (OnPetExpPush) PARSER.parseFrom(data, extensionRegistry);
        }

        public static OnPetExpPush parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (OnPetExpPush) PARSER.parseFrom(data);
        }

        public static OnPetExpPush parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (OnPetExpPush) PARSER.parseFrom(data, extensionRegistry);
        }

        public static OnPetExpPush parseFrom(InputStream input) throws IOException {
            return (OnPetExpPush) PARSER.parseFrom(input);
        }

        public static OnPetExpPush parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (OnPetExpPush) PARSER.parseFrom(input, extensionRegistry);
        }

        public static OnPetExpPush parseDelimitedFrom(InputStream input) throws IOException {
            return (OnPetExpPush) PARSER.parseDelimitedFrom(input);
        }

        public static OnPetExpPush parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (OnPetExpPush) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static OnPetExpPush parseFrom(CodedInputStream input) throws IOException {
            return (OnPetExpPush) PARSER.parseFrom(input);
        }

        public static OnPetExpPush parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (OnPetExpPush) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(OnPetExpPush prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PetHandler.OnPetExpPushOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;
            private int s2CExp_;

            public static final Descriptors.Descriptor getDescriptor() {
                return PetHandler.internal_static_pomelo_area_OnPetExpPush_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return PetHandler.internal_static_pomelo_area_OnPetExpPush_fieldAccessorTable.ensureFieldAccessorsInitialized(PetHandler.OnPetExpPush.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PetHandler.OnPetExpPush.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CExp_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return PetHandler.internal_static_pomelo_area_OnPetExpPush_descriptor;
            }

            public PetHandler.OnPetExpPush getDefaultInstanceForType() {
                return PetHandler.OnPetExpPush.getDefaultInstance();
            }

            public PetHandler.OnPetExpPush build() {
                PetHandler.OnPetExpPush result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public PetHandler.OnPetExpPush buildPartial() {
                PetHandler.OnPetExpPush result = new PetHandler.OnPetExpPush(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                if ((from_bitField0_ & 0x4) == 4) to_bitField0_ |= 0x4;
                result.s2CExp_ = this.s2CExp_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof PetHandler.OnPetExpPush) return mergeFrom((PetHandler.OnPetExpPush) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(PetHandler.OnPetExpPush other) {
                if (other == PetHandler.OnPetExpPush.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (other.hasS2CExp()) setS2CExp(other.getS2CExp());
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                if (!hasS2CExp()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                PetHandler.OnPetExpPush parsedMessage = null;
                try {
                    parsedMessage = (PetHandler.OnPetExpPush) PetHandler.OnPetExpPush.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PetHandler.OnPetExpPush) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = PetHandler.OnPetExpPush.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public boolean hasS2CExp() {
                return ((this.bitField0_ & 0x4) == 4);
            }

            public int getS2CExp() {
                return this.s2CExp_;
            }

            public Builder setS2CExp(int value) {
                this.bitField0_ |= 0x4;
                this.s2CExp_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CExp() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.s2CExp_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static Descriptors.FileDescriptor getDescriptor() {
        return descriptor;
    }


    static {
        String[] descriptorData = {"\n\020petHandler.proto\022\013pomelo.area\032\fcommon.proto\"\033\n\031GetAllPetsBaseInfoRequest\"\004\n\007PetInfo\022\n\n\002id\030\001 \002(\t\022\f\n\004name\030\002 \002(\t\022\r\n\005level\030\003 \002(\005\022\n\n\002hp\030\004 \002(\005\022\n\n\002mp\030\005 \002(\005\022\r\n\005MaxHP\030\006 \002(\005\022\r\n\005MaxMP\030\007 \002(\005\022\016\n\006MinPhy\030\b \002(\005\022\016\n\006MaxPhy\030\t \002(\005\022\016\n\006MinMag\030\n \002(\005\022\016\n\006MaxMag\030\013 \002(\005\022\013\n\003Hit\030\f \002(\005\022\r\n\005Dodge\030\r \002(\005\022\f\n\004Crit\030\016 \002(\005\022\017\n\007ResCrit\030\017 \002(\005\022\n\n\002Ac\030\020 \002(\005\022\016\n\006Resist\030\021 \002(\005\022\020\n\bIgnoreAc\030\022 \002(\005\022\024\n\fIgnoreResist\030\023 \002(\005\022\013\n\003exp\030\024 \002(\005\022\022\n\nupgradeExp\030", "\025 \002(\005\022\026\n\016transformLevel\030\026 \002(\005\022\024\n\fupGradeLevel\030\027 \002(\005\022\030\n\020upGradeNeedLevel\030\030 \002(\005\022\022\n\nfightPower\030\031 \002(\005\022\017\n\007stamina\030\032 \002(\005\022\022\n\nmaxStamina\030\033 \002(\005\022\017\n\007loyalty\030\034 \002(\005\022\022\n\nmaxLoyalty\030\035 \002(\005\022\022\n\ntemplateId\030\036 \002(\005\"`\n\013PetBaseInfo\022\n\n\002id\030\001 \002(\t\022\022\n\ntemplateId\030\036 \002(\005\022\r\n\005level\030\003 \002(\005\022\026\n\016transformLevel\030\026 \002(\005\022\n\n\002hp\030\004 \002(\005\"\001\n\032GetAllPetsBaseInfoResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\0221\n\017s2c_petBaseInfo\030\003 \003(\0132\030.pomelo.area.PetBa", "seInfo\022\031\n\021s2c_fightingPetId\030\004 \002(\t\"9\n\021GetPetInfoRequest\022\021\n\ts2c_petId\030\001 \002(\t\022\021\n\ts2c_ownId\030\002 \002(\t\"^\n\022GetPetInfoResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022%\n\007s2c_pet\030\003 \001(\0132\024.pomelo.area.PetInfo\"N\n\021DevelopPetRequest\022\020\n\bs2c_type\030\001 \002(\005\022\024\n\fs2c_itemCode\030\002 \002(\t\022\021\n\ts2c_petId\030\003 \002(\t\"7\n\022DevelopPetResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\">\n\024ChangePetNameRequest\022\021\n\ts2c_petId\030\001 \002(\t\022\023\n\013s2c_petName\030\002 \002(\t\":\n\025ChangeP", "etNameResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\"5\n\016FreePetRequest\022\021\n\ts2c_petId\030\001 \002(\t\022\020\n\bs2c_type\030\002 \002(\005\"4\n\017FreePetResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\"9\n\022PetOutFightRequest\022\021\n\ts2c_petId\030\001 \002(\t\022\020\n\bs2c_type\030\002 \002(\005\"8\n\023PetOutFightResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\"%\n\020PetReliveRequest\022\021\n\ts2c_petId\030\001 \002(\t\"6\n\021PetReliveResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\"\024\n\022RandPetNameRequest\"8\n\023Rand", "PetNameResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\"x\n\013UpGradeData\022\r\n\005level\030\001 \002(\005\022\017\n\007upLevel\030\002 \002(\005\022\020\n\breqLevel\030\003 \002(\005\022\021\n\tdownLevel\030\004 \002(\005\022$\n\005attrs\030\005 \003(\0132\025.pomelo.AttributeBase\"'\n\022UpGradeInfoRequest\022\021\n\ts2c_petId\030\001 \002(\t\"k\n\023UpGradeInfoResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\0221\n\017s2c_upGradeData\030\003 \001(\0132\030.pomelo.area.UpGradeData\"(\n\023UpGradeLevelRequest\022\021\n\ts2c_petId\030\001 \002(\t\"Q\n\024UpGradeLevelResponse\022\020\n\bs2c_code", "\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022\026\n\016s2c_canUpGrade\030\003 \001(\005\"%\n\bItemInfo\022\f\n\004code\030\001 \002(\t\022\013\n\003num\030\002 \002(\005\"r\n\032UpGradeRandPropertyRequest\022\021\n\ts2c_petId\030\001 \002(\t\022\017\n\007s2c_pos\030\002 \002(\005\0220\n\021s2c_materialItems\030\003 \003(\0132\025.pomelo.area.ItemInfo\"@\n\033UpGradeRandPropertyResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\">\n\030ReSetRandPropertyRequest\022\021\n\ts2c_petId\030\001 \002(\t\022\017\n\007s2c_pos\030\002 \002(\005\">\n\031ReSetRandPropertyResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\",\n\027", "RandPropertyListRequest\022\021\n\ts2c_petId\030\001 \002(\t\"o\n\fPropertyData\022\013\n\003pos\030\001 \002(\005\022\n\n\002id\030\002 \002(\005\022\r\n\005level\030\003 \002(\005\022\013\n\003exp\030\004 \002(\005\022\023\n\013propertyKey\030\005 \002(\t\022\025\n\rpropertyValue\030\006 \002(\005\"¢\001\n\030RandPropertyListResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\0220\n\rs2c_propertys\030\003 \003(\0132\031.pomelo.area.PropertyData\022\026\n\016s2c_fightPower\030\004 \002(\005\022\031\n\021s2c_addFightPower\030\005 \002(\005\"'\n\022PetIllusionRequest\022\021\n\ts2c_petId\030\001 \002(\t\"d\n\023PetIllusionResponse\022\020\n\bs2c_code\030\001 \002", "(\005\022\017\n\007s2c_msg\030\002 \001(\t\022\022\n\ns2c_result\030\003 \001(\005\022\026\n\016s2c_luckyValue\030\004 \001(\005\"+\n\026PetIllusionInfoRequest\022\021\n\ts2c_petId\030\001 \002(\t\"½\001\n\fIllusionInfo\022\022\n\nfightPower\030\001 \002(\005\022\026\n\016transformLevel\030\002 \002(\005\022\022\n\nluckyValue\030\003 \002(\005\022\022\n\nLuckyLimit\030\004 \002(\005\022\016\n\006NeedUp\030\005 \002(\005\022\022\n\nSuccessPer\030\006 \002(\005\022\017\n\007itemNum\030\007 \002(\005\022$\n\005attrs\030\b \003(\0132\025.pomelo.AttributeBase\"i\n\027PetIllusionInfoResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022+\n\bs2c_data\030\003 \001(\0132\031.pomelo.area.Illus", "ionInfo\"-\n\030PetIllusionReviewRequest\022\021\n\ts2c_petId\030\001 \002(\t\"«\001\n\016IllusionReview\022\022\n\nfightPower\030\001 \002(\005\022\026\n\016transformLevel\030\002 \002(\005\022\022\n\nLuckyLimit\030\003 \002(\005\022\016\n\006NeedUp\030\004 \002(\005\022\022\n\nSuccessPer\030\005 \002(\005\022\017\n\007itemNum\030\006 \002(\005\022$\n\005attrs\030\007 \003(\0132\025.pomelo.AttributeBase\"m\n\031PetIllusionReviewResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022-\n\bs2c_data\030\003 \003(\0132\033.pomelo.area.IllusionReview\"^\n\031PetComprehendSkillRequest\022\021\n\ts2c_petId\030\001 \002(\t\022\031\n\021s2c_skill", "BookCode\030\002 \002(\t\022\023\n\013s2c_lockPos\030\003 \003(\005\"t\n\nResultData\022\016\n\006result\030\001 \002(\005\022\022\n\nsrcSkillId\030\002 \002(\005\022\025\n\rsrcSkillLevel\030\003 \002(\005\022\023\n\013destSkillId\030\004 \002(\005\022\026\n\016destSkillLevel\030\005 \002(\005\"p\n\032PetComprehendSkillResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022/\n\016s2c_resultData\030\003 \001(\0132\027.pomelo.area.ResultData\"(\n\023PetSkillListRequest\022\021\n\ts2c_petId\030\001 \002(\t\"C\n\tSkillInfo\022\n\n\002id\030\001 \002(\005\022\r\n\005level\030\002 \002(\005\022\013\n\003pos\030\003 \002(\005\022\016\n\006inborn\030\004 \002(\005\"c\n\024PetSkillListRespon", "se\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022(\n\bs2c_data\030\003 \003(\0132\026.pomelo.area.SkillInfo\"@\n\023PetOnHookSetRequest\022\021\n\ts2c_petId\030\001 \002(\t\022\026\n\016s2c_onHookData\030\002 \002(\t\"9\n\024PetOnHookSetResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\"(\n\023PetOnHookGetRequest\022\021\n\ts2c_petId\030\001 \002(\t\"K\n\024PetOnHookGetResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022\020\n\bs2c_data\030\003 \002(\t\",\n\027ChangePetPkModelRequest\022\021\n\tc2s_model\030\001 \002(\005\"=\n\030ChangePetPkModelResponse\022\020\n", "\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\"[\n\017OnPetDetailPush\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022%\n\007s2c_pet\030\003 \001(\0132\024.pomelo.area.PetInfo\"B\n\fOnPetExpPush\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022\017\n\007s2c_exp\030\003 \002(\0052ã\017\n\npetHandler\022l\n\031getAllPetsBaseInfoRequest\022&.pomelo.area.GetAllPetsBaseInfoRequest\032'.pomelo.area.GetAllPetsBaseInfoResponse\022T\n\021getPetInfoRequest\022\036.pomelo.area.GetPetInfoRequest\032\037.pomelo.area.GetPetInfoResp", "onse\022T\n\021developPetRequest\022\036.pomelo.area.DevelopPetRequest\032\037.pomelo.area.DevelopPetResponse\022]\n\024changePetNameRequest\022!.pomelo.area.ChangePetNameRequest\032\".pomelo.area.ChangePetNameResponse\022K\n\016freePetRequest\022\033.pomelo.area.FreePetRequest\032\034.pomelo.area.FreePetResponse\022W\n\022petOutFightRequest\022\037.pomelo.area.PetOutFightRequest\032 .pomelo.area.PetOutFightResponse\022Q\n\020petReliveRequest\022\035.pomelo.area.PetReliveReque", "st\032\036.pomelo.area.PetReliveResponse\022W\n\022randPetNameRequest\022\037.pomelo.area.RandPetNameRequest\032 .pomelo.area.RandPetNameResponse\022W\n\022upGradeInfoRequest\022\037.pomelo.area.UpGradeInfoRequest\032 .pomelo.area.UpGradeInfoResponse\022Z\n\023upGradeLevelRequest\022 .pomelo.area.UpGradeLevelRequest\032!.pomelo.area.UpGradeLevelResponse\022o\n\032upGradeRandPropertyRequest\022'.pomelo.area.UpGradeRandPropertyRequest\032(.pomelo.area.UpGradeRan", "dPropertyResponse\022i\n\030reSetRandPropertyRequest\022%.pomelo.area.ReSetRandPropertyRequest\032&.pomelo.area.ReSetRandPropertyResponse\022f\n\027randPropertyListRequest\022$.pomelo.area.RandPropertyListRequest\032%.pomelo.area.RandPropertyListResponse\022W\n\022petIllusionRequest\022\037.pomelo.area.PetIllusionRequest\032 .pomelo.area.PetIllusionResponse\022c\n\026petIllusionInfoRequest\022#.pomelo.area.PetIllusionInfoRequest\032$.pomelo.area.PetIl", "lusionInfoResponse\022i\n\030petIllusionReviewRequest\022%.pomelo.area.PetIllusionReviewRequest\032&.pomelo.area.PetIllusionReviewResponse\022l\n\031petComprehendSkillRequest\022&.pomelo.area.PetComprehendSkillRequest\032'.pomelo.area.PetComprehendSkillResponse\022Z\n\023petSkillListRequest\022 .pomelo.area.PetSkillListRequest\032!.pomelo.area.PetSkillListResponse\022Z\n\023petOnHookSetRequest\022 .pomelo.area.PetOnHookSetRequest\032!.pomelo.area.P", "etOnHookSetResponse\022Z\n\023petOnHookGetRequest\022 .pomelo.area.PetOnHookGetRequest\032!.pomelo.area.PetOnHookGetResponse\022f\n\027changePetPkModelRequest\022$.pomelo.area.ChangePetPkModelRequest\032%.pomelo.area.ChangePetPkModelResponse2\001\n\007petPush\022=\n\017onPetDetailPush\022\034.pomelo.area.OnPetDetailPush\032\f.pomelo.Void\0227\n\fonPetExpPush\022\031.pomelo.area.OnPetExpPush\032\f.pomelo.Void"};


        Descriptors.FileDescriptor.InternalDescriptorAssigner assigner = new Descriptors.FileDescriptor.InternalDescriptorAssigner() {
            public ExtensionRegistry assignDescriptors(Descriptors.FileDescriptor root) {
                PetHandler.descriptor = root;
                return null;
            }
        };

        Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData, new Descriptors.FileDescriptor[]{

                Common.getDescriptor()}, assigner);
    }

    private static final Descriptors.Descriptor internal_static_pomelo_area_GetAllPetsBaseInfoRequest_descriptor = getDescriptor().getMessageTypes().get(0);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_GetAllPetsBaseInfoRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_GetAllPetsBaseInfoRequest_descriptor, new String[0]);


    private static final Descriptors.Descriptor internal_static_pomelo_area_PetInfo_descriptor = getDescriptor().getMessageTypes().get(1);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_PetInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_PetInfo_descriptor, new String[]{"Id", "Name", "Level", "Hp", "Mp", "MaxHP", "MaxMP", "MinPhy", "MaxPhy", "MinMag", "MaxMag", "Hit", "Dodge", "Crit", "ResCrit", "Ac", "Resist", "IgnoreAc", "IgnoreResist", "Exp", "UpgradeExp", "TransformLevel", "UpGradeLevel", "UpGradeNeedLevel", "FightPower", "Stamina", "MaxStamina", "Loyalty", "MaxLoyalty", "TemplateId"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_PetBaseInfo_descriptor = getDescriptor().getMessageTypes().get(2);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_PetBaseInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_PetBaseInfo_descriptor, new String[]{"Id", "TemplateId", "Level", "TransformLevel", "Hp"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_GetAllPetsBaseInfoResponse_descriptor = getDescriptor().getMessageTypes().get(3);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_GetAllPetsBaseInfoResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_GetAllPetsBaseInfoResponse_descriptor, new String[]{"S2CCode", "S2CMsg", "S2CPetBaseInfo", "S2CFightingPetId"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_GetPetInfoRequest_descriptor = getDescriptor().getMessageTypes().get(4);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_GetPetInfoRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_GetPetInfoRequest_descriptor, new String[]{"S2CPetId", "S2COwnId"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_GetPetInfoResponse_descriptor = getDescriptor().getMessageTypes().get(5);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_GetPetInfoResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_GetPetInfoResponse_descriptor, new String[]{"S2CCode", "S2CMsg", "S2CPet"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_DevelopPetRequest_descriptor = getDescriptor().getMessageTypes().get(6);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_DevelopPetRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_DevelopPetRequest_descriptor, new String[]{"S2CType", "S2CItemCode", "S2CPetId"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_DevelopPetResponse_descriptor = getDescriptor().getMessageTypes().get(7);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_DevelopPetResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_DevelopPetResponse_descriptor, new String[]{"S2CCode", "S2CMsg"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_ChangePetNameRequest_descriptor = getDescriptor().getMessageTypes().get(8);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_ChangePetNameRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_ChangePetNameRequest_descriptor, new String[]{"S2CPetId", "S2CPetName"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_ChangePetNameResponse_descriptor = getDescriptor().getMessageTypes().get(9);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_ChangePetNameResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_ChangePetNameResponse_descriptor, new String[]{"S2CCode", "S2CMsg"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_FreePetRequest_descriptor = getDescriptor().getMessageTypes().get(10);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_FreePetRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_FreePetRequest_descriptor, new String[]{"S2CPetId", "S2CType"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_FreePetResponse_descriptor = getDescriptor().getMessageTypes().get(11);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_FreePetResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_FreePetResponse_descriptor, new String[]{"S2CCode", "S2CMsg"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_PetOutFightRequest_descriptor = getDescriptor().getMessageTypes().get(12);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_PetOutFightRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_PetOutFightRequest_descriptor, new String[]{"S2CPetId", "S2CType"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_PetOutFightResponse_descriptor = getDescriptor().getMessageTypes().get(13);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_PetOutFightResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_PetOutFightResponse_descriptor, new String[]{"S2CCode", "S2CMsg"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_PetReliveRequest_descriptor = getDescriptor().getMessageTypes().get(14);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_PetReliveRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_PetReliveRequest_descriptor, new String[]{"S2CPetId"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_PetReliveResponse_descriptor = getDescriptor().getMessageTypes().get(15);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_PetReliveResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_PetReliveResponse_descriptor, new String[]{"S2CCode", "S2CMsg"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_RandPetNameRequest_descriptor = getDescriptor().getMessageTypes().get(16);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_RandPetNameRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_RandPetNameRequest_descriptor, new String[0]);


    private static final Descriptors.Descriptor internal_static_pomelo_area_RandPetNameResponse_descriptor = getDescriptor().getMessageTypes().get(17);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_RandPetNameResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_RandPetNameResponse_descriptor, new String[]{"S2CCode", "S2CMsg"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_UpGradeData_descriptor = getDescriptor().getMessageTypes().get(18);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_UpGradeData_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_UpGradeData_descriptor, new String[]{"Level", "UpLevel", "ReqLevel", "DownLevel", "Attrs"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_UpGradeInfoRequest_descriptor = getDescriptor().getMessageTypes().get(19);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_UpGradeInfoRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_UpGradeInfoRequest_descriptor, new String[]{"S2CPetId"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_UpGradeInfoResponse_descriptor = getDescriptor().getMessageTypes().get(20);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_UpGradeInfoResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_UpGradeInfoResponse_descriptor, new String[]{"S2CCode", "S2CMsg", "S2CUpGradeData"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_UpGradeLevelRequest_descriptor = getDescriptor().getMessageTypes().get(21);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_UpGradeLevelRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_UpGradeLevelRequest_descriptor, new String[]{"S2CPetId"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_UpGradeLevelResponse_descriptor = getDescriptor().getMessageTypes().get(22);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_UpGradeLevelResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_UpGradeLevelResponse_descriptor, new String[]{"S2CCode", "S2CMsg", "S2CCanUpGrade"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_ItemInfo_descriptor = getDescriptor().getMessageTypes().get(23);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_ItemInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_ItemInfo_descriptor, new String[]{"Code", "Num"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_UpGradeRandPropertyRequest_descriptor = getDescriptor().getMessageTypes().get(24);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_UpGradeRandPropertyRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_UpGradeRandPropertyRequest_descriptor, new String[]{"S2CPetId", "S2CPos", "S2CMaterialItems"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_UpGradeRandPropertyResponse_descriptor = getDescriptor().getMessageTypes().get(25);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_UpGradeRandPropertyResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_UpGradeRandPropertyResponse_descriptor, new String[]{"S2CCode", "S2CMsg"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_ReSetRandPropertyRequest_descriptor = getDescriptor().getMessageTypes().get(26);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_ReSetRandPropertyRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_ReSetRandPropertyRequest_descriptor, new String[]{"S2CPetId", "S2CPos"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_ReSetRandPropertyResponse_descriptor = getDescriptor().getMessageTypes().get(27);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_ReSetRandPropertyResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_ReSetRandPropertyResponse_descriptor, new String[]{"S2CCode", "S2CMsg"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_RandPropertyListRequest_descriptor = getDescriptor().getMessageTypes().get(28);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_RandPropertyListRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_RandPropertyListRequest_descriptor, new String[]{"S2CPetId"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_PropertyData_descriptor = getDescriptor().getMessageTypes().get(29);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_PropertyData_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_PropertyData_descriptor, new String[]{"Pos", "Id", "Level", "Exp", "PropertyKey", "PropertyValue"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_RandPropertyListResponse_descriptor = getDescriptor().getMessageTypes().get(30);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_RandPropertyListResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_RandPropertyListResponse_descriptor, new String[]{"S2CCode", "S2CMsg", "S2CPropertys", "S2CFightPower", "S2CAddFightPower"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_PetIllusionRequest_descriptor = getDescriptor().getMessageTypes().get(31);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_PetIllusionRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_PetIllusionRequest_descriptor, new String[]{"S2CPetId"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_PetIllusionResponse_descriptor = getDescriptor().getMessageTypes().get(32);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_PetIllusionResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_PetIllusionResponse_descriptor, new String[]{"S2CCode", "S2CMsg", "S2CResult", "S2CLuckyValue"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_PetIllusionInfoRequest_descriptor = getDescriptor().getMessageTypes().get(33);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_PetIllusionInfoRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_PetIllusionInfoRequest_descriptor, new String[]{"S2CPetId"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_IllusionInfo_descriptor = getDescriptor().getMessageTypes().get(34);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_IllusionInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_IllusionInfo_descriptor, new String[]{"FightPower", "TransformLevel", "LuckyValue", "LuckyLimit", "NeedUp", "SuccessPer", "ItemNum", "Attrs"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_PetIllusionInfoResponse_descriptor = getDescriptor().getMessageTypes().get(35);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_PetIllusionInfoResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_PetIllusionInfoResponse_descriptor, new String[]{"S2CCode", "S2CMsg", "S2CData"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_PetIllusionReviewRequest_descriptor = getDescriptor().getMessageTypes().get(36);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_PetIllusionReviewRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_PetIllusionReviewRequest_descriptor, new String[]{"S2CPetId"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_IllusionReview_descriptor = getDescriptor().getMessageTypes().get(37);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_IllusionReview_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_IllusionReview_descriptor, new String[]{"FightPower", "TransformLevel", "LuckyLimit", "NeedUp", "SuccessPer", "ItemNum", "Attrs"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_PetIllusionReviewResponse_descriptor = getDescriptor().getMessageTypes().get(38);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_PetIllusionReviewResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_PetIllusionReviewResponse_descriptor, new String[]{"S2CCode", "S2CMsg", "S2CData"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_PetComprehendSkillRequest_descriptor = getDescriptor().getMessageTypes().get(39);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_PetComprehendSkillRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_PetComprehendSkillRequest_descriptor, new String[]{"S2CPetId", "S2CSkillBookCode", "S2CLockPos"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_ResultData_descriptor = getDescriptor().getMessageTypes().get(40);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_ResultData_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_ResultData_descriptor, new String[]{"Result", "SrcSkillId", "SrcSkillLevel", "DestSkillId", "DestSkillLevel"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_PetComprehendSkillResponse_descriptor = getDescriptor().getMessageTypes().get(41);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_PetComprehendSkillResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_PetComprehendSkillResponse_descriptor, new String[]{"S2CCode", "S2CMsg", "S2CResultData"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_PetSkillListRequest_descriptor = getDescriptor().getMessageTypes().get(42);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_PetSkillListRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_PetSkillListRequest_descriptor, new String[]{"S2CPetId"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_SkillInfo_descriptor = getDescriptor().getMessageTypes().get(43);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_SkillInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_SkillInfo_descriptor, new String[]{"Id", "Level", "Pos", "Inborn"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_PetSkillListResponse_descriptor = getDescriptor().getMessageTypes().get(44);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_PetSkillListResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_PetSkillListResponse_descriptor, new String[]{"S2CCode", "S2CMsg", "S2CData"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_PetOnHookSetRequest_descriptor = getDescriptor().getMessageTypes().get(45);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_PetOnHookSetRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_PetOnHookSetRequest_descriptor, new String[]{"S2CPetId", "S2COnHookData"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_PetOnHookSetResponse_descriptor = getDescriptor().getMessageTypes().get(46);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_PetOnHookSetResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_PetOnHookSetResponse_descriptor, new String[]{"S2CCode", "S2CMsg"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_PetOnHookGetRequest_descriptor = getDescriptor().getMessageTypes().get(47);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_PetOnHookGetRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_PetOnHookGetRequest_descriptor, new String[]{"S2CPetId"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_PetOnHookGetResponse_descriptor = getDescriptor().getMessageTypes().get(48);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_PetOnHookGetResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_PetOnHookGetResponse_descriptor, new String[]{"S2CCode", "S2CMsg", "S2CData"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_ChangePetPkModelRequest_descriptor = getDescriptor().getMessageTypes().get(49);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_ChangePetPkModelRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_ChangePetPkModelRequest_descriptor, new String[]{"C2SModel"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_ChangePetPkModelResponse_descriptor = getDescriptor().getMessageTypes().get(50);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_ChangePetPkModelResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_ChangePetPkModelResponse_descriptor, new String[]{"S2CCode", "S2CMsg"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_OnPetDetailPush_descriptor = getDescriptor().getMessageTypes().get(51);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_OnPetDetailPush_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_OnPetDetailPush_descriptor, new String[]{"S2CCode", "S2CMsg", "S2CPet"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_OnPetExpPush_descriptor = getDescriptor().getMessageTypes().get(52);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_OnPetExpPush_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_OnPetExpPush_descriptor, new String[]{"S2CCode", "S2CMsg", "S2CExp"});
    private static Descriptors.FileDescriptor descriptor;

    static {
        Common.getDescriptor();
    }

    public static interface OnPetExpPushOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        boolean hasS2CExp();

        int getS2CExp();
    }

    public static interface OnPetDetailPushOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        boolean hasS2CPet();

        PetHandler.PetInfo getS2CPet();

        PetHandler.PetInfoOrBuilder getS2CPetOrBuilder();
    }

    public static interface ChangePetPkModelResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();
    }

    public static interface ChangePetPkModelRequestOrBuilder extends MessageOrBuilder {
        boolean hasC2SModel();

        int getC2SModel();
    }

    public static interface PetOnHookGetResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        boolean hasS2CData();

        String getS2CData();

        ByteString getS2CDataBytes();
    }

    public static interface PetOnHookGetRequestOrBuilder extends MessageOrBuilder {
        boolean hasS2CPetId();

        String getS2CPetId();

        ByteString getS2CPetIdBytes();
    }

    public static interface PetOnHookSetResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();
    }

    public static interface PetOnHookSetRequestOrBuilder extends MessageOrBuilder {
        boolean hasS2CPetId();

        String getS2CPetId();

        ByteString getS2CPetIdBytes();

        boolean hasS2COnHookData();

        String getS2COnHookData();

        ByteString getS2COnHookDataBytes();
    }

    public static interface PetSkillListResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        List<PetHandler.SkillInfo> getS2CDataList();

        PetHandler.SkillInfo getS2CData(int param1Int);

        int getS2CDataCount();

        List<? extends PetHandler.SkillInfoOrBuilder> getS2CDataOrBuilderList();

        PetHandler.SkillInfoOrBuilder getS2CDataOrBuilder(int param1Int);
    }

    public static interface SkillInfoOrBuilder extends MessageOrBuilder {
        boolean hasId();

        int getId();

        boolean hasLevel();

        int getLevel();

        boolean hasPos();

        int getPos();

        boolean hasInborn();

        int getInborn();
    }

    public static interface PetSkillListRequestOrBuilder extends MessageOrBuilder {
        boolean hasS2CPetId();

        String getS2CPetId();

        ByteString getS2CPetIdBytes();
    }

    public static interface PetComprehendSkillResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        boolean hasS2CResultData();

        PetHandler.ResultData getS2CResultData();

        PetHandler.ResultDataOrBuilder getS2CResultDataOrBuilder();
    }

    public static interface ResultDataOrBuilder extends MessageOrBuilder {
        boolean hasResult();

        int getResult();

        boolean hasSrcSkillId();

        int getSrcSkillId();

        boolean hasSrcSkillLevel();

        int getSrcSkillLevel();

        boolean hasDestSkillId();

        int getDestSkillId();

        boolean hasDestSkillLevel();

        int getDestSkillLevel();
    }

    public static interface PetComprehendSkillRequestOrBuilder extends MessageOrBuilder {
        boolean hasS2CPetId();

        String getS2CPetId();

        ByteString getS2CPetIdBytes();

        boolean hasS2CSkillBookCode();

        String getS2CSkillBookCode();

        ByteString getS2CSkillBookCodeBytes();

        List<Integer> getS2CLockPosList();

        int getS2CLockPosCount();

        int getS2CLockPos(int param1Int);
    }

    public static interface PetIllusionReviewResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        List<PetHandler.IllusionReview> getS2CDataList();

        PetHandler.IllusionReview getS2CData(int param1Int);

        int getS2CDataCount();

        List<? extends PetHandler.IllusionReviewOrBuilder> getS2CDataOrBuilderList();

        PetHandler.IllusionReviewOrBuilder getS2CDataOrBuilder(int param1Int);
    }

    public static interface IllusionReviewOrBuilder extends MessageOrBuilder {
        boolean hasFightPower();

        int getFightPower();

        boolean hasTransformLevel();

        int getTransformLevel();

        boolean hasLuckyLimit();

        int getLuckyLimit();

        boolean hasNeedUp();

        int getNeedUp();

        boolean hasSuccessPer();

        int getSuccessPer();

        boolean hasItemNum();

        int getItemNum();

        List<Common.AttributeBase> getAttrsList();

        Common.AttributeBase getAttrs(int param1Int);

        int getAttrsCount();

        List<? extends Common.AttributeBaseOrBuilder> getAttrsOrBuilderList();

        Common.AttributeBaseOrBuilder getAttrsOrBuilder(int param1Int);
    }

    public static interface PetIllusionReviewRequestOrBuilder extends MessageOrBuilder {
        boolean hasS2CPetId();

        String getS2CPetId();

        ByteString getS2CPetIdBytes();
    }

    public static interface PetIllusionInfoResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        boolean hasS2CData();

        PetHandler.IllusionInfo getS2CData();

        PetHandler.IllusionInfoOrBuilder getS2CDataOrBuilder();
    }

    public static interface IllusionInfoOrBuilder extends MessageOrBuilder {
        boolean hasFightPower();

        int getFightPower();

        boolean hasTransformLevel();

        int getTransformLevel();

        boolean hasLuckyValue();

        int getLuckyValue();

        boolean hasLuckyLimit();

        int getLuckyLimit();

        boolean hasNeedUp();

        int getNeedUp();

        boolean hasSuccessPer();

        int getSuccessPer();

        boolean hasItemNum();

        int getItemNum();

        List<Common.AttributeBase> getAttrsList();

        Common.AttributeBase getAttrs(int param1Int);

        int getAttrsCount();

        List<? extends Common.AttributeBaseOrBuilder> getAttrsOrBuilderList();

        Common.AttributeBaseOrBuilder getAttrsOrBuilder(int param1Int);
    }

    public static interface PetIllusionInfoRequestOrBuilder extends MessageOrBuilder {
        boolean hasS2CPetId();

        String getS2CPetId();

        ByteString getS2CPetIdBytes();
    }

    public static interface PetIllusionResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        boolean hasS2CResult();

        int getS2CResult();

        boolean hasS2CLuckyValue();

        int getS2CLuckyValue();
    }

    public static interface PetIllusionRequestOrBuilder extends MessageOrBuilder {
        boolean hasS2CPetId();

        String getS2CPetId();

        ByteString getS2CPetIdBytes();
    }

    public static interface RandPropertyListResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        List<PetHandler.PropertyData> getS2CPropertysList();

        PetHandler.PropertyData getS2CPropertys(int param1Int);

        int getS2CPropertysCount();

        List<? extends PetHandler.PropertyDataOrBuilder> getS2CPropertysOrBuilderList();

        PetHandler.PropertyDataOrBuilder getS2CPropertysOrBuilder(int param1Int);

        boolean hasS2CFightPower();

        int getS2CFightPower();

        boolean hasS2CAddFightPower();

        int getS2CAddFightPower();
    }

    public static interface PropertyDataOrBuilder extends MessageOrBuilder {
        boolean hasPos();

        int getPos();

        boolean hasId();

        int getId();

        boolean hasLevel();

        int getLevel();

        boolean hasExp();

        int getExp();

        boolean hasPropertyKey();

        String getPropertyKey();

        ByteString getPropertyKeyBytes();

        boolean hasPropertyValue();

        int getPropertyValue();
    }

    public static interface RandPropertyListRequestOrBuilder extends MessageOrBuilder {
        boolean hasS2CPetId();

        String getS2CPetId();

        ByteString getS2CPetIdBytes();
    }

    public static interface ReSetRandPropertyResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();
    }

    public static interface ReSetRandPropertyRequestOrBuilder extends MessageOrBuilder {
        boolean hasS2CPetId();

        String getS2CPetId();

        ByteString getS2CPetIdBytes();

        boolean hasS2CPos();

        int getS2CPos();
    }

    public static interface UpGradeRandPropertyResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();
    }

    public static interface UpGradeRandPropertyRequestOrBuilder extends MessageOrBuilder {
        boolean hasS2CPetId();

        String getS2CPetId();

        ByteString getS2CPetIdBytes();

        boolean hasS2CPos();

        int getS2CPos();

        List<PetHandler.ItemInfo> getS2CMaterialItemsList();

        PetHandler.ItemInfo getS2CMaterialItems(int param1Int);

        int getS2CMaterialItemsCount();

        List<? extends PetHandler.ItemInfoOrBuilder> getS2CMaterialItemsOrBuilderList();

        PetHandler.ItemInfoOrBuilder getS2CMaterialItemsOrBuilder(int param1Int);
    }

    public static interface ItemInfoOrBuilder extends MessageOrBuilder {
        boolean hasCode();

        String getCode();

        ByteString getCodeBytes();

        boolean hasNum();

        int getNum();
    }

    public static interface UpGradeLevelResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        boolean hasS2CCanUpGrade();

        int getS2CCanUpGrade();
    }

    public static interface UpGradeLevelRequestOrBuilder extends MessageOrBuilder {
        boolean hasS2CPetId();

        String getS2CPetId();

        ByteString getS2CPetIdBytes();
    }

    public static interface UpGradeInfoResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        boolean hasS2CUpGradeData();

        PetHandler.UpGradeData getS2CUpGradeData();

        PetHandler.UpGradeDataOrBuilder getS2CUpGradeDataOrBuilder();
    }

    public static interface UpGradeInfoRequestOrBuilder extends MessageOrBuilder {
        boolean hasS2CPetId();

        String getS2CPetId();

        ByteString getS2CPetIdBytes();
    }

    public static interface UpGradeDataOrBuilder extends MessageOrBuilder {
        boolean hasLevel();

        int getLevel();

        boolean hasUpLevel();

        int getUpLevel();

        boolean hasReqLevel();

        int getReqLevel();

        boolean hasDownLevel();

        int getDownLevel();

        List<Common.AttributeBase> getAttrsList();

        Common.AttributeBase getAttrs(int param1Int);

        int getAttrsCount();

        List<? extends Common.AttributeBaseOrBuilder> getAttrsOrBuilderList();

        Common.AttributeBaseOrBuilder getAttrsOrBuilder(int param1Int);
    }

    public static interface RandPetNameResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();
    }

    public static interface RandPetNameRequestOrBuilder extends MessageOrBuilder {
    }

    public static interface PetReliveResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();
    }

    public static interface PetReliveRequestOrBuilder extends MessageOrBuilder {
        boolean hasS2CPetId();

        String getS2CPetId();

        ByteString getS2CPetIdBytes();
    }

    public static interface PetOutFightResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();
    }

    public static interface PetOutFightRequestOrBuilder extends MessageOrBuilder {
        boolean hasS2CPetId();

        String getS2CPetId();

        ByteString getS2CPetIdBytes();

        boolean hasS2CType();

        int getS2CType();
    }

    public static interface FreePetResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();
    }

    public static interface FreePetRequestOrBuilder extends MessageOrBuilder {
        boolean hasS2CPetId();

        String getS2CPetId();

        ByteString getS2CPetIdBytes();

        boolean hasS2CType();

        int getS2CType();
    }

    public static interface ChangePetNameResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();
    }

    public static interface ChangePetNameRequestOrBuilder extends MessageOrBuilder {
        boolean hasS2CPetId();

        String getS2CPetId();

        ByteString getS2CPetIdBytes();

        boolean hasS2CPetName();

        String getS2CPetName();

        ByteString getS2CPetNameBytes();
    }

    public static interface DevelopPetResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();
    }

    public static interface DevelopPetRequestOrBuilder extends MessageOrBuilder {
        boolean hasS2CType();

        int getS2CType();

        boolean hasS2CItemCode();

        String getS2CItemCode();

        ByteString getS2CItemCodeBytes();

        boolean hasS2CPetId();

        String getS2CPetId();

        ByteString getS2CPetIdBytes();
    }

    public static interface GetPetInfoResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        boolean hasS2CPet();

        PetHandler.PetInfo getS2CPet();

        PetHandler.PetInfoOrBuilder getS2CPetOrBuilder();
    }

    public static interface GetPetInfoRequestOrBuilder extends MessageOrBuilder {
        boolean hasS2CPetId();

        String getS2CPetId();

        ByteString getS2CPetIdBytes();

        boolean hasS2COwnId();

        String getS2COwnId();

        ByteString getS2COwnIdBytes();
    }

    public static interface GetAllPetsBaseInfoResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        List<PetHandler.PetBaseInfo> getS2CPetBaseInfoList();

        PetHandler.PetBaseInfo getS2CPetBaseInfo(int param1Int);

        int getS2CPetBaseInfoCount();

        List<? extends PetHandler.PetBaseInfoOrBuilder> getS2CPetBaseInfoOrBuilderList();

        PetHandler.PetBaseInfoOrBuilder getS2CPetBaseInfoOrBuilder(int param1Int);

        boolean hasS2CFightingPetId();

        String getS2CFightingPetId();

        ByteString getS2CFightingPetIdBytes();
    }

    public static interface PetBaseInfoOrBuilder extends MessageOrBuilder {
        boolean hasId();

        String getId();

        ByteString getIdBytes();

        boolean hasTemplateId();

        int getTemplateId();

        boolean hasLevel();

        int getLevel();

        boolean hasTransformLevel();

        int getTransformLevel();

        boolean hasHp();

        int getHp();
    }

    public static interface PetInfoOrBuilder extends MessageOrBuilder {
        boolean hasId();

        String getId();

        ByteString getIdBytes();

        boolean hasName();

        String getName();

        ByteString getNameBytes();

        boolean hasLevel();

        int getLevel();

        boolean hasHp();

        int getHp();

        boolean hasMp();

        int getMp();

        boolean hasMaxHP();

        int getMaxHP();

        boolean hasMaxMP();

        int getMaxMP();

        boolean hasMinPhy();

        int getMinPhy();

        boolean hasMaxPhy();

        int getMaxPhy();

        boolean hasMinMag();

        int getMinMag();

        boolean hasMaxMag();

        int getMaxMag();

        boolean hasHit();

        int getHit();

        boolean hasDodge();

        int getDodge();

        boolean hasCrit();

        int getCrit();

        boolean hasResCrit();

        int getResCrit();

        boolean hasAc();

        int getAc();

        boolean hasResist();

        int getResist();

        boolean hasIgnoreAc();

        int getIgnoreAc();

        boolean hasIgnoreResist();

        int getIgnoreResist();

        boolean hasExp();

        int getExp();

        boolean hasUpgradeExp();

        int getUpgradeExp();

        boolean hasTransformLevel();

        int getTransformLevel();

        boolean hasUpGradeLevel();

        int getUpGradeLevel();

        boolean hasUpGradeNeedLevel();

        int getUpGradeNeedLevel();

        boolean hasFightPower();

        int getFightPower();

        boolean hasStamina();

        int getStamina();

        boolean hasMaxStamina();

        int getMaxStamina();

        boolean hasLoyalty();

        int getLoyalty();

        boolean hasMaxLoyalty();

        int getMaxLoyalty();

        boolean hasTemplateId();

        int getTemplateId();
    }

    public static interface GetAllPetsBaseInfoRequestOrBuilder extends MessageOrBuilder {
    }
}


