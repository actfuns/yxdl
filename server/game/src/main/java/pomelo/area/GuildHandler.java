package pomelo.area;

import com.google.protobuf.AbstractMessage;
import com.google.protobuf.AbstractMessageLite;
import com.google.protobuf.ByteString;
import com.google.protobuf.CodedInputStream;
import com.google.protobuf.CodedOutputStream;
import com.google.protobuf.Descriptors;
import com.google.protobuf.ExtensionRegistryLite;
import com.google.protobuf.GeneratedMessage;
import com.google.protobuf.InvalidProtocolBufferException;
import com.google.protobuf.Message;
import com.google.protobuf.MessageLite;
import com.google.protobuf.Parser;
import com.google.protobuf.UnknownFieldSet;

import java.io.IOException;
import java.io.InputStream;
import java.util.List;

public final class GuildHandler {
    public static void registerAllExtensions(ExtensionRegistry registry) {
    }

    public enum GuildMode implements ProtocolMessageEnum {
        AUTO_MODE(0, 1),


        CHECK_MODE(1, 2);


        public static final int AUTO_MODE_VALUE = 1;


        public static final int CHECK_MODE_VALUE = 2;


        private static Internal.EnumLiteMap<GuildMode> internalValueMap = new Internal.EnumLiteMap<GuildMode>() {
            public GuildHandler.GuildMode findValueByNumber(int number) {
                return GuildHandler.GuildMode.valueOf(number);
            }
        };


        private static final GuildMode[] VALUES = values();
        private final int index;
        private final int value;

        public final int getNumber() {
            return this.value;
        }

        public static Internal.EnumLiteMap<GuildMode> internalGetValueMap() {
            return internalValueMap;
        }

        static {

        }

        public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return getDescriptor().getValues().get(this.index);
        }

        public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final Descriptors.EnumDescriptor getDescriptor() {
            return GuildHandler.getDescriptor().getEnumTypes().get(0);
        }

        GuildMode(int index, int value) {
            this.index = index;
            this.value = value;
        }
    }


    public enum GuildJob
            implements ProtocolMessageEnum {
        PRESIDENT(0, 1),


        VICE_PRESIDENT(1, 2),


        ELDER(2, 3),


        ELITE(3, 4),


        MEMBER(4, 5);


        public static final int PRESIDENT_VALUE = 1;


        public static final int VICE_PRESIDENT_VALUE = 2;


        public static final int ELDER_VALUE = 3;


        public static final int ELITE_VALUE = 4;


        public static final int MEMBER_VALUE = 5;


        private static Internal.EnumLiteMap<GuildJob> internalValueMap = new Internal.EnumLiteMap<GuildJob>() {
            public GuildHandler.GuildJob findValueByNumber(int number) {
                return GuildHandler.GuildJob.valueOf(number);
            }
        };


        private static final GuildJob[] VALUES = values();
        private final int index;
        private final int value;

        public final int getNumber() {
            return this.value;
        }

        public static Internal.EnumLiteMap<GuildJob> internalGetValueMap() {
            return internalValueMap;
        }

        static {

        }

        public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return getDescriptor().getValues().get(this.index);
        }

        public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final Descriptors.EnumDescriptor getDescriptor() {
            return GuildHandler.getDescriptor().getEnumTypes().get(1);
        }

        GuildJob(int index, int value) {
            this.index = index;
            this.value = value;
        }
    }


    public static final class CreateGuildRequest
            extends GeneratedMessage
            implements CreateGuildRequestOrBuilder {
        private static final CreateGuildRequest defaultInstance = new CreateGuildRequest(true);
        private final UnknownFieldSet unknownFields;

        private CreateGuildRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CreateGuildRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CreateGuildRequest getDefaultInstance() {
            return defaultInstance;
        }

        public CreateGuildRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CreateGuildRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.c2SIcon_ = bs;
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.c2SName_ = bs;
                            break;
                        case 26:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x4;
                            this.c2SQqGroup_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_CreateGuildRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_CreateGuildRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(CreateGuildRequest.class, Builder.class);
        }

        public static Parser<CreateGuildRequest> PARSER = (Parser<CreateGuildRequest>) new AbstractParser<CreateGuildRequest>() {
            public GuildHandler.CreateGuildRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.CreateGuildRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int C2S_ICON_FIELD_NUMBER = 1;
        private Object c2SIcon_;
        public static final int C2S_NAME_FIELD_NUMBER = 2;
        private Object c2SName_;
        public static final int C2S_QQGROUP_FIELD_NUMBER = 3;
        private Object c2SQqGroup_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<CreateGuildRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasC2SIcon() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getC2SIcon() {
            Object ref = this.c2SIcon_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.c2SIcon_ = s;
            return s;
        }

        public ByteString getC2SIconBytes() {
            Object ref = this.c2SIcon_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.c2SIcon_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasC2SName() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        static {
            defaultInstance.initFields();
        }


        public String getC2SName() {
            Object ref = this.c2SName_;
            if (ref instanceof String) {
                return (String) ref;
            }
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.c2SName_ = s;
            }
            return s;
        }

        public ByteString getC2SNameBytes() {
            Object ref = this.c2SName_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.c2SName_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasC2SQqGroup() {
            return ((this.bitField0_ & 0x4) == 4);
        }

        public String getC2SQqGroup() {
            Object ref = this.c2SQqGroup_;
            if (ref instanceof String) {
                return (String) ref;
            }
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.c2SQqGroup_ = s;
            }
            return s;
        }

        public ByteString getC2SQqGroupBytes() {
            Object ref = this.c2SQqGroup_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.c2SQqGroup_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.c2SIcon_ = "";
            this.c2SName_ = "";
            this.c2SQqGroup_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
                return true;
            }
            if (isInitialized == 0) {
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) {
                output.writeBytes(1, getC2SIconBytes());
            }
            if ((this.bitField0_ & 0x2) == 2) {
                output.writeBytes(2, getC2SNameBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                output.writeBytes(3, getC2SQqGroupBytes());
            }
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) {
                size += CodedOutputStream.computeBytesSize(1, getC2SIconBytes());
            }
            if ((this.bitField0_ & 0x2) == 2) {
                size += CodedOutputStream.computeBytesSize(2, getC2SNameBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                size += CodedOutputStream.computeBytesSize(3, getC2SQqGroupBytes());
            }
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static CreateGuildRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (CreateGuildRequest) PARSER.parseFrom(data);
        }

        public static CreateGuildRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (CreateGuildRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static CreateGuildRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (CreateGuildRequest) PARSER.parseFrom(data);
        }

        public static CreateGuildRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (CreateGuildRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static CreateGuildRequest parseFrom(InputStream input) throws IOException {
            return (CreateGuildRequest) PARSER.parseFrom(input);
        }

        public static CreateGuildRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (CreateGuildRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static CreateGuildRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (CreateGuildRequest) PARSER.parseDelimitedFrom(input);
        }

        public static CreateGuildRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (CreateGuildRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static CreateGuildRequest parseFrom(CodedInputStream input) throws IOException {
            return (CreateGuildRequest) PARSER.parseFrom(input);
        }

        public static CreateGuildRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (CreateGuildRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CreateGuildRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder
                extends GeneratedMessage.Builder<Builder>
                implements GuildHandler.CreateGuildRequestOrBuilder {
            private int bitField0_;
            private Object c2SIcon_;
            private Object c2SName_;
            private Object c2SQqGroup_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_CreateGuildRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_CreateGuildRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.CreateGuildRequest.class, Builder.class);
            }

            private Builder() {
                this.c2SIcon_ = "";
                this.c2SName_ = "";
                this.c2SQqGroup_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.c2SIcon_ = "";
                this.c2SName_ = "";
                this.c2SQqGroup_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.CreateGuildRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.c2SIcon_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.c2SName_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.c2SQqGroup_ = "";
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_CreateGuildRequest_descriptor;
            }

            public GuildHandler.CreateGuildRequest getDefaultInstanceForType() {
                return GuildHandler.CreateGuildRequest.getDefaultInstance();
            }

            public GuildHandler.CreateGuildRequest build() {
                GuildHandler.CreateGuildRequest result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public GuildHandler.CreateGuildRequest buildPartial() {
                GuildHandler.CreateGuildRequest result = new GuildHandler.CreateGuildRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) {
                    to_bitField0_ |= 0x1;
                }
                result.c2SIcon_ = this.c2SIcon_;
                if ((from_bitField0_ & 0x2) == 2) {
                    to_bitField0_ |= 0x2;
                }
                result.c2SName_ = this.c2SName_;
                if ((from_bitField0_ & 0x4) == 4) {
                    to_bitField0_ |= 0x4;
                }
                result.c2SQqGroup_ = this.c2SQqGroup_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.CreateGuildRequest) {
                    return mergeFrom((GuildHandler.CreateGuildRequest) other);
                }
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.CreateGuildRequest other) {
                if (other == GuildHandler.CreateGuildRequest.getDefaultInstance()) {
                    return this;
                }
                if (other.hasC2SIcon()) {
                    this.bitField0_ |= 0x1;
                    this.c2SIcon_ = other.c2SIcon_;
                    onChanged();
                }
                if (other.hasC2SName()) {
                    this.bitField0_ |= 0x2;
                    this.c2SName_ = other.c2SName_;
                    onChanged();
                }
                if (other.hasC2SQqGroup()) {
                    this.bitField0_ |= 0x4;
                    this.c2SQqGroup_ = other.c2SQqGroup_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.CreateGuildRequest parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.CreateGuildRequest) GuildHandler.CreateGuildRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.CreateGuildRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            public boolean hasC2SIcon() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getC2SIcon() {
                Object ref = this.c2SIcon_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.c2SIcon_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }

            public ByteString getC2SIconBytes() {
                Object ref = this.c2SIcon_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.c2SIcon_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setC2SIcon(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1;
                this.c2SIcon_ = value;
                onChanged();
                return this;
            }

            public Builder clearC2SIcon() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.c2SIcon_ = GuildHandler.CreateGuildRequest.getDefaultInstance().getC2SIcon();
                onChanged();
                return this;
            }

            public Builder setC2SIconBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1;
                this.c2SIcon_ = value;
                onChanged();
                return this;
            }

            public boolean hasC2SName() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getC2SName() {
                Object ref = this.c2SName_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.c2SName_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }

            public ByteString getC2SNameBytes() {
                Object ref = this.c2SName_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.c2SName_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setC2SName(String value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.c2SName_ = value;
                onChanged();
                return this;
            }

            public Builder clearC2SName() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.c2SName_ = GuildHandler.CreateGuildRequest.getDefaultInstance().getC2SName();
                onChanged();
                return this;
            }

            public Builder setC2SNameBytes(ByteString value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.c2SName_ = value;
                onChanged();
                return this;
            }

            public boolean hasC2SQqGroup() {
                return ((this.bitField0_ & 0x4) == 4);
            }

            public String getC2SQqGroup() {
                Object ref = this.c2SQqGroup_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8())
                        this.c2SQqGroup_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getC2SQqGroupBytes() {
                Object ref = this.c2SQqGroup_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.c2SQqGroup_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setC2SQqGroup(String value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x4;
                this.c2SQqGroup_ = value;
                onChanged();
                return this;
            }

            public Builder clearC2SQqGroup() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.c2SQqGroup_ = GuildHandler.CreateGuildRequest.getDefaultInstance().getC2SQqGroup();
                onChanged();
                return this;
            }

            public Builder setC2SQqGroupBytes(ByteString value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x4;
                this.c2SQqGroup_ = value;
                onChanged();
                return this;
            }
        }
    }

    public static final class GetGuildListRequest
            extends GeneratedMessage
            implements GetGuildListRequestOrBuilder {
        private static final GetGuildListRequest defaultInstance = new GetGuildListRequest(true);
        private final UnknownFieldSet unknownFields;

        private GetGuildListRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private GetGuildListRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static GetGuildListRequest getDefaultInstance() {
            return defaultInstance;
        }

        public GetGuildListRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private GetGuildListRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.c2SName_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_GetGuildListRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_GetGuildListRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GetGuildListRequest.class, Builder.class);
        }

        public static Parser<GetGuildListRequest> PARSER = (Parser<GetGuildListRequest>) new AbstractParser<GetGuildListRequest>() {
            public GuildHandler.GetGuildListRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.GetGuildListRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int C2S_NAME_FIELD_NUMBER = 1;
        private Object c2SName_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<GetGuildListRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasC2SName() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getC2SName() {
            Object ref = this.c2SName_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.c2SName_ = s;
            return s;
        }

        public ByteString getC2SNameBytes() {
            Object ref = this.c2SName_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.c2SName_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.c2SName_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeBytes(1, getC2SNameBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeBytesSize(1, getC2SNameBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static GetGuildListRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (GetGuildListRequest) PARSER.parseFrom(data);
        }

        public static GetGuildListRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetGuildListRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GetGuildListRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (GetGuildListRequest) PARSER.parseFrom(data);
        }

        public static GetGuildListRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetGuildListRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GetGuildListRequest parseFrom(InputStream input) throws IOException {
            return (GetGuildListRequest) PARSER.parseFrom(input);
        }

        public static GetGuildListRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetGuildListRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static GetGuildListRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (GetGuildListRequest) PARSER.parseDelimitedFrom(input);
        }

        public static GetGuildListRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetGuildListRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static GetGuildListRequest parseFrom(CodedInputStream input) throws IOException {
            return (GetGuildListRequest) PARSER.parseFrom(input);
        }

        public static GetGuildListRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetGuildListRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(GetGuildListRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.GetGuildListRequestOrBuilder {
            private int bitField0_;
            private Object c2SName_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_GetGuildListRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_GetGuildListRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.GetGuildListRequest.class, Builder.class);
            }

            private Builder() {
                this.c2SName_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.c2SName_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.GetGuildListRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.c2SName_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_GetGuildListRequest_descriptor;
            }

            public GuildHandler.GetGuildListRequest getDefaultInstanceForType() {
                return GuildHandler.GetGuildListRequest.getDefaultInstance();
            }

            public GuildHandler.GetGuildListRequest build() {
                GuildHandler.GetGuildListRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.GetGuildListRequest buildPartial() {
                GuildHandler.GetGuildListRequest result = new GuildHandler.GetGuildListRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.c2SName_ = this.c2SName_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.GetGuildListRequest)
                    return mergeFrom((GuildHandler.GetGuildListRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.GetGuildListRequest other) {
                if (other == GuildHandler.GetGuildListRequest.getDefaultInstance()) return this;
                if (other.hasC2SName()) {
                    this.bitField0_ |= 0x1;
                    this.c2SName_ = other.c2SName_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.GetGuildListRequest parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.GetGuildListRequest) GuildHandler.GetGuildListRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.GetGuildListRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasC2SName() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getC2SName() {
                Object ref = this.c2SName_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.c2SName_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getC2SNameBytes() {
                Object ref = this.c2SName_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.c2SName_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setC2SName(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.c2SName_ = value;
                onChanged();
                return this;
            }

            public Builder clearC2SName() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.c2SName_ = GuildHandler.GetGuildListRequest.getDefaultInstance().getC2SName();
                onChanged();
                return this;
            }

            public Builder setC2SNameBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.c2SName_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class JoinGuildRequest
            extends GeneratedMessage
            implements JoinGuildRequestOrBuilder {
        private static final JoinGuildRequest defaultInstance = new JoinGuildRequest(true);
        private final UnknownFieldSet unknownFields;

        private JoinGuildRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private JoinGuildRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static JoinGuildRequest getDefaultInstance() {
            return defaultInstance;
        }

        public JoinGuildRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private JoinGuildRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.c2SGuildId_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_JoinGuildRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_JoinGuildRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(JoinGuildRequest.class, Builder.class);
        }

        public static Parser<JoinGuildRequest> PARSER = (Parser<JoinGuildRequest>) new AbstractParser<JoinGuildRequest>() {
            public GuildHandler.JoinGuildRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.JoinGuildRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int C2S_GUILDID_FIELD_NUMBER = 1;
        private Object c2SGuildId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<JoinGuildRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasC2SGuildId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getC2SGuildId() {
            Object ref = this.c2SGuildId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.c2SGuildId_ = s;
            return s;
        }

        public ByteString getC2SGuildIdBytes() {
            Object ref = this.c2SGuildId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.c2SGuildId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.c2SGuildId_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeBytes(1, getC2SGuildIdBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeBytesSize(1, getC2SGuildIdBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static JoinGuildRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (JoinGuildRequest) PARSER.parseFrom(data);
        }

        public static JoinGuildRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (JoinGuildRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static JoinGuildRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (JoinGuildRequest) PARSER.parseFrom(data);
        }

        public static JoinGuildRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (JoinGuildRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static JoinGuildRequest parseFrom(InputStream input) throws IOException {
            return (JoinGuildRequest) PARSER.parseFrom(input);
        }

        public static JoinGuildRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (JoinGuildRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static JoinGuildRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (JoinGuildRequest) PARSER.parseDelimitedFrom(input);
        }

        public static JoinGuildRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (JoinGuildRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static JoinGuildRequest parseFrom(CodedInputStream input) throws IOException {
            return (JoinGuildRequest) PARSER.parseFrom(input);
        }

        public static JoinGuildRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (JoinGuildRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(JoinGuildRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.JoinGuildRequestOrBuilder {
            private int bitField0_;
            private Object c2SGuildId_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_JoinGuildRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_JoinGuildRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.JoinGuildRequest.class, Builder.class);
            }

            private Builder() {
                this.c2SGuildId_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.c2SGuildId_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.JoinGuildRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.c2SGuildId_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_JoinGuildRequest_descriptor;
            }

            public GuildHandler.JoinGuildRequest getDefaultInstanceForType() {
                return GuildHandler.JoinGuildRequest.getDefaultInstance();
            }

            public GuildHandler.JoinGuildRequest build() {
                GuildHandler.JoinGuildRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.JoinGuildRequest buildPartial() {
                GuildHandler.JoinGuildRequest result = new GuildHandler.JoinGuildRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.c2SGuildId_ = this.c2SGuildId_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.JoinGuildRequest)
                    return mergeFrom((GuildHandler.JoinGuildRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.JoinGuildRequest other) {
                if (other == GuildHandler.JoinGuildRequest.getDefaultInstance()) return this;
                if (other.hasC2SGuildId()) {
                    this.bitField0_ |= 0x1;
                    this.c2SGuildId_ = other.c2SGuildId_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.JoinGuildRequest parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.JoinGuildRequest) GuildHandler.JoinGuildRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.JoinGuildRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasC2SGuildId() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getC2SGuildId() {
                Object ref = this.c2SGuildId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.c2SGuildId_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getC2SGuildIdBytes() {
                Object ref = this.c2SGuildId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.c2SGuildId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setC2SGuildId(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.c2SGuildId_ = value;
                onChanged();
                return this;
            }

            public Builder clearC2SGuildId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.c2SGuildId_ = GuildHandler.JoinGuildRequest.getDefaultInstance().getC2SGuildId();
                onChanged();
                return this;
            }

            public Builder setC2SGuildIdBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.c2SGuildId_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class JoinGuildOfPlayerRequest
            extends GeneratedMessage
            implements JoinGuildOfPlayerRequestOrBuilder {
        private static final JoinGuildOfPlayerRequest defaultInstance = new JoinGuildOfPlayerRequest(true);
        private final UnknownFieldSet unknownFields;

        private JoinGuildOfPlayerRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private JoinGuildOfPlayerRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static JoinGuildOfPlayerRequest getDefaultInstance() {
            return defaultInstance;
        }

        public JoinGuildOfPlayerRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private JoinGuildOfPlayerRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.c2SPlayerId_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_JoinGuildOfPlayerRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_JoinGuildOfPlayerRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(JoinGuildOfPlayerRequest.class, Builder.class);
        }

        public static Parser<JoinGuildOfPlayerRequest> PARSER = (Parser<JoinGuildOfPlayerRequest>) new AbstractParser<JoinGuildOfPlayerRequest>() {
            public GuildHandler.JoinGuildOfPlayerRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.JoinGuildOfPlayerRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int C2S_PLAYERID_FIELD_NUMBER = 1;
        private Object c2SPlayerId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<JoinGuildOfPlayerRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasC2SPlayerId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getC2SPlayerId() {
            Object ref = this.c2SPlayerId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.c2SPlayerId_ = s;
            return s;
        }

        public ByteString getC2SPlayerIdBytes() {
            Object ref = this.c2SPlayerId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.c2SPlayerId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.c2SPlayerId_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeBytes(1, getC2SPlayerIdBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeBytesSize(1, getC2SPlayerIdBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static JoinGuildOfPlayerRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (JoinGuildOfPlayerRequest) PARSER.parseFrom(data);
        }

        public static JoinGuildOfPlayerRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (JoinGuildOfPlayerRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static JoinGuildOfPlayerRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (JoinGuildOfPlayerRequest) PARSER.parseFrom(data);
        }

        public static JoinGuildOfPlayerRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (JoinGuildOfPlayerRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static JoinGuildOfPlayerRequest parseFrom(InputStream input) throws IOException {
            return (JoinGuildOfPlayerRequest) PARSER.parseFrom(input);
        }

        public static JoinGuildOfPlayerRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (JoinGuildOfPlayerRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static JoinGuildOfPlayerRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (JoinGuildOfPlayerRequest) PARSER.parseDelimitedFrom(input);
        }

        public static JoinGuildOfPlayerRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (JoinGuildOfPlayerRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static JoinGuildOfPlayerRequest parseFrom(CodedInputStream input) throws IOException {
            return (JoinGuildOfPlayerRequest) PARSER.parseFrom(input);
        }

        public static JoinGuildOfPlayerRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (JoinGuildOfPlayerRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(JoinGuildOfPlayerRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.JoinGuildOfPlayerRequestOrBuilder {
            private int bitField0_;
            private Object c2SPlayerId_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_JoinGuildOfPlayerRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_JoinGuildOfPlayerRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.JoinGuildOfPlayerRequest.class, Builder.class);
            }

            private Builder() {
                this.c2SPlayerId_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.c2SPlayerId_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.JoinGuildOfPlayerRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.c2SPlayerId_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_JoinGuildOfPlayerRequest_descriptor;
            }

            public GuildHandler.JoinGuildOfPlayerRequest getDefaultInstanceForType() {
                return GuildHandler.JoinGuildOfPlayerRequest.getDefaultInstance();
            }

            public GuildHandler.JoinGuildOfPlayerRequest build() {
                GuildHandler.JoinGuildOfPlayerRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.JoinGuildOfPlayerRequest buildPartial() {
                GuildHandler.JoinGuildOfPlayerRequest result = new GuildHandler.JoinGuildOfPlayerRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.c2SPlayerId_ = this.c2SPlayerId_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.JoinGuildOfPlayerRequest)
                    return mergeFrom((GuildHandler.JoinGuildOfPlayerRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.JoinGuildOfPlayerRequest other) {
                if (other == GuildHandler.JoinGuildOfPlayerRequest.getDefaultInstance()) return this;
                if (other.hasC2SPlayerId()) {
                    this.bitField0_ |= 0x1;
                    this.c2SPlayerId_ = other.c2SPlayerId_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.JoinGuildOfPlayerRequest parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.JoinGuildOfPlayerRequest) GuildHandler.JoinGuildOfPlayerRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.JoinGuildOfPlayerRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasC2SPlayerId() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getC2SPlayerId() {
                Object ref = this.c2SPlayerId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.c2SPlayerId_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getC2SPlayerIdBytes() {
                Object ref = this.c2SPlayerId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.c2SPlayerId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setC2SPlayerId(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.c2SPlayerId_ = value;
                onChanged();
                return this;
            }

            public Builder clearC2SPlayerId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.c2SPlayerId_ = GuildHandler.JoinGuildOfPlayerRequest.getDefaultInstance().getC2SPlayerId();
                onChanged();
                return this;
            }

            public Builder setC2SPlayerIdBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.c2SPlayerId_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class InvitePlayerJoinMyGuildRequest
            extends GeneratedMessage
            implements InvitePlayerJoinMyGuildRequestOrBuilder {
        private static final InvitePlayerJoinMyGuildRequest defaultInstance = new InvitePlayerJoinMyGuildRequest(true);
        private final UnknownFieldSet unknownFields;

        private InvitePlayerJoinMyGuildRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private InvitePlayerJoinMyGuildRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static InvitePlayerJoinMyGuildRequest getDefaultInstance() {
            return defaultInstance;
        }

        public InvitePlayerJoinMyGuildRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private InvitePlayerJoinMyGuildRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.c2SPlayerId_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_InvitePlayerJoinMyGuildRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_InvitePlayerJoinMyGuildRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(InvitePlayerJoinMyGuildRequest.class, Builder.class);
        }

        public static Parser<InvitePlayerJoinMyGuildRequest> PARSER = (Parser<InvitePlayerJoinMyGuildRequest>) new AbstractParser<InvitePlayerJoinMyGuildRequest>() {
            public GuildHandler.InvitePlayerJoinMyGuildRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.InvitePlayerJoinMyGuildRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int C2S_PLAYERID_FIELD_NUMBER = 1;
        private Object c2SPlayerId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<InvitePlayerJoinMyGuildRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasC2SPlayerId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getC2SPlayerId() {
            Object ref = this.c2SPlayerId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.c2SPlayerId_ = s;
            return s;
        }

        public ByteString getC2SPlayerIdBytes() {
            Object ref = this.c2SPlayerId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.c2SPlayerId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.c2SPlayerId_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeBytes(1, getC2SPlayerIdBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeBytesSize(1, getC2SPlayerIdBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static InvitePlayerJoinMyGuildRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (InvitePlayerJoinMyGuildRequest) PARSER.parseFrom(data);
        }

        public static InvitePlayerJoinMyGuildRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (InvitePlayerJoinMyGuildRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static InvitePlayerJoinMyGuildRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (InvitePlayerJoinMyGuildRequest) PARSER.parseFrom(data);
        }

        public static InvitePlayerJoinMyGuildRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (InvitePlayerJoinMyGuildRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static InvitePlayerJoinMyGuildRequest parseFrom(InputStream input) throws IOException {
            return (InvitePlayerJoinMyGuildRequest) PARSER.parseFrom(input);
        }

        public static InvitePlayerJoinMyGuildRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (InvitePlayerJoinMyGuildRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static InvitePlayerJoinMyGuildRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (InvitePlayerJoinMyGuildRequest) PARSER.parseDelimitedFrom(input);
        }

        public static InvitePlayerJoinMyGuildRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (InvitePlayerJoinMyGuildRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static InvitePlayerJoinMyGuildRequest parseFrom(CodedInputStream input) throws IOException {
            return (InvitePlayerJoinMyGuildRequest) PARSER.parseFrom(input);
        }

        public static InvitePlayerJoinMyGuildRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (InvitePlayerJoinMyGuildRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(InvitePlayerJoinMyGuildRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.InvitePlayerJoinMyGuildRequestOrBuilder {
            private int bitField0_;
            private Object c2SPlayerId_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_InvitePlayerJoinMyGuildRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_InvitePlayerJoinMyGuildRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.InvitePlayerJoinMyGuildRequest.class, Builder.class);
            }

            private Builder() {
                this.c2SPlayerId_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.c2SPlayerId_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.InvitePlayerJoinMyGuildRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.c2SPlayerId_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_InvitePlayerJoinMyGuildRequest_descriptor;
            }

            public GuildHandler.InvitePlayerJoinMyGuildRequest getDefaultInstanceForType() {
                return GuildHandler.InvitePlayerJoinMyGuildRequest.getDefaultInstance();
            }

            public GuildHandler.InvitePlayerJoinMyGuildRequest build() {
                GuildHandler.InvitePlayerJoinMyGuildRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.InvitePlayerJoinMyGuildRequest buildPartial() {
                GuildHandler.InvitePlayerJoinMyGuildRequest result = new GuildHandler.InvitePlayerJoinMyGuildRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.c2SPlayerId_ = this.c2SPlayerId_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.InvitePlayerJoinMyGuildRequest)
                    return mergeFrom((GuildHandler.InvitePlayerJoinMyGuildRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.InvitePlayerJoinMyGuildRequest other) {
                if (other == GuildHandler.InvitePlayerJoinMyGuildRequest.getDefaultInstance()) return this;
                if (other.hasC2SPlayerId()) {
                    this.bitField0_ |= 0x1;
                    this.c2SPlayerId_ = other.c2SPlayerId_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.InvitePlayerJoinMyGuildRequest parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.InvitePlayerJoinMyGuildRequest) GuildHandler.InvitePlayerJoinMyGuildRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.InvitePlayerJoinMyGuildRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasC2SPlayerId() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getC2SPlayerId() {
                Object ref = this.c2SPlayerId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.c2SPlayerId_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getC2SPlayerIdBytes() {
                Object ref = this.c2SPlayerId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.c2SPlayerId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setC2SPlayerId(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.c2SPlayerId_ = value;
                onChanged();
                return this;
            }

            public Builder clearC2SPlayerId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.c2SPlayerId_ = GuildHandler.InvitePlayerJoinMyGuildRequest.getDefaultInstance().getC2SPlayerId();
                onChanged();
                return this;
            }

            public Builder setC2SPlayerIdBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.c2SPlayerId_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class AgreeOrRefuseInviteRequest
            extends GeneratedMessage
            implements AgreeOrRefuseInviteRequestOrBuilder {
        private static final AgreeOrRefuseInviteRequest defaultInstance = new AgreeOrRefuseInviteRequest(true);
        private final UnknownFieldSet unknownFields;

        private AgreeOrRefuseInviteRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private AgreeOrRefuseInviteRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static AgreeOrRefuseInviteRequest getDefaultInstance() {
            return defaultInstance;
        }

        public AgreeOrRefuseInviteRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private AgreeOrRefuseInviteRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.c2SIsAgree_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.c2SInviteId_ = bs;
                            break;
                        case 26:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x4;
                            this.c2SGuildId_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_AgreeOrRefuseInviteRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_AgreeOrRefuseInviteRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(AgreeOrRefuseInviteRequest.class, Builder.class);
        }

        public static Parser<AgreeOrRefuseInviteRequest> PARSER = (Parser<AgreeOrRefuseInviteRequest>) new AbstractParser<AgreeOrRefuseInviteRequest>() {
            public GuildHandler.AgreeOrRefuseInviteRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.AgreeOrRefuseInviteRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int C2S_ISAGREE_FIELD_NUMBER = 1;
        private int c2SIsAgree_;
        public static final int C2S_INVITEID_FIELD_NUMBER = 2;
        private Object c2SInviteId_;
        public static final int C2S_GUILDID_FIELD_NUMBER = 3;
        private Object c2SGuildId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<AgreeOrRefuseInviteRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasC2SIsAgree() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getC2SIsAgree() {
            return this.c2SIsAgree_;
        }

        public boolean hasC2SInviteId() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getC2SInviteId() {
            Object ref = this.c2SInviteId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8())
                this.c2SInviteId_ = s;
            return s;
        }

        static {
            defaultInstance.initFields();
        }


        public ByteString getC2SInviteIdBytes() {
            Object ref = this.c2SInviteId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.c2SInviteId_ = b;
                return b;
            }
            return (ByteString) ref;
        }


        public boolean hasC2SGuildId() {
            return ((this.bitField0_ & 0x4) == 4);
        }


        public String getC2SGuildId() {
            Object ref = this.c2SGuildId_;
            if (ref instanceof String) {
                return (String) ref;
            }
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.c2SGuildId_ = s;
            }
            return s;
        }


        public ByteString getC2SGuildIdBytes() {
            Object ref = this.c2SGuildId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.c2SGuildId_ = b;
                return b;
            }
            return (ByteString) ref;
        }


        private void initFields() {
            this.c2SIsAgree_ = 0;
            this.c2SInviteId_ = "";
            this.c2SGuildId_ = "";
        }


        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
                return true;
            }
            if (isInitialized == 0) {
                return false;
            }
            if (!hasC2SIsAgree()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasC2SInviteId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasC2SGuildId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }


        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) {
                output.writeInt32(1, this.c2SIsAgree_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                output.writeBytes(2, getC2SInviteIdBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                output.writeBytes(3, getC2SGuildIdBytes());
            }
            getUnknownFields().writeTo(output);
        }


        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) {
                size += CodedOutputStream.computeInt32Size(1, this.c2SIsAgree_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                size += CodedOutputStream.computeBytesSize(2, getC2SInviteIdBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                size += CodedOutputStream.computeBytesSize(3, getC2SGuildIdBytes());
            }
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }


        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }


        public static AgreeOrRefuseInviteRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (AgreeOrRefuseInviteRequest) PARSER.parseFrom(data);
        }


        public static AgreeOrRefuseInviteRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (AgreeOrRefuseInviteRequest) PARSER.parseFrom(data, extensionRegistry);
        }


        public static AgreeOrRefuseInviteRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (AgreeOrRefuseInviteRequest) PARSER.parseFrom(data);
        }


        public static AgreeOrRefuseInviteRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (AgreeOrRefuseInviteRequest) PARSER.parseFrom(data, extensionRegistry);
        }


        public static AgreeOrRefuseInviteRequest parseFrom(InputStream input) throws IOException {
            return (AgreeOrRefuseInviteRequest) PARSER.parseFrom(input);
        }


        public static AgreeOrRefuseInviteRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (AgreeOrRefuseInviteRequest) PARSER.parseFrom(input, extensionRegistry);
        }


        public static AgreeOrRefuseInviteRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (AgreeOrRefuseInviteRequest) PARSER.parseDelimitedFrom(input);
        }


        public static AgreeOrRefuseInviteRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (AgreeOrRefuseInviteRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }


        public static AgreeOrRefuseInviteRequest parseFrom(CodedInputStream input) throws IOException {
            return (AgreeOrRefuseInviteRequest) PARSER.parseFrom(input);
        }


        public static AgreeOrRefuseInviteRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (AgreeOrRefuseInviteRequest) PARSER.parseFrom(input, extensionRegistry);
        }


        public static Builder newBuilder() {
            return Builder.create();
        }


        public Builder newBuilderForType() {
            return newBuilder();
        }


        public static Builder newBuilder(AgreeOrRefuseInviteRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }


        public Builder toBuilder() {
            return newBuilder(this);
        }


        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }


        public static final class Builder
                extends GeneratedMessage.Builder<Builder>
                implements GuildHandler.AgreeOrRefuseInviteRequestOrBuilder {
            private int bitField0_;


            private int c2SIsAgree_;


            private Object c2SInviteId_;


            private Object c2SGuildId_;


            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_AgreeOrRefuseInviteRequest_descriptor;
            }


            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_AgreeOrRefuseInviteRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.AgreeOrRefuseInviteRequest.class, Builder.class);
            }


            private Builder() {
                this.c2SInviteId_ = "";
                this.c2SGuildId_ = "";
                maybeForceBuilderInitialization();
            }


            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.c2SInviteId_ = "";
                this.c2SGuildId_ = "";
                maybeForceBuilderInitialization();
            }


            private void maybeForceBuilderInitialization() {
                if (GuildHandler.AgreeOrRefuseInviteRequest.alwaysUseFieldBuilders) ;
            }


            private static Builder create() {
                return new Builder();
            }


            public Builder clear() {
                super.clear();
                this.c2SIsAgree_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.c2SInviteId_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.c2SGuildId_ = "";
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }


            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }


            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_AgreeOrRefuseInviteRequest_descriptor;
            }


            public GuildHandler.AgreeOrRefuseInviteRequest getDefaultInstanceForType() {
                return GuildHandler.AgreeOrRefuseInviteRequest.getDefaultInstance();
            }


            public GuildHandler.AgreeOrRefuseInviteRequest build() {
                GuildHandler.AgreeOrRefuseInviteRequest result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }


            public GuildHandler.AgreeOrRefuseInviteRequest buildPartial() {
                GuildHandler.AgreeOrRefuseInviteRequest result = new GuildHandler.AgreeOrRefuseInviteRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) {
                    to_bitField0_ |= 0x1;
                }
                result.c2SIsAgree_ = this.c2SIsAgree_;
                if ((from_bitField0_ & 0x2) == 2) {
                    to_bitField0_ |= 0x2;
                }
                result.c2SInviteId_ = this.c2SInviteId_;
                if ((from_bitField0_ & 0x4) == 4) {
                    to_bitField0_ |= 0x4;
                }
                result.c2SGuildId_ = this.c2SGuildId_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }


            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.AgreeOrRefuseInviteRequest) {
                    return mergeFrom((GuildHandler.AgreeOrRefuseInviteRequest) other);
                }
                super.mergeFrom(other);
                return this;
            }


            public Builder mergeFrom(GuildHandler.AgreeOrRefuseInviteRequest other) {
                if (other == GuildHandler.AgreeOrRefuseInviteRequest.getDefaultInstance()) {
                    return this;
                }
                if (other.hasC2SIsAgree()) {
                    setC2SIsAgree(other.getC2SIsAgree());
                }
                if (other.hasC2SInviteId()) {
                    this.bitField0_ |= 0x2;
                    this.c2SInviteId_ = other.c2SInviteId_;
                    onChanged();
                }
                if (other.hasC2SGuildId()) {
                    this.bitField0_ |= 0x4;
                    this.c2SGuildId_ = other.c2SGuildId_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }


            public final boolean isInitialized() {
                if (!hasC2SIsAgree()) {
                    return false;
                }
                if (!hasC2SInviteId()) {
                    return false;
                }
                if (!hasC2SGuildId()) {
                    return false;
                }
                return true;
            }


            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.AgreeOrRefuseInviteRequest parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.AgreeOrRefuseInviteRequest) GuildHandler.AgreeOrRefuseInviteRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.AgreeOrRefuseInviteRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }


            public boolean hasC2SIsAgree() {
                return ((this.bitField0_ & 0x1) == 1);
            }


            public int getC2SIsAgree() {
                return this.c2SIsAgree_;
            }


            public Builder setC2SIsAgree(int value) {
                this.bitField0_ |= 0x1;
                this.c2SIsAgree_ = value;
                onChanged();
                return this;
            }


            public Builder clearC2SIsAgree() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.c2SIsAgree_ = 0;
                onChanged();
                return this;
            }


            public boolean hasC2SInviteId() {
                return ((this.bitField0_ & 0x2) == 2);
            }


            public String getC2SInviteId() {
                Object ref = this.c2SInviteId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.c2SInviteId_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getC2SInviteIdBytes() {
                Object ref = this.c2SInviteId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.c2SInviteId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setC2SInviteId(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.c2SInviteId_ = value;
                onChanged();
                return this;
            }


            public Builder clearC2SInviteId() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.c2SInviteId_ = GuildHandler.AgreeOrRefuseInviteRequest.getDefaultInstance().getC2SInviteId();
                onChanged();
                return this;
            }


            public Builder setC2SInviteIdBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.c2SInviteId_ = value;
                onChanged();
                return this;
            }


            public boolean hasC2SGuildId() {
                return ((this.bitField0_ & 0x4) == 4);
            }


            public String getC2SGuildId() {
                Object ref = this.c2SGuildId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.c2SGuildId_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getC2SGuildIdBytes() {
                Object ref = this.c2SGuildId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.c2SGuildId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setC2SGuildId(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x4;
                this.c2SGuildId_ = value;
                onChanged();
                return this;
            }


            public Builder clearC2SGuildId() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.c2SGuildId_ = GuildHandler.AgreeOrRefuseInviteRequest.getDefaultInstance().getC2SGuildId();
                onChanged();
                return this;
            }


            public Builder setC2SGuildIdBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x4;
                this.c2SGuildId_ = value;
                onChanged();
                return this;
            }
        }
    }


    public static final class DealApplyRequest
            extends GeneratedMessage
            implements DealApplyRequestOrBuilder {
        private static final DealApplyRequest defaultInstance = new DealApplyRequest(true);
        private final UnknownFieldSet unknownFields;

        private DealApplyRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private DealApplyRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static DealApplyRequest getDefaultInstance() {
            return defaultInstance;
        }

        public DealApplyRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private DealApplyRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.c2SApplyId_ = bs;
                            break;
                        case 16:
                            this.bitField0_ |= 0x2;
                            this.c2SOperate_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_DealApplyRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_DealApplyRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(DealApplyRequest.class, Builder.class);
        }

        public static Parser<DealApplyRequest> PARSER = (Parser<DealApplyRequest>) new AbstractParser<DealApplyRequest>() {
            public GuildHandler.DealApplyRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.DealApplyRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int C2S_APPLYID_FIELD_NUMBER = 1;
        private Object c2SApplyId_;
        public static final int C2S_OPERATE_FIELD_NUMBER = 2;
        private int c2SOperate_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<DealApplyRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasC2SApplyId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getC2SApplyId() {
            Object ref = this.c2SApplyId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.c2SApplyId_ = s;
            return s;
        }

        public ByteString getC2SApplyIdBytes() {
            Object ref = this.c2SApplyId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.c2SApplyId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasC2SOperate() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public int getC2SOperate() {
            return this.c2SOperate_;
        }

        private void initFields() {
            this.c2SApplyId_ = "";
            this.c2SOperate_ = 0;
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeBytes(1, getC2SApplyIdBytes());
            if ((this.bitField0_ & 0x2) == 2) output.writeInt32(2, this.c2SOperate_);
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeBytesSize(1, getC2SApplyIdBytes());
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeInt32Size(2, this.c2SOperate_);
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static DealApplyRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (DealApplyRequest) PARSER.parseFrom(data);
        }

        public static DealApplyRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (DealApplyRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static DealApplyRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (DealApplyRequest) PARSER.parseFrom(data);
        }

        public static DealApplyRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (DealApplyRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static DealApplyRequest parseFrom(InputStream input) throws IOException {
            return (DealApplyRequest) PARSER.parseFrom(input);
        }

        public static DealApplyRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DealApplyRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static DealApplyRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (DealApplyRequest) PARSER.parseDelimitedFrom(input);
        }

        public static DealApplyRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DealApplyRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static DealApplyRequest parseFrom(CodedInputStream input) throws IOException {
            return (DealApplyRequest) PARSER.parseFrom(input);
        }

        public static DealApplyRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DealApplyRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(DealApplyRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.DealApplyRequestOrBuilder {
            private int bitField0_;
            private Object c2SApplyId_;
            private int c2SOperate_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_DealApplyRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_DealApplyRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.DealApplyRequest.class, Builder.class);
            }

            private Builder() {
                this.c2SApplyId_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.c2SApplyId_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.DealApplyRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.c2SApplyId_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.c2SOperate_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_DealApplyRequest_descriptor;
            }

            public GuildHandler.DealApplyRequest getDefaultInstanceForType() {
                return GuildHandler.DealApplyRequest.getDefaultInstance();
            }

            public GuildHandler.DealApplyRequest build() {
                GuildHandler.DealApplyRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.DealApplyRequest buildPartial() {
                GuildHandler.DealApplyRequest result = new GuildHandler.DealApplyRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.c2SApplyId_ = this.c2SApplyId_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.c2SOperate_ = this.c2SOperate_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.DealApplyRequest)
                    return mergeFrom((GuildHandler.DealApplyRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.DealApplyRequest other) {
                if (other == GuildHandler.DealApplyRequest.getDefaultInstance()) return this;
                if (other.hasC2SApplyId()) {
                    this.bitField0_ |= 0x1;
                    this.c2SApplyId_ = other.c2SApplyId_;
                    onChanged();
                }
                if (other.hasC2SOperate()) setC2SOperate(other.getC2SOperate());
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.DealApplyRequest parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.DealApplyRequest) GuildHandler.DealApplyRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.DealApplyRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasC2SApplyId() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getC2SApplyId() {
                Object ref = this.c2SApplyId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.c2SApplyId_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getC2SApplyIdBytes() {
                Object ref = this.c2SApplyId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.c2SApplyId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setC2SApplyId(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.c2SApplyId_ = value;
                onChanged();
                return this;
            }

            public Builder clearC2SApplyId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.c2SApplyId_ = GuildHandler.DealApplyRequest.getDefaultInstance().getC2SApplyId();
                onChanged();
                return this;
            }

            public Builder setC2SApplyIdBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.c2SApplyId_ = value;
                onChanged();
                return this;
            }

            public boolean hasC2SOperate() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public int getC2SOperate() {
                return this.c2SOperate_;
            }

            public Builder setC2SOperate(int value) {
                this.bitField0_ |= 0x2;
                this.c2SOperate_ = value;
                onChanged();
                return this;
            }

            public Builder clearC2SOperate() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.c2SOperate_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class GetMyGuildInfoRequest
            extends GeneratedMessage
            implements GetMyGuildInfoRequestOrBuilder {
        private static final GetMyGuildInfoRequest defaultInstance = new GetMyGuildInfoRequest(true);
        private final UnknownFieldSet unknownFields;

        private GetMyGuildInfoRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private GetMyGuildInfoRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static GetMyGuildInfoRequest getDefaultInstance() {
            return defaultInstance;
        }

        public GetMyGuildInfoRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private GetMyGuildInfoRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            continue;
                    }
                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_GetMyGuildInfoRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_GetMyGuildInfoRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GetMyGuildInfoRequest.class, Builder.class);
        }

        public static Parser<GetMyGuildInfoRequest> PARSER = (Parser<GetMyGuildInfoRequest>) new AbstractParser<GetMyGuildInfoRequest>() {
            public GuildHandler.GetMyGuildInfoRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.GetMyGuildInfoRequest(input, extensionRegistry);
            }
        };
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<GetMyGuildInfoRequest> getParserForType() {
            return PARSER;
        }

        private void initFields() {
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static GetMyGuildInfoRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (GetMyGuildInfoRequest) PARSER.parseFrom(data);
        }

        public static GetMyGuildInfoRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetMyGuildInfoRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GetMyGuildInfoRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (GetMyGuildInfoRequest) PARSER.parseFrom(data);
        }

        public static GetMyGuildInfoRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetMyGuildInfoRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GetMyGuildInfoRequest parseFrom(InputStream input) throws IOException {
            return (GetMyGuildInfoRequest) PARSER.parseFrom(input);
        }

        public static GetMyGuildInfoRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetMyGuildInfoRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static GetMyGuildInfoRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (GetMyGuildInfoRequest) PARSER.parseDelimitedFrom(input);
        }

        public static GetMyGuildInfoRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetMyGuildInfoRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static GetMyGuildInfoRequest parseFrom(CodedInputStream input) throws IOException {
            return (GetMyGuildInfoRequest) PARSER.parseFrom(input);
        }

        public static GetMyGuildInfoRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetMyGuildInfoRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(GetMyGuildInfoRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.GetMyGuildInfoRequestOrBuilder {
            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_GetMyGuildInfoRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_GetMyGuildInfoRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.GetMyGuildInfoRequest.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.GetMyGuildInfoRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_GetMyGuildInfoRequest_descriptor;
            }

            public GuildHandler.GetMyGuildInfoRequest getDefaultInstanceForType() {
                return GuildHandler.GetMyGuildInfoRequest.getDefaultInstance();
            }

            public GuildHandler.GetMyGuildInfoRequest build() {
                GuildHandler.GetMyGuildInfoRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.GetMyGuildInfoRequest buildPartial() {
                GuildHandler.GetMyGuildInfoRequest result = new GuildHandler.GetMyGuildInfoRequest(this);
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.GetMyGuildInfoRequest)
                    return mergeFrom((GuildHandler.GetMyGuildInfoRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.GetMyGuildInfoRequest other) {
                if (other == GuildHandler.GetMyGuildInfoRequest.getDefaultInstance()) return this;
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.GetMyGuildInfoRequest parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.GetMyGuildInfoRequest) GuildHandler.GetMyGuildInfoRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.GetMyGuildInfoRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class GetMyGuildMembersRequest
            extends GeneratedMessage
            implements GetMyGuildMembersRequestOrBuilder {
        private static final GetMyGuildMembersRequest defaultInstance = new GetMyGuildMembersRequest(true);
        private final UnknownFieldSet unknownFields;

        private GetMyGuildMembersRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private GetMyGuildMembersRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static GetMyGuildMembersRequest getDefaultInstance() {
            return defaultInstance;
        }

        public GetMyGuildMembersRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private GetMyGuildMembersRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            continue;
                    }
                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_GetMyGuildMembersRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_GetMyGuildMembersRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GetMyGuildMembersRequest.class, Builder.class);
        }

        public static Parser<GetMyGuildMembersRequest> PARSER = (Parser<GetMyGuildMembersRequest>) new AbstractParser<GetMyGuildMembersRequest>() {
            public GuildHandler.GetMyGuildMembersRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.GetMyGuildMembersRequest(input, extensionRegistry);
            }
        };
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<GetMyGuildMembersRequest> getParserForType() {
            return PARSER;
        }

        private void initFields() {
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static GetMyGuildMembersRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (GetMyGuildMembersRequest) PARSER.parseFrom(data);
        }

        public static GetMyGuildMembersRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetMyGuildMembersRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GetMyGuildMembersRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (GetMyGuildMembersRequest) PARSER.parseFrom(data);
        }

        public static GetMyGuildMembersRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetMyGuildMembersRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GetMyGuildMembersRequest parseFrom(InputStream input) throws IOException {
            return (GetMyGuildMembersRequest) PARSER.parseFrom(input);
        }

        public static GetMyGuildMembersRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetMyGuildMembersRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static GetMyGuildMembersRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (GetMyGuildMembersRequest) PARSER.parseDelimitedFrom(input);
        }

        public static GetMyGuildMembersRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetMyGuildMembersRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static GetMyGuildMembersRequest parseFrom(CodedInputStream input) throws IOException {
            return (GetMyGuildMembersRequest) PARSER.parseFrom(input);
        }

        public static GetMyGuildMembersRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetMyGuildMembersRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(GetMyGuildMembersRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.GetMyGuildMembersRequestOrBuilder {
            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_GetMyGuildMembersRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_GetMyGuildMembersRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.GetMyGuildMembersRequest.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.GetMyGuildMembersRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_GetMyGuildMembersRequest_descriptor;
            }

            public GuildHandler.GetMyGuildMembersRequest getDefaultInstanceForType() {
                return GuildHandler.GetMyGuildMembersRequest.getDefaultInstance();
            }

            public GuildHandler.GetMyGuildMembersRequest build() {
                GuildHandler.GetMyGuildMembersRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.GetMyGuildMembersRequest buildPartial() {
                GuildHandler.GetMyGuildMembersRequest result = new GuildHandler.GetMyGuildMembersRequest(this);
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.GetMyGuildMembersRequest)
                    return mergeFrom((GuildHandler.GetMyGuildMembersRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.GetMyGuildMembersRequest other) {
                if (other == GuildHandler.GetMyGuildMembersRequest.getDefaultInstance()) return this;
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.GetMyGuildMembersRequest parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.GetMyGuildMembersRequest) GuildHandler.GetMyGuildMembersRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.GetMyGuildMembersRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class GetApplyListRequest
            extends GeneratedMessage
            implements GetApplyListRequestOrBuilder {
        private static final GetApplyListRequest defaultInstance = new GetApplyListRequest(true);
        private final UnknownFieldSet unknownFields;

        private GetApplyListRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private GetApplyListRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static GetApplyListRequest getDefaultInstance() {
            return defaultInstance;
        }

        public GetApplyListRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private GetApplyListRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            continue;
                    }
                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_GetApplyListRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_GetApplyListRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GetApplyListRequest.class, Builder.class);
        }

        public static Parser<GetApplyListRequest> PARSER = (Parser<GetApplyListRequest>) new AbstractParser<GetApplyListRequest>() {
            public GuildHandler.GetApplyListRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.GetApplyListRequest(input, extensionRegistry);
            }
        };
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<GetApplyListRequest> getParserForType() {
            return PARSER;
        }

        private void initFields() {
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static GetApplyListRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (GetApplyListRequest) PARSER.parseFrom(data);
        }

        public static GetApplyListRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetApplyListRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GetApplyListRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (GetApplyListRequest) PARSER.parseFrom(data);
        }

        public static GetApplyListRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetApplyListRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GetApplyListRequest parseFrom(InputStream input) throws IOException {
            return (GetApplyListRequest) PARSER.parseFrom(input);
        }

        public static GetApplyListRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetApplyListRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static GetApplyListRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (GetApplyListRequest) PARSER.parseDelimitedFrom(input);
        }

        public static GetApplyListRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetApplyListRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static GetApplyListRequest parseFrom(CodedInputStream input) throws IOException {
            return (GetApplyListRequest) PARSER.parseFrom(input);
        }

        public static GetApplyListRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetApplyListRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(GetApplyListRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.GetApplyListRequestOrBuilder {
            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_GetApplyListRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_GetApplyListRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.GetApplyListRequest.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.GetApplyListRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_GetApplyListRequest_descriptor;
            }

            public GuildHandler.GetApplyListRequest getDefaultInstanceForType() {
                return GuildHandler.GetApplyListRequest.getDefaultInstance();
            }

            public GuildHandler.GetApplyListRequest build() {
                GuildHandler.GetApplyListRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.GetApplyListRequest buildPartial() {
                GuildHandler.GetApplyListRequest result = new GuildHandler.GetApplyListRequest(this);
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.GetApplyListRequest)
                    return mergeFrom((GuildHandler.GetApplyListRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.GetApplyListRequest other) {
                if (other == GuildHandler.GetApplyListRequest.getDefaultInstance()) return this;
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.GetApplyListRequest parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.GetApplyListRequest) GuildHandler.GetApplyListRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.GetApplyListRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class SetGuildInfoRequest
            extends GeneratedMessage
            implements SetGuildInfoRequestOrBuilder {
        private static final SetGuildInfoRequest defaultInstance = new SetGuildInfoRequest(true);
        private final UnknownFieldSet unknownFields;

        private SetGuildInfoRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private SetGuildInfoRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static SetGuildInfoRequest getDefaultInstance() {
            return defaultInstance;
        }

        public SetGuildInfoRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private SetGuildInfoRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.entryLevel_ = input.readInt32();
                            break;
                        case 16:
                            this.bitField0_ |= 0x2;
                            this.guildMode_ = input.readInt32();
                            break;
                        case 32:
                            this.bitField0_ |= 0x4;
                            this.entryUpLevel_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_SetGuildInfoRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_SetGuildInfoRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(SetGuildInfoRequest.class, Builder.class);
        }

        public static Parser<SetGuildInfoRequest> PARSER = (Parser<SetGuildInfoRequest>) new AbstractParser<SetGuildInfoRequest>() {
            public GuildHandler.SetGuildInfoRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.SetGuildInfoRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int ENTRYLEVEL_FIELD_NUMBER = 1;
        private int entryLevel_;
        public static final int GUILDMODE_FIELD_NUMBER = 2;
        private int guildMode_;
        public static final int ENTRYUPLEVEL_FIELD_NUMBER = 4;
        private int entryUpLevel_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<SetGuildInfoRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasEntryLevel() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getEntryLevel() {
            return this.entryLevel_;
        }

        public boolean hasGuildMode() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public int getGuildMode() {
            return this.guildMode_;
        }

        public boolean hasEntryUpLevel() {
            return ((this.bitField0_ & 0x4) == 4);
        }

        public int getEntryUpLevel() {
            return this.entryUpLevel_;
        }

        private void initFields() {
            this.entryLevel_ = 0;
            this.guildMode_ = 0;
            this.entryUpLevel_ = 0;
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.entryLevel_);
            if ((this.bitField0_ & 0x2) == 2) output.writeInt32(2, this.guildMode_);
            if ((this.bitField0_ & 0x4) == 4) output.writeInt32(4, this.entryUpLevel_);
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.entryLevel_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeInt32Size(2, this.guildMode_);
            if ((this.bitField0_ & 0x4) == 4) size += CodedOutputStream.computeInt32Size(4, this.entryUpLevel_);
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static SetGuildInfoRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (SetGuildInfoRequest) PARSER.parseFrom(data);
        }

        public static SetGuildInfoRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (SetGuildInfoRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static SetGuildInfoRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (SetGuildInfoRequest) PARSER.parseFrom(data);
        }

        public static SetGuildInfoRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (SetGuildInfoRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static SetGuildInfoRequest parseFrom(InputStream input) throws IOException {
            return (SetGuildInfoRequest) PARSER.parseFrom(input);
        }

        public static SetGuildInfoRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (SetGuildInfoRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static SetGuildInfoRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (SetGuildInfoRequest) PARSER.parseDelimitedFrom(input);
        }

        public static SetGuildInfoRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (SetGuildInfoRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static SetGuildInfoRequest parseFrom(CodedInputStream input) throws IOException {
            return (SetGuildInfoRequest) PARSER.parseFrom(input);
        }

        public static SetGuildInfoRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (SetGuildInfoRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(SetGuildInfoRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.SetGuildInfoRequestOrBuilder {
            private int bitField0_;
            private int entryLevel_;
            private int guildMode_;
            private int entryUpLevel_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_SetGuildInfoRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_SetGuildInfoRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.SetGuildInfoRequest.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.SetGuildInfoRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.entryLevel_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.guildMode_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                this.entryUpLevel_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_SetGuildInfoRequest_descriptor;
            }

            public GuildHandler.SetGuildInfoRequest getDefaultInstanceForType() {
                return GuildHandler.SetGuildInfoRequest.getDefaultInstance();
            }

            public GuildHandler.SetGuildInfoRequest build() {
                GuildHandler.SetGuildInfoRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.SetGuildInfoRequest buildPartial() {
                GuildHandler.SetGuildInfoRequest result = new GuildHandler.SetGuildInfoRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.entryLevel_ = this.entryLevel_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.guildMode_ = this.guildMode_;
                if ((from_bitField0_ & 0x4) == 4) to_bitField0_ |= 0x4;
                result.entryUpLevel_ = this.entryUpLevel_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.SetGuildInfoRequest)
                    return mergeFrom((GuildHandler.SetGuildInfoRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.SetGuildInfoRequest other) {
                if (other == GuildHandler.SetGuildInfoRequest.getDefaultInstance()) return this;
                if (other.hasEntryLevel()) setEntryLevel(other.getEntryLevel());
                if (other.hasGuildMode()) setGuildMode(other.getGuildMode());
                if (other.hasEntryUpLevel()) setEntryUpLevel(other.getEntryUpLevel());
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.SetGuildInfoRequest parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.SetGuildInfoRequest) GuildHandler.SetGuildInfoRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.SetGuildInfoRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasEntryLevel() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getEntryLevel() {
                return this.entryLevel_;
            }

            public Builder setEntryLevel(int value) {
                this.bitField0_ |= 0x1;
                this.entryLevel_ = value;
                onChanged();
                return this;
            }

            public Builder clearEntryLevel() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.entryLevel_ = 0;
                onChanged();
                return this;
            }

            public boolean hasGuildMode() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public int getGuildMode() {
                return this.guildMode_;
            }

            public Builder setGuildMode(int value) {
                this.bitField0_ |= 0x2;
                this.guildMode_ = value;
                onChanged();
                return this;
            }

            public Builder clearGuildMode() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.guildMode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasEntryUpLevel() {
                return ((this.bitField0_ & 0x4) == 4);
            }

            public int getEntryUpLevel() {
                return this.entryUpLevel_;
            }

            public Builder setEntryUpLevel(int value) {
                this.bitField0_ |= 0x4;
                this.entryUpLevel_ = value;
                onChanged();
                return this;
            }

            public Builder clearEntryUpLevel() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.entryUpLevel_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class SetGuildQQGroupRequest
            extends GeneratedMessage
            implements SetGuildQQGroupRequestOrBuilder {
        private static final SetGuildQQGroupRequest defaultInstance = new SetGuildQQGroupRequest(true);
        private final UnknownFieldSet unknownFields;

        private SetGuildQQGroupRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private SetGuildQQGroupRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static SetGuildQQGroupRequest getDefaultInstance() {
            return defaultInstance;
        }

        public SetGuildQQGroupRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private SetGuildQQGroupRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 26:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.qqGroup_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_SetGuildQQGroupRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_SetGuildQQGroupRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(SetGuildQQGroupRequest.class, Builder.class);
        }

        public static Parser<SetGuildQQGroupRequest> PARSER = (Parser<SetGuildQQGroupRequest>) new AbstractParser<SetGuildQQGroupRequest>() {
            public GuildHandler.SetGuildQQGroupRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.SetGuildQQGroupRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int QQGROUP_FIELD_NUMBER = 3;
        private Object qqGroup_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<SetGuildQQGroupRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasQqGroup() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getQqGroup() {
            Object ref = this.qqGroup_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.qqGroup_ = s;
            return s;
        }

        public ByteString getQqGroupBytes() {
            Object ref = this.qqGroup_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.qqGroup_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.qqGroup_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeBytes(3, getQqGroupBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeBytesSize(3, getQqGroupBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static SetGuildQQGroupRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (SetGuildQQGroupRequest) PARSER.parseFrom(data);
        }

        public static SetGuildQQGroupRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (SetGuildQQGroupRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static SetGuildQQGroupRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (SetGuildQQGroupRequest) PARSER.parseFrom(data);
        }

        public static SetGuildQQGroupRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (SetGuildQQGroupRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static SetGuildQQGroupRequest parseFrom(InputStream input) throws IOException {
            return (SetGuildQQGroupRequest) PARSER.parseFrom(input);
        }

        public static SetGuildQQGroupRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (SetGuildQQGroupRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static SetGuildQQGroupRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (SetGuildQQGroupRequest) PARSER.parseDelimitedFrom(input);
        }

        public static SetGuildQQGroupRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (SetGuildQQGroupRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static SetGuildQQGroupRequest parseFrom(CodedInputStream input) throws IOException {
            return (SetGuildQQGroupRequest) PARSER.parseFrom(input);
        }

        public static SetGuildQQGroupRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (SetGuildQQGroupRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(SetGuildQQGroupRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.SetGuildQQGroupRequestOrBuilder {
            private int bitField0_;
            private Object qqGroup_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_SetGuildQQGroupRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_SetGuildQQGroupRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.SetGuildQQGroupRequest.class, Builder.class);
            }

            private Builder() {
                this.qqGroup_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.qqGroup_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.SetGuildQQGroupRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.qqGroup_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_SetGuildQQGroupRequest_descriptor;
            }

            public GuildHandler.SetGuildQQGroupRequest getDefaultInstanceForType() {
                return GuildHandler.SetGuildQQGroupRequest.getDefaultInstance();
            }

            public GuildHandler.SetGuildQQGroupRequest build() {
                GuildHandler.SetGuildQQGroupRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.SetGuildQQGroupRequest buildPartial() {
                GuildHandler.SetGuildQQGroupRequest result = new GuildHandler.SetGuildQQGroupRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.qqGroup_ = this.qqGroup_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.SetGuildQQGroupRequest)
                    return mergeFrom((GuildHandler.SetGuildQQGroupRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.SetGuildQQGroupRequest other) {
                if (other == GuildHandler.SetGuildQQGroupRequest.getDefaultInstance()) return this;
                if (other.hasQqGroup()) {
                    this.bitField0_ |= 0x1;
                    this.qqGroup_ = other.qqGroup_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.SetGuildQQGroupRequest parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.SetGuildQQGroupRequest) GuildHandler.SetGuildQQGroupRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.SetGuildQQGroupRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasQqGroup() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getQqGroup() {
                Object ref = this.qqGroup_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.qqGroup_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getQqGroupBytes() {
                Object ref = this.qqGroup_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.qqGroup_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setQqGroup(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.qqGroup_ = value;
                onChanged();
                return this;
            }

            public Builder clearQqGroup() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.qqGroup_ = GuildHandler.SetGuildQQGroupRequest.getDefaultInstance().getQqGroup();
                onChanged();
                return this;
            }

            public Builder setQqGroupBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.qqGroup_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class ExitGuildRequest
            extends GeneratedMessage
            implements ExitGuildRequestOrBuilder {
        private static final ExitGuildRequest defaultInstance = new ExitGuildRequest(true);
        private final UnknownFieldSet unknownFields;

        private ExitGuildRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private ExitGuildRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static ExitGuildRequest getDefaultInstance() {
            return defaultInstance;
        }

        public ExitGuildRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ExitGuildRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            continue;
                    }
                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_ExitGuildRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_ExitGuildRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(ExitGuildRequest.class, Builder.class);
        }

        public static Parser<ExitGuildRequest> PARSER = (Parser<ExitGuildRequest>) new AbstractParser<ExitGuildRequest>() {
            public GuildHandler.ExitGuildRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.ExitGuildRequest(input, extensionRegistry);
            }
        };
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<ExitGuildRequest> getParserForType() {
            return PARSER;
        }

        private void initFields() {
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static ExitGuildRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (ExitGuildRequest) PARSER.parseFrom(data);
        }

        public static ExitGuildRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ExitGuildRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ExitGuildRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (ExitGuildRequest) PARSER.parseFrom(data);
        }

        public static ExitGuildRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ExitGuildRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ExitGuildRequest parseFrom(InputStream input) throws IOException {
            return (ExitGuildRequest) PARSER.parseFrom(input);
        }

        public static ExitGuildRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ExitGuildRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static ExitGuildRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (ExitGuildRequest) PARSER.parseDelimitedFrom(input);
        }

        public static ExitGuildRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ExitGuildRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static ExitGuildRequest parseFrom(CodedInputStream input) throws IOException {
            return (ExitGuildRequest) PARSER.parseFrom(input);
        }

        public static ExitGuildRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ExitGuildRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ExitGuildRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.ExitGuildRequestOrBuilder {
            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_ExitGuildRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_ExitGuildRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.ExitGuildRequest.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.ExitGuildRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_ExitGuildRequest_descriptor;
            }

            public GuildHandler.ExitGuildRequest getDefaultInstanceForType() {
                return GuildHandler.ExitGuildRequest.getDefaultInstance();
            }

            public GuildHandler.ExitGuildRequest build() {
                GuildHandler.ExitGuildRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.ExitGuildRequest buildPartial() {
                GuildHandler.ExitGuildRequest result = new GuildHandler.ExitGuildRequest(this);
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.ExitGuildRequest)
                    return mergeFrom((GuildHandler.ExitGuildRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.ExitGuildRequest other) {
                if (other == GuildHandler.ExitGuildRequest.getDefaultInstance()) return this;
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.ExitGuildRequest parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.ExitGuildRequest) GuildHandler.ExitGuildRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.ExitGuildRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class KickMemberRequest
            extends GeneratedMessage
            implements KickMemberRequestOrBuilder {
        private static final KickMemberRequest defaultInstance = new KickMemberRequest(true);
        private final UnknownFieldSet unknownFields;

        private KickMemberRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private KickMemberRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static KickMemberRequest getDefaultInstance() {
            return defaultInstance;
        }

        public KickMemberRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private KickMemberRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.memberId_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_KickMemberRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_KickMemberRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(KickMemberRequest.class, Builder.class);
        }

        public static Parser<KickMemberRequest> PARSER = (Parser<KickMemberRequest>) new AbstractParser<KickMemberRequest>() {
            public GuildHandler.KickMemberRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.KickMemberRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int MEMBERID_FIELD_NUMBER = 1;
        private Object memberId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<KickMemberRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasMemberId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getMemberId() {
            Object ref = this.memberId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.memberId_ = s;
            return s;
        }

        public ByteString getMemberIdBytes() {
            Object ref = this.memberId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.memberId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.memberId_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeBytes(1, getMemberIdBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeBytesSize(1, getMemberIdBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static KickMemberRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (KickMemberRequest) PARSER.parseFrom(data);
        }

        public static KickMemberRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (KickMemberRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static KickMemberRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (KickMemberRequest) PARSER.parseFrom(data);
        }

        public static KickMemberRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (KickMemberRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static KickMemberRequest parseFrom(InputStream input) throws IOException {
            return (KickMemberRequest) PARSER.parseFrom(input);
        }

        public static KickMemberRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (KickMemberRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static KickMemberRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (KickMemberRequest) PARSER.parseDelimitedFrom(input);
        }

        public static KickMemberRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (KickMemberRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static KickMemberRequest parseFrom(CodedInputStream input) throws IOException {
            return (KickMemberRequest) PARSER.parseFrom(input);
        }

        public static KickMemberRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (KickMemberRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(KickMemberRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.KickMemberRequestOrBuilder {
            private int bitField0_;
            private Object memberId_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_KickMemberRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_KickMemberRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.KickMemberRequest.class, Builder.class);
            }

            private Builder() {
                this.memberId_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.memberId_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.KickMemberRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.memberId_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_KickMemberRequest_descriptor;
            }

            public GuildHandler.KickMemberRequest getDefaultInstanceForType() {
                return GuildHandler.KickMemberRequest.getDefaultInstance();
            }

            public GuildHandler.KickMemberRequest build() {
                GuildHandler.KickMemberRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.KickMemberRequest buildPartial() {
                GuildHandler.KickMemberRequest result = new GuildHandler.KickMemberRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.memberId_ = this.memberId_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.KickMemberRequest)
                    return mergeFrom((GuildHandler.KickMemberRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.KickMemberRequest other) {
                if (other == GuildHandler.KickMemberRequest.getDefaultInstance()) return this;
                if (other.hasMemberId()) {
                    this.bitField0_ |= 0x1;
                    this.memberId_ = other.memberId_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.KickMemberRequest parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.KickMemberRequest) GuildHandler.KickMemberRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.KickMemberRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasMemberId() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getMemberId() {
                Object ref = this.memberId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.memberId_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getMemberIdBytes() {
                Object ref = this.memberId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.memberId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setMemberId(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.memberId_ = value;
                onChanged();
                return this;
            }

            public Builder clearMemberId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.memberId_ = GuildHandler.KickMemberRequest.getDefaultInstance().getMemberId();
                onChanged();
                return this;
            }

            public Builder setMemberIdBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.memberId_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class UpgradeGuildLevelRequest
            extends GeneratedMessage
            implements UpgradeGuildLevelRequestOrBuilder {
        private static final UpgradeGuildLevelRequest defaultInstance = new UpgradeGuildLevelRequest(true);
        private final UnknownFieldSet unknownFields;

        private UpgradeGuildLevelRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private UpgradeGuildLevelRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static UpgradeGuildLevelRequest getDefaultInstance() {
            return defaultInstance;
        }

        public UpgradeGuildLevelRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private UpgradeGuildLevelRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            continue;
                    }
                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_UpgradeGuildLevelRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_UpgradeGuildLevelRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(UpgradeGuildLevelRequest.class, Builder.class);
        }

        public static Parser<UpgradeGuildLevelRequest> PARSER = (Parser<UpgradeGuildLevelRequest>) new AbstractParser<UpgradeGuildLevelRequest>() {
            public GuildHandler.UpgradeGuildLevelRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.UpgradeGuildLevelRequest(input, extensionRegistry);
            }
        };
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<UpgradeGuildLevelRequest> getParserForType() {
            return PARSER;
        }

        private void initFields() {
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static UpgradeGuildLevelRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (UpgradeGuildLevelRequest) PARSER.parseFrom(data);
        }

        public static UpgradeGuildLevelRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (UpgradeGuildLevelRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static UpgradeGuildLevelRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (UpgradeGuildLevelRequest) PARSER.parseFrom(data);
        }

        public static UpgradeGuildLevelRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (UpgradeGuildLevelRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static UpgradeGuildLevelRequest parseFrom(InputStream input) throws IOException {
            return (UpgradeGuildLevelRequest) PARSER.parseFrom(input);
        }

        public static UpgradeGuildLevelRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UpgradeGuildLevelRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static UpgradeGuildLevelRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (UpgradeGuildLevelRequest) PARSER.parseDelimitedFrom(input);
        }

        public static UpgradeGuildLevelRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UpgradeGuildLevelRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static UpgradeGuildLevelRequest parseFrom(CodedInputStream input) throws IOException {
            return (UpgradeGuildLevelRequest) PARSER.parseFrom(input);
        }

        public static UpgradeGuildLevelRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UpgradeGuildLevelRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(UpgradeGuildLevelRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.UpgradeGuildLevelRequestOrBuilder {
            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_UpgradeGuildLevelRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_UpgradeGuildLevelRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.UpgradeGuildLevelRequest.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.UpgradeGuildLevelRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_UpgradeGuildLevelRequest_descriptor;
            }

            public GuildHandler.UpgradeGuildLevelRequest getDefaultInstanceForType() {
                return GuildHandler.UpgradeGuildLevelRequest.getDefaultInstance();
            }

            public GuildHandler.UpgradeGuildLevelRequest build() {
                GuildHandler.UpgradeGuildLevelRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.UpgradeGuildLevelRequest buildPartial() {
                GuildHandler.UpgradeGuildLevelRequest result = new GuildHandler.UpgradeGuildLevelRequest(this);
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.UpgradeGuildLevelRequest)
                    return mergeFrom((GuildHandler.UpgradeGuildLevelRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.UpgradeGuildLevelRequest other) {
                if (other == GuildHandler.UpgradeGuildLevelRequest.getDefaultInstance()) return this;
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.UpgradeGuildLevelRequest parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.UpgradeGuildLevelRequest) GuildHandler.UpgradeGuildLevelRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.UpgradeGuildLevelRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class ChangeGuildNoticeRequest
            extends GeneratedMessage
            implements ChangeGuildNoticeRequestOrBuilder {
        private static final ChangeGuildNoticeRequest defaultInstance = new ChangeGuildNoticeRequest(true);
        private final UnknownFieldSet unknownFields;

        private ChangeGuildNoticeRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private ChangeGuildNoticeRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static ChangeGuildNoticeRequest getDefaultInstance() {
            return defaultInstance;
        }

        public ChangeGuildNoticeRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ChangeGuildNoticeRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.notice_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_ChangeGuildNoticeRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_ChangeGuildNoticeRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(ChangeGuildNoticeRequest.class, Builder.class);
        }

        public static Parser<ChangeGuildNoticeRequest> PARSER = (Parser<ChangeGuildNoticeRequest>) new AbstractParser<ChangeGuildNoticeRequest>() {
            public GuildHandler.ChangeGuildNoticeRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.ChangeGuildNoticeRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int NOTICE_FIELD_NUMBER = 1;
        private Object notice_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<ChangeGuildNoticeRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasNotice() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getNotice() {
            Object ref = this.notice_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.notice_ = s;
            return s;
        }

        public ByteString getNoticeBytes() {
            Object ref = this.notice_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.notice_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.notice_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeBytes(1, getNoticeBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeBytesSize(1, getNoticeBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static ChangeGuildNoticeRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (ChangeGuildNoticeRequest) PARSER.parseFrom(data);
        }

        public static ChangeGuildNoticeRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ChangeGuildNoticeRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ChangeGuildNoticeRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (ChangeGuildNoticeRequest) PARSER.parseFrom(data);
        }

        public static ChangeGuildNoticeRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ChangeGuildNoticeRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ChangeGuildNoticeRequest parseFrom(InputStream input) throws IOException {
            return (ChangeGuildNoticeRequest) PARSER.parseFrom(input);
        }

        public static ChangeGuildNoticeRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangeGuildNoticeRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static ChangeGuildNoticeRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (ChangeGuildNoticeRequest) PARSER.parseDelimitedFrom(input);
        }

        public static ChangeGuildNoticeRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangeGuildNoticeRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static ChangeGuildNoticeRequest parseFrom(CodedInputStream input) throws IOException {
            return (ChangeGuildNoticeRequest) PARSER.parseFrom(input);
        }

        public static ChangeGuildNoticeRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangeGuildNoticeRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ChangeGuildNoticeRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.ChangeGuildNoticeRequestOrBuilder {
            private int bitField0_;
            private Object notice_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_ChangeGuildNoticeRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_ChangeGuildNoticeRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.ChangeGuildNoticeRequest.class, Builder.class);
            }

            private Builder() {
                this.notice_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.notice_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.ChangeGuildNoticeRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.notice_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_ChangeGuildNoticeRequest_descriptor;
            }

            public GuildHandler.ChangeGuildNoticeRequest getDefaultInstanceForType() {
                return GuildHandler.ChangeGuildNoticeRequest.getDefaultInstance();
            }

            public GuildHandler.ChangeGuildNoticeRequest build() {
                GuildHandler.ChangeGuildNoticeRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.ChangeGuildNoticeRequest buildPartial() {
                GuildHandler.ChangeGuildNoticeRequest result = new GuildHandler.ChangeGuildNoticeRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.notice_ = this.notice_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.ChangeGuildNoticeRequest)
                    return mergeFrom((GuildHandler.ChangeGuildNoticeRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.ChangeGuildNoticeRequest other) {
                if (other == GuildHandler.ChangeGuildNoticeRequest.getDefaultInstance()) return this;
                if (other.hasNotice()) {
                    this.bitField0_ |= 0x1;
                    this.notice_ = other.notice_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.ChangeGuildNoticeRequest parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.ChangeGuildNoticeRequest) GuildHandler.ChangeGuildNoticeRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.ChangeGuildNoticeRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasNotice() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getNotice() {
                Object ref = this.notice_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.notice_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getNoticeBytes() {
                Object ref = this.notice_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.notice_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setNotice(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.notice_ = value;
                onChanged();
                return this;
            }

            public Builder clearNotice() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.notice_ = GuildHandler.ChangeGuildNoticeRequest.getDefaultInstance().getNotice();
                onChanged();
                return this;
            }

            public Builder setNoticeBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.notice_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class ChangeGuildNameRequest
            extends GeneratedMessage
            implements ChangeGuildNameRequestOrBuilder {
        private static final ChangeGuildNameRequest defaultInstance = new ChangeGuildNameRequest(true);
        private final UnknownFieldSet unknownFields;

        private ChangeGuildNameRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private ChangeGuildNameRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static ChangeGuildNameRequest getDefaultInstance() {
            return defaultInstance;
        }

        public ChangeGuildNameRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ChangeGuildNameRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.name_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_ChangeGuildNameRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_ChangeGuildNameRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(ChangeGuildNameRequest.class, Builder.class);
        }

        public static Parser<ChangeGuildNameRequest> PARSER = (Parser<ChangeGuildNameRequest>) new AbstractParser<ChangeGuildNameRequest>() {
            public GuildHandler.ChangeGuildNameRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.ChangeGuildNameRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int NAME_FIELD_NUMBER = 1;
        private Object name_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<ChangeGuildNameRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasName() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getName() {
            Object ref = this.name_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.name_ = s;
            return s;
        }

        public ByteString getNameBytes() {
            Object ref = this.name_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.name_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.name_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeBytes(1, getNameBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeBytesSize(1, getNameBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static ChangeGuildNameRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (ChangeGuildNameRequest) PARSER.parseFrom(data);
        }

        public static ChangeGuildNameRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ChangeGuildNameRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ChangeGuildNameRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (ChangeGuildNameRequest) PARSER.parseFrom(data);
        }

        public static ChangeGuildNameRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ChangeGuildNameRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ChangeGuildNameRequest parseFrom(InputStream input) throws IOException {
            return (ChangeGuildNameRequest) PARSER.parseFrom(input);
        }

        public static ChangeGuildNameRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangeGuildNameRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static ChangeGuildNameRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (ChangeGuildNameRequest) PARSER.parseDelimitedFrom(input);
        }

        public static ChangeGuildNameRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangeGuildNameRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static ChangeGuildNameRequest parseFrom(CodedInputStream input) throws IOException {
            return (ChangeGuildNameRequest) PARSER.parseFrom(input);
        }

        public static ChangeGuildNameRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangeGuildNameRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ChangeGuildNameRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.ChangeGuildNameRequestOrBuilder {
            private int bitField0_;
            private Object name_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_ChangeGuildNameRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_ChangeGuildNameRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.ChangeGuildNameRequest.class, Builder.class);
            }

            private Builder() {
                this.name_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.name_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.ChangeGuildNameRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.name_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_ChangeGuildNameRequest_descriptor;
            }

            public GuildHandler.ChangeGuildNameRequest getDefaultInstanceForType() {
                return GuildHandler.ChangeGuildNameRequest.getDefaultInstance();
            }

            public GuildHandler.ChangeGuildNameRequest build() {
                GuildHandler.ChangeGuildNameRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.ChangeGuildNameRequest buildPartial() {
                GuildHandler.ChangeGuildNameRequest result = new GuildHandler.ChangeGuildNameRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.name_ = this.name_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.ChangeGuildNameRequest)
                    return mergeFrom((GuildHandler.ChangeGuildNameRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.ChangeGuildNameRequest other) {
                if (other == GuildHandler.ChangeGuildNameRequest.getDefaultInstance()) return this;
                if (other.hasName()) {
                    this.bitField0_ |= 0x1;
                    this.name_ = other.name_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.ChangeGuildNameRequest parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.ChangeGuildNameRequest) GuildHandler.ChangeGuildNameRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.ChangeGuildNameRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasName() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getName() {
                Object ref = this.name_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.name_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getNameBytes() {
                Object ref = this.name_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.name_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setName(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.name_ = value;
                onChanged();
                return this;
            }

            public Builder clearName() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.name_ = GuildHandler.ChangeGuildNameRequest.getDefaultInstance().getName();
                onChanged();
                return this;
            }

            public Builder setNameBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.name_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class OfficeName
            extends GeneratedMessage
            implements OfficeNameOrBuilder {
        private static final OfficeName defaultInstance = new OfficeName(true);
        private final UnknownFieldSet unknownFields;

        private OfficeName(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private OfficeName(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static OfficeName getDefaultInstance() {
            return defaultInstance;
        }

        public OfficeName getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private OfficeName(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.job_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.name_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_OfficeName_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_OfficeName_fieldAccessorTable.ensureFieldAccessorsInitialized(OfficeName.class, Builder.class);
        }

        public static Parser<OfficeName> PARSER = (Parser<OfficeName>) new AbstractParser<OfficeName>() {
            public GuildHandler.OfficeName parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.OfficeName(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int JOB_FIELD_NUMBER = 1;
        private int job_;
        public static final int NAME_FIELD_NUMBER = 2;
        private Object name_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<OfficeName> getParserForType() {
            return PARSER;
        }

        public boolean hasJob() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getJob() {
            return this.job_;
        }

        public boolean hasName() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getName() {
            Object ref = this.name_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.name_ = s;
            return s;
        }

        public ByteString getNameBytes() {
            Object ref = this.name_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.name_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.job_ = 0;
            this.name_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.job_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getNameBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.job_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getNameBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static OfficeName parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (OfficeName) PARSER.parseFrom(data);
        }

        public static OfficeName parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (OfficeName) PARSER.parseFrom(data, extensionRegistry);
        }

        public static OfficeName parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (OfficeName) PARSER.parseFrom(data);
        }

        public static OfficeName parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (OfficeName) PARSER.parseFrom(data, extensionRegistry);
        }

        public static OfficeName parseFrom(InputStream input) throws IOException {
            return (OfficeName) PARSER.parseFrom(input);
        }

        public static OfficeName parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (OfficeName) PARSER.parseFrom(input, extensionRegistry);
        }

        public static OfficeName parseDelimitedFrom(InputStream input) throws IOException {
            return (OfficeName) PARSER.parseDelimitedFrom(input);
        }

        public static OfficeName parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (OfficeName) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static OfficeName parseFrom(CodedInputStream input) throws IOException {
            return (OfficeName) PARSER.parseFrom(input);
        }

        public static OfficeName parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (OfficeName) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(OfficeName prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.OfficeNameOrBuilder {
            private int bitField0_;
            private int job_;
            private Object name_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_OfficeName_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_OfficeName_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.OfficeName.class, Builder.class);
            }

            private Builder() {
                this.name_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.name_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.OfficeName.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.job_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.name_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_OfficeName_descriptor;
            }

            public GuildHandler.OfficeName getDefaultInstanceForType() {
                return GuildHandler.OfficeName.getDefaultInstance();
            }

            public GuildHandler.OfficeName build() {
                GuildHandler.OfficeName result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.OfficeName buildPartial() {
                GuildHandler.OfficeName result = new GuildHandler.OfficeName(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.job_ = this.job_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.name_ = this.name_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.OfficeName) return mergeFrom((GuildHandler.OfficeName) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.OfficeName other) {
                if (other == GuildHandler.OfficeName.getDefaultInstance()) return this;
                if (other.hasJob()) setJob(other.getJob());
                if (other.hasName()) {
                    this.bitField0_ |= 0x2;
                    this.name_ = other.name_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.OfficeName parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.OfficeName) GuildHandler.OfficeName.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.OfficeName) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasJob() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getJob() {
                return this.job_;
            }

            public Builder setJob(int value) {
                this.bitField0_ |= 0x1;
                this.job_ = value;
                onChanged();
                return this;
            }

            public Builder clearJob() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.job_ = 0;
                onChanged();
                return this;
            }

            public boolean hasName() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getName() {
                Object ref = this.name_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.name_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getNameBytes() {
                Object ref = this.name_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.name_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setName(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.name_ = value;
                onChanged();
                return this;
            }

            public Builder clearName() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.name_ = GuildHandler.OfficeName.getDefaultInstance().getName();
                onChanged();
                return this;
            }

            public Builder setNameBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.name_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class ChangeOfficeNameRequest
            extends GeneratedMessage
            implements ChangeOfficeNameRequestOrBuilder {
        private static final ChangeOfficeNameRequest defaultInstance = new ChangeOfficeNameRequest(true);
        private final UnknownFieldSet unknownFields;

        private ChangeOfficeNameRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private ChangeOfficeNameRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static ChangeOfficeNameRequest getDefaultInstance() {
            return defaultInstance;
        }

        public ChangeOfficeNameRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ChangeOfficeNameRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            if ((mutable_bitField0_ & 0x1) != 1) {
                                this.officeNames_ = new ArrayList<>();
                                mutable_bitField0_ |= 0x1;
                            }
                            this.officeNames_.add(input.readMessage(GuildHandler.OfficeName.PARSER, extensionRegistry));
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                if ((mutable_bitField0_ & 0x1) == 1)
                    this.officeNames_ = Collections.unmodifiableList(this.officeNames_);
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_ChangeOfficeNameRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_ChangeOfficeNameRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(ChangeOfficeNameRequest.class, Builder.class);
        }

        public static Parser<ChangeOfficeNameRequest> PARSER = (Parser<ChangeOfficeNameRequest>) new AbstractParser<ChangeOfficeNameRequest>() {
            public GuildHandler.ChangeOfficeNameRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.ChangeOfficeNameRequest(input, extensionRegistry);
            }
        };
        public static final int OFFICENAMES_FIELD_NUMBER = 1;
        private List<GuildHandler.OfficeName> officeNames_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<ChangeOfficeNameRequest> getParserForType() {
            return PARSER;
        }

        public List<GuildHandler.OfficeName> getOfficeNamesList() {
            return this.officeNames_;
        }

        public List<? extends GuildHandler.OfficeNameOrBuilder> getOfficeNamesOrBuilderList() {
            return (List) this.officeNames_;
        }

        public int getOfficeNamesCount() {
            return this.officeNames_.size();
        }

        public GuildHandler.OfficeName getOfficeNames(int index) {
            return this.officeNames_.get(index);
        }

        public GuildHandler.OfficeNameOrBuilder getOfficeNamesOrBuilder(int index) {
            return this.officeNames_.get(index);
        }

        private void initFields() {
            this.officeNames_ = Collections.emptyList();
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            for (int i = 0; i < this.officeNames_.size(); i++)
                output.writeMessage(1, (MessageLite) this.officeNames_.get(i));
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            for (int i = 0; i < this.officeNames_.size(); i++)
                size += CodedOutputStream.computeMessageSize(1, (MessageLite) this.officeNames_.get(i));
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static ChangeOfficeNameRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (ChangeOfficeNameRequest) PARSER.parseFrom(data);
        }

        public static ChangeOfficeNameRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ChangeOfficeNameRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ChangeOfficeNameRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (ChangeOfficeNameRequest) PARSER.parseFrom(data);
        }

        public static ChangeOfficeNameRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ChangeOfficeNameRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ChangeOfficeNameRequest parseFrom(InputStream input) throws IOException {
            return (ChangeOfficeNameRequest) PARSER.parseFrom(input);
        }

        public static ChangeOfficeNameRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangeOfficeNameRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static ChangeOfficeNameRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (ChangeOfficeNameRequest) PARSER.parseDelimitedFrom(input);
        }

        public static ChangeOfficeNameRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangeOfficeNameRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static ChangeOfficeNameRequest parseFrom(CodedInputStream input) throws IOException {
            return (ChangeOfficeNameRequest) PARSER.parseFrom(input);
        }

        public static ChangeOfficeNameRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangeOfficeNameRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ChangeOfficeNameRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.ChangeOfficeNameRequestOrBuilder {
            private int bitField0_;
            private List<GuildHandler.OfficeName> officeNames_;
            private RepeatedFieldBuilder<GuildHandler.OfficeName, GuildHandler.OfficeName.Builder, GuildHandler.OfficeNameOrBuilder> officeNamesBuilder_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_ChangeOfficeNameRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_ChangeOfficeNameRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.ChangeOfficeNameRequest.class, Builder.class);
            }

            private Builder() {
                this.officeNames_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.officeNames_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.ChangeOfficeNameRequest.alwaysUseFieldBuilders) getOfficeNamesFieldBuilder();
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                if (this.officeNamesBuilder_ == null) {
                    this.officeNames_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFE;
                } else {
                    this.officeNamesBuilder_.clear();
                }
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_ChangeOfficeNameRequest_descriptor;
            }

            public GuildHandler.ChangeOfficeNameRequest getDefaultInstanceForType() {
                return GuildHandler.ChangeOfficeNameRequest.getDefaultInstance();
            }

            public GuildHandler.ChangeOfficeNameRequest build() {
                GuildHandler.ChangeOfficeNameRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.ChangeOfficeNameRequest buildPartial() {
                GuildHandler.ChangeOfficeNameRequest result = new GuildHandler.ChangeOfficeNameRequest(this);
                int from_bitField0_ = this.bitField0_;
                if (this.officeNamesBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) == 1) {
                        this.officeNames_ = Collections.unmodifiableList(this.officeNames_);
                        this.bitField0_ &= 0xFFFFFFFE;
                    }
                    result.officeNames_ = this.officeNames_;
                } else {
                    result.officeNames_ = this.officeNamesBuilder_.build();
                }
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.ChangeOfficeNameRequest)
                    return mergeFrom((GuildHandler.ChangeOfficeNameRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.ChangeOfficeNameRequest other) {
                if (other == GuildHandler.ChangeOfficeNameRequest.getDefaultInstance()) return this;
                if (this.officeNamesBuilder_ == null) {
                    if (!other.officeNames_.isEmpty()) {
                        if (this.officeNames_.isEmpty()) {
                            this.officeNames_ = other.officeNames_;
                            this.bitField0_ &= 0xFFFFFFFE;
                        } else {
                            ensureOfficeNamesIsMutable();
                            this.officeNames_.addAll(other.officeNames_);
                        }
                        onChanged();
                    }
                } else if (!other.officeNames_.isEmpty()) {
                    if (this.officeNamesBuilder_.isEmpty()) {
                        this.officeNamesBuilder_.dispose();
                        this.officeNamesBuilder_ = null;
                        this.officeNames_ = other.officeNames_;
                        this.bitField0_ &= 0xFFFFFFFE;
                        this.officeNamesBuilder_ = GuildHandler.ChangeOfficeNameRequest.alwaysUseFieldBuilders ? getOfficeNamesFieldBuilder() : null;
                    } else {
                        this.officeNamesBuilder_.addAllMessages(other.officeNames_);
                    }
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.ChangeOfficeNameRequest parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.ChangeOfficeNameRequest) GuildHandler.ChangeOfficeNameRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.ChangeOfficeNameRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            private void ensureOfficeNamesIsMutable() {
                if ((this.bitField0_ & 0x1) != 1) {
                    this.officeNames_ = new ArrayList<>(this.officeNames_);
                    this.bitField0_ |= 0x1;
                }
            }

            public List<GuildHandler.OfficeName> getOfficeNamesList() {
                if (this.officeNamesBuilder_ == null) return Collections.unmodifiableList(this.officeNames_);
                return this.officeNamesBuilder_.getMessageList();
            }

            public int getOfficeNamesCount() {
                if (this.officeNamesBuilder_ == null) return this.officeNames_.size();
                return this.officeNamesBuilder_.getCount();
            }

            public GuildHandler.OfficeName getOfficeNames(int index) {
                if (this.officeNamesBuilder_ == null) return this.officeNames_.get(index);
                return (GuildHandler.OfficeName) this.officeNamesBuilder_.getMessage(index);
            }

            public Builder setOfficeNames(int index, GuildHandler.OfficeName value) {
                if (this.officeNamesBuilder_ == null) {
                    if (value == null) throw new NullPointerException();
                    ensureOfficeNamesIsMutable();
                    this.officeNames_.set(index, value);
                    onChanged();
                } else {
                    this.officeNamesBuilder_.setMessage(index, value);
                }
                return this;
            }

            public Builder setOfficeNames(int index, GuildHandler.OfficeName.Builder builderForValue) {
                if (this.officeNamesBuilder_ == null) {
                    ensureOfficeNamesIsMutable();
                    this.officeNames_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    this.officeNamesBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            public Builder addOfficeNames(GuildHandler.OfficeName value) {
                if (this.officeNamesBuilder_ == null) {
                    if (value == null) throw new NullPointerException();
                    ensureOfficeNamesIsMutable();
                    this.officeNames_.add(value);
                    onChanged();
                } else {
                    this.officeNamesBuilder_.addMessage(value);
                }
                return this;
            }

            public Builder addOfficeNames(int index, GuildHandler.OfficeName value) {
                if (this.officeNamesBuilder_ == null) {
                    if (value == null) throw new NullPointerException();
                    ensureOfficeNamesIsMutable();
                    this.officeNames_.add(index, value);
                    onChanged();
                } else {
                    this.officeNamesBuilder_.addMessage(index, value);
                }
                return this;
            }

            public Builder addOfficeNames(GuildHandler.OfficeName.Builder builderForValue) {
                if (this.officeNamesBuilder_ == null) {
                    ensureOfficeNamesIsMutable();
                    this.officeNames_.add(builderForValue.build());
                    onChanged();
                } else {
                    this.officeNamesBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            public Builder addOfficeNames(int index, GuildHandler.OfficeName.Builder builderForValue) {
                if (this.officeNamesBuilder_ == null) {
                    ensureOfficeNamesIsMutable();
                    this.officeNames_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    this.officeNamesBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            public Builder addAllOfficeNames(Iterable<? extends GuildHandler.OfficeName> values) {
                if (this.officeNamesBuilder_ == null) {
                    ensureOfficeNamesIsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.officeNames_);
                    onChanged();
                } else {
                    this.officeNamesBuilder_.addAllMessages(values);
                }
                return this;
            }

            public Builder clearOfficeNames() {
                if (this.officeNamesBuilder_ == null) {
                    this.officeNames_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFE;
                    onChanged();
                } else {
                    this.officeNamesBuilder_.clear();
                }
                return this;
            }

            public Builder removeOfficeNames(int index) {
                if (this.officeNamesBuilder_ == null) {
                    ensureOfficeNamesIsMutable();
                    this.officeNames_.remove(index);
                    onChanged();
                } else {
                    this.officeNamesBuilder_.remove(index);
                }
                return this;
            }

            public GuildHandler.OfficeName.Builder getOfficeNamesBuilder(int index) {
                return (GuildHandler.OfficeName.Builder) getOfficeNamesFieldBuilder().getBuilder(index);
            }

            public GuildHandler.OfficeNameOrBuilder getOfficeNamesOrBuilder(int index) {
                if (this.officeNamesBuilder_ == null) return this.officeNames_.get(index);
                return (GuildHandler.OfficeNameOrBuilder) this.officeNamesBuilder_.getMessageOrBuilder(index);
            }

            public List<? extends GuildHandler.OfficeNameOrBuilder> getOfficeNamesOrBuilderList() {
                if (this.officeNamesBuilder_ != null) return this.officeNamesBuilder_.getMessageOrBuilderList();
                return Collections.unmodifiableList((List) this.officeNames_);
            }

            public GuildHandler.OfficeName.Builder addOfficeNamesBuilder() {
                return (GuildHandler.OfficeName.Builder) getOfficeNamesFieldBuilder().addBuilder(GuildHandler.OfficeName.getDefaultInstance());
            }

            public GuildHandler.OfficeName.Builder addOfficeNamesBuilder(int index) {
                return (GuildHandler.OfficeName.Builder) getOfficeNamesFieldBuilder().addBuilder(index, GuildHandler.OfficeName.getDefaultInstance());
            }

            public List<GuildHandler.OfficeName.Builder> getOfficeNamesBuilderList() {
                return getOfficeNamesFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilder<GuildHandler.OfficeName, GuildHandler.OfficeName.Builder, GuildHandler.OfficeNameOrBuilder> getOfficeNamesFieldBuilder() {
                if (this.officeNamesBuilder_ == null) {
                    this.officeNamesBuilder_ = new RepeatedFieldBuilder(this.officeNames_, ((this.bitField0_ & 0x1) == 1), getParentForChildren(), isClean());
                    this.officeNames_ = null;
                }
                return this.officeNamesBuilder_;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class ContributeToGuildRequest
            extends GeneratedMessage
            implements ContributeToGuildRequestOrBuilder {
        private static final ContributeToGuildRequest defaultInstance = new ContributeToGuildRequest(true);
        private final UnknownFieldSet unknownFields;

        private ContributeToGuildRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private ContributeToGuildRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static ContributeToGuildRequest getDefaultInstance() {
            return defaultInstance;
        }

        public ContributeToGuildRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ContributeToGuildRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.type_ = input.readInt32();
                            break;
                        case 16:
                            this.bitField0_ |= 0x2;
                            this.times_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_ContributeToGuildRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_ContributeToGuildRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(ContributeToGuildRequest.class, Builder.class);
        }

        public static Parser<ContributeToGuildRequest> PARSER = (Parser<ContributeToGuildRequest>) new AbstractParser<ContributeToGuildRequest>() {
            public GuildHandler.ContributeToGuildRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.ContributeToGuildRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int TYPE_FIELD_NUMBER = 1;
        private int type_;
        public static final int TIMES_FIELD_NUMBER = 2;
        private int times_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<ContributeToGuildRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasType() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getType() {
            return this.type_;
        }

        public boolean hasTimes() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public int getTimes() {
            return this.times_;
        }

        private void initFields() {
            this.type_ = 0;
            this.times_ = 0;
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.type_);
            if ((this.bitField0_ & 0x2) == 2) output.writeInt32(2, this.times_);
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.type_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeInt32Size(2, this.times_);
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static ContributeToGuildRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (ContributeToGuildRequest) PARSER.parseFrom(data);
        }

        public static ContributeToGuildRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ContributeToGuildRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ContributeToGuildRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (ContributeToGuildRequest) PARSER.parseFrom(data);
        }

        public static ContributeToGuildRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ContributeToGuildRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ContributeToGuildRequest parseFrom(InputStream input) throws IOException {
            return (ContributeToGuildRequest) PARSER.parseFrom(input);
        }

        public static ContributeToGuildRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ContributeToGuildRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static ContributeToGuildRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (ContributeToGuildRequest) PARSER.parseDelimitedFrom(input);
        }

        public static ContributeToGuildRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ContributeToGuildRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static ContributeToGuildRequest parseFrom(CodedInputStream input) throws IOException {
            return (ContributeToGuildRequest) PARSER.parseFrom(input);
        }

        public static ContributeToGuildRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ContributeToGuildRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ContributeToGuildRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.ContributeToGuildRequestOrBuilder {
            private int bitField0_;
            private int type_;
            private int times_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_ContributeToGuildRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_ContributeToGuildRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.ContributeToGuildRequest.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.ContributeToGuildRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.type_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.times_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_ContributeToGuildRequest_descriptor;
            }

            public GuildHandler.ContributeToGuildRequest getDefaultInstanceForType() {
                return GuildHandler.ContributeToGuildRequest.getDefaultInstance();
            }

            public GuildHandler.ContributeToGuildRequest build() {
                GuildHandler.ContributeToGuildRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.ContributeToGuildRequest buildPartial() {
                GuildHandler.ContributeToGuildRequest result = new GuildHandler.ContributeToGuildRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.type_ = this.type_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.times_ = this.times_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.ContributeToGuildRequest)
                    return mergeFrom((GuildHandler.ContributeToGuildRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.ContributeToGuildRequest other) {
                if (other == GuildHandler.ContributeToGuildRequest.getDefaultInstance()) return this;
                if (other.hasType()) setType(other.getType());
                if (other.hasTimes()) setTimes(other.getTimes());
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.ContributeToGuildRequest parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.ContributeToGuildRequest) GuildHandler.ContributeToGuildRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.ContributeToGuildRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasType() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getType() {
                return this.type_;
            }

            public Builder setType(int value) {
                this.bitField0_ |= 0x1;
                this.type_ = value;
                onChanged();
                return this;
            }

            public Builder clearType() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.type_ = 0;
                onChanged();
                return this;
            }

            public boolean hasTimes() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public int getTimes() {
                return this.times_;
            }

            public Builder setTimes(int value) {
                this.bitField0_ |= 0x2;
                this.times_ = value;
                onChanged();
                return this;
            }

            public Builder clearTimes() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.times_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class SetMemberJobRequest
            extends GeneratedMessage
            implements SetMemberJobRequestOrBuilder {
        private static final SetMemberJobRequest defaultInstance = new SetMemberJobRequest(true);
        private final UnknownFieldSet unknownFields;

        private SetMemberJobRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private SetMemberJobRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static SetMemberJobRequest getDefaultInstance() {
            return defaultInstance;
        }

        public SetMemberJobRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private SetMemberJobRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.memberId_ = bs;
                            break;
                        case 16:
                            this.bitField0_ |= 0x2;
                            this.job_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_SetMemberJobRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_SetMemberJobRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(SetMemberJobRequest.class, Builder.class);
        }

        public static Parser<SetMemberJobRequest> PARSER = (Parser<SetMemberJobRequest>) new AbstractParser<SetMemberJobRequest>() {
            public GuildHandler.SetMemberJobRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.SetMemberJobRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int MEMBERID_FIELD_NUMBER = 1;
        private Object memberId_;
        public static final int JOB_FIELD_NUMBER = 2;
        private int job_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<SetMemberJobRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasMemberId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getMemberId() {
            Object ref = this.memberId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.memberId_ = s;
            return s;
        }

        public ByteString getMemberIdBytes() {
            Object ref = this.memberId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.memberId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasJob() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public int getJob() {
            return this.job_;
        }

        private void initFields() {
            this.memberId_ = "";
            this.job_ = 0;
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeBytes(1, getMemberIdBytes());
            if ((this.bitField0_ & 0x2) == 2) output.writeInt32(2, this.job_);
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeBytesSize(1, getMemberIdBytes());
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeInt32Size(2, this.job_);
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static SetMemberJobRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (SetMemberJobRequest) PARSER.parseFrom(data);
        }

        public static SetMemberJobRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (SetMemberJobRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static SetMemberJobRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (SetMemberJobRequest) PARSER.parseFrom(data);
        }

        public static SetMemberJobRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (SetMemberJobRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static SetMemberJobRequest parseFrom(InputStream input) throws IOException {
            return (SetMemberJobRequest) PARSER.parseFrom(input);
        }

        public static SetMemberJobRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (SetMemberJobRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static SetMemberJobRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (SetMemberJobRequest) PARSER.parseDelimitedFrom(input);
        }

        public static SetMemberJobRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (SetMemberJobRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static SetMemberJobRequest parseFrom(CodedInputStream input) throws IOException {
            return (SetMemberJobRequest) PARSER.parseFrom(input);
        }

        public static SetMemberJobRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (SetMemberJobRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(SetMemberJobRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.SetMemberJobRequestOrBuilder {
            private int bitField0_;
            private Object memberId_;
            private int job_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_SetMemberJobRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_SetMemberJobRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.SetMemberJobRequest.class, Builder.class);
            }

            private Builder() {
                this.memberId_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.memberId_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.SetMemberJobRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.memberId_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.job_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_SetMemberJobRequest_descriptor;
            }

            public GuildHandler.SetMemberJobRequest getDefaultInstanceForType() {
                return GuildHandler.SetMemberJobRequest.getDefaultInstance();
            }

            public GuildHandler.SetMemberJobRequest build() {
                GuildHandler.SetMemberJobRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.SetMemberJobRequest buildPartial() {
                GuildHandler.SetMemberJobRequest result = new GuildHandler.SetMemberJobRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.memberId_ = this.memberId_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.job_ = this.job_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.SetMemberJobRequest)
                    return mergeFrom((GuildHandler.SetMemberJobRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.SetMemberJobRequest other) {
                if (other == GuildHandler.SetMemberJobRequest.getDefaultInstance()) return this;
                if (other.hasMemberId()) {
                    this.bitField0_ |= 0x1;
                    this.memberId_ = other.memberId_;
                    onChanged();
                }
                if (other.hasJob()) setJob(other.getJob());
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.SetMemberJobRequest parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.SetMemberJobRequest) GuildHandler.SetMemberJobRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.SetMemberJobRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasMemberId() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getMemberId() {
                Object ref = this.memberId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.memberId_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getMemberIdBytes() {
                Object ref = this.memberId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.memberId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setMemberId(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.memberId_ = value;
                onChanged();
                return this;
            }

            public Builder clearMemberId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.memberId_ = GuildHandler.SetMemberJobRequest.getDefaultInstance().getMemberId();
                onChanged();
                return this;
            }

            public Builder setMemberIdBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.memberId_ = value;
                onChanged();
                return this;
            }

            public boolean hasJob() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public int getJob() {
                return this.job_;
            }

            public Builder setJob(int value) {
                this.bitField0_ |= 0x2;
                this.job_ = value;
                onChanged();
                return this;
            }

            public Builder clearJob() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.job_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class TransferPresidentRequest
            extends GeneratedMessage
            implements TransferPresidentRequestOrBuilder {
        private static final TransferPresidentRequest defaultInstance = new TransferPresidentRequest(true);
        private final UnknownFieldSet unknownFields;

        private TransferPresidentRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private TransferPresidentRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static TransferPresidentRequest getDefaultInstance() {
            return defaultInstance;
        }

        public TransferPresidentRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private TransferPresidentRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.memberId_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_TransferPresidentRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_TransferPresidentRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(TransferPresidentRequest.class, Builder.class);
        }

        public static Parser<TransferPresidentRequest> PARSER = (Parser<TransferPresidentRequest>) new AbstractParser<TransferPresidentRequest>() {
            public GuildHandler.TransferPresidentRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.TransferPresidentRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int MEMBERID_FIELD_NUMBER = 1;
        private Object memberId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<TransferPresidentRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasMemberId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getMemberId() {
            Object ref = this.memberId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.memberId_ = s;
            return s;
        }

        public ByteString getMemberIdBytes() {
            Object ref = this.memberId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.memberId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.memberId_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeBytes(1, getMemberIdBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeBytesSize(1, getMemberIdBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static TransferPresidentRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (TransferPresidentRequest) PARSER.parseFrom(data);
        }

        public static TransferPresidentRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (TransferPresidentRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static TransferPresidentRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (TransferPresidentRequest) PARSER.parseFrom(data);
        }

        public static TransferPresidentRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (TransferPresidentRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static TransferPresidentRequest parseFrom(InputStream input) throws IOException {
            return (TransferPresidentRequest) PARSER.parseFrom(input);
        }

        public static TransferPresidentRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (TransferPresidentRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static TransferPresidentRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (TransferPresidentRequest) PARSER.parseDelimitedFrom(input);
        }

        public static TransferPresidentRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (TransferPresidentRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static TransferPresidentRequest parseFrom(CodedInputStream input) throws IOException {
            return (TransferPresidentRequest) PARSER.parseFrom(input);
        }

        public static TransferPresidentRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (TransferPresidentRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(TransferPresidentRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.TransferPresidentRequestOrBuilder {
            private int bitField0_;
            private Object memberId_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_TransferPresidentRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_TransferPresidentRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.TransferPresidentRequest.class, Builder.class);
            }

            private Builder() {
                this.memberId_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.memberId_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.TransferPresidentRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.memberId_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_TransferPresidentRequest_descriptor;
            }

            public GuildHandler.TransferPresidentRequest getDefaultInstanceForType() {
                return GuildHandler.TransferPresidentRequest.getDefaultInstance();
            }

            public GuildHandler.TransferPresidentRequest build() {
                GuildHandler.TransferPresidentRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.TransferPresidentRequest buildPartial() {
                GuildHandler.TransferPresidentRequest result = new GuildHandler.TransferPresidentRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.memberId_ = this.memberId_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.TransferPresidentRequest)
                    return mergeFrom((GuildHandler.TransferPresidentRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.TransferPresidentRequest other) {
                if (other == GuildHandler.TransferPresidentRequest.getDefaultInstance()) return this;
                if (other.hasMemberId()) {
                    this.bitField0_ |= 0x1;
                    this.memberId_ = other.memberId_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.TransferPresidentRequest parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.TransferPresidentRequest) GuildHandler.TransferPresidentRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.TransferPresidentRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasMemberId() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getMemberId() {
                Object ref = this.memberId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.memberId_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getMemberIdBytes() {
                Object ref = this.memberId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.memberId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setMemberId(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.memberId_ = value;
                onChanged();
                return this;
            }

            public Builder clearMemberId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.memberId_ = GuildHandler.TransferPresidentRequest.getDefaultInstance().getMemberId();
                onChanged();
                return this;
            }

            public Builder setMemberIdBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.memberId_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class GetGuildRecordRequest
            extends GeneratedMessage
            implements GetGuildRecordRequestOrBuilder {
        private static final GetGuildRecordRequest defaultInstance = new GetGuildRecordRequest(true);
        private final UnknownFieldSet unknownFields;

        private GetGuildRecordRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private GetGuildRecordRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static GetGuildRecordRequest getDefaultInstance() {
            return defaultInstance;
        }

        public GetGuildRecordRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private GetGuildRecordRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.page_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_GetGuildRecordRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_GetGuildRecordRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GetGuildRecordRequest.class, Builder.class);
        }

        public static Parser<GetGuildRecordRequest> PARSER = (Parser<GetGuildRecordRequest>) new AbstractParser<GetGuildRecordRequest>() {
            public GuildHandler.GetGuildRecordRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.GetGuildRecordRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int PAGE_FIELD_NUMBER = 1;
        private int page_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<GetGuildRecordRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasPage() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getPage() {
            return this.page_;
        }

        private void initFields() {
            this.page_ = 0;
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.page_);
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.page_);
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static GetGuildRecordRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (GetGuildRecordRequest) PARSER.parseFrom(data);
        }

        public static GetGuildRecordRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetGuildRecordRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GetGuildRecordRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (GetGuildRecordRequest) PARSER.parseFrom(data);
        }

        public static GetGuildRecordRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetGuildRecordRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GetGuildRecordRequest parseFrom(InputStream input) throws IOException {
            return (GetGuildRecordRequest) PARSER.parseFrom(input);
        }

        public static GetGuildRecordRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetGuildRecordRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static GetGuildRecordRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (GetGuildRecordRequest) PARSER.parseDelimitedFrom(input);
        }

        public static GetGuildRecordRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetGuildRecordRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static GetGuildRecordRequest parseFrom(CodedInputStream input) throws IOException {
            return (GetGuildRecordRequest) PARSER.parseFrom(input);
        }

        public static GetGuildRecordRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetGuildRecordRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(GetGuildRecordRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.GetGuildRecordRequestOrBuilder {
            private int bitField0_;
            private int page_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_GetGuildRecordRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_GetGuildRecordRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.GetGuildRecordRequest.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.GetGuildRecordRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.page_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_GetGuildRecordRequest_descriptor;
            }

            public GuildHandler.GetGuildRecordRequest getDefaultInstanceForType() {
                return GuildHandler.GetGuildRecordRequest.getDefaultInstance();
            }

            public GuildHandler.GetGuildRecordRequest build() {
                GuildHandler.GetGuildRecordRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.GetGuildRecordRequest buildPartial() {
                GuildHandler.GetGuildRecordRequest result = new GuildHandler.GetGuildRecordRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.page_ = this.page_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.GetGuildRecordRequest)
                    return mergeFrom((GuildHandler.GetGuildRecordRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.GetGuildRecordRequest other) {
                if (other == GuildHandler.GetGuildRecordRequest.getDefaultInstance()) return this;
                if (other.hasPage()) setPage(other.getPage());
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.GetGuildRecordRequest parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.GetGuildRecordRequest) GuildHandler.GetGuildRecordRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.GetGuildRecordRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasPage() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getPage() {
                return this.page_;
            }

            public Builder setPage(int value) {
                this.bitField0_ |= 0x1;
                this.page_ = value;
                onChanged();
                return this;
            }

            public Builder clearPage() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.page_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class ImpeachGuildPresidentRequest
            extends GeneratedMessage
            implements ImpeachGuildPresidentRequestOrBuilder {
        private static final ImpeachGuildPresidentRequest defaultInstance = new ImpeachGuildPresidentRequest(true);
        private final UnknownFieldSet unknownFields;

        private ImpeachGuildPresidentRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private ImpeachGuildPresidentRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static ImpeachGuildPresidentRequest getDefaultInstance() {
            return defaultInstance;
        }

        public ImpeachGuildPresidentRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ImpeachGuildPresidentRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            continue;
                    }
                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_ImpeachGuildPresidentRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_ImpeachGuildPresidentRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(ImpeachGuildPresidentRequest.class, Builder.class);
        }

        public static Parser<ImpeachGuildPresidentRequest> PARSER = (Parser<ImpeachGuildPresidentRequest>) new AbstractParser<ImpeachGuildPresidentRequest>() {
            public GuildHandler.ImpeachGuildPresidentRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.ImpeachGuildPresidentRequest(input, extensionRegistry);
            }
        };
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<ImpeachGuildPresidentRequest> getParserForType() {
            return PARSER;
        }

        private void initFields() {
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static ImpeachGuildPresidentRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (ImpeachGuildPresidentRequest) PARSER.parseFrom(data);
        }

        public static ImpeachGuildPresidentRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ImpeachGuildPresidentRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ImpeachGuildPresidentRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (ImpeachGuildPresidentRequest) PARSER.parseFrom(data);
        }

        public static ImpeachGuildPresidentRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ImpeachGuildPresidentRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ImpeachGuildPresidentRequest parseFrom(InputStream input) throws IOException {
            return (ImpeachGuildPresidentRequest) PARSER.parseFrom(input);
        }

        public static ImpeachGuildPresidentRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ImpeachGuildPresidentRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static ImpeachGuildPresidentRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (ImpeachGuildPresidentRequest) PARSER.parseDelimitedFrom(input);
        }

        public static ImpeachGuildPresidentRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ImpeachGuildPresidentRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static ImpeachGuildPresidentRequest parseFrom(CodedInputStream input) throws IOException {
            return (ImpeachGuildPresidentRequest) PARSER.parseFrom(input);
        }

        public static ImpeachGuildPresidentRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ImpeachGuildPresidentRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ImpeachGuildPresidentRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.ImpeachGuildPresidentRequestOrBuilder {
            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_ImpeachGuildPresidentRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_ImpeachGuildPresidentRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.ImpeachGuildPresidentRequest.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.ImpeachGuildPresidentRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_ImpeachGuildPresidentRequest_descriptor;
            }

            public GuildHandler.ImpeachGuildPresidentRequest getDefaultInstanceForType() {
                return GuildHandler.ImpeachGuildPresidentRequest.getDefaultInstance();
            }

            public GuildHandler.ImpeachGuildPresidentRequest build() {
                GuildHandler.ImpeachGuildPresidentRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.ImpeachGuildPresidentRequest buildPartial() {
                GuildHandler.ImpeachGuildPresidentRequest result = new GuildHandler.ImpeachGuildPresidentRequest(this);
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.ImpeachGuildPresidentRequest)
                    return mergeFrom((GuildHandler.ImpeachGuildPresidentRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.ImpeachGuildPresidentRequest other) {
                if (other == GuildHandler.ImpeachGuildPresidentRequest.getDefaultInstance()) return this;
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.ImpeachGuildPresidentRequest parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.ImpeachGuildPresidentRequest) GuildHandler.ImpeachGuildPresidentRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.ImpeachGuildPresidentRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class GetGuildMoneyRequest
            extends GeneratedMessage
            implements GetGuildMoneyRequestOrBuilder {
        private static final GetGuildMoneyRequest defaultInstance = new GetGuildMoneyRequest(true);
        private final UnknownFieldSet unknownFields;

        private GetGuildMoneyRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private GetGuildMoneyRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static GetGuildMoneyRequest getDefaultInstance() {
            return defaultInstance;
        }

        public GetGuildMoneyRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private GetGuildMoneyRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            continue;
                    }
                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_GetGuildMoneyRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_GetGuildMoneyRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GetGuildMoneyRequest.class, Builder.class);
        }

        public static Parser<GetGuildMoneyRequest> PARSER = (Parser<GetGuildMoneyRequest>) new AbstractParser<GetGuildMoneyRequest>() {
            public GuildHandler.GetGuildMoneyRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.GetGuildMoneyRequest(input, extensionRegistry);
            }
        };
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<GetGuildMoneyRequest> getParserForType() {
            return PARSER;
        }

        private void initFields() {
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static GetGuildMoneyRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (GetGuildMoneyRequest) PARSER.parseFrom(data);
        }

        public static GetGuildMoneyRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetGuildMoneyRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GetGuildMoneyRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (GetGuildMoneyRequest) PARSER.parseFrom(data);
        }

        public static GetGuildMoneyRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetGuildMoneyRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GetGuildMoneyRequest parseFrom(InputStream input) throws IOException {
            return (GetGuildMoneyRequest) PARSER.parseFrom(input);
        }

        public static GetGuildMoneyRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetGuildMoneyRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static GetGuildMoneyRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (GetGuildMoneyRequest) PARSER.parseDelimitedFrom(input);
        }

        public static GetGuildMoneyRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetGuildMoneyRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static GetGuildMoneyRequest parseFrom(CodedInputStream input) throws IOException {
            return (GetGuildMoneyRequest) PARSER.parseFrom(input);
        }

        public static GetGuildMoneyRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetGuildMoneyRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(GetGuildMoneyRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.GetGuildMoneyRequestOrBuilder {
            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_GetGuildMoneyRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_GetGuildMoneyRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.GetGuildMoneyRequest.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.GetGuildMoneyRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_GetGuildMoneyRequest_descriptor;
            }

            public GuildHandler.GetGuildMoneyRequest getDefaultInstanceForType() {
                return GuildHandler.GetGuildMoneyRequest.getDefaultInstance();
            }

            public GuildHandler.GetGuildMoneyRequest build() {
                GuildHandler.GetGuildMoneyRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.GetGuildMoneyRequest buildPartial() {
                GuildHandler.GetGuildMoneyRequest result = new GuildHandler.GetGuildMoneyRequest(this);
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.GetGuildMoneyRequest)
                    return mergeFrom((GuildHandler.GetGuildMoneyRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.GetGuildMoneyRequest other) {
                if (other == GuildHandler.GetGuildMoneyRequest.getDefaultInstance()) return this;
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.GetGuildMoneyRequest parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.GetGuildMoneyRequest) GuildHandler.GetGuildMoneyRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.GetGuildMoneyRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class GuildBaseInfo
            extends GeneratedMessage
            implements GuildBaseInfoOrBuilder {
        private static final GuildBaseInfo defaultInstance = new GuildBaseInfo(true);
        private final UnknownFieldSet unknownFields;

        private GuildBaseInfo(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private GuildBaseInfo(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static GuildBaseInfo getDefaultInstance() {
            return defaultInstance;
        }

        public GuildBaseInfo getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private GuildBaseInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.guildId_ = bs;
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.name_ = bs;
                            break;
                        case 24:
                            this.bitField0_ |= 0x4;
                            this.level_ = input.readInt32();
                            break;
                        case 34:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x8;
                            this.presidentId_ = bs;
                            break;
                        case 42:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x10;
                            this.presidentName_ = bs;
                            break;
                        case 48:
                            this.bitField0_ |= 0x20;
                            this.memberNum_ = input.readInt32();
                            break;
                        case 56:
                            this.bitField0_ |= 0x40;
                            this.memberMax_ = input.readInt32();
                            break;
                        case 64:
                            this.bitField0_ |= 0x80;
                            this.entryLevel_ = input.readInt32();
                            break;
                        case 72:
                            this.bitField0_ |= 0x100;
                            this.guildMode_ = input.readInt32();
                            break;
                        case 82:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x200;
                            this.guildIcon_ = bs;
                            break;
                        case 88:
                            this.bitField0_ |= 0x400;
                            this.presidentPro_ = input.readInt32();
                            break;
                        case 96:
                            this.bitField0_ |= 0x800;
                            this.presidentLevel_ = input.readInt32();
                            break;
                        case 104:
                            this.bitField0_ |= 0x1000;
                            this.entryUpLevel_ = input.readInt32();
                            break;
                        case 114:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2000;
                            this.createTime_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_GuildBaseInfo_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_GuildBaseInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildBaseInfo.class, Builder.class);
        }

        public static Parser<GuildBaseInfo> PARSER = (Parser<GuildBaseInfo>) new AbstractParser<GuildBaseInfo>() {
            public GuildHandler.GuildBaseInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.GuildBaseInfo(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int GUILDID_FIELD_NUMBER = 1;
        private Object guildId_;
        public static final int NAME_FIELD_NUMBER = 2;
        private Object name_;
        public static final int LEVEL_FIELD_NUMBER = 3;
        private int level_;
        public static final int PRESIDENTID_FIELD_NUMBER = 4;
        private Object presidentId_;
        public static final int PRESIDENTNAME_FIELD_NUMBER = 5;
        private Object presidentName_;
        public static final int MEMBERNUM_FIELD_NUMBER = 6;
        private int memberNum_;
        public static final int MEMBERMAX_FIELD_NUMBER = 7;
        private int memberMax_;
        public static final int ENTRYLEVEL_FIELD_NUMBER = 8;
        private int entryLevel_;
        public static final int GUILDMODE_FIELD_NUMBER = 9;
        private int guildMode_;
        public static final int GUILDICON_FIELD_NUMBER = 10;
        private Object guildIcon_;
        public static final int PRESIDENTPRO_FIELD_NUMBER = 11;
        private int presidentPro_;
        public static final int PRESIDENTLEVEL_FIELD_NUMBER = 12;
        private int presidentLevel_;
        public static final int ENTRYUPLEVEL_FIELD_NUMBER = 13;
        private int entryUpLevel_;
        public static final int CREATETIME_FIELD_NUMBER = 14;
        private Object createTime_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<GuildBaseInfo> getParserForType() {
            return PARSER;
        }

        public boolean hasGuildId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getGuildId() {
            Object ref = this.guildId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.guildId_ = s;
            return s;
        }

        public ByteString getGuildIdBytes() {
            Object ref = this.guildId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.guildId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasName() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getName() {
            Object ref = this.name_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.name_ = s;
            return s;
        }

        public ByteString getNameBytes() {
            Object ref = this.name_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.name_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        static {
            defaultInstance.initFields();
        }

        public boolean hasLevel() {
            return ((this.bitField0_ & 0x4) == 4);
        }

        public int getLevel() {
            return this.level_;
        }

        public boolean hasPresidentId() {
            return ((this.bitField0_ & 0x8) == 8);
        }

        public String getPresidentId() {
            Object ref = this.presidentId_;
            if (ref instanceof String)
                return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8())
                this.presidentId_ = s;
            return s;
        }

        public ByteString getPresidentIdBytes() {
            Object ref = this.presidentId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.presidentId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasPresidentName() {
            return ((this.bitField0_ & 0x10) == 16);
        }

        public String getPresidentName() {
            Object ref = this.presidentName_;
            if (ref instanceof String)
                return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8())
                this.presidentName_ = s;
            return s;
        }

        public ByteString getPresidentNameBytes() {
            Object ref = this.presidentName_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.presidentName_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasMemberNum() {
            return ((this.bitField0_ & 0x20) == 32);
        }

        public int getMemberNum() {
            return this.memberNum_;
        }

        public boolean hasMemberMax() {
            return ((this.bitField0_ & 0x40) == 64);
        }

        public int getMemberMax() {
            return this.memberMax_;
        }

        public boolean hasEntryLevel() {
            return ((this.bitField0_ & 0x80) == 128);
        }

        public int getEntryLevel() {
            return this.entryLevel_;
        }

        public boolean hasGuildMode() {
            return ((this.bitField0_ & 0x100) == 256);
        }

        public int getGuildMode() {
            return this.guildMode_;
        }

        public boolean hasGuildIcon() {
            return ((this.bitField0_ & 0x200) == 512);
        }

        public String getGuildIcon() {
            Object ref = this.guildIcon_;
            if (ref instanceof String)
                return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8())
                this.guildIcon_ = s;
            return s;
        }

        public ByteString getGuildIconBytes() {
            Object ref = this.guildIcon_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.guildIcon_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasPresidentPro() {
            return ((this.bitField0_ & 0x400) == 1024);
        }

        public int getPresidentPro() {
            return this.presidentPro_;
        }

        public boolean hasPresidentLevel() {
            return ((this.bitField0_ & 0x800) == 2048);
        }

        public int getPresidentLevel() {
            return this.presidentLevel_;
        }

        public boolean hasEntryUpLevel() {
            return ((this.bitField0_ & 0x1000) == 4096);
        }

        public int getEntryUpLevel() {
            return this.entryUpLevel_;
        }

        public boolean hasCreateTime() {
            return ((this.bitField0_ & 0x2000) == 8192);
        }

        public String getCreateTime() {
            Object ref = this.createTime_;
            if (ref instanceof String)
                return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8())
                this.createTime_ = s;
            return s;
        }

        public ByteString getCreateTimeBytes() {
            Object ref = this.createTime_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.createTime_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.guildId_ = "";
            this.name_ = "";
            this.level_ = 0;
            this.presidentId_ = "";
            this.presidentName_ = "";
            this.memberNum_ = 0;
            this.memberMax_ = 0;
            this.entryLevel_ = 0;
            this.guildMode_ = 0;
            this.guildIcon_ = "";
            this.presidentPro_ = 0;
            this.presidentLevel_ = 0;
            this.entryUpLevel_ = 0;
            this.createTime_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1)
                output.writeBytes(1, getGuildIdBytes());
            if ((this.bitField0_ & 0x2) == 2)
                output.writeBytes(2, getNameBytes());
            if ((this.bitField0_ & 0x4) == 4)
                output.writeInt32(3, this.level_);
            if ((this.bitField0_ & 0x8) == 8)
                output.writeBytes(4, getPresidentIdBytes());
            if ((this.bitField0_ & 0x10) == 16)
                output.writeBytes(5, getPresidentNameBytes());
            if ((this.bitField0_ & 0x20) == 32)
                output.writeInt32(6, this.memberNum_);
            if ((this.bitField0_ & 0x40) == 64)
                output.writeInt32(7, this.memberMax_);
            if ((this.bitField0_ & 0x80) == 128)
                output.writeInt32(8, this.entryLevel_);
            if ((this.bitField0_ & 0x100) == 256)
                output.writeInt32(9, this.guildMode_);
            if ((this.bitField0_ & 0x200) == 512)
                output.writeBytes(10, getGuildIconBytes());
            if ((this.bitField0_ & 0x400) == 1024)
                output.writeInt32(11, this.presidentPro_);
            if ((this.bitField0_ & 0x800) == 2048)
                output.writeInt32(12, this.presidentLevel_);
            if ((this.bitField0_ & 0x1000) == 4096)
                output.writeInt32(13, this.entryUpLevel_);
            if ((this.bitField0_ & 0x2000) == 8192)
                output.writeBytes(14, getCreateTimeBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1)
                return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1)
                size += CodedOutputStream.computeBytesSize(1, getGuildIdBytes());
            if ((this.bitField0_ & 0x2) == 2)
                size += CodedOutputStream.computeBytesSize(2, getNameBytes());
            if ((this.bitField0_ & 0x4) == 4)
                size += CodedOutputStream.computeInt32Size(3, this.level_);
            if ((this.bitField0_ & 0x8) == 8)
                size += CodedOutputStream.computeBytesSize(4, getPresidentIdBytes());
            if ((this.bitField0_ & 0x10) == 16)
                size += CodedOutputStream.computeBytesSize(5, getPresidentNameBytes());
            if ((this.bitField0_ & 0x20) == 32)
                size += CodedOutputStream.computeInt32Size(6, this.memberNum_);
            if ((this.bitField0_ & 0x40) == 64)
                size += CodedOutputStream.computeInt32Size(7, this.memberMax_);
            if ((this.bitField0_ & 0x80) == 128)
                size += CodedOutputStream.computeInt32Size(8, this.entryLevel_);
            if ((this.bitField0_ & 0x100) == 256)
                size += CodedOutputStream.computeInt32Size(9, this.guildMode_);
            if ((this.bitField0_ & 0x200) == 512)
                size += CodedOutputStream.computeBytesSize(10, getGuildIconBytes());
            if ((this.bitField0_ & 0x400) == 1024)
                size += CodedOutputStream.computeInt32Size(11, this.presidentPro_);
            if ((this.bitField0_ & 0x800) == 2048)
                size += CodedOutputStream.computeInt32Size(12, this.presidentLevel_);
            if ((this.bitField0_ & 0x1000) == 4096)
                size += CodedOutputStream.computeInt32Size(13, this.entryUpLevel_);
            if ((this.bitField0_ & 0x2000) == 8192)
                size += CodedOutputStream.computeBytesSize(14, getCreateTimeBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static GuildBaseInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (GuildBaseInfo) PARSER.parseFrom(data);
        }

        public static GuildBaseInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GuildBaseInfo) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GuildBaseInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (GuildBaseInfo) PARSER.parseFrom(data);
        }

        public static GuildBaseInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GuildBaseInfo) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GuildBaseInfo parseFrom(InputStream input) throws IOException {
            return (GuildBaseInfo) PARSER.parseFrom(input);
        }

        public static GuildBaseInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GuildBaseInfo) PARSER.parseFrom(input, extensionRegistry);
        }

        public static GuildBaseInfo parseDelimitedFrom(InputStream input) throws IOException {
            return (GuildBaseInfo) PARSER.parseDelimitedFrom(input);
        }

        public static GuildBaseInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GuildBaseInfo) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static GuildBaseInfo parseFrom(CodedInputStream input) throws IOException {
            return (GuildBaseInfo) PARSER.parseFrom(input);
        }

        public static GuildBaseInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GuildBaseInfo) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(GuildBaseInfo prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.GuildBaseInfoOrBuilder {
            private int bitField0_;
            private Object guildId_;
            private Object name_;
            private int level_;
            private Object presidentId_;
            private Object presidentName_;
            private int memberNum_;
            private int memberMax_;
            private int entryLevel_;
            private int guildMode_;
            private Object guildIcon_;
            private int presidentPro_;
            private int presidentLevel_;
            private int entryUpLevel_;
            private Object createTime_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_GuildBaseInfo_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_GuildBaseInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.GuildBaseInfo.class, Builder.class);
            }

            private Builder() {
                this.guildId_ = "";
                this.name_ = "";
                this.presidentId_ = "";
                this.presidentName_ = "";
                this.guildIcon_ = "";
                this.createTime_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.guildId_ = "";
                this.name_ = "";
                this.presidentId_ = "";
                this.presidentName_ = "";
                this.guildIcon_ = "";
                this.createTime_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.GuildBaseInfo.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.guildId_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.name_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.level_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.presidentId_ = "";
                this.bitField0_ &= 0xFFFFFFF7;
                this.presidentName_ = "";
                this.bitField0_ &= 0xFFFFFFEF;
                this.memberNum_ = 0;
                this.bitField0_ &= 0xFFFFFFDF;
                this.memberMax_ = 0;
                this.bitField0_ &= 0xFFFFFFBF;
                this.entryLevel_ = 0;
                this.bitField0_ &= 0xFFFFFF7F;
                this.guildMode_ = 0;
                this.bitField0_ &= 0xFFFFFEFF;
                this.guildIcon_ = "";
                this.bitField0_ &= 0xFFFFFDFF;
                this.presidentPro_ = 0;
                this.bitField0_ &= 0xFFFFFBFF;
                this.presidentLevel_ = 0;
                this.bitField0_ &= 0xFFFFF7FF;
                this.entryUpLevel_ = 0;
                this.bitField0_ &= 0xFFFFEFFF;
                this.createTime_ = "";
                this.bitField0_ &= 0xFFFFDFFF;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_GuildBaseInfo_descriptor;
            }

            public GuildHandler.GuildBaseInfo getDefaultInstanceForType() {
                return GuildHandler.GuildBaseInfo.getDefaultInstance();
            }

            public GuildHandler.GuildBaseInfo build() {
                GuildHandler.GuildBaseInfo result = buildPartial();
                if (!result.isInitialized())
                    throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.GuildBaseInfo buildPartial() {
                GuildHandler.GuildBaseInfo result = new GuildHandler.GuildBaseInfo(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1)
                    to_bitField0_ |= 0x1;
                result.guildId_ = this.guildId_;
                if ((from_bitField0_ & 0x2) == 2)
                    to_bitField0_ |= 0x2;
                result.name_ = this.name_;
                if ((from_bitField0_ & 0x4) == 4)
                    to_bitField0_ |= 0x4;
                result.level_ = this.level_;
                if ((from_bitField0_ & 0x8) == 8)
                    to_bitField0_ |= 0x8;
                result.presidentId_ = this.presidentId_;
                if ((from_bitField0_ & 0x10) == 16)
                    to_bitField0_ |= 0x10;
                result.presidentName_ = this.presidentName_;
                if ((from_bitField0_ & 0x20) == 32)
                    to_bitField0_ |= 0x20;
                result.memberNum_ = this.memberNum_;
                if ((from_bitField0_ & 0x40) == 64)
                    to_bitField0_ |= 0x40;
                result.memberMax_ = this.memberMax_;
                if ((from_bitField0_ & 0x80) == 128)
                    to_bitField0_ |= 0x80;
                result.entryLevel_ = this.entryLevel_;
                if ((from_bitField0_ & 0x100) == 256)
                    to_bitField0_ |= 0x100;
                result.guildMode_ = this.guildMode_;
                if ((from_bitField0_ & 0x200) == 512)
                    to_bitField0_ |= 0x200;
                result.guildIcon_ = this.guildIcon_;
                if ((from_bitField0_ & 0x400) == 1024)
                    to_bitField0_ |= 0x400;
                result.presidentPro_ = this.presidentPro_;
                if ((from_bitField0_ & 0x800) == 2048)
                    to_bitField0_ |= 0x800;
                result.presidentLevel_ = this.presidentLevel_;
                if ((from_bitField0_ & 0x1000) == 4096)
                    to_bitField0_ |= 0x1000;
                result.entryUpLevel_ = this.entryUpLevel_;
                if ((from_bitField0_ & 0x2000) == 8192)
                    to_bitField0_ |= 0x2000;
                result.createTime_ = this.createTime_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.GuildBaseInfo)
                    return mergeFrom((GuildHandler.GuildBaseInfo) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.GuildBaseInfo other) {
                if (other == GuildHandler.GuildBaseInfo.getDefaultInstance())
                    return this;
                if (other.hasGuildId()) {
                    this.bitField0_ |= 0x1;
                    this.guildId_ = other.guildId_;
                    onChanged();
                }
                if (other.hasName()) {
                    this.bitField0_ |= 0x2;
                    this.name_ = other.name_;
                    onChanged();
                }
                if (other.hasLevel())
                    setLevel(other.getLevel());
                if (other.hasPresidentId()) {
                    this.bitField0_ |= 0x8;
                    this.presidentId_ = other.presidentId_;
                    onChanged();
                }
                if (other.hasPresidentName()) {
                    this.bitField0_ |= 0x10;
                    this.presidentName_ = other.presidentName_;
                    onChanged();
                }
                if (other.hasMemberNum())
                    setMemberNum(other.getMemberNum());
                if (other.hasMemberMax())
                    setMemberMax(other.getMemberMax());
                if (other.hasEntryLevel())
                    setEntryLevel(other.getEntryLevel());
                if (other.hasGuildMode())
                    setGuildMode(other.getGuildMode());
                if (other.hasGuildIcon()) {
                    this.bitField0_ |= 0x200;
                    this.guildIcon_ = other.guildIcon_;
                    onChanged();
                }
                if (other.hasPresidentPro())
                    setPresidentPro(other.getPresidentPro());
                if (other.hasPresidentLevel())
                    setPresidentLevel(other.getPresidentLevel());
                if (other.hasEntryUpLevel())
                    setEntryUpLevel(other.getEntryUpLevel());
                if (other.hasCreateTime()) {
                    this.bitField0_ |= 0x2000;
                    this.createTime_ = other.createTime_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.GuildBaseInfo parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.GuildBaseInfo) GuildHandler.GuildBaseInfo.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.GuildBaseInfo) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null)
                        mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasGuildId() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getGuildId() {
                Object ref = this.guildId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8())
                        this.guildId_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getGuildIdBytes() {
                Object ref = this.guildId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.guildId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setGuildId(String value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.guildId_ = value;
                onChanged();
                return this;
            }

            public Builder clearGuildId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.guildId_ = GuildHandler.GuildBaseInfo.getDefaultInstance().getGuildId();
                onChanged();
                return this;
            }

            public Builder setGuildIdBytes(ByteString value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.guildId_ = value;
                onChanged();
                return this;
            }

            public boolean hasName() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getName() {
                Object ref = this.name_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8())
                        this.name_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getNameBytes() {
                Object ref = this.name_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.name_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setName(String value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.name_ = value;
                onChanged();
                return this;
            }

            public Builder clearName() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.name_ = GuildHandler.GuildBaseInfo.getDefaultInstance().getName();
                onChanged();
                return this;
            }

            public Builder setNameBytes(ByteString value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.name_ = value;
                onChanged();
                return this;
            }

            public boolean hasLevel() {
                return ((this.bitField0_ & 0x4) == 4);
            }

            public int getLevel() {
                return this.level_;
            }

            public Builder setLevel(int value) {
                this.bitField0_ |= 0x4;
                this.level_ = value;
                onChanged();
                return this;
            }

            public Builder clearLevel() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.level_ = 0;
                onChanged();
                return this;
            }

            public boolean hasPresidentId() {
                return ((this.bitField0_ & 0x8) == 8);
            }

            public String getPresidentId() {
                Object ref = this.presidentId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8())
                        this.presidentId_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getPresidentIdBytes() {
                Object ref = this.presidentId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.presidentId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setPresidentId(String value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x8;
                this.presidentId_ = value;
                onChanged();
                return this;
            }

            public Builder clearPresidentId() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.presidentId_ = GuildHandler.GuildBaseInfo.getDefaultInstance().getPresidentId();
                onChanged();
                return this;
            }

            public Builder setPresidentIdBytes(ByteString value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x8;
                this.presidentId_ = value;
                onChanged();
                return this;
            }

            public boolean hasPresidentName() {
                return ((this.bitField0_ & 0x10) == 16);
            }

            public String getPresidentName() {
                Object ref = this.presidentName_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8())
                        this.presidentName_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getPresidentNameBytes() {
                Object ref = this.presidentName_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.presidentName_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setPresidentName(String value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x10;
                this.presidentName_ = value;
                onChanged();
                return this;
            }

            public Builder clearPresidentName() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.presidentName_ = GuildHandler.GuildBaseInfo.getDefaultInstance().getPresidentName();
                onChanged();
                return this;
            }

            public Builder setPresidentNameBytes(ByteString value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x10;
                this.presidentName_ = value;
                onChanged();
                return this;
            }

            public boolean hasMemberNum() {
                return ((this.bitField0_ & 0x20) == 32);
            }

            public int getMemberNum() {
                return this.memberNum_;
            }

            public Builder setMemberNum(int value) {
                this.bitField0_ |= 0x20;
                this.memberNum_ = value;
                onChanged();
                return this;
            }

            public Builder clearMemberNum() {
                this.bitField0_ &= 0xFFFFFFDF;
                this.memberNum_ = 0;
                onChanged();
                return this;
            }

            public boolean hasMemberMax() {
                return ((this.bitField0_ & 0x40) == 64);
            }

            public int getMemberMax() {
                return this.memberMax_;
            }

            public Builder setMemberMax(int value) {
                this.bitField0_ |= 0x40;
                this.memberMax_ = value;
                onChanged();
                return this;
            }

            public Builder clearMemberMax() {
                this.bitField0_ &= 0xFFFFFFBF;
                this.memberMax_ = 0;
                onChanged();
                return this;
            }

            public boolean hasEntryLevel() {
                return ((this.bitField0_ & 0x80) == 128);
            }

            public int getEntryLevel() {
                return this.entryLevel_;
            }

            public Builder setEntryLevel(int value) {
                this.bitField0_ |= 0x80;
                this.entryLevel_ = value;
                onChanged();
                return this;
            }

            public Builder clearEntryLevel() {
                this.bitField0_ &= 0xFFFFFF7F;
                this.entryLevel_ = 0;
                onChanged();
                return this;
            }

            public boolean hasGuildMode() {
                return ((this.bitField0_ & 0x100) == 256);
            }

            public int getGuildMode() {
                return this.guildMode_;
            }

            public Builder setGuildMode(int value) {
                this.bitField0_ |= 0x100;
                this.guildMode_ = value;
                onChanged();
                return this;
            }

            public Builder clearGuildMode() {
                this.bitField0_ &= 0xFFFFFEFF;
                this.guildMode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasGuildIcon() {
                return ((this.bitField0_ & 0x200) == 512);
            }

            public String getGuildIcon() {
                Object ref = this.guildIcon_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8())
                        this.guildIcon_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getGuildIconBytes() {
                Object ref = this.guildIcon_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.guildIcon_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setGuildIcon(String value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x200;
                this.guildIcon_ = value;
                onChanged();
                return this;
            }

            public Builder clearGuildIcon() {
                this.bitField0_ &= 0xFFFFFDFF;
                this.guildIcon_ = GuildHandler.GuildBaseInfo.getDefaultInstance().getGuildIcon();
                onChanged();
                return this;
            }

            public Builder setGuildIconBytes(ByteString value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x200;
                this.guildIcon_ = value;
                onChanged();
                return this;
            }

            public boolean hasPresidentPro() {
                return ((this.bitField0_ & 0x400) == 1024);
            }

            public int getPresidentPro() {
                return this.presidentPro_;
            }

            public Builder setPresidentPro(int value) {
                this.bitField0_ |= 0x400;
                this.presidentPro_ = value;
                onChanged();
                return this;
            }

            public Builder clearPresidentPro() {
                this.bitField0_ &= 0xFFFFFBFF;
                this.presidentPro_ = 0;
                onChanged();
                return this;
            }

            public boolean hasPresidentLevel() {
                return ((this.bitField0_ & 0x800) == 2048);
            }

            public int getPresidentLevel() {
                return this.presidentLevel_;
            }

            public Builder setPresidentLevel(int value) {
                this.bitField0_ |= 0x800;
                this.presidentLevel_ = value;
                onChanged();
                return this;
            }

            public Builder clearPresidentLevel() {
                this.bitField0_ &= 0xFFFFF7FF;
                this.presidentLevel_ = 0;
                onChanged();
                return this;
            }

            public boolean hasEntryUpLevel() {
                return ((this.bitField0_ & 0x1000) == 4096);
            }

            public int getEntryUpLevel() {
                return this.entryUpLevel_;
            }

            public Builder setEntryUpLevel(int value) {
                this.bitField0_ |= 0x1000;
                this.entryUpLevel_ = value;
                onChanged();
                return this;
            }

            public Builder clearEntryUpLevel() {
                this.bitField0_ &= 0xFFFFEFFF;
                this.entryUpLevel_ = 0;
                onChanged();
                return this;
            }

            public boolean hasCreateTime() {
                return ((this.bitField0_ & 0x2000) == 8192);
            }

            public String getCreateTime() {
                Object ref = this.createTime_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8())
                        this.createTime_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getCreateTimeBytes() {
                Object ref = this.createTime_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.createTime_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setCreateTime(String value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x2000;
                this.createTime_ = value;
                onChanged();
                return this;
            }

            public Builder clearCreateTime() {
                this.bitField0_ &= 0xFFFFDFFF;
                this.createTime_ = GuildHandler.GuildBaseInfo.getDefaultInstance().getCreateTime();
                onChanged();
                return this;
            }

            public Builder setCreateTimeBytes(ByteString value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x2000;
                this.createTime_ = value;
                onChanged();
                return this;
            }
        }
    }

    public static final class GuildInfo extends GeneratedMessage implements GuildInfoOrBuilder {
        private static final GuildInfo defaultInstance = new GuildInfo(true);
        private final UnknownFieldSet unknownFields;

        private GuildInfo(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private GuildInfo(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static GuildInfo getDefaultInstance() {
            return defaultInstance;
        }

        public GuildInfo getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private GuildInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    GuildHandler.GuildBaseInfo.Builder subBuilder;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            subBuilder = null;
                            if ((this.bitField0_ & 0x1) == 1) subBuilder = this.baseInfo_.toBuilder();
                            this.baseInfo_ = (GuildHandler.GuildBaseInfo) input.readMessage(GuildHandler.GuildBaseInfo.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.baseInfo_);
                                this.baseInfo_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x1;
                            break;
                        case 16:
                            this.bitField0_ |= 0x2;
                            this.applyState_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_GuildInfo_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_GuildInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildInfo.class, Builder.class);
        }

        public static Parser<GuildInfo> PARSER = (Parser<GuildInfo>) new AbstractParser<GuildInfo>() {
            public GuildHandler.GuildInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.GuildInfo(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int BASEINFO_FIELD_NUMBER = 1;
        private GuildHandler.GuildBaseInfo baseInfo_;
        public static final int APPLYSTATE_FIELD_NUMBER = 2;
        private int applyState_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<GuildInfo> getParserForType() {
            return PARSER;
        }

        public boolean hasBaseInfo() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public GuildHandler.GuildBaseInfo getBaseInfo() {
            return this.baseInfo_;
        }

        public GuildHandler.GuildBaseInfoOrBuilder getBaseInfoOrBuilder() {
            return this.baseInfo_;
        }

        public boolean hasApplyState() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public int getApplyState() {
            return this.applyState_;
        }

        private void initFields() {
            this.baseInfo_ = GuildHandler.GuildBaseInfo.getDefaultInstance();
            this.applyState_ = 0;
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeMessage(1, (MessageLite) this.baseInfo_);
            if ((this.bitField0_ & 0x2) == 2) output.writeInt32(2, this.applyState_);
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1)
                size += CodedOutputStream.computeMessageSize(1, (MessageLite) this.baseInfo_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeInt32Size(2, this.applyState_);
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static GuildInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (GuildInfo) PARSER.parseFrom(data);
        }

        public static GuildInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GuildInfo) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GuildInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (GuildInfo) PARSER.parseFrom(data);
        }

        public static GuildInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GuildInfo) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GuildInfo parseFrom(InputStream input) throws IOException {
            return (GuildInfo) PARSER.parseFrom(input);
        }

        public static GuildInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GuildInfo) PARSER.parseFrom(input, extensionRegistry);
        }

        public static GuildInfo parseDelimitedFrom(InputStream input) throws IOException {
            return (GuildInfo) PARSER.parseDelimitedFrom(input);
        }

        public static GuildInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GuildInfo) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static GuildInfo parseFrom(CodedInputStream input) throws IOException {
            return (GuildInfo) PARSER.parseFrom(input);
        }

        public static GuildInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GuildInfo) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(GuildInfo prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.GuildInfoOrBuilder {
            private int bitField0_;
            private GuildHandler.GuildBaseInfo baseInfo_;
            private SingleFieldBuilder<GuildHandler.GuildBaseInfo, GuildHandler.GuildBaseInfo.Builder, GuildHandler.GuildBaseInfoOrBuilder> baseInfoBuilder_;
            private int applyState_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_GuildInfo_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_GuildInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.GuildInfo.class, Builder.class);
            }

            private Builder() {
                this.baseInfo_ = GuildHandler.GuildBaseInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.baseInfo_ = GuildHandler.GuildBaseInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.GuildInfo.alwaysUseFieldBuilders) getBaseInfoFieldBuilder();
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                if (this.baseInfoBuilder_ == null) {
                    this.baseInfo_ = GuildHandler.GuildBaseInfo.getDefaultInstance();
                } else {
                    this.baseInfoBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                this.applyState_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_GuildInfo_descriptor;
            }

            public GuildHandler.GuildInfo getDefaultInstanceForType() {
                return GuildHandler.GuildInfo.getDefaultInstance();
            }

            public GuildHandler.GuildInfo build() {
                GuildHandler.GuildInfo result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.GuildInfo buildPartial() {
                GuildHandler.GuildInfo result = new GuildHandler.GuildInfo(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                if (this.baseInfoBuilder_ == null) {
                    result.baseInfo_ = this.baseInfo_;
                } else {
                    result.baseInfo_ = (GuildHandler.GuildBaseInfo) this.baseInfoBuilder_.build();
                }
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.applyState_ = this.applyState_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.GuildInfo) return mergeFrom((GuildHandler.GuildInfo) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.GuildInfo other) {
                if (other == GuildHandler.GuildInfo.getDefaultInstance()) return this;
                if (other.hasBaseInfo()) mergeBaseInfo(other.getBaseInfo());
                if (other.hasApplyState()) setApplyState(other.getApplyState());
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.GuildInfo parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.GuildInfo) GuildHandler.GuildInfo.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.GuildInfo) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasBaseInfo() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public GuildHandler.GuildBaseInfo getBaseInfo() {
                if (this.baseInfoBuilder_ == null) return this.baseInfo_;
                return (GuildHandler.GuildBaseInfo) this.baseInfoBuilder_.getMessage();
            }

            public Builder setBaseInfo(GuildHandler.GuildBaseInfo value) {
                if (this.baseInfoBuilder_ == null) {
                    if (value == null) throw new NullPointerException();
                    this.baseInfo_ = value;
                    onChanged();
                } else {
                    this.baseInfoBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }

            public Builder setBaseInfo(GuildHandler.GuildBaseInfo.Builder builderForValue) {
                if (this.baseInfoBuilder_ == null) {
                    this.baseInfo_ = builderForValue.build();
                    onChanged();
                } else {
                    this.baseInfoBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }

            public Builder mergeBaseInfo(GuildHandler.GuildBaseInfo value) {
                if (this.baseInfoBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) == 1 && this.baseInfo_ != GuildHandler.GuildBaseInfo.getDefaultInstance()) {
                        this.baseInfo_ = GuildHandler.GuildBaseInfo.newBuilder(this.baseInfo_).mergeFrom(value).buildPartial();
                    } else {
                        this.baseInfo_ = value;
                    }
                    onChanged();
                } else {
                    this.baseInfoBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }

            public Builder clearBaseInfo() {
                if (this.baseInfoBuilder_ == null) {
                    this.baseInfo_ = GuildHandler.GuildBaseInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.baseInfoBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }

            public GuildHandler.GuildBaseInfo.Builder getBaseInfoBuilder() {
                this.bitField0_ |= 0x1;
                onChanged();
                return (GuildHandler.GuildBaseInfo.Builder) getBaseInfoFieldBuilder().getBuilder();
            }

            public GuildHandler.GuildBaseInfoOrBuilder getBaseInfoOrBuilder() {
                if (this.baseInfoBuilder_ != null)
                    return (GuildHandler.GuildBaseInfoOrBuilder) this.baseInfoBuilder_.getMessageOrBuilder();
                return this.baseInfo_;
            }

            private SingleFieldBuilder<GuildHandler.GuildBaseInfo, GuildHandler.GuildBaseInfo.Builder, GuildHandler.GuildBaseInfoOrBuilder> getBaseInfoFieldBuilder() {
                if (this.baseInfoBuilder_ == null) {
                    this.baseInfoBuilder_ = new SingleFieldBuilder(getBaseInfo(), getParentForChildren(), isClean());
                    this.baseInfo_ = null;
                }
                return this.baseInfoBuilder_;
            }

            public boolean hasApplyState() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public int getApplyState() {
                return this.applyState_;
            }

            public Builder setApplyState(int value) {
                this.bitField0_ |= 0x2;
                this.applyState_ = value;
                onChanged();
                return this;
            }

            public Builder clearApplyState() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.applyState_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }
    }


    public static final class ContributeTimesInfo
            extends GeneratedMessage
            implements ContributeTimesInfoOrBuilder {
        private static final ContributeTimesInfo defaultInstance = new ContributeTimesInfo(true);
        private final UnknownFieldSet unknownFields;

        private ContributeTimesInfo(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private ContributeTimesInfo(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static ContributeTimesInfo getDefaultInstance() {
            return defaultInstance;
        }

        public ContributeTimesInfo getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ContributeTimesInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.type_ = input.readInt32();
                            break;
                        case 16:
                            this.bitField0_ |= 0x2;
                            this.times_ = input.readInt32();
                            break;
                        case 24:
                            this.bitField0_ |= 0x4;
                            this.maxTimes_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_ContributeTimesInfo_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_ContributeTimesInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(ContributeTimesInfo.class, Builder.class);
        }

        public static Parser<ContributeTimesInfo> PARSER = (Parser<ContributeTimesInfo>) new AbstractParser<ContributeTimesInfo>() {
            public GuildHandler.ContributeTimesInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.ContributeTimesInfo(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int TYPE_FIELD_NUMBER = 1;
        private int type_;
        public static final int TIMES_FIELD_NUMBER = 2;
        private int times_;
        public static final int MAXTIMES_FIELD_NUMBER = 3;
        private int maxTimes_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<ContributeTimesInfo> getParserForType() {
            return PARSER;
        }

        public boolean hasType() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getType() {
            return this.type_;
        }

        public boolean hasTimes() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public int getTimes() {
            return this.times_;
        }

        public boolean hasMaxTimes() {
            return ((this.bitField0_ & 0x4) == 4);
        }

        public int getMaxTimes() {
            return this.maxTimes_;
        }

        private void initFields() {
            this.type_ = 0;
            this.times_ = 0;
            this.maxTimes_ = 0;
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.type_);
            if ((this.bitField0_ & 0x2) == 2) output.writeInt32(2, this.times_);
            if ((this.bitField0_ & 0x4) == 4) output.writeInt32(3, this.maxTimes_);
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.type_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeInt32Size(2, this.times_);
            if ((this.bitField0_ & 0x4) == 4) size += CodedOutputStream.computeInt32Size(3, this.maxTimes_);
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static ContributeTimesInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (ContributeTimesInfo) PARSER.parseFrom(data);
        }

        public static ContributeTimesInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ContributeTimesInfo) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ContributeTimesInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (ContributeTimesInfo) PARSER.parseFrom(data);
        }

        public static ContributeTimesInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ContributeTimesInfo) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ContributeTimesInfo parseFrom(InputStream input) throws IOException {
            return (ContributeTimesInfo) PARSER.parseFrom(input);
        }

        public static ContributeTimesInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ContributeTimesInfo) PARSER.parseFrom(input, extensionRegistry);
        }

        public static ContributeTimesInfo parseDelimitedFrom(InputStream input) throws IOException {
            return (ContributeTimesInfo) PARSER.parseDelimitedFrom(input);
        }

        public static ContributeTimesInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ContributeTimesInfo) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static ContributeTimesInfo parseFrom(CodedInputStream input) throws IOException {
            return (ContributeTimesInfo) PARSER.parseFrom(input);
        }

        public static ContributeTimesInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ContributeTimesInfo) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ContributeTimesInfo prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.ContributeTimesInfoOrBuilder {
            private int bitField0_;
            private int type_;
            private int times_;
            private int maxTimes_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_ContributeTimesInfo_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_ContributeTimesInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.ContributeTimesInfo.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.ContributeTimesInfo.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.type_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.times_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                this.maxTimes_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_ContributeTimesInfo_descriptor;
            }

            public GuildHandler.ContributeTimesInfo getDefaultInstanceForType() {
                return GuildHandler.ContributeTimesInfo.getDefaultInstance();
            }

            public GuildHandler.ContributeTimesInfo build() {
                GuildHandler.ContributeTimesInfo result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.ContributeTimesInfo buildPartial() {
                GuildHandler.ContributeTimesInfo result = new GuildHandler.ContributeTimesInfo(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.type_ = this.type_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.times_ = this.times_;
                if ((from_bitField0_ & 0x4) == 4) to_bitField0_ |= 0x4;
                result.maxTimes_ = this.maxTimes_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.ContributeTimesInfo)
                    return mergeFrom((GuildHandler.ContributeTimesInfo) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.ContributeTimesInfo other) {
                if (other == GuildHandler.ContributeTimesInfo.getDefaultInstance()) return this;
                if (other.hasType()) setType(other.getType());
                if (other.hasTimes()) setTimes(other.getTimes());
                if (other.hasMaxTimes()) setMaxTimes(other.getMaxTimes());
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.ContributeTimesInfo parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.ContributeTimesInfo) GuildHandler.ContributeTimesInfo.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.ContributeTimesInfo) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasType() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getType() {
                return this.type_;
            }

            public Builder setType(int value) {
                this.bitField0_ |= 0x1;
                this.type_ = value;
                onChanged();
                return this;
            }

            public Builder clearType() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.type_ = 0;
                onChanged();
                return this;
            }

            public boolean hasTimes() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public int getTimes() {
                return this.times_;
            }

            public Builder setTimes(int value) {
                this.bitField0_ |= 0x2;
                this.times_ = value;
                onChanged();
                return this;
            }

            public Builder clearTimes() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.times_ = 0;
                onChanged();
                return this;
            }

            public boolean hasMaxTimes() {
                return ((this.bitField0_ & 0x4) == 4);
            }

            public int getMaxTimes() {
                return this.maxTimes_;
            }

            public Builder setMaxTimes(int value) {
                this.bitField0_ |= 0x4;
                this.maxTimes_ = value;
                onChanged();
                return this;
            }

            public Builder clearMaxTimes() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.maxTimes_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class MyContributeInfo
            extends GeneratedMessage
            implements MyContributeInfoOrBuilder {
        private static final MyContributeInfo defaultInstance = new MyContributeInfo(true);
        private final UnknownFieldSet unknownFields;

        private MyContributeInfo(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private MyContributeInfo(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static MyContributeInfo getDefaultInstance() {
            return defaultInstance;
        }

        public MyContributeInfo getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private MyContributeInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.currentContribute_ = input.readInt32();
                            break;
                        case 16:
                            this.bitField0_ |= 0x2;
                            this.totalContribute_ = input.readInt32();
                            break;
                        case 26:
                            if ((mutable_bitField0_ & 0x4) != 4) {
                                this.timesList_ = new ArrayList<>();
                                mutable_bitField0_ |= 0x4;
                            }
                            this.timesList_.add(input.readMessage(GuildHandler.ContributeTimesInfo.PARSER, extensionRegistry));
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                if ((mutable_bitField0_ & 0x4) == 4) this.timesList_ = Collections.unmodifiableList(this.timesList_);
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_MyContributeInfo_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_MyContributeInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(MyContributeInfo.class, Builder.class);
        }

        public static Parser<MyContributeInfo> PARSER = (Parser<MyContributeInfo>) new AbstractParser<MyContributeInfo>() {
            public GuildHandler.MyContributeInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.MyContributeInfo(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int CURRENTCONTRIBUTE_FIELD_NUMBER = 1;
        private int currentContribute_;
        public static final int TOTALCONTRIBUTE_FIELD_NUMBER = 2;
        private int totalContribute_;
        public static final int TIMESLIST_FIELD_NUMBER = 3;
        private List<GuildHandler.ContributeTimesInfo> timesList_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<MyContributeInfo> getParserForType() {
            return PARSER;
        }

        public boolean hasCurrentContribute() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getCurrentContribute() {
            return this.currentContribute_;
        }

        public boolean hasTotalContribute() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public int getTotalContribute() {
            return this.totalContribute_;
        }

        static {
            defaultInstance.initFields();
        }


        public List<GuildHandler.ContributeTimesInfo> getTimesListList() {
            return this.timesList_;
        }


        public List<? extends GuildHandler.ContributeTimesInfoOrBuilder> getTimesListOrBuilderList() {
            return (List) this.timesList_;
        }


        public int getTimesListCount() {
            return this.timesList_.size();
        }


        public GuildHandler.ContributeTimesInfo getTimesList(int index) {
            return this.timesList_.get(index);
        }


        public GuildHandler.ContributeTimesInfoOrBuilder getTimesListOrBuilder(int index) {
            return this.timesList_.get(index);
        }


        private void initFields() {
            this.currentContribute_ = 0;
            this.totalContribute_ = 0;
            this.timesList_ = Collections.emptyList();
        }


        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
                return true;
            }
            if (isInitialized == 0) {
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }


        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) {
                output.writeInt32(1, this.currentContribute_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                output.writeInt32(2, this.totalContribute_);
            }
            for (int i = 0; i < this.timesList_.size(); i++) {
                output.writeMessage(3, (MessageLite) this.timesList_.get(i));
            }
            getUnknownFields().writeTo(output);
        }


        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) {
                size += CodedOutputStream.computeInt32Size(1, this.currentContribute_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                size += CodedOutputStream.computeInt32Size(2, this.totalContribute_);
            }
            for (int i = 0; i < this.timesList_.size(); i++) {
                size += CodedOutputStream.computeMessageSize(3, (MessageLite) this.timesList_.get(i));
            }
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }


        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }


        public static MyContributeInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (MyContributeInfo) PARSER.parseFrom(data);
        }


        public static MyContributeInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (MyContributeInfo) PARSER.parseFrom(data, extensionRegistry);
        }


        public static MyContributeInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (MyContributeInfo) PARSER.parseFrom(data);
        }


        public static MyContributeInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (MyContributeInfo) PARSER.parseFrom(data, extensionRegistry);
        }


        public static MyContributeInfo parseFrom(InputStream input) throws IOException {
            return (MyContributeInfo) PARSER.parseFrom(input);
        }


        public static MyContributeInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (MyContributeInfo) PARSER.parseFrom(input, extensionRegistry);
        }


        public static MyContributeInfo parseDelimitedFrom(InputStream input) throws IOException {
            return (MyContributeInfo) PARSER.parseDelimitedFrom(input);
        }


        public static MyContributeInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (MyContributeInfo) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }


        public static MyContributeInfo parseFrom(CodedInputStream input) throws IOException {
            return (MyContributeInfo) PARSER.parseFrom(input);
        }


        public static MyContributeInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (MyContributeInfo) PARSER.parseFrom(input, extensionRegistry);
        }


        public static Builder newBuilder() {
            return Builder.create();
        }


        public Builder newBuilderForType() {
            return newBuilder();
        }


        public static Builder newBuilder(MyContributeInfo prototype) {
            return newBuilder().mergeFrom(prototype);
        }


        public Builder toBuilder() {
            return newBuilder(this);
        }


        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }


        public static final class Builder
                extends GeneratedMessage.Builder<Builder>
                implements GuildHandler.MyContributeInfoOrBuilder {
            private int bitField0_;


            private int currentContribute_;


            private int totalContribute_;


            private List<GuildHandler.ContributeTimesInfo> timesList_;


            private RepeatedFieldBuilder<GuildHandler.ContributeTimesInfo, GuildHandler.ContributeTimesInfo.Builder, GuildHandler.ContributeTimesInfoOrBuilder> timesListBuilder_;


            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_MyContributeInfo_descriptor;
            }


            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_MyContributeInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.MyContributeInfo.class, Builder.class);
            }


            private Builder() {
                this.timesList_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }


            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.timesList_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }


            private void maybeForceBuilderInitialization() {
                if (GuildHandler.MyContributeInfo.alwaysUseFieldBuilders) {
                    getTimesListFieldBuilder();
                }
            }


            private static Builder create() {
                return new Builder();
            }


            public Builder clear() {
                super.clear();
                this.currentContribute_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.totalContribute_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                if (this.timesListBuilder_ == null) {
                    this.timesList_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFB;
                } else {
                    this.timesListBuilder_.clear();
                }
                return this;
            }


            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }


            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_MyContributeInfo_descriptor;
            }


            public GuildHandler.MyContributeInfo getDefaultInstanceForType() {
                return GuildHandler.MyContributeInfo.getDefaultInstance();
            }


            public GuildHandler.MyContributeInfo build() {
                GuildHandler.MyContributeInfo result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }


            public GuildHandler.MyContributeInfo buildPartial() {
                GuildHandler.MyContributeInfo result = new GuildHandler.MyContributeInfo(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) {
                    to_bitField0_ |= 0x1;
                }
                result.currentContribute_ = this.currentContribute_;
                if ((from_bitField0_ & 0x2) == 2) {
                    to_bitField0_ |= 0x2;
                }
                result.totalContribute_ = this.totalContribute_;
                if (this.timesListBuilder_ == null) {
                    if ((this.bitField0_ & 0x4) == 4) {
                        this.timesList_ = Collections.unmodifiableList(this.timesList_);
                        this.bitField0_ &= 0xFFFFFFFB;
                    }
                    result.timesList_ = this.timesList_;
                } else {
                    result.timesList_ = this.timesListBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }


            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.MyContributeInfo) {
                    return mergeFrom((GuildHandler.MyContributeInfo) other);
                }
                super.mergeFrom(other);
                return this;
            }


            public Builder mergeFrom(GuildHandler.MyContributeInfo other) {
                if (other == GuildHandler.MyContributeInfo.getDefaultInstance()) {
                    return this;
                }
                if (other.hasCurrentContribute()) {
                    setCurrentContribute(other.getCurrentContribute());
                }
                if (other.hasTotalContribute()) {
                    setTotalContribute(other.getTotalContribute());
                }
                if (this.timesListBuilder_ == null) {
                    if (!other.timesList_.isEmpty()) {
                        if (this.timesList_.isEmpty()) {
                            this.timesList_ = other.timesList_;
                            this.bitField0_ &= 0xFFFFFFFB;
                        } else {
                            ensureTimesListIsMutable();
                            this.timesList_.addAll(other.timesList_);
                        }
                        onChanged();
                    }
                } else if (!other.timesList_.isEmpty()) {
                    if (this.timesListBuilder_.isEmpty()) {
                        this.timesListBuilder_.dispose();
                        this.timesListBuilder_ = null;
                        this.timesList_ = other.timesList_;
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.timesListBuilder_ = GuildHandler.MyContributeInfo.alwaysUseFieldBuilders ? getTimesListFieldBuilder() : null;
                    } else {
                        this.timesListBuilder_.addAllMessages(other.timesList_);
                    }
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }


            public final boolean isInitialized() {
                return true;
            }


            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.MyContributeInfo parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.MyContributeInfo) GuildHandler.MyContributeInfo.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.MyContributeInfo) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }


            public boolean hasCurrentContribute() {
                return ((this.bitField0_ & 0x1) == 1);
            }


            public int getCurrentContribute() {
                return this.currentContribute_;
            }


            public Builder setCurrentContribute(int value) {
                this.bitField0_ |= 0x1;
                this.currentContribute_ = value;
                onChanged();
                return this;
            }


            public Builder clearCurrentContribute() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.currentContribute_ = 0;
                onChanged();
                return this;
            }


            public boolean hasTotalContribute() {
                return ((this.bitField0_ & 0x2) == 2);
            }


            public int getTotalContribute() {
                return this.totalContribute_;
            }


            public Builder setTotalContribute(int value) {
                this.bitField0_ |= 0x2;
                this.totalContribute_ = value;
                onChanged();
                return this;
            }


            public Builder clearTotalContribute() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.totalContribute_ = 0;
                onChanged();
                return this;
            }


            private void ensureTimesListIsMutable() {
                if ((this.bitField0_ & 0x4) != 4) {
                    this.timesList_ = new ArrayList<>(this.timesList_);
                    this.bitField0_ |= 0x4;
                }
            }


            public List<GuildHandler.ContributeTimesInfo> getTimesListList() {
                if (this.timesListBuilder_ == null) {
                    return Collections.unmodifiableList(this.timesList_);
                }
                return this.timesListBuilder_.getMessageList();
            }


            public int getTimesListCount() {
                if (this.timesListBuilder_ == null) {
                    return this.timesList_.size();
                }
                return this.timesListBuilder_.getCount();
            }


            public GuildHandler.ContributeTimesInfo getTimesList(int index) {
                if (this.timesListBuilder_ == null) {
                    return this.timesList_.get(index);
                }
                return (GuildHandler.ContributeTimesInfo) this.timesListBuilder_.getMessage(index);
            }


            public Builder setTimesList(int index, GuildHandler.ContributeTimesInfo value) {
                if (this.timesListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureTimesListIsMutable();
                    this.timesList_.set(index, value);
                    onChanged();
                } else {
                    this.timesListBuilder_.setMessage(index, value);
                }
                return this;
            }


            public Builder setTimesList(int index, GuildHandler.ContributeTimesInfo.Builder builderForValue) {
                if (this.timesListBuilder_ == null) {
                    ensureTimesListIsMutable();
                    this.timesList_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    this.timesListBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }


            public Builder addTimesList(GuildHandler.ContributeTimesInfo value) {
                if (this.timesListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureTimesListIsMutable();
                    this.timesList_.add(value);
                    onChanged();
                } else {
                    this.timesListBuilder_.addMessage(value);
                }
                return this;
            }


            public Builder addTimesList(int index, GuildHandler.ContributeTimesInfo value) {
                if (this.timesListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureTimesListIsMutable();
                    this.timesList_.add(index, value);
                    onChanged();
                } else {
                    this.timesListBuilder_.addMessage(index, value);
                }
                return this;
            }


            public Builder addTimesList(GuildHandler.ContributeTimesInfo.Builder builderForValue) {
                if (this.timesListBuilder_ == null) {
                    ensureTimesListIsMutable();
                    this.timesList_.add(builderForValue.build());
                    onChanged();
                } else {
                    this.timesListBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }


            public Builder addTimesList(int index, GuildHandler.ContributeTimesInfo.Builder builderForValue) {
                if (this.timesListBuilder_ == null) {
                    ensureTimesListIsMutable();
                    this.timesList_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    this.timesListBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }


            public Builder addAllTimesList(Iterable<? extends GuildHandler.ContributeTimesInfo> values) {
                if (this.timesListBuilder_ == null) {
                    ensureTimesListIsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.timesList_);
                    onChanged();
                } else {
                    this.timesListBuilder_.addAllMessages(values);
                }
                return this;
            }


            public Builder clearTimesList() {
                if (this.timesListBuilder_ == null) {
                    this.timesList_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFB;
                    onChanged();
                } else {
                    this.timesListBuilder_.clear();
                }
                return this;
            }


            public Builder removeTimesList(int index) {
                if (this.timesListBuilder_ == null) {
                    ensureTimesListIsMutable();
                    this.timesList_.remove(index);
                    onChanged();
                } else {
                    this.timesListBuilder_.remove(index);
                }
                return this;
            }


            public GuildHandler.ContributeTimesInfo.Builder getTimesListBuilder(int index) {
                return (GuildHandler.ContributeTimesInfo.Builder) getTimesListFieldBuilder().getBuilder(index);
            }


            public GuildHandler.ContributeTimesInfoOrBuilder getTimesListOrBuilder(int index) {
                if (this.timesListBuilder_ == null) {
                    return this.timesList_.get(index);
                }
                return (GuildHandler.ContributeTimesInfoOrBuilder) this.timesListBuilder_.getMessageOrBuilder(index);
            }


            public List<? extends GuildHandler.ContributeTimesInfoOrBuilder> getTimesListOrBuilderList() {
                if (this.timesListBuilder_ != null) {
                    return this.timesListBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList((List) this.timesList_);
            }


            public GuildHandler.ContributeTimesInfo.Builder addTimesListBuilder() {
                return (GuildHandler.ContributeTimesInfo.Builder) getTimesListFieldBuilder().addBuilder(GuildHandler.ContributeTimesInfo.getDefaultInstance());
            }


            public GuildHandler.ContributeTimesInfo.Builder addTimesListBuilder(int index) {
                return (GuildHandler.ContributeTimesInfo.Builder) getTimesListFieldBuilder().addBuilder(index, GuildHandler.ContributeTimesInfo.getDefaultInstance());
            }


            public List<GuildHandler.ContributeTimesInfo.Builder> getTimesListBuilderList() {
                return getTimesListFieldBuilder().getBuilderList();
            }


            private RepeatedFieldBuilder<GuildHandler.ContributeTimesInfo, GuildHandler.ContributeTimesInfo.Builder, GuildHandler.ContributeTimesInfoOrBuilder> getTimesListFieldBuilder() {
                if (this.timesListBuilder_ == null) {
                    this.timesListBuilder_ = new RepeatedFieldBuilder(this.timesList_, ((this.bitField0_ & 0x4) == 4), getParentForChildren(), isClean());
                    this.timesList_ = null;
                }
                return this.timesListBuilder_;
            }
        }
    }


    public static final class MyGuildInfo
            extends GeneratedMessage
            implements MyGuildInfoOrBuilder {
        private static final MyGuildInfo defaultInstance = new MyGuildInfo(true);
        private final UnknownFieldSet unknownFields;

        private MyGuildInfo(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private MyGuildInfo(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static MyGuildInfo getDefaultInstance() {
            return defaultInstance;
        }

        public MyGuildInfo getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private MyGuildInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    GuildHandler.GuildBaseInfo.Builder builder;
                    ByteString bs;
                    GuildHandler.MyContributeInfo.Builder subBuilder;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            builder = null;
                            if ((this.bitField0_ & 0x1) == 1) builder = this.baseInfo_.toBuilder();
                            this.baseInfo_ = (GuildHandler.GuildBaseInfo) input.readMessage(GuildHandler.GuildBaseInfo.PARSER, extensionRegistry);
                            if (builder != null) {
                                builder.mergeFrom(this.baseInfo_);
                                this.baseInfo_ = builder.buildPartial();
                            }
                            this.bitField0_ |= 0x1;
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.notice_ = bs;
                            break;
                        case 24:
                            this.bitField0_ |= 0x4;
                            this.fund_ = input.readInt32();
                            break;
                        case 34:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x8;
                            this.qqGroup_ = bs;
                            break;
                        case 42:
                            subBuilder = null;
                            if ((this.bitField0_ & 0x10) == 16) subBuilder = this.myInfo_.toBuilder();
                            this.myInfo_ = (GuildHandler.MyContributeInfo) input.readMessage(GuildHandler.MyContributeInfo.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.myInfo_);
                                this.myInfo_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x10;
                            break;
                        case 48:
                            this.bitField0_ |= 0x20;
                            this.changeNamePassedDay_ = input.readInt32();
                            break;
                        case 58:
                            if ((mutable_bitField0_ & 0x40) != 64) {
                                this.officeNames_ = new ArrayList<>();
                                mutable_bitField0_ |= 0x40;
                            }
                            this.officeNames_.add(input.readMessage(GuildHandler.OfficeName.PARSER, extensionRegistry));
                            break;
                        case 64:
                            this.bitField0_ |= 0x40;
                            this.exp_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                if ((mutable_bitField0_ & 0x40) == 64)
                    this.officeNames_ = Collections.unmodifiableList(this.officeNames_);
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_MyGuildInfo_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_MyGuildInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(MyGuildInfo.class, Builder.class);
        }

        public static Parser<MyGuildInfo> PARSER = (Parser<MyGuildInfo>) new AbstractParser<MyGuildInfo>() {
            public GuildHandler.MyGuildInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.MyGuildInfo(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int BASEINFO_FIELD_NUMBER = 1;
        private GuildHandler.GuildBaseInfo baseInfo_;
        public static final int NOTICE_FIELD_NUMBER = 2;
        private Object notice_;
        public static final int FUND_FIELD_NUMBER = 3;
        private int fund_;
        public static final int QQGROUP_FIELD_NUMBER = 4;
        private Object qqGroup_;
        public static final int MYINFO_FIELD_NUMBER = 5;
        private GuildHandler.MyContributeInfo myInfo_;
        public static final int CHANGENAMEPASSEDDAY_FIELD_NUMBER = 6;
        private int changeNamePassedDay_;
        public static final int OFFICENAMES_FIELD_NUMBER = 7;
        private List<GuildHandler.OfficeName> officeNames_;
        public static final int EXP_FIELD_NUMBER = 8;
        private int exp_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<MyGuildInfo> getParserForType() {
            return PARSER;
        }

        public boolean hasBaseInfo() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public GuildHandler.GuildBaseInfo getBaseInfo() {
            return this.baseInfo_;
        }

        public GuildHandler.GuildBaseInfoOrBuilder getBaseInfoOrBuilder() {
            return this.baseInfo_;
        }

        public boolean hasNotice() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getNotice() {
            Object ref = this.notice_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.notice_ = s;
            return s;
        }

        public ByteString getNoticeBytes() {
            Object ref = this.notice_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.notice_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        static {
            defaultInstance.initFields();
        }


        public boolean hasFund() {
            return ((this.bitField0_ & 0x4) == 4);
        }


        public int getFund() {
            return this.fund_;
        }


        public boolean hasQqGroup() {
            return ((this.bitField0_ & 0x8) == 8);
        }


        public String getQqGroup() {
            Object ref = this.qqGroup_;
            if (ref instanceof String) {
                return (String) ref;
            }
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.qqGroup_ = s;
            }
            return s;
        }


        public ByteString getQqGroupBytes() {
            Object ref = this.qqGroup_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.qqGroup_ = b;
                return b;
            }
            return (ByteString) ref;
        }


        public boolean hasMyInfo() {
            return ((this.bitField0_ & 0x10) == 16);
        }


        public GuildHandler.MyContributeInfo getMyInfo() {
            return this.myInfo_;
        }


        public GuildHandler.MyContributeInfoOrBuilder getMyInfoOrBuilder() {
            return this.myInfo_;
        }


        public boolean hasChangeNamePassedDay() {
            return ((this.bitField0_ & 0x20) == 32);
        }


        public int getChangeNamePassedDay() {
            return this.changeNamePassedDay_;
        }


        public List<GuildHandler.OfficeName> getOfficeNamesList() {
            return this.officeNames_;
        }


        public List<? extends GuildHandler.OfficeNameOrBuilder> getOfficeNamesOrBuilderList() {
            return (List) this.officeNames_;
        }


        public int getOfficeNamesCount() {
            return this.officeNames_.size();
        }


        public GuildHandler.OfficeName getOfficeNames(int index) {
            return this.officeNames_.get(index);
        }


        public GuildHandler.OfficeNameOrBuilder getOfficeNamesOrBuilder(int index) {
            return this.officeNames_.get(index);
        }


        public boolean hasExp() {
            return ((this.bitField0_ & 0x40) == 64);
        }


        public int getExp() {
            return this.exp_;
        }


        private void initFields() {
            this.baseInfo_ = GuildHandler.GuildBaseInfo.getDefaultInstance();
            this.notice_ = "";
            this.fund_ = 0;
            this.qqGroup_ = "";
            this.myInfo_ = GuildHandler.MyContributeInfo.getDefaultInstance();
            this.changeNamePassedDay_ = 0;
            this.officeNames_ = Collections.emptyList();
            this.exp_ = 0;
        }


        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
                return true;
            }
            if (isInitialized == 0) {
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }


        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) {
                output.writeMessage(1, (MessageLite) this.baseInfo_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                output.writeBytes(2, getNoticeBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                output.writeInt32(3, this.fund_);
            }
            if ((this.bitField0_ & 0x8) == 8) {
                output.writeBytes(4, getQqGroupBytes());
            }
            if ((this.bitField0_ & 0x10) == 16) {
                output.writeMessage(5, (MessageLite) this.myInfo_);
            }
            if ((this.bitField0_ & 0x20) == 32) {
                output.writeInt32(6, this.changeNamePassedDay_);
            }
            for (int i = 0; i < this.officeNames_.size(); i++) {
                output.writeMessage(7, (MessageLite) this.officeNames_.get(i));
            }
            if ((this.bitField0_ & 0x40) == 64) {
                output.writeInt32(8, this.exp_);
            }
            getUnknownFields().writeTo(output);
        }


        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) {
                size += CodedOutputStream.computeMessageSize(1, (MessageLite) this.baseInfo_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                size += CodedOutputStream.computeBytesSize(2, getNoticeBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                size += CodedOutputStream.computeInt32Size(3, this.fund_);
            }
            if ((this.bitField0_ & 0x8) == 8) {
                size += CodedOutputStream.computeBytesSize(4, getQqGroupBytes());
            }
            if ((this.bitField0_ & 0x10) == 16) {
                size += CodedOutputStream.computeMessageSize(5, (MessageLite) this.myInfo_);
            }
            if ((this.bitField0_ & 0x20) == 32) {
                size += CodedOutputStream.computeInt32Size(6, this.changeNamePassedDay_);
            }
            for (int i = 0; i < this.officeNames_.size(); i++) {
                size += CodedOutputStream.computeMessageSize(7, (MessageLite) this.officeNames_.get(i));
            }
            if ((this.bitField0_ & 0x40) == 64) {
                size += CodedOutputStream.computeInt32Size(8, this.exp_);
            }
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }


        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }


        public static MyGuildInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (MyGuildInfo) PARSER.parseFrom(data);
        }


        public static MyGuildInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (MyGuildInfo) PARSER.parseFrom(data, extensionRegistry);
        }


        public static MyGuildInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (MyGuildInfo) PARSER.parseFrom(data);
        }


        public static MyGuildInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (MyGuildInfo) PARSER.parseFrom(data, extensionRegistry);
        }


        public static MyGuildInfo parseFrom(InputStream input) throws IOException {
            return (MyGuildInfo) PARSER.parseFrom(input);
        }


        public static MyGuildInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (MyGuildInfo) PARSER.parseFrom(input, extensionRegistry);
        }


        public static MyGuildInfo parseDelimitedFrom(InputStream input) throws IOException {
            return (MyGuildInfo) PARSER.parseDelimitedFrom(input);
        }


        public static MyGuildInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (MyGuildInfo) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }


        public static MyGuildInfo parseFrom(CodedInputStream input) throws IOException {
            return (MyGuildInfo) PARSER.parseFrom(input);
        }


        public static MyGuildInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (MyGuildInfo) PARSER.parseFrom(input, extensionRegistry);
        }


        public static Builder newBuilder() {
            return Builder.create();
        }


        public Builder newBuilderForType() {
            return newBuilder();
        }


        public static Builder newBuilder(MyGuildInfo prototype) {
            return newBuilder().mergeFrom(prototype);
        }


        public Builder toBuilder() {
            return newBuilder(this);
        }


        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }


        public static final class Builder
                extends GeneratedMessage.Builder<Builder>
                implements GuildHandler.MyGuildInfoOrBuilder {
            private int bitField0_;


            private GuildHandler.GuildBaseInfo baseInfo_;


            private SingleFieldBuilder<GuildHandler.GuildBaseInfo, GuildHandler.GuildBaseInfo.Builder, GuildHandler.GuildBaseInfoOrBuilder> baseInfoBuilder_;


            private Object notice_;


            private int fund_;


            private Object qqGroup_;


            private GuildHandler.MyContributeInfo myInfo_;


            private SingleFieldBuilder<GuildHandler.MyContributeInfo, GuildHandler.MyContributeInfo.Builder, GuildHandler.MyContributeInfoOrBuilder> myInfoBuilder_;


            private int changeNamePassedDay_;


            private List<GuildHandler.OfficeName> officeNames_;


            private RepeatedFieldBuilder<GuildHandler.OfficeName, GuildHandler.OfficeName.Builder, GuildHandler.OfficeNameOrBuilder> officeNamesBuilder_;


            private int exp_;


            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_MyGuildInfo_descriptor;
            }


            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_MyGuildInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.MyGuildInfo.class, Builder.class);
            }


            private Builder() {
                this.baseInfo_ = GuildHandler.GuildBaseInfo.getDefaultInstance();
                this.notice_ = "";
                this.qqGroup_ = "";
                this.myInfo_ = GuildHandler.MyContributeInfo.getDefaultInstance();
                this.officeNames_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }


            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.baseInfo_ = GuildHandler.GuildBaseInfo.getDefaultInstance();
                this.notice_ = "";
                this.qqGroup_ = "";
                this.myInfo_ = GuildHandler.MyContributeInfo.getDefaultInstance();
                this.officeNames_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }


            private void maybeForceBuilderInitialization() {
                if (GuildHandler.MyGuildInfo.alwaysUseFieldBuilders) {
                    getBaseInfoFieldBuilder();
                    getMyInfoFieldBuilder();
                    getOfficeNamesFieldBuilder();
                }
            }


            private static Builder create() {
                return new Builder();
            }


            public Builder clear() {
                super.clear();
                if (this.baseInfoBuilder_ == null) {
                    this.baseInfo_ = GuildHandler.GuildBaseInfo.getDefaultInstance();
                } else {
                    this.baseInfoBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                this.notice_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.fund_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.qqGroup_ = "";
                this.bitField0_ &= 0xFFFFFFF7;
                if (this.myInfoBuilder_ == null) {
                    this.myInfo_ = GuildHandler.MyContributeInfo.getDefaultInstance();
                } else {
                    this.myInfoBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFEF;
                this.changeNamePassedDay_ = 0;
                this.bitField0_ &= 0xFFFFFFDF;
                if (this.officeNamesBuilder_ == null) {
                    this.officeNames_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFBF;
                } else {
                    this.officeNamesBuilder_.clear();
                }
                this.exp_ = 0;
                this.bitField0_ &= 0xFFFFFF7F;
                return this;
            }


            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }


            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_MyGuildInfo_descriptor;
            }


            public GuildHandler.MyGuildInfo getDefaultInstanceForType() {
                return GuildHandler.MyGuildInfo.getDefaultInstance();
            }


            public GuildHandler.MyGuildInfo build() {
                GuildHandler.MyGuildInfo result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }


            public GuildHandler.MyGuildInfo buildPartial() {
                GuildHandler.MyGuildInfo result = new GuildHandler.MyGuildInfo(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) {
                    to_bitField0_ |= 0x1;
                }
                if (this.baseInfoBuilder_ == null) {
                    result.baseInfo_ = this.baseInfo_;
                } else {
                    result.baseInfo_ = (GuildHandler.GuildBaseInfo) this.baseInfoBuilder_.build();
                }
                if ((from_bitField0_ & 0x2) == 2) {
                    to_bitField0_ |= 0x2;
                }
                result.notice_ = this.notice_;
                if ((from_bitField0_ & 0x4) == 4) {
                    to_bitField0_ |= 0x4;
                }
                result.fund_ = this.fund_;
                if ((from_bitField0_ & 0x8) == 8) {
                    to_bitField0_ |= 0x8;
                }
                result.qqGroup_ = this.qqGroup_;
                if ((from_bitField0_ & 0x10) == 16) {
                    to_bitField0_ |= 0x10;
                }
                if (this.myInfoBuilder_ == null) {
                    result.myInfo_ = this.myInfo_;
                } else {
                    result.myInfo_ = (GuildHandler.MyContributeInfo) this.myInfoBuilder_.build();
                }
                if ((from_bitField0_ & 0x20) == 32) {
                    to_bitField0_ |= 0x20;
                }
                result.changeNamePassedDay_ = this.changeNamePassedDay_;
                if (this.officeNamesBuilder_ == null) {
                    if ((this.bitField0_ & 0x40) == 64) {
                        this.officeNames_ = Collections.unmodifiableList(this.officeNames_);
                        this.bitField0_ &= 0xFFFFFFBF;
                    }
                    result.officeNames_ = this.officeNames_;
                } else {
                    result.officeNames_ = this.officeNamesBuilder_.build();
                }
                if ((from_bitField0_ & 0x80) == 128) {
                    to_bitField0_ |= 0x40;
                }
                result.exp_ = this.exp_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }


            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.MyGuildInfo) {
                    return mergeFrom((GuildHandler.MyGuildInfo) other);
                }
                super.mergeFrom(other);
                return this;
            }


            public Builder mergeFrom(GuildHandler.MyGuildInfo other) {
                if (other == GuildHandler.MyGuildInfo.getDefaultInstance()) {
                    return this;
                }
                if (other.hasBaseInfo()) {
                    mergeBaseInfo(other.getBaseInfo());
                }
                if (other.hasNotice()) {
                    this.bitField0_ |= 0x2;
                    this.notice_ = other.notice_;
                    onChanged();
                }
                if (other.hasFund()) {
                    setFund(other.getFund());
                }
                if (other.hasQqGroup()) {
                    this.bitField0_ |= 0x8;
                    this.qqGroup_ = other.qqGroup_;
                    onChanged();
                }
                if (other.hasMyInfo()) {
                    mergeMyInfo(other.getMyInfo());
                }
                if (other.hasChangeNamePassedDay()) {
                    setChangeNamePassedDay(other.getChangeNamePassedDay());
                }
                if (this.officeNamesBuilder_ == null) {
                    if (!other.officeNames_.isEmpty()) {
                        if (this.officeNames_.isEmpty()) {
                            this.officeNames_ = other.officeNames_;
                            this.bitField0_ &= 0xFFFFFFBF;
                        } else {
                            ensureOfficeNamesIsMutable();
                            this.officeNames_.addAll(other.officeNames_);
                        }
                        onChanged();
                    }
                } else if (!other.officeNames_.isEmpty()) {
                    if (this.officeNamesBuilder_.isEmpty()) {
                        this.officeNamesBuilder_.dispose();
                        this.officeNamesBuilder_ = null;
                        this.officeNames_ = other.officeNames_;
                        this.bitField0_ &= 0xFFFFFFBF;
                        this.officeNamesBuilder_ = GuildHandler.MyGuildInfo.alwaysUseFieldBuilders ? getOfficeNamesFieldBuilder() : null;
                    } else {
                        this.officeNamesBuilder_.addAllMessages(other.officeNames_);
                    }
                }
                if (other.hasExp()) {
                    setExp(other.getExp());
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }


            public final boolean isInitialized() {
                return true;
            }


            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.MyGuildInfo parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.MyGuildInfo) GuildHandler.MyGuildInfo.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.MyGuildInfo) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }


            public boolean hasBaseInfo() {
                return ((this.bitField0_ & 0x1) == 1);
            }


            public GuildHandler.GuildBaseInfo getBaseInfo() {
                if (this.baseInfoBuilder_ == null) {
                    return this.baseInfo_;
                }
                return (GuildHandler.GuildBaseInfo) this.baseInfoBuilder_.getMessage();
            }


            public Builder setBaseInfo(GuildHandler.GuildBaseInfo value) {
                if (this.baseInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.baseInfo_ = value;
                    onChanged();
                } else {
                    this.baseInfoBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }


            public Builder setBaseInfo(GuildHandler.GuildBaseInfo.Builder builderForValue) {
                if (this.baseInfoBuilder_ == null) {
                    this.baseInfo_ = builderForValue.build();
                    onChanged();
                } else {
                    this.baseInfoBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }


            public Builder mergeBaseInfo(GuildHandler.GuildBaseInfo value) {
                if (this.baseInfoBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) == 1 && this.baseInfo_ != GuildHandler.GuildBaseInfo.getDefaultInstance()) {
                        this.baseInfo_ = GuildHandler.GuildBaseInfo.newBuilder(this.baseInfo_).mergeFrom(value).buildPartial();
                    } else {
                        this.baseInfo_ = value;
                    }
                    onChanged();
                } else {
                    this.baseInfoBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }


            public Builder clearBaseInfo() {
                if (this.baseInfoBuilder_ == null) {
                    this.baseInfo_ = GuildHandler.GuildBaseInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.baseInfoBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }


            public GuildHandler.GuildBaseInfo.Builder getBaseInfoBuilder() {
                this.bitField0_ |= 0x1;
                onChanged();
                return (GuildHandler.GuildBaseInfo.Builder) getBaseInfoFieldBuilder().getBuilder();
            }


            public GuildHandler.GuildBaseInfoOrBuilder getBaseInfoOrBuilder() {
                if (this.baseInfoBuilder_ != null) {
                    return (GuildHandler.GuildBaseInfoOrBuilder) this.baseInfoBuilder_.getMessageOrBuilder();
                }
                return this.baseInfo_;
            }


            private SingleFieldBuilder<GuildHandler.GuildBaseInfo, GuildHandler.GuildBaseInfo.Builder, GuildHandler.GuildBaseInfoOrBuilder> getBaseInfoFieldBuilder() {
                if (this.baseInfoBuilder_ == null) {
                    this.baseInfoBuilder_ = new SingleFieldBuilder(getBaseInfo(), getParentForChildren(), isClean());
                    this.baseInfo_ = null;
                }
                return this.baseInfoBuilder_;
            }


            public boolean hasNotice() {
                return ((this.bitField0_ & 0x2) == 2);
            }


            public String getNotice() {
                Object ref = this.notice_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.notice_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getNoticeBytes() {
                Object ref = this.notice_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.notice_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setNotice(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.notice_ = value;
                onChanged();
                return this;
            }


            public Builder clearNotice() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.notice_ = GuildHandler.MyGuildInfo.getDefaultInstance().getNotice();
                onChanged();
                return this;
            }


            public Builder setNoticeBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.notice_ = value;
                onChanged();
                return this;
            }


            public boolean hasFund() {
                return ((this.bitField0_ & 0x4) == 4);
            }


            public int getFund() {
                return this.fund_;
            }


            public Builder setFund(int value) {
                this.bitField0_ |= 0x4;
                this.fund_ = value;
                onChanged();
                return this;
            }


            public Builder clearFund() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.fund_ = 0;
                onChanged();
                return this;
            }


            public boolean hasQqGroup() {
                return ((this.bitField0_ & 0x8) == 8);
            }


            public String getQqGroup() {
                Object ref = this.qqGroup_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.qqGroup_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getQqGroupBytes() {
                Object ref = this.qqGroup_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.qqGroup_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setQqGroup(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x8;
                this.qqGroup_ = value;
                onChanged();
                return this;
            }


            public Builder clearQqGroup() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.qqGroup_ = GuildHandler.MyGuildInfo.getDefaultInstance().getQqGroup();
                onChanged();
                return this;
            }


            public Builder setQqGroupBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x8;
                this.qqGroup_ = value;
                onChanged();
                return this;
            }


            public boolean hasMyInfo() {
                return ((this.bitField0_ & 0x10) == 16);
            }


            public GuildHandler.MyContributeInfo getMyInfo() {
                if (this.myInfoBuilder_ == null) {
                    return this.myInfo_;
                }
                return (GuildHandler.MyContributeInfo) this.myInfoBuilder_.getMessage();
            }


            public Builder setMyInfo(GuildHandler.MyContributeInfo value) {
                if (this.myInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.myInfo_ = value;
                    onChanged();
                } else {
                    this.myInfoBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x10;
                return this;
            }


            public Builder setMyInfo(GuildHandler.MyContributeInfo.Builder builderForValue) {
                if (this.myInfoBuilder_ == null) {
                    this.myInfo_ = builderForValue.build();
                    onChanged();
                } else {
                    this.myInfoBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x10;
                return this;
            }


            public Builder mergeMyInfo(GuildHandler.MyContributeInfo value) {
                if (this.myInfoBuilder_ == null) {
                    if ((this.bitField0_ & 0x10) == 16 && this.myInfo_ != GuildHandler.MyContributeInfo.getDefaultInstance()) {
                        this.myInfo_ = GuildHandler.MyContributeInfo.newBuilder(this.myInfo_).mergeFrom(value).buildPartial();
                    } else {
                        this.myInfo_ = value;
                    }
                    onChanged();
                } else {
                    this.myInfoBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x10;
                return this;
            }


            public Builder clearMyInfo() {
                if (this.myInfoBuilder_ == null) {
                    this.myInfo_ = GuildHandler.MyContributeInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.myInfoBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFEF;
                return this;
            }


            public GuildHandler.MyContributeInfo.Builder getMyInfoBuilder() {
                this.bitField0_ |= 0x10;
                onChanged();
                return (GuildHandler.MyContributeInfo.Builder) getMyInfoFieldBuilder().getBuilder();
            }


            public GuildHandler.MyContributeInfoOrBuilder getMyInfoOrBuilder() {
                if (this.myInfoBuilder_ != null) {
                    return (GuildHandler.MyContributeInfoOrBuilder) this.myInfoBuilder_.getMessageOrBuilder();
                }
                return this.myInfo_;
            }


            private SingleFieldBuilder<GuildHandler.MyContributeInfo, GuildHandler.MyContributeInfo.Builder, GuildHandler.MyContributeInfoOrBuilder> getMyInfoFieldBuilder() {
                if (this.myInfoBuilder_ == null) {
                    this.myInfoBuilder_ = new SingleFieldBuilder(getMyInfo(), getParentForChildren(), isClean());
                    this.myInfo_ = null;
                }
                return this.myInfoBuilder_;
            }


            public boolean hasChangeNamePassedDay() {
                return ((this.bitField0_ & 0x20) == 32);
            }


            public int getChangeNamePassedDay() {
                return this.changeNamePassedDay_;
            }


            public Builder setChangeNamePassedDay(int value) {
                this.bitField0_ |= 0x20;
                this.changeNamePassedDay_ = value;
                onChanged();
                return this;
            }


            public Builder clearChangeNamePassedDay() {
                this.bitField0_ &= 0xFFFFFFDF;
                this.changeNamePassedDay_ = 0;
                onChanged();
                return this;
            }


            private void ensureOfficeNamesIsMutable() {
                if ((this.bitField0_ & 0x40) != 64) {
                    this.officeNames_ = new ArrayList<>(this.officeNames_);
                    this.bitField0_ |= 0x40;
                }
            }


            public List<GuildHandler.OfficeName> getOfficeNamesList() {
                if (this.officeNamesBuilder_ == null) {
                    return Collections.unmodifiableList(this.officeNames_);
                }
                return this.officeNamesBuilder_.getMessageList();
            }


            public int getOfficeNamesCount() {
                if (this.officeNamesBuilder_ == null) {
                    return this.officeNames_.size();
                }
                return this.officeNamesBuilder_.getCount();
            }


            public GuildHandler.OfficeName getOfficeNames(int index) {
                if (this.officeNamesBuilder_ == null) {
                    return this.officeNames_.get(index);
                }
                return (GuildHandler.OfficeName) this.officeNamesBuilder_.getMessage(index);
            }


            public Builder setOfficeNames(int index, GuildHandler.OfficeName value) {
                if (this.officeNamesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureOfficeNamesIsMutable();
                    this.officeNames_.set(index, value);
                    onChanged();
                } else {
                    this.officeNamesBuilder_.setMessage(index, value);
                }
                return this;
            }


            public Builder setOfficeNames(int index, GuildHandler.OfficeName.Builder builderForValue) {
                if (this.officeNamesBuilder_ == null) {
                    ensureOfficeNamesIsMutable();
                    this.officeNames_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    this.officeNamesBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }


            public Builder addOfficeNames(GuildHandler.OfficeName value) {
                if (this.officeNamesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureOfficeNamesIsMutable();
                    this.officeNames_.add(value);
                    onChanged();
                } else {
                    this.officeNamesBuilder_.addMessage(value);
                }
                return this;
            }


            public Builder addOfficeNames(int index, GuildHandler.OfficeName value) {
                if (this.officeNamesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureOfficeNamesIsMutable();
                    this.officeNames_.add(index, value);
                    onChanged();
                } else {
                    this.officeNamesBuilder_.addMessage(index, value);
                }
                return this;
            }


            public Builder addOfficeNames(GuildHandler.OfficeName.Builder builderForValue) {
                if (this.officeNamesBuilder_ == null) {
                    ensureOfficeNamesIsMutable();
                    this.officeNames_.add(builderForValue.build());
                    onChanged();
                } else {
                    this.officeNamesBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }


            public Builder addOfficeNames(int index, GuildHandler.OfficeName.Builder builderForValue) {
                if (this.officeNamesBuilder_ == null) {
                    ensureOfficeNamesIsMutable();
                    this.officeNames_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    this.officeNamesBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }


            public Builder addAllOfficeNames(Iterable<? extends GuildHandler.OfficeName> values) {
                if (this.officeNamesBuilder_ == null) {
                    ensureOfficeNamesIsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.officeNames_);
                    onChanged();
                } else {
                    this.officeNamesBuilder_.addAllMessages(values);
                }
                return this;
            }


            public Builder clearOfficeNames() {
                if (this.officeNamesBuilder_ == null) {
                    this.officeNames_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFBF;
                    onChanged();
                } else {
                    this.officeNamesBuilder_.clear();
                }
                return this;
            }


            public Builder removeOfficeNames(int index) {
                if (this.officeNamesBuilder_ == null) {
                    ensureOfficeNamesIsMutable();
                    this.officeNames_.remove(index);
                    onChanged();
                } else {
                    this.officeNamesBuilder_.remove(index);
                }
                return this;
            }


            public GuildHandler.OfficeName.Builder getOfficeNamesBuilder(int index) {
                return (GuildHandler.OfficeName.Builder) getOfficeNamesFieldBuilder().getBuilder(index);
            }


            public GuildHandler.OfficeNameOrBuilder getOfficeNamesOrBuilder(int index) {
                if (this.officeNamesBuilder_ == null) {
                    return this.officeNames_.get(index);
                }
                return (GuildHandler.OfficeNameOrBuilder) this.officeNamesBuilder_.getMessageOrBuilder(index);
            }


            public List<? extends GuildHandler.OfficeNameOrBuilder> getOfficeNamesOrBuilderList() {
                if (this.officeNamesBuilder_ != null) {
                    return this.officeNamesBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList((List) this.officeNames_);
            }


            public GuildHandler.OfficeName.Builder addOfficeNamesBuilder() {
                return (GuildHandler.OfficeName.Builder) getOfficeNamesFieldBuilder().addBuilder(GuildHandler.OfficeName.getDefaultInstance());
            }


            public GuildHandler.OfficeName.Builder addOfficeNamesBuilder(int index) {
                return (GuildHandler.OfficeName.Builder) getOfficeNamesFieldBuilder().addBuilder(index, GuildHandler.OfficeName.getDefaultInstance());
            }


            public List<GuildHandler.OfficeName.Builder> getOfficeNamesBuilderList() {
                return getOfficeNamesFieldBuilder().getBuilderList();
            }


            private RepeatedFieldBuilder<GuildHandler.OfficeName, GuildHandler.OfficeName.Builder, GuildHandler.OfficeNameOrBuilder> getOfficeNamesFieldBuilder() {
                if (this.officeNamesBuilder_ == null) {
                    this.officeNamesBuilder_ = new RepeatedFieldBuilder(this.officeNames_, ((this.bitField0_ & 0x40) == 64), getParentForChildren(), isClean());
                    this.officeNames_ = null;
                }
                return this.officeNamesBuilder_;
            }


            public boolean hasExp() {
                return ((this.bitField0_ & 0x80) == 128);
            }


            public int getExp() {
                return this.exp_;
            }


            public Builder setExp(int value) {
                this.bitField0_ |= 0x80;
                this.exp_ = value;
                onChanged();
                return this;
            }


            public Builder clearExp() {
                this.bitField0_ &= 0xFFFFFF7F;
                this.exp_ = 0;
                onChanged();
                return this;
            }
        }
    }


    public static final class MemberInfo
            extends GeneratedMessage
            implements MemberInfoOrBuilder {
        private static final MemberInfo defaultInstance = new MemberInfo(true);
        private final UnknownFieldSet unknownFields;

        private MemberInfo(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private MemberInfo(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static MemberInfo getDefaultInstance() {
            return defaultInstance;
        }

        public MemberInfo getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private MemberInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.playerId_ = bs;
                            break;
                        case 16:
                            this.bitField0_ |= 0x2;
                            this.pro_ = input.readInt32();
                            break;
                        case 26:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x4;
                            this.name_ = bs;
                            break;
                        case 32:
                            this.bitField0_ |= 0x8;
                            this.level_ = input.readInt32();
                            break;
                        case 40:
                            this.bitField0_ |= 0x10;
                            this.upLevel_ = input.readInt32();
                            break;
                        case 48:
                            this.bitField0_ |= 0x20;
                            this.job_ = input.readInt32();
                            break;
                        case 58:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x40;
                            this.jobName_ = bs;
                            break;
                        case 66:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x80;
                            this.joinTime_ = bs;
                            break;
                        case 72:
                            this.bitField0_ |= 0x100;
                            this.currentContribute_ = input.readInt32();
                            break;
                        case 80:
                            this.bitField0_ |= 0x200;
                            this.totalContribute_ = input.readInt32();
                            break;
                        case 88:
                            this.bitField0_ |= 0x400;
                            this.onlineState_ = input.readInt32();
                            break;
                        case 96:
                            this.bitField0_ |= 0x800;
                            this.lastActiveTime_ = input.readInt32();
                            break;
                        case 106:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1000;
                            this.guildName_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_MemberInfo_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_MemberInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(MemberInfo.class, Builder.class);
        }

        public static Parser<MemberInfo> PARSER = (Parser<MemberInfo>) new AbstractParser<MemberInfo>() {
            public GuildHandler.MemberInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.MemberInfo(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int PLAYERID_FIELD_NUMBER = 1;
        private Object playerId_;
        public static final int PRO_FIELD_NUMBER = 2;
        private int pro_;
        public static final int NAME_FIELD_NUMBER = 3;
        private Object name_;
        public static final int LEVEL_FIELD_NUMBER = 4;
        private int level_;
        public static final int UPLEVEL_FIELD_NUMBER = 5;
        private int upLevel_;
        public static final int JOB_FIELD_NUMBER = 6;
        private int job_;
        public static final int JOBNAME_FIELD_NUMBER = 7;
        private Object jobName_;
        public static final int JOINTIME_FIELD_NUMBER = 8;
        private Object joinTime_;
        public static final int CURRENTCONTRIBUTE_FIELD_NUMBER = 9;
        private int currentContribute_;
        public static final int TOTALCONTRIBUTE_FIELD_NUMBER = 10;
        private int totalContribute_;
        public static final int ONLINESTATE_FIELD_NUMBER = 11;
        private int onlineState_;
        public static final int LASTACTIVETIME_FIELD_NUMBER = 12;
        private int lastActiveTime_;
        public static final int GUILDNAME_FIELD_NUMBER = 13;
        private Object guildName_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<MemberInfo> getParserForType() {
            return PARSER;
        }

        public boolean hasPlayerId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getPlayerId() {
            Object ref = this.playerId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.playerId_ = s;
            return s;
        }

        public ByteString getPlayerIdBytes() {
            Object ref = this.playerId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.playerId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasPro() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public int getPro() {
            return this.pro_;
        }

        static {
            defaultInstance.initFields();
        }


        public boolean hasName() {
            return ((this.bitField0_ & 0x4) == 4);
        }


        public String getName() {
            Object ref = this.name_;
            if (ref instanceof String) {
                return (String) ref;
            }
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.name_ = s;
            }
            return s;
        }


        public ByteString getNameBytes() {
            Object ref = this.name_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.name_ = b;
                return b;
            }
            return (ByteString) ref;
        }


        public boolean hasLevel() {
            return ((this.bitField0_ & 0x8) == 8);
        }


        public int getLevel() {
            return this.level_;
        }


        public boolean hasUpLevel() {
            return ((this.bitField0_ & 0x10) == 16);
        }


        public int getUpLevel() {
            return this.upLevel_;
        }


        public boolean hasJob() {
            return ((this.bitField0_ & 0x20) == 32);
        }


        public int getJob() {
            return this.job_;
        }


        public boolean hasJobName() {
            return ((this.bitField0_ & 0x40) == 64);
        }


        public String getJobName() {
            Object ref = this.jobName_;
            if (ref instanceof String) {
                return (String) ref;
            }
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.jobName_ = s;
            }
            return s;
        }


        public ByteString getJobNameBytes() {
            Object ref = this.jobName_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.jobName_ = b;
                return b;
            }
            return (ByteString) ref;
        }


        public boolean hasJoinTime() {
            return ((this.bitField0_ & 0x80) == 128);
        }


        public String getJoinTime() {
            Object ref = this.joinTime_;
            if (ref instanceof String) {
                return (String) ref;
            }
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.joinTime_ = s;
            }
            return s;
        }


        public ByteString getJoinTimeBytes() {
            Object ref = this.joinTime_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.joinTime_ = b;
                return b;
            }
            return (ByteString) ref;
        }


        public boolean hasCurrentContribute() {
            return ((this.bitField0_ & 0x100) == 256);
        }


        public int getCurrentContribute() {
            return this.currentContribute_;
        }


        public boolean hasTotalContribute() {
            return ((this.bitField0_ & 0x200) == 512);
        }


        public int getTotalContribute() {
            return this.totalContribute_;
        }


        public boolean hasOnlineState() {
            return ((this.bitField0_ & 0x400) == 1024);
        }


        public int getOnlineState() {
            return this.onlineState_;
        }


        public boolean hasLastActiveTime() {
            return ((this.bitField0_ & 0x800) == 2048);
        }


        public int getLastActiveTime() {
            return this.lastActiveTime_;
        }


        public boolean hasGuildName() {
            return ((this.bitField0_ & 0x1000) == 4096);
        }


        public String getGuildName() {
            Object ref = this.guildName_;
            if (ref instanceof String) {
                return (String) ref;
            }
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.guildName_ = s;
            }
            return s;
        }


        public ByteString getGuildNameBytes() {
            Object ref = this.guildName_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.guildName_ = b;
                return b;
            }
            return (ByteString) ref;
        }


        private void initFields() {
            this.playerId_ = "";
            this.pro_ = 0;
            this.name_ = "";
            this.level_ = 0;
            this.upLevel_ = 0;
            this.job_ = 0;
            this.jobName_ = "";
            this.joinTime_ = "";
            this.currentContribute_ = 0;
            this.totalContribute_ = 0;
            this.onlineState_ = 0;
            this.lastActiveTime_ = 0;
            this.guildName_ = "";
        }


        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
                return true;
            }
            if (isInitialized == 0) {
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }


        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) {
                output.writeBytes(1, getPlayerIdBytes());
            }
            if ((this.bitField0_ & 0x2) == 2) {
                output.writeInt32(2, this.pro_);
            }
            if ((this.bitField0_ & 0x4) == 4) {
                output.writeBytes(3, getNameBytes());
            }
            if ((this.bitField0_ & 0x8) == 8) {
                output.writeInt32(4, this.level_);
            }
            if ((this.bitField0_ & 0x10) == 16) {
                output.writeInt32(5, this.upLevel_);
            }
            if ((this.bitField0_ & 0x20) == 32) {
                output.writeInt32(6, this.job_);
            }
            if ((this.bitField0_ & 0x40) == 64) {
                output.writeBytes(7, getJobNameBytes());
            }
            if ((this.bitField0_ & 0x80) == 128) {
                output.writeBytes(8, getJoinTimeBytes());
            }
            if ((this.bitField0_ & 0x100) == 256) {
                output.writeInt32(9, this.currentContribute_);
            }
            if ((this.bitField0_ & 0x200) == 512) {
                output.writeInt32(10, this.totalContribute_);
            }
            if ((this.bitField0_ & 0x400) == 1024) {
                output.writeInt32(11, this.onlineState_);
            }
            if ((this.bitField0_ & 0x800) == 2048) {
                output.writeInt32(12, this.lastActiveTime_);
            }
            if ((this.bitField0_ & 0x1000) == 4096) {
                output.writeBytes(13, getGuildNameBytes());
            }
            getUnknownFields().writeTo(output);
        }


        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) {
                size += CodedOutputStream.computeBytesSize(1, getPlayerIdBytes());
            }
            if ((this.bitField0_ & 0x2) == 2) {
                size += CodedOutputStream.computeInt32Size(2, this.pro_);
            }
            if ((this.bitField0_ & 0x4) == 4) {
                size += CodedOutputStream.computeBytesSize(3, getNameBytes());
            }
            if ((this.bitField0_ & 0x8) == 8) {
                size += CodedOutputStream.computeInt32Size(4, this.level_);
            }
            if ((this.bitField0_ & 0x10) == 16) {
                size += CodedOutputStream.computeInt32Size(5, this.upLevel_);
            }
            if ((this.bitField0_ & 0x20) == 32) {
                size += CodedOutputStream.computeInt32Size(6, this.job_);
            }
            if ((this.bitField0_ & 0x40) == 64) {
                size += CodedOutputStream.computeBytesSize(7, getJobNameBytes());
            }
            if ((this.bitField0_ & 0x80) == 128) {
                size += CodedOutputStream.computeBytesSize(8, getJoinTimeBytes());
            }
            if ((this.bitField0_ & 0x100) == 256) {
                size += CodedOutputStream.computeInt32Size(9, this.currentContribute_);
            }
            if ((this.bitField0_ & 0x200) == 512) {
                size += CodedOutputStream.computeInt32Size(10, this.totalContribute_);
            }
            if ((this.bitField0_ & 0x400) == 1024) {
                size += CodedOutputStream.computeInt32Size(11, this.onlineState_);
            }
            if ((this.bitField0_ & 0x800) == 2048) {
                size += CodedOutputStream.computeInt32Size(12, this.lastActiveTime_);
            }
            if ((this.bitField0_ & 0x1000) == 4096) {
                size += CodedOutputStream.computeBytesSize(13, getGuildNameBytes());
            }
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }


        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }


        public static MemberInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (MemberInfo) PARSER.parseFrom(data);
        }


        public static MemberInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (MemberInfo) PARSER.parseFrom(data, extensionRegistry);
        }


        public static MemberInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (MemberInfo) PARSER.parseFrom(data);
        }


        public static MemberInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (MemberInfo) PARSER.parseFrom(data, extensionRegistry);
        }


        public static MemberInfo parseFrom(InputStream input) throws IOException {
            return (MemberInfo) PARSER.parseFrom(input);
        }


        public static MemberInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (MemberInfo) PARSER.parseFrom(input, extensionRegistry);
        }


        public static MemberInfo parseDelimitedFrom(InputStream input) throws IOException {
            return (MemberInfo) PARSER.parseDelimitedFrom(input);
        }


        public static MemberInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (MemberInfo) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }


        public static MemberInfo parseFrom(CodedInputStream input) throws IOException {
            return (MemberInfo) PARSER.parseFrom(input);
        }


        public static MemberInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (MemberInfo) PARSER.parseFrom(input, extensionRegistry);
        }


        public static Builder newBuilder() {
            return Builder.create();
        }


        public Builder newBuilderForType() {
            return newBuilder();
        }


        public static Builder newBuilder(MemberInfo prototype) {
            return newBuilder().mergeFrom(prototype);
        }


        public Builder toBuilder() {
            return newBuilder(this);
        }


        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }


        public static final class Builder
                extends GeneratedMessage.Builder<Builder>
                implements GuildHandler.MemberInfoOrBuilder {
            private int bitField0_;


            private Object playerId_;


            private int pro_;


            private Object name_;


            private int level_;


            private int upLevel_;


            private int job_;


            private Object jobName_;


            private Object joinTime_;


            private int currentContribute_;


            private int totalContribute_;


            private int onlineState_;


            private int lastActiveTime_;


            private Object guildName_;


            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_MemberInfo_descriptor;
            }


            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_MemberInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.MemberInfo.class, Builder.class);
            }


            private Builder() {
                this.playerId_ = "";
                this.name_ = "";
                this.jobName_ = "";
                this.joinTime_ = "";
                this.guildName_ = "";
                maybeForceBuilderInitialization();
            }


            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.playerId_ = "";
                this.name_ = "";
                this.jobName_ = "";
                this.joinTime_ = "";
                this.guildName_ = "";
                maybeForceBuilderInitialization();
            }


            private void maybeForceBuilderInitialization() {
                if (GuildHandler.MemberInfo.alwaysUseFieldBuilders) ;
            }


            private static Builder create() {
                return new Builder();
            }


            public Builder clear() {
                super.clear();
                this.playerId_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.pro_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                this.name_ = "";
                this.bitField0_ &= 0xFFFFFFFB;
                this.level_ = 0;
                this.bitField0_ &= 0xFFFFFFF7;
                this.upLevel_ = 0;
                this.bitField0_ &= 0xFFFFFFEF;
                this.job_ = 0;
                this.bitField0_ &= 0xFFFFFFDF;
                this.jobName_ = "";
                this.bitField0_ &= 0xFFFFFFBF;
                this.joinTime_ = "";
                this.bitField0_ &= 0xFFFFFF7F;
                this.currentContribute_ = 0;
                this.bitField0_ &= 0xFFFFFEFF;
                this.totalContribute_ = 0;
                this.bitField0_ &= 0xFFFFFDFF;
                this.onlineState_ = 0;
                this.bitField0_ &= 0xFFFFFBFF;
                this.lastActiveTime_ = 0;
                this.bitField0_ &= 0xFFFFF7FF;
                this.guildName_ = "";
                this.bitField0_ &= 0xFFFFEFFF;
                return this;
            }


            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }


            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_MemberInfo_descriptor;
            }


            public GuildHandler.MemberInfo getDefaultInstanceForType() {
                return GuildHandler.MemberInfo.getDefaultInstance();
            }


            public GuildHandler.MemberInfo build() {
                GuildHandler.MemberInfo result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }


            public GuildHandler.MemberInfo buildPartial() {
                GuildHandler.MemberInfo result = new GuildHandler.MemberInfo(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) {
                    to_bitField0_ |= 0x1;
                }
                result.playerId_ = this.playerId_;
                if ((from_bitField0_ & 0x2) == 2) {
                    to_bitField0_ |= 0x2;
                }
                result.pro_ = this.pro_;
                if ((from_bitField0_ & 0x4) == 4) {
                    to_bitField0_ |= 0x4;
                }
                result.name_ = this.name_;
                if ((from_bitField0_ & 0x8) == 8) {
                    to_bitField0_ |= 0x8;
                }
                result.level_ = this.level_;
                if ((from_bitField0_ & 0x10) == 16) {
                    to_bitField0_ |= 0x10;
                }
                result.upLevel_ = this.upLevel_;
                if ((from_bitField0_ & 0x20) == 32) {
                    to_bitField0_ |= 0x20;
                }
                result.job_ = this.job_;
                if ((from_bitField0_ & 0x40) == 64) {
                    to_bitField0_ |= 0x40;
                }
                result.jobName_ = this.jobName_;
                if ((from_bitField0_ & 0x80) == 128) {
                    to_bitField0_ |= 0x80;
                }
                result.joinTime_ = this.joinTime_;
                if ((from_bitField0_ & 0x100) == 256) {
                    to_bitField0_ |= 0x100;
                }
                result.currentContribute_ = this.currentContribute_;
                if ((from_bitField0_ & 0x200) == 512) {
                    to_bitField0_ |= 0x200;
                }
                result.totalContribute_ = this.totalContribute_;
                if ((from_bitField0_ & 0x400) == 1024) {
                    to_bitField0_ |= 0x400;
                }
                result.onlineState_ = this.onlineState_;
                if ((from_bitField0_ & 0x800) == 2048) {
                    to_bitField0_ |= 0x800;
                }
                result.lastActiveTime_ = this.lastActiveTime_;
                if ((from_bitField0_ & 0x1000) == 4096) {
                    to_bitField0_ |= 0x1000;
                }
                result.guildName_ = this.guildName_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }


            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.MemberInfo) {
                    return mergeFrom((GuildHandler.MemberInfo) other);
                }
                super.mergeFrom(other);
                return this;
            }


            public Builder mergeFrom(GuildHandler.MemberInfo other) {
                if (other == GuildHandler.MemberInfo.getDefaultInstance()) {
                    return this;
                }
                if (other.hasPlayerId()) {
                    this.bitField0_ |= 0x1;
                    this.playerId_ = other.playerId_;
                    onChanged();
                }
                if (other.hasPro()) {
                    setPro(other.getPro());
                }
                if (other.hasName()) {
                    this.bitField0_ |= 0x4;
                    this.name_ = other.name_;
                    onChanged();
                }
                if (other.hasLevel()) {
                    setLevel(other.getLevel());
                }
                if (other.hasUpLevel()) {
                    setUpLevel(other.getUpLevel());
                }
                if (other.hasJob()) {
                    setJob(other.getJob());
                }
                if (other.hasJobName()) {
                    this.bitField0_ |= 0x40;
                    this.jobName_ = other.jobName_;
                    onChanged();
                }
                if (other.hasJoinTime()) {
                    this.bitField0_ |= 0x80;
                    this.joinTime_ = other.joinTime_;
                    onChanged();
                }
                if (other.hasCurrentContribute()) {
                    setCurrentContribute(other.getCurrentContribute());
                }
                if (other.hasTotalContribute()) {
                    setTotalContribute(other.getTotalContribute());
                }
                if (other.hasOnlineState()) {
                    setOnlineState(other.getOnlineState());
                }
                if (other.hasLastActiveTime()) {
                    setLastActiveTime(other.getLastActiveTime());
                }
                if (other.hasGuildName()) {
                    this.bitField0_ |= 0x1000;
                    this.guildName_ = other.guildName_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }


            public final boolean isInitialized() {
                return true;
            }


            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.MemberInfo parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.MemberInfo) GuildHandler.MemberInfo.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.MemberInfo) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }


            public boolean hasPlayerId() {
                return ((this.bitField0_ & 0x1) == 1);
            }


            public String getPlayerId() {
                Object ref = this.playerId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.playerId_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getPlayerIdBytes() {
                Object ref = this.playerId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.playerId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setPlayerId(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1;
                this.playerId_ = value;
                onChanged();
                return this;
            }


            public Builder clearPlayerId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.playerId_ = GuildHandler.MemberInfo.getDefaultInstance().getPlayerId();
                onChanged();
                return this;
            }


            public Builder setPlayerIdBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1;
                this.playerId_ = value;
                onChanged();
                return this;
            }


            public boolean hasPro() {
                return ((this.bitField0_ & 0x2) == 2);
            }


            public int getPro() {
                return this.pro_;
            }


            public Builder setPro(int value) {
                this.bitField0_ |= 0x2;
                this.pro_ = value;
                onChanged();
                return this;
            }


            public Builder clearPro() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.pro_ = 0;
                onChanged();
                return this;
            }


            public boolean hasName() {
                return ((this.bitField0_ & 0x4) == 4);
            }


            public String getName() {
                Object ref = this.name_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.name_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getNameBytes() {
                Object ref = this.name_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.name_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setName(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x4;
                this.name_ = value;
                onChanged();
                return this;
            }


            public Builder clearName() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.name_ = GuildHandler.MemberInfo.getDefaultInstance().getName();
                onChanged();
                return this;
            }


            public Builder setNameBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x4;
                this.name_ = value;
                onChanged();
                return this;
            }


            public boolean hasLevel() {
                return ((this.bitField0_ & 0x8) == 8);
            }


            public int getLevel() {
                return this.level_;
            }


            public Builder setLevel(int value) {
                this.bitField0_ |= 0x8;
                this.level_ = value;
                onChanged();
                return this;
            }


            public Builder clearLevel() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.level_ = 0;
                onChanged();
                return this;
            }


            public boolean hasUpLevel() {
                return ((this.bitField0_ & 0x10) == 16);
            }


            public int getUpLevel() {
                return this.upLevel_;
            }


            public Builder setUpLevel(int value) {
                this.bitField0_ |= 0x10;
                this.upLevel_ = value;
                onChanged();
                return this;
            }


            public Builder clearUpLevel() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.upLevel_ = 0;
                onChanged();
                return this;
            }


            public boolean hasJob() {
                return ((this.bitField0_ & 0x20) == 32);
            }


            public int getJob() {
                return this.job_;
            }


            public Builder setJob(int value) {
                this.bitField0_ |= 0x20;
                this.job_ = value;
                onChanged();
                return this;
            }


            public Builder clearJob() {
                this.bitField0_ &= 0xFFFFFFDF;
                this.job_ = 0;
                onChanged();
                return this;
            }


            public boolean hasJobName() {
                return ((this.bitField0_ & 0x40) == 64);
            }


            public String getJobName() {
                Object ref = this.jobName_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.jobName_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getJobNameBytes() {
                Object ref = this.jobName_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.jobName_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setJobName(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x40;
                this.jobName_ = value;
                onChanged();
                return this;
            }


            public Builder clearJobName() {
                this.bitField0_ &= 0xFFFFFFBF;
                this.jobName_ = GuildHandler.MemberInfo.getDefaultInstance().getJobName();
                onChanged();
                return this;
            }


            public Builder setJobNameBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x40;
                this.jobName_ = value;
                onChanged();
                return this;
            }


            public boolean hasJoinTime() {
                return ((this.bitField0_ & 0x80) == 128);
            }


            public String getJoinTime() {
                Object ref = this.joinTime_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.joinTime_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getJoinTimeBytes() {
                Object ref = this.joinTime_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.joinTime_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setJoinTime(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x80;
                this.joinTime_ = value;
                onChanged();
                return this;
            }


            public Builder clearJoinTime() {
                this.bitField0_ &= 0xFFFFFF7F;
                this.joinTime_ = GuildHandler.MemberInfo.getDefaultInstance().getJoinTime();
                onChanged();
                return this;
            }


            public Builder setJoinTimeBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x80;
                this.joinTime_ = value;
                onChanged();
                return this;
            }


            public boolean hasCurrentContribute() {
                return ((this.bitField0_ & 0x100) == 256);
            }


            public int getCurrentContribute() {
                return this.currentContribute_;
            }


            public Builder setCurrentContribute(int value) {
                this.bitField0_ |= 0x100;
                this.currentContribute_ = value;
                onChanged();
                return this;
            }


            public Builder clearCurrentContribute() {
                this.bitField0_ &= 0xFFFFFEFF;
                this.currentContribute_ = 0;
                onChanged();
                return this;
            }


            public boolean hasTotalContribute() {
                return ((this.bitField0_ & 0x200) == 512);
            }


            public int getTotalContribute() {
                return this.totalContribute_;
            }


            public Builder setTotalContribute(int value) {
                this.bitField0_ |= 0x200;
                this.totalContribute_ = value;
                onChanged();
                return this;
            }


            public Builder clearTotalContribute() {
                this.bitField0_ &= 0xFFFFFDFF;
                this.totalContribute_ = 0;
                onChanged();
                return this;
            }


            public boolean hasOnlineState() {
                return ((this.bitField0_ & 0x400) == 1024);
            }


            public int getOnlineState() {
                return this.onlineState_;
            }


            public Builder setOnlineState(int value) {
                this.bitField0_ |= 0x400;
                this.onlineState_ = value;
                onChanged();
                return this;
            }


            public Builder clearOnlineState() {
                this.bitField0_ &= 0xFFFFFBFF;
                this.onlineState_ = 0;
                onChanged();
                return this;
            }


            public boolean hasLastActiveTime() {
                return ((this.bitField0_ & 0x800) == 2048);
            }


            public int getLastActiveTime() {
                return this.lastActiveTime_;
            }


            public Builder setLastActiveTime(int value) {
                this.bitField0_ |= 0x800;
                this.lastActiveTime_ = value;
                onChanged();
                return this;
            }


            public Builder clearLastActiveTime() {
                this.bitField0_ &= 0xFFFFF7FF;
                this.lastActiveTime_ = 0;
                onChanged();
                return this;
            }


            public boolean hasGuildName() {
                return ((this.bitField0_ & 0x1000) == 4096);
            }


            public String getGuildName() {
                Object ref = this.guildName_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.guildName_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getGuildNameBytes() {
                Object ref = this.guildName_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.guildName_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setGuildName(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1000;
                this.guildName_ = value;
                onChanged();
                return this;
            }


            public Builder clearGuildName() {
                this.bitField0_ &= 0xFFFFEFFF;
                this.guildName_ = GuildHandler.MemberInfo.getDefaultInstance().getGuildName();
                onChanged();
                return this;
            }


            public Builder setGuildNameBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1000;
                this.guildName_ = value;
                onChanged();
                return this;
            }
        }
    }


    public static final class ApplyInfo
            extends GeneratedMessage
            implements ApplyInfoOrBuilder {
        private static final ApplyInfo defaultInstance = new ApplyInfo(true);
        private final UnknownFieldSet unknownFields;

        private ApplyInfo(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private ApplyInfo(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static ApplyInfo getDefaultInstance() {
            return defaultInstance;
        }

        public ApplyInfo getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ApplyInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x1;
                            this.applyId_ = bs;
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.playerId_ = bs;
                            break;
                        case 24:
                            this.bitField0_ |= 0x4;
                            this.pro_ = input.readInt32();
                            break;
                        case 34:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x8;
                            this.name_ = bs;
                            break;
                        case 40:
                            this.bitField0_ |= 0x10;
                            this.level_ = input.readInt32();
                            break;
                        case 48:
                            this.bitField0_ |= 0x20;
                            this.fightPower_ = input.readInt32();
                            break;
                        case 56:
                            this.bitField0_ |= 0x40;
                            this.upLevel_ = input.readInt32();
                            break;
                        case 66:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x80;
                            this.createTime_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_ApplyInfo_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_ApplyInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(ApplyInfo.class, Builder.class);
        }

        public static Parser<ApplyInfo> PARSER = (Parser<ApplyInfo>) new AbstractParser<ApplyInfo>() {
            public GuildHandler.ApplyInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.ApplyInfo(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int APPLYID_FIELD_NUMBER = 1;
        private Object applyId_;
        public static final int PLAYERID_FIELD_NUMBER = 2;
        private Object playerId_;
        public static final int PRO_FIELD_NUMBER = 3;
        private int pro_;
        public static final int NAME_FIELD_NUMBER = 4;
        private Object name_;
        public static final int LEVEL_FIELD_NUMBER = 5;
        private int level_;
        public static final int FIGHTPOWER_FIELD_NUMBER = 6;
        private int fightPower_;
        public static final int UPLEVEL_FIELD_NUMBER = 7;
        private int upLevel_;
        public static final int CREATETIME_FIELD_NUMBER = 8;
        private Object createTime_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<ApplyInfo> getParserForType() {
            return PARSER;
        }

        public boolean hasApplyId() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public String getApplyId() {
            Object ref = this.applyId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.applyId_ = s;
            return s;
        }

        public ByteString getApplyIdBytes() {
            Object ref = this.applyId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.applyId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasPlayerId() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getPlayerId() {
            Object ref = this.playerId_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.playerId_ = s;
            return s;
        }

        static {
            defaultInstance.initFields();
        }


        public ByteString getPlayerIdBytes() {
            Object ref = this.playerId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.playerId_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasPro() {
            return ((this.bitField0_ & 0x4) == 4);
        }

        public int getPro() {
            return this.pro_;
        }

        public boolean hasName() {
            return ((this.bitField0_ & 0x8) == 8);
        }

        public String getName() {
            Object ref = this.name_;
            if (ref instanceof String) {
                return (String) ref;
            }
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.name_ = s;
            }
            return s;
        }

        public ByteString getNameBytes() {
            Object ref = this.name_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.name_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasLevel() {
            return ((this.bitField0_ & 0x10) == 16);
        }

        public int getLevel() {
            return this.level_;
        }

        public boolean hasFightPower() {
            return ((this.bitField0_ & 0x20) == 32);
        }

        public int getFightPower() {
            return this.fightPower_;
        }

        public boolean hasUpLevel() {
            return ((this.bitField0_ & 0x40) == 64);
        }

        public int getUpLevel() {
            return this.upLevel_;
        }

        public boolean hasCreateTime() {
            return ((this.bitField0_ & 0x80) == 128);
        }

        public String getCreateTime() {
            Object ref = this.createTime_;
            if (ref instanceof String) {
                return (String) ref;
            }
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.createTime_ = s;
            }
            return s;
        }

        public ByteString getCreateTimeBytes() {
            Object ref = this.createTime_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.createTime_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.applyId_ = "";
            this.playerId_ = "";
            this.pro_ = 0;
            this.name_ = "";
            this.level_ = 0;
            this.fightPower_ = 0;
            this.upLevel_ = 0;
            this.createTime_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
                return true;
            }
            if (isInitialized == 0) {
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) {
                output.writeBytes(1, getApplyIdBytes());
            }
            if ((this.bitField0_ & 0x2) == 2) {
                output.writeBytes(2, getPlayerIdBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                output.writeInt32(3, this.pro_);
            }
            if ((this.bitField0_ & 0x8) == 8) {
                output.writeBytes(4, getNameBytes());
            }
            if ((this.bitField0_ & 0x10) == 16) {
                output.writeInt32(5, this.level_);
            }
            if ((this.bitField0_ & 0x20) == 32) {
                output.writeInt32(6, this.fightPower_);
            }
            if ((this.bitField0_ & 0x40) == 64) {
                output.writeInt32(7, this.upLevel_);
            }
            if ((this.bitField0_ & 0x80) == 128) {
                output.writeBytes(8, getCreateTimeBytes());
            }
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) {
                size += CodedOutputStream.computeBytesSize(1, getApplyIdBytes());
            }
            if ((this.bitField0_ & 0x2) == 2) {
                size += CodedOutputStream.computeBytesSize(2, getPlayerIdBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                size += CodedOutputStream.computeInt32Size(3, this.pro_);
            }
            if ((this.bitField0_ & 0x8) == 8) {
                size += CodedOutputStream.computeBytesSize(4, getNameBytes());
            }
            if ((this.bitField0_ & 0x10) == 16) {
                size += CodedOutputStream.computeInt32Size(5, this.level_);
            }
            if ((this.bitField0_ & 0x20) == 32) {
                size += CodedOutputStream.computeInt32Size(6, this.fightPower_);
            }
            if ((this.bitField0_ & 0x40) == 64) {
                size += CodedOutputStream.computeInt32Size(7, this.upLevel_);
            }
            if ((this.bitField0_ & 0x80) == 128) {
                size += CodedOutputStream.computeBytesSize(8, getCreateTimeBytes());
            }
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static ApplyInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (ApplyInfo) PARSER.parseFrom(data);
        }

        public static ApplyInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ApplyInfo) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ApplyInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (ApplyInfo) PARSER.parseFrom(data);
        }

        public static ApplyInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ApplyInfo) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ApplyInfo parseFrom(InputStream input) throws IOException {
            return (ApplyInfo) PARSER.parseFrom(input);
        }

        public static ApplyInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ApplyInfo) PARSER.parseFrom(input, extensionRegistry);
        }

        public static ApplyInfo parseDelimitedFrom(InputStream input) throws IOException {
            return (ApplyInfo) PARSER.parseDelimitedFrom(input);
        }

        public static ApplyInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ApplyInfo) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static ApplyInfo parseFrom(CodedInputStream input) throws IOException {
            return (ApplyInfo) PARSER.parseFrom(input);
        }

        public static ApplyInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ApplyInfo) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ApplyInfo prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder
                extends GeneratedMessage.Builder<Builder>
                implements GuildHandler.ApplyInfoOrBuilder {
            private int bitField0_;
            private Object applyId_;
            private Object playerId_;
            private int pro_;
            private Object name_;
            private int level_;
            private int fightPower_;
            private int upLevel_;
            private Object createTime_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_ApplyInfo_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_ApplyInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.ApplyInfo.class, Builder.class);
            }

            private Builder() {
                this.applyId_ = "";
                this.playerId_ = "";
                this.name_ = "";
                this.createTime_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.applyId_ = "";
                this.playerId_ = "";
                this.name_ = "";
                this.createTime_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.ApplyInfo.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.applyId_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.playerId_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.pro_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.name_ = "";
                this.bitField0_ &= 0xFFFFFFF7;
                this.level_ = 0;
                this.bitField0_ &= 0xFFFFFFEF;
                this.fightPower_ = 0;
                this.bitField0_ &= 0xFFFFFFDF;
                this.upLevel_ = 0;
                this.bitField0_ &= 0xFFFFFFBF;
                this.createTime_ = "";
                this.bitField0_ &= 0xFFFFFF7F;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_ApplyInfo_descriptor;
            }

            public GuildHandler.ApplyInfo getDefaultInstanceForType() {
                return GuildHandler.ApplyInfo.getDefaultInstance();
            }

            public GuildHandler.ApplyInfo build() {
                GuildHandler.ApplyInfo result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public GuildHandler.ApplyInfo buildPartial() {
                GuildHandler.ApplyInfo result = new GuildHandler.ApplyInfo(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) {
                    to_bitField0_ |= 0x1;
                }
                result.applyId_ = this.applyId_;
                if ((from_bitField0_ & 0x2) == 2) {
                    to_bitField0_ |= 0x2;
                }
                result.playerId_ = this.playerId_;
                if ((from_bitField0_ & 0x4) == 4) {
                    to_bitField0_ |= 0x4;
                }
                result.pro_ = this.pro_;
                if ((from_bitField0_ & 0x8) == 8) {
                    to_bitField0_ |= 0x8;
                }
                result.name_ = this.name_;
                if ((from_bitField0_ & 0x10) == 16) {
                    to_bitField0_ |= 0x10;
                }
                result.level_ = this.level_;
                if ((from_bitField0_ & 0x20) == 32) {
                    to_bitField0_ |= 0x20;
                }
                result.fightPower_ = this.fightPower_;
                if ((from_bitField0_ & 0x40) == 64) {
                    to_bitField0_ |= 0x40;
                }
                result.upLevel_ = this.upLevel_;
                if ((from_bitField0_ & 0x80) == 128) {
                    to_bitField0_ |= 0x80;
                }
                result.createTime_ = this.createTime_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.ApplyInfo) {
                    return mergeFrom((GuildHandler.ApplyInfo) other);
                }
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.ApplyInfo other) {
                if (other == GuildHandler.ApplyInfo.getDefaultInstance()) {
                    return this;
                }
                if (other.hasApplyId()) {
                    this.bitField0_ |= 0x1;
                    this.applyId_ = other.applyId_;
                    onChanged();
                }
                if (other.hasPlayerId()) {
                    this.bitField0_ |= 0x2;
                    this.playerId_ = other.playerId_;
                    onChanged();
                }
                if (other.hasPro()) {
                    setPro(other.getPro());
                }
                if (other.hasName()) {
                    this.bitField0_ |= 0x8;
                    this.name_ = other.name_;
                    onChanged();
                }
                if (other.hasLevel()) {
                    setLevel(other.getLevel());
                }
                if (other.hasFightPower()) {
                    setFightPower(other.getFightPower());
                }
                if (other.hasUpLevel()) {
                    setUpLevel(other.getUpLevel());
                }
                if (other.hasCreateTime()) {
                    this.bitField0_ |= 0x80;
                    this.createTime_ = other.createTime_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.ApplyInfo parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.ApplyInfo) GuildHandler.ApplyInfo.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.ApplyInfo) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            public boolean hasApplyId() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public String getApplyId() {
                Object ref = this.applyId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.applyId_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }

            public ByteString getApplyIdBytes() {
                Object ref = this.applyId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.applyId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setApplyId(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1;
                this.applyId_ = value;
                onChanged();
                return this;
            }

            public Builder clearApplyId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.applyId_ = GuildHandler.ApplyInfo.getDefaultInstance().getApplyId();
                onChanged();
                return this;
            }

            public Builder setApplyIdBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1;
                this.applyId_ = value;
                onChanged();
                return this;
            }

            public boolean hasPlayerId() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getPlayerId() {
                Object ref = this.playerId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.playerId_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }

            public ByteString getPlayerIdBytes() {
                Object ref = this.playerId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.playerId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setPlayerId(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.playerId_ = value;
                onChanged();
                return this;
            }

            public Builder clearPlayerId() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.playerId_ = GuildHandler.ApplyInfo.getDefaultInstance().getPlayerId();
                onChanged();
                return this;
            }

            public Builder setPlayerIdBytes(ByteString value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.playerId_ = value;
                onChanged();
                return this;
            }

            public boolean hasPro() {
                return ((this.bitField0_ & 0x4) == 4);
            }

            public int getPro() {
                return this.pro_;
            }

            public Builder setPro(int value) {
                this.bitField0_ |= 0x4;
                this.pro_ = value;
                onChanged();
                return this;
            }

            public Builder clearPro() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.pro_ = 0;
                onChanged();
                return this;
            }

            public boolean hasName() {
                return ((this.bitField0_ & 0x8) == 8);
            }

            public String getName() {
                Object ref = this.name_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8())
                        this.name_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getNameBytes() {
                Object ref = this.name_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.name_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setName(String value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x8;
                this.name_ = value;
                onChanged();
                return this;
            }

            public Builder clearName() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.name_ = GuildHandler.ApplyInfo.getDefaultInstance().getName();
                onChanged();
                return this;
            }

            public Builder setNameBytes(ByteString value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x8;
                this.name_ = value;
                onChanged();
                return this;
            }

            public boolean hasLevel() {
                return ((this.bitField0_ & 0x10) == 16);
            }

            public int getLevel() {
                return this.level_;
            }

            public Builder setLevel(int value) {
                this.bitField0_ |= 0x10;
                this.level_ = value;
                onChanged();
                return this;
            }

            public Builder clearLevel() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.level_ = 0;
                onChanged();
                return this;
            }

            public boolean hasFightPower() {
                return ((this.bitField0_ & 0x20) == 32);
            }

            public int getFightPower() {
                return this.fightPower_;
            }

            public Builder setFightPower(int value) {
                this.bitField0_ |= 0x20;
                this.fightPower_ = value;
                onChanged();
                return this;
            }

            public Builder clearFightPower() {
                this.bitField0_ &= 0xFFFFFFDF;
                this.fightPower_ = 0;
                onChanged();
                return this;
            }

            public boolean hasUpLevel() {
                return ((this.bitField0_ & 0x40) == 64);
            }

            public int getUpLevel() {
                return this.upLevel_;
            }

            public Builder setUpLevel(int value) {
                this.bitField0_ |= 0x40;
                this.upLevel_ = value;
                onChanged();
                return this;
            }

            public Builder clearUpLevel() {
                this.bitField0_ &= 0xFFFFFFBF;
                this.upLevel_ = 0;
                onChanged();
                return this;
            }

            public boolean hasCreateTime() {
                return ((this.bitField0_ & 0x80) == 128);
            }

            public String getCreateTime() {
                Object ref = this.createTime_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8())
                        this.createTime_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getCreateTimeBytes() {
                Object ref = this.createTime_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.createTime_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setCreateTime(String value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x80;
                this.createTime_ = value;
                onChanged();
                return this;
            }

            public Builder clearCreateTime() {
                this.bitField0_ &= 0xFFFFFF7F;
                this.createTime_ = GuildHandler.ApplyInfo.getDefaultInstance().getCreateTime();
                onChanged();
                return this;
            }

            public Builder setCreateTimeBytes(ByteString value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x80;
                this.createTime_ = value;
                onChanged();
                return this;
            }
        }
    }

    public static final class CreateGuildResponse
            extends GeneratedMessage
            implements CreateGuildResponseOrBuilder {
        private static final CreateGuildResponse defaultInstance = new CreateGuildResponse(true);
        private final UnknownFieldSet unknownFields;

        private CreateGuildResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CreateGuildResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CreateGuildResponse getDefaultInstance() {
            return defaultInstance;
        }

        public CreateGuildResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CreateGuildResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    GuildHandler.MyGuildInfo.Builder subBuilder;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 26:
                            subBuilder = null;
                            if ((this.bitField0_ & 0x4) == 4) subBuilder = this.s2CGuildInfo_.toBuilder();
                            this.s2CGuildInfo_ = (GuildHandler.MyGuildInfo) input.readMessage(GuildHandler.MyGuildInfo.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.s2CGuildInfo_);
                                this.s2CGuildInfo_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x4;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_CreateGuildResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_CreateGuildResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(CreateGuildResponse.class, Builder.class);
        }

        public static Parser<CreateGuildResponse> PARSER = (Parser<CreateGuildResponse>) new AbstractParser<CreateGuildResponse>() {
            public GuildHandler.CreateGuildResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.CreateGuildResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int S2C_GUILDINFO_FIELD_NUMBER = 3;
        private GuildHandler.MyGuildInfo s2CGuildInfo_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<CreateGuildResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        static {
            defaultInstance.initFields();
        }


        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }


        public boolean hasS2CGuildInfo() {
            return ((this.bitField0_ & 0x4) == 4);
        }


        public GuildHandler.MyGuildInfo getS2CGuildInfo() {
            return this.s2CGuildInfo_;
        }


        public GuildHandler.MyGuildInfoOrBuilder getS2CGuildInfoOrBuilder() {
            return this.s2CGuildInfo_;
        }


        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.getDefaultInstance();
        }


        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
                return true;
            }
            if (isInitialized == 0) {
                return false;
            }
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }


        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) {
                output.writeInt32(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                output.writeBytes(2, getS2CMsgBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                output.writeMessage(3, (MessageLite) this.s2CGuildInfo_);
            }
            getUnknownFields().writeTo(output);
        }


        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) {
                size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                size += CodedOutputStream.computeMessageSize(3, (MessageLite) this.s2CGuildInfo_);
            }
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }


        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }


        public static CreateGuildResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (CreateGuildResponse) PARSER.parseFrom(data);
        }


        public static CreateGuildResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (CreateGuildResponse) PARSER.parseFrom(data, extensionRegistry);
        }


        public static CreateGuildResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (CreateGuildResponse) PARSER.parseFrom(data);
        }


        public static CreateGuildResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (CreateGuildResponse) PARSER.parseFrom(data, extensionRegistry);
        }


        public static CreateGuildResponse parseFrom(InputStream input) throws IOException {
            return (CreateGuildResponse) PARSER.parseFrom(input);
        }


        public static CreateGuildResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (CreateGuildResponse) PARSER.parseFrom(input, extensionRegistry);
        }


        public static CreateGuildResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (CreateGuildResponse) PARSER.parseDelimitedFrom(input);
        }


        public static CreateGuildResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (CreateGuildResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }


        public static CreateGuildResponse parseFrom(CodedInputStream input) throws IOException {
            return (CreateGuildResponse) PARSER.parseFrom(input);
        }


        public static CreateGuildResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (CreateGuildResponse) PARSER.parseFrom(input, extensionRegistry);
        }


        public static Builder newBuilder() {
            return Builder.create();
        }


        public Builder newBuilderForType() {
            return newBuilder();
        }


        public static Builder newBuilder(CreateGuildResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }


        public Builder toBuilder() {
            return newBuilder(this);
        }


        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }


        public static final class Builder
                extends GeneratedMessage.Builder<Builder>
                implements GuildHandler.CreateGuildResponseOrBuilder {
            private int bitField0_;


            private int s2CCode_;


            private Object s2CMsg_;


            private GuildHandler.MyGuildInfo s2CGuildInfo_;


            private SingleFieldBuilder<GuildHandler.MyGuildInfo, GuildHandler.MyGuildInfo.Builder, GuildHandler.MyGuildInfoOrBuilder> s2CGuildInfoBuilder_;


            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_CreateGuildResponse_descriptor;
            }


            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_CreateGuildResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.CreateGuildResponse.class, Builder.class);
            }


            private Builder() {
                this.s2CMsg_ = "";
                this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }


            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }


            private void maybeForceBuilderInitialization() {
                if (GuildHandler.CreateGuildResponse.alwaysUseFieldBuilders) {
                    getS2CGuildInfoFieldBuilder();
                }
            }


            private static Builder create() {
                return new Builder();
            }


            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                if (this.s2CGuildInfoBuilder_ == null) {
                    this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.getDefaultInstance();
                } else {
                    this.s2CGuildInfoBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }


            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }


            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_CreateGuildResponse_descriptor;
            }


            public GuildHandler.CreateGuildResponse getDefaultInstanceForType() {
                return GuildHandler.CreateGuildResponse.getDefaultInstance();
            }


            public GuildHandler.CreateGuildResponse build() {
                GuildHandler.CreateGuildResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }


            public GuildHandler.CreateGuildResponse buildPartial() {
                GuildHandler.CreateGuildResponse result = new GuildHandler.CreateGuildResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) {
                    to_bitField0_ |= 0x1;
                }
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) {
                    to_bitField0_ |= 0x2;
                }
                result.s2CMsg_ = this.s2CMsg_;
                if ((from_bitField0_ & 0x4) == 4) {
                    to_bitField0_ |= 0x4;
                }
                if (this.s2CGuildInfoBuilder_ == null) {
                    result.s2CGuildInfo_ = this.s2CGuildInfo_;
                } else {
                    result.s2CGuildInfo_ = (GuildHandler.MyGuildInfo) this.s2CGuildInfoBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }


            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.CreateGuildResponse) {
                    return mergeFrom((GuildHandler.CreateGuildResponse) other);
                }
                super.mergeFrom(other);
                return this;
            }


            public Builder mergeFrom(GuildHandler.CreateGuildResponse other) {
                if (other == GuildHandler.CreateGuildResponse.getDefaultInstance()) {
                    return this;
                }
                if (other.hasS2CCode()) {
                    setS2CCode(other.getS2CCode());
                }
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (other.hasS2CGuildInfo()) {
                    mergeS2CGuildInfo(other.getS2CGuildInfo());
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }


            public final boolean isInitialized() {
                if (!hasS2CCode()) {
                    return false;
                }
                return true;
            }


            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.CreateGuildResponse parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.CreateGuildResponse) GuildHandler.CreateGuildResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.CreateGuildResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }


            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }


            public int getS2CCode() {
                return this.s2CCode_;
            }


            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }


            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }


            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }


            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.s2CMsg_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setS2CMsg(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }


            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.CreateGuildResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }


            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }


            public boolean hasS2CGuildInfo() {
                return ((this.bitField0_ & 0x4) == 4);
            }


            public GuildHandler.MyGuildInfo getS2CGuildInfo() {
                if (this.s2CGuildInfoBuilder_ == null) {
                    return this.s2CGuildInfo_;
                }
                return (GuildHandler.MyGuildInfo) this.s2CGuildInfoBuilder_.getMessage();
            }


            public Builder setS2CGuildInfo(GuildHandler.MyGuildInfo value) {
                if (this.s2CGuildInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.s2CGuildInfo_ = value;
                    onChanged();
                } else {
                    this.s2CGuildInfoBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }


            public Builder setS2CGuildInfo(GuildHandler.MyGuildInfo.Builder builderForValue) {
                if (this.s2CGuildInfoBuilder_ == null) {
                    this.s2CGuildInfo_ = builderForValue.build();
                    onChanged();
                } else {
                    this.s2CGuildInfoBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x4;
                return this;
            }


            public Builder mergeS2CGuildInfo(GuildHandler.MyGuildInfo value) {
                if (this.s2CGuildInfoBuilder_ == null) {
                    if ((this.bitField0_ & 0x4) == 4 && this.s2CGuildInfo_ != GuildHandler.MyGuildInfo.getDefaultInstance()) {
                        this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.newBuilder(this.s2CGuildInfo_).mergeFrom(value).buildPartial();
                    } else {
                        this.s2CGuildInfo_ = value;
                    }
                    onChanged();
                } else {
                    this.s2CGuildInfoBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }


            public Builder clearS2CGuildInfo() {
                if (this.s2CGuildInfoBuilder_ == null) {
                    this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.s2CGuildInfoBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }


            public GuildHandler.MyGuildInfo.Builder getS2CGuildInfoBuilder() {
                this.bitField0_ |= 0x4;
                onChanged();
                return (GuildHandler.MyGuildInfo.Builder) getS2CGuildInfoFieldBuilder().getBuilder();
            }


            public GuildHandler.MyGuildInfoOrBuilder getS2CGuildInfoOrBuilder() {
                if (this.s2CGuildInfoBuilder_ != null) {
                    return (GuildHandler.MyGuildInfoOrBuilder) this.s2CGuildInfoBuilder_.getMessageOrBuilder();
                }
                return this.s2CGuildInfo_;
            }


            private SingleFieldBuilder<GuildHandler.MyGuildInfo, GuildHandler.MyGuildInfo.Builder, GuildHandler.MyGuildInfoOrBuilder> getS2CGuildInfoFieldBuilder() {
                if (this.s2CGuildInfoBuilder_ == null) {
                    this.s2CGuildInfoBuilder_ = new SingleFieldBuilder(getS2CGuildInfo(), getParentForChildren(), isClean());
                    this.s2CGuildInfo_ = null;
                }
                return this.s2CGuildInfoBuilder_;
            }
        }
    }


    public static final class GetGuildListResponse
            extends GeneratedMessage
            implements GetGuildListResponseOrBuilder {
        private static final GetGuildListResponse defaultInstance = new GetGuildListResponse(true);
        private final UnknownFieldSet unknownFields;

        private GetGuildListResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private GetGuildListResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static GetGuildListResponse getDefaultInstance() {
            return defaultInstance;
        }

        public GetGuildListResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private GetGuildListResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 26:
                            if ((mutable_bitField0_ & 0x4) != 4) {
                                this.s2CGuildList_ = new ArrayList<>();
                                mutable_bitField0_ |= 0x4;
                            }
                            this.s2CGuildList_.add(input.readMessage(GuildHandler.GuildInfo.PARSER, extensionRegistry));
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                if ((mutable_bitField0_ & 0x4) == 4)
                    this.s2CGuildList_ = Collections.unmodifiableList(this.s2CGuildList_);
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_GetGuildListResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_GetGuildListResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GetGuildListResponse.class, Builder.class);
        }

        public static Parser<GetGuildListResponse> PARSER = (Parser<GetGuildListResponse>) new AbstractParser<GetGuildListResponse>() {
            public GuildHandler.GetGuildListResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.GetGuildListResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int S2C_GUILDLIST_FIELD_NUMBER = 3;
        private List<GuildHandler.GuildInfo> s2CGuildList_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<GetGuildListResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        static {
            defaultInstance.initFields();
        }


        public List<GuildHandler.GuildInfo> getS2CGuildListList() {
            return this.s2CGuildList_;
        }

        public List<? extends GuildHandler.GuildInfoOrBuilder> getS2CGuildListOrBuilderList() {
            return (List) this.s2CGuildList_;
        }

        public int getS2CGuildListCount() {
            return this.s2CGuildList_.size();
        }

        public GuildHandler.GuildInfo getS2CGuildList(int index) {
            return this.s2CGuildList_.get(index);
        }

        public GuildHandler.GuildInfoOrBuilder getS2CGuildListOrBuilder(int index) {
            return this.s2CGuildList_.get(index);
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.s2CGuildList_ = Collections.emptyList();
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
                return true;
            }
            if (isInitialized == 0) {
                return false;
            }
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) {
                output.writeInt32(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                output.writeBytes(2, getS2CMsgBytes());
            }
            for (int i = 0; i < this.s2CGuildList_.size(); i++) {
                output.writeMessage(3, (MessageLite) this.s2CGuildList_.get(i));
            }
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) {
                size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            }
            for (int i = 0; i < this.s2CGuildList_.size(); i++) {
                size += CodedOutputStream.computeMessageSize(3, (MessageLite) this.s2CGuildList_.get(i));
            }
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static GetGuildListResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (GetGuildListResponse) PARSER.parseFrom(data);
        }

        public static GetGuildListResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetGuildListResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GetGuildListResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (GetGuildListResponse) PARSER.parseFrom(data);
        }

        public static GetGuildListResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetGuildListResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GetGuildListResponse parseFrom(InputStream input) throws IOException {
            return (GetGuildListResponse) PARSER.parseFrom(input);
        }

        public static GetGuildListResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetGuildListResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static GetGuildListResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (GetGuildListResponse) PARSER.parseDelimitedFrom(input);
        }

        public static GetGuildListResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetGuildListResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static GetGuildListResponse parseFrom(CodedInputStream input) throws IOException {
            return (GetGuildListResponse) PARSER.parseFrom(input);
        }

        public static GetGuildListResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetGuildListResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(GetGuildListResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder
                extends GeneratedMessage.Builder<Builder>
                implements GuildHandler.GetGuildListResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;
            private List<GuildHandler.GuildInfo> s2CGuildList_;
            private RepeatedFieldBuilder<GuildHandler.GuildInfo, GuildHandler.GuildInfo.Builder, GuildHandler.GuildInfoOrBuilder> s2CGuildListBuilder_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_GetGuildListResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_GetGuildListResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.GetGuildListResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                this.s2CGuildList_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                this.s2CGuildList_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.GetGuildListResponse.alwaysUseFieldBuilders) {
                    getS2CGuildListFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                if (this.s2CGuildListBuilder_ == null) {
                    this.s2CGuildList_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFB;
                } else {
                    this.s2CGuildListBuilder_.clear();
                }
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_GetGuildListResponse_descriptor;
            }

            public GuildHandler.GetGuildListResponse getDefaultInstanceForType() {
                return GuildHandler.GetGuildListResponse.getDefaultInstance();
            }

            public GuildHandler.GetGuildListResponse build() {
                GuildHandler.GetGuildListResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public GuildHandler.GetGuildListResponse buildPartial() {
                GuildHandler.GetGuildListResponse result = new GuildHandler.GetGuildListResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) {
                    to_bitField0_ |= 0x1;
                }
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) {
                    to_bitField0_ |= 0x2;
                }
                result.s2CMsg_ = this.s2CMsg_;
                if (this.s2CGuildListBuilder_ == null) {
                    if ((this.bitField0_ & 0x4) == 4) {
                        this.s2CGuildList_ = Collections.unmodifiableList(this.s2CGuildList_);
                        this.bitField0_ &= 0xFFFFFFFB;
                    }
                    result.s2CGuildList_ = this.s2CGuildList_;
                } else {
                    result.s2CGuildList_ = this.s2CGuildListBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.GetGuildListResponse) {
                    return mergeFrom((GuildHandler.GetGuildListResponse) other);
                }
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.GetGuildListResponse other) {
                if (other == GuildHandler.GetGuildListResponse.getDefaultInstance()) {
                    return this;
                }
                if (other.hasS2CCode()) {
                    setS2CCode(other.getS2CCode());
                }
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (this.s2CGuildListBuilder_ == null) {
                    if (!other.s2CGuildList_.isEmpty()) {
                        if (this.s2CGuildList_.isEmpty()) {
                            this.s2CGuildList_ = other.s2CGuildList_;
                            this.bitField0_ &= 0xFFFFFFFB;
                        } else {
                            ensureS2CGuildListIsMutable();
                            this.s2CGuildList_.addAll(other.s2CGuildList_);
                        }
                        onChanged();
                    }
                } else if (!other.s2CGuildList_.isEmpty()) {
                    if (this.s2CGuildListBuilder_.isEmpty()) {
                        this.s2CGuildListBuilder_.dispose();
                        this.s2CGuildListBuilder_ = null;
                        this.s2CGuildList_ = other.s2CGuildList_;
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.s2CGuildListBuilder_ = GuildHandler.GetGuildListResponse.alwaysUseFieldBuilders ? getS2CGuildListFieldBuilder() : null;
                    } else {
                        this.s2CGuildListBuilder_.addAllMessages(other.s2CGuildList_);
                    }
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) {
                    return false;
                }
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.GetGuildListResponse parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.GetGuildListResponse) GuildHandler.GetGuildListResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.GetGuildListResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.s2CMsg_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.GetGuildListResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            private void ensureS2CGuildListIsMutable() {
                if ((this.bitField0_ & 0x4) != 4) {
                    this.s2CGuildList_ = new ArrayList<>(this.s2CGuildList_);
                    this.bitField0_ |= 0x4;
                }
            }

            public List<GuildHandler.GuildInfo> getS2CGuildListList() {
                if (this.s2CGuildListBuilder_ == null)
                    return Collections.unmodifiableList(this.s2CGuildList_);
                return this.s2CGuildListBuilder_.getMessageList();
            }

            public int getS2CGuildListCount() {
                if (this.s2CGuildListBuilder_ == null)
                    return this.s2CGuildList_.size();
                return this.s2CGuildListBuilder_.getCount();
            }

            public GuildHandler.GuildInfo getS2CGuildList(int index) {
                if (this.s2CGuildListBuilder_ == null)
                    return this.s2CGuildList_.get(index);
                return (GuildHandler.GuildInfo) this.s2CGuildListBuilder_.getMessage(index);
            }

            public Builder setS2CGuildList(int index, GuildHandler.GuildInfo value) {
                if (this.s2CGuildListBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureS2CGuildListIsMutable();
                    this.s2CGuildList_.set(index, value);
                    onChanged();
                } else {
                    this.s2CGuildListBuilder_.setMessage(index, value);
                }
                return this;
            }

            public Builder setS2CGuildList(int index, GuildHandler.GuildInfo.Builder builderForValue) {
                if (this.s2CGuildListBuilder_ == null) {
                    ensureS2CGuildListIsMutable();
                    this.s2CGuildList_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    this.s2CGuildListBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            public Builder addS2CGuildList(GuildHandler.GuildInfo value) {
                if (this.s2CGuildListBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureS2CGuildListIsMutable();
                    this.s2CGuildList_.add(value);
                    onChanged();
                } else {
                    this.s2CGuildListBuilder_.addMessage(value);
                }
                return this;
            }

            public Builder addS2CGuildList(int index, GuildHandler.GuildInfo value) {
                if (this.s2CGuildListBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureS2CGuildListIsMutable();
                    this.s2CGuildList_.add(index, value);
                    onChanged();
                } else {
                    this.s2CGuildListBuilder_.addMessage(index, value);
                }
                return this;
            }

            public Builder addS2CGuildList(GuildHandler.GuildInfo.Builder builderForValue) {
                if (this.s2CGuildListBuilder_ == null) {
                    ensureS2CGuildListIsMutable();
                    this.s2CGuildList_.add(builderForValue.build());
                    onChanged();
                } else {
                    this.s2CGuildListBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            public Builder addS2CGuildList(int index, GuildHandler.GuildInfo.Builder builderForValue) {
                if (this.s2CGuildListBuilder_ == null) {
                    ensureS2CGuildListIsMutable();
                    this.s2CGuildList_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    this.s2CGuildListBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            public Builder addAllS2CGuildList(Iterable<? extends GuildHandler.GuildInfo> values) {
                if (this.s2CGuildListBuilder_ == null) {
                    ensureS2CGuildListIsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.s2CGuildList_);
                    onChanged();
                } else {
                    this.s2CGuildListBuilder_.addAllMessages(values);
                }
                return this;
            }

            public Builder clearS2CGuildList() {
                if (this.s2CGuildListBuilder_ == null) {
                    this.s2CGuildList_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFB;
                    onChanged();
                } else {
                    this.s2CGuildListBuilder_.clear();
                }
                return this;
            }

            public Builder removeS2CGuildList(int index) {
                if (this.s2CGuildListBuilder_ == null) {
                    ensureS2CGuildListIsMutable();
                    this.s2CGuildList_.remove(index);
                    onChanged();
                } else {
                    this.s2CGuildListBuilder_.remove(index);
                }
                return this;
            }

            public GuildHandler.GuildInfo.Builder getS2CGuildListBuilder(int index) {
                return (GuildHandler.GuildInfo.Builder) getS2CGuildListFieldBuilder().getBuilder(index);
            }

            public GuildHandler.GuildInfoOrBuilder getS2CGuildListOrBuilder(int index) {
                if (this.s2CGuildListBuilder_ == null)
                    return this.s2CGuildList_.get(index);
                return (GuildHandler.GuildInfoOrBuilder) this.s2CGuildListBuilder_.getMessageOrBuilder(index);
            }

            public List<? extends GuildHandler.GuildInfoOrBuilder> getS2CGuildListOrBuilderList() {
                if (this.s2CGuildListBuilder_ != null)
                    return this.s2CGuildListBuilder_.getMessageOrBuilderList();
                return Collections.unmodifiableList((List) this.s2CGuildList_);
            }

            public GuildHandler.GuildInfo.Builder addS2CGuildListBuilder() {
                return (GuildHandler.GuildInfo.Builder) getS2CGuildListFieldBuilder().addBuilder(GuildHandler.GuildInfo.getDefaultInstance());
            }

            public GuildHandler.GuildInfo.Builder addS2CGuildListBuilder(int index) {
                return (GuildHandler.GuildInfo.Builder) getS2CGuildListFieldBuilder().addBuilder(index, GuildHandler.GuildInfo.getDefaultInstance());
            }

            public List<GuildHandler.GuildInfo.Builder> getS2CGuildListBuilderList() {
                return getS2CGuildListFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilder<GuildHandler.GuildInfo, GuildHandler.GuildInfo.Builder, GuildHandler.GuildInfoOrBuilder> getS2CGuildListFieldBuilder() {
                if (this.s2CGuildListBuilder_ == null) {
                    this.s2CGuildListBuilder_ = new RepeatedFieldBuilder(this.s2CGuildList_, ((this.bitField0_ & 0x4) == 4), getParentForChildren(), isClean());
                    this.s2CGuildList_ = null;
                }
                return this.s2CGuildListBuilder_;
            }
        }
    }

    public static final class JoinGuildResponse
            extends GeneratedMessage
            implements JoinGuildResponseOrBuilder {
        private static final JoinGuildResponse defaultInstance = new JoinGuildResponse(true);
        private final UnknownFieldSet unknownFields;

        private JoinGuildResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private JoinGuildResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static JoinGuildResponse getDefaultInstance() {
            return defaultInstance;
        }

        public JoinGuildResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private JoinGuildResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_JoinGuildResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_JoinGuildResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(JoinGuildResponse.class, Builder.class);
        }

        public static Parser<JoinGuildResponse> PARSER = (Parser<JoinGuildResponse>) new AbstractParser<JoinGuildResponse>() {
            public GuildHandler.JoinGuildResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.JoinGuildResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<JoinGuildResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static JoinGuildResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (JoinGuildResponse) PARSER.parseFrom(data);
        }

        public static JoinGuildResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (JoinGuildResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static JoinGuildResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (JoinGuildResponse) PARSER.parseFrom(data);
        }

        public static JoinGuildResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (JoinGuildResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static JoinGuildResponse parseFrom(InputStream input) throws IOException {
            return (JoinGuildResponse) PARSER.parseFrom(input);
        }

        public static JoinGuildResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (JoinGuildResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static JoinGuildResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (JoinGuildResponse) PARSER.parseDelimitedFrom(input);
        }

        public static JoinGuildResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (JoinGuildResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static JoinGuildResponse parseFrom(CodedInputStream input) throws IOException {
            return (JoinGuildResponse) PARSER.parseFrom(input);
        }

        public static JoinGuildResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (JoinGuildResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(JoinGuildResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.JoinGuildResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_JoinGuildResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_JoinGuildResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.JoinGuildResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.JoinGuildResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_JoinGuildResponse_descriptor;
            }

            public GuildHandler.JoinGuildResponse getDefaultInstanceForType() {
                return GuildHandler.JoinGuildResponse.getDefaultInstance();
            }

            public GuildHandler.JoinGuildResponse build() {
                GuildHandler.JoinGuildResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.JoinGuildResponse buildPartial() {
                GuildHandler.JoinGuildResponse result = new GuildHandler.JoinGuildResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.JoinGuildResponse)
                    return mergeFrom((GuildHandler.JoinGuildResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.JoinGuildResponse other) {
                if (other == GuildHandler.JoinGuildResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.JoinGuildResponse parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.JoinGuildResponse) GuildHandler.JoinGuildResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.JoinGuildResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.JoinGuildResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class JoinGuildOfPlayerResponse
            extends GeneratedMessage
            implements JoinGuildOfPlayerResponseOrBuilder {
        private static final JoinGuildOfPlayerResponse defaultInstance = new JoinGuildOfPlayerResponse(true);
        private final UnknownFieldSet unknownFields;

        private JoinGuildOfPlayerResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private JoinGuildOfPlayerResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static JoinGuildOfPlayerResponse getDefaultInstance() {
            return defaultInstance;
        }

        public JoinGuildOfPlayerResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private JoinGuildOfPlayerResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_JoinGuildOfPlayerResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_JoinGuildOfPlayerResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(JoinGuildOfPlayerResponse.class, Builder.class);
        }

        public static Parser<JoinGuildOfPlayerResponse> PARSER = (Parser<JoinGuildOfPlayerResponse>) new AbstractParser<JoinGuildOfPlayerResponse>() {
            public GuildHandler.JoinGuildOfPlayerResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.JoinGuildOfPlayerResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<JoinGuildOfPlayerResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static JoinGuildOfPlayerResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (JoinGuildOfPlayerResponse) PARSER.parseFrom(data);
        }

        public static JoinGuildOfPlayerResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (JoinGuildOfPlayerResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static JoinGuildOfPlayerResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (JoinGuildOfPlayerResponse) PARSER.parseFrom(data);
        }

        public static JoinGuildOfPlayerResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (JoinGuildOfPlayerResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static JoinGuildOfPlayerResponse parseFrom(InputStream input) throws IOException {
            return (JoinGuildOfPlayerResponse) PARSER.parseFrom(input);
        }

        public static JoinGuildOfPlayerResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (JoinGuildOfPlayerResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static JoinGuildOfPlayerResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (JoinGuildOfPlayerResponse) PARSER.parseDelimitedFrom(input);
        }

        public static JoinGuildOfPlayerResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (JoinGuildOfPlayerResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static JoinGuildOfPlayerResponse parseFrom(CodedInputStream input) throws IOException {
            return (JoinGuildOfPlayerResponse) PARSER.parseFrom(input);
        }

        public static JoinGuildOfPlayerResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (JoinGuildOfPlayerResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(JoinGuildOfPlayerResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.JoinGuildOfPlayerResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_JoinGuildOfPlayerResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_JoinGuildOfPlayerResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.JoinGuildOfPlayerResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.JoinGuildOfPlayerResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_JoinGuildOfPlayerResponse_descriptor;
            }

            public GuildHandler.JoinGuildOfPlayerResponse getDefaultInstanceForType() {
                return GuildHandler.JoinGuildOfPlayerResponse.getDefaultInstance();
            }

            public GuildHandler.JoinGuildOfPlayerResponse build() {
                GuildHandler.JoinGuildOfPlayerResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.JoinGuildOfPlayerResponse buildPartial() {
                GuildHandler.JoinGuildOfPlayerResponse result = new GuildHandler.JoinGuildOfPlayerResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.JoinGuildOfPlayerResponse)
                    return mergeFrom((GuildHandler.JoinGuildOfPlayerResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.JoinGuildOfPlayerResponse other) {
                if (other == GuildHandler.JoinGuildOfPlayerResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.JoinGuildOfPlayerResponse parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.JoinGuildOfPlayerResponse) GuildHandler.JoinGuildOfPlayerResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.JoinGuildOfPlayerResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.JoinGuildOfPlayerResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class InvitePlayerJoinMyGuildResponse
            extends GeneratedMessage
            implements InvitePlayerJoinMyGuildResponseOrBuilder {
        private static final InvitePlayerJoinMyGuildResponse defaultInstance = new InvitePlayerJoinMyGuildResponse(true);
        private final UnknownFieldSet unknownFields;

        private InvitePlayerJoinMyGuildResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private InvitePlayerJoinMyGuildResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static InvitePlayerJoinMyGuildResponse getDefaultInstance() {
            return defaultInstance;
        }

        public InvitePlayerJoinMyGuildResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private InvitePlayerJoinMyGuildResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_InvitePlayerJoinMyGuildResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_InvitePlayerJoinMyGuildResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(InvitePlayerJoinMyGuildResponse.class, Builder.class);
        }

        public static Parser<InvitePlayerJoinMyGuildResponse> PARSER = (Parser<InvitePlayerJoinMyGuildResponse>) new AbstractParser<InvitePlayerJoinMyGuildResponse>() {
            public GuildHandler.InvitePlayerJoinMyGuildResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.InvitePlayerJoinMyGuildResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<InvitePlayerJoinMyGuildResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static InvitePlayerJoinMyGuildResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (InvitePlayerJoinMyGuildResponse) PARSER.parseFrom(data);
        }

        public static InvitePlayerJoinMyGuildResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (InvitePlayerJoinMyGuildResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static InvitePlayerJoinMyGuildResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (InvitePlayerJoinMyGuildResponse) PARSER.parseFrom(data);
        }

        public static InvitePlayerJoinMyGuildResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (InvitePlayerJoinMyGuildResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static InvitePlayerJoinMyGuildResponse parseFrom(InputStream input) throws IOException {
            return (InvitePlayerJoinMyGuildResponse) PARSER.parseFrom(input);
        }

        public static InvitePlayerJoinMyGuildResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (InvitePlayerJoinMyGuildResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static InvitePlayerJoinMyGuildResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (InvitePlayerJoinMyGuildResponse) PARSER.parseDelimitedFrom(input);
        }

        public static InvitePlayerJoinMyGuildResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (InvitePlayerJoinMyGuildResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static InvitePlayerJoinMyGuildResponse parseFrom(CodedInputStream input) throws IOException {
            return (InvitePlayerJoinMyGuildResponse) PARSER.parseFrom(input);
        }

        public static InvitePlayerJoinMyGuildResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (InvitePlayerJoinMyGuildResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(InvitePlayerJoinMyGuildResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.InvitePlayerJoinMyGuildResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_InvitePlayerJoinMyGuildResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_InvitePlayerJoinMyGuildResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.InvitePlayerJoinMyGuildResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.InvitePlayerJoinMyGuildResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_InvitePlayerJoinMyGuildResponse_descriptor;
            }

            public GuildHandler.InvitePlayerJoinMyGuildResponse getDefaultInstanceForType() {
                return GuildHandler.InvitePlayerJoinMyGuildResponse.getDefaultInstance();
            }

            public GuildHandler.InvitePlayerJoinMyGuildResponse build() {
                GuildHandler.InvitePlayerJoinMyGuildResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.InvitePlayerJoinMyGuildResponse buildPartial() {
                GuildHandler.InvitePlayerJoinMyGuildResponse result = new GuildHandler.InvitePlayerJoinMyGuildResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.InvitePlayerJoinMyGuildResponse)
                    return mergeFrom((GuildHandler.InvitePlayerJoinMyGuildResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.InvitePlayerJoinMyGuildResponse other) {
                if (other == GuildHandler.InvitePlayerJoinMyGuildResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.InvitePlayerJoinMyGuildResponse parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.InvitePlayerJoinMyGuildResponse) GuildHandler.InvitePlayerJoinMyGuildResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.InvitePlayerJoinMyGuildResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.InvitePlayerJoinMyGuildResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class AgreeOrRefuseInviteResponse
            extends GeneratedMessage
            implements AgreeOrRefuseInviteResponseOrBuilder {
        private static final AgreeOrRefuseInviteResponse defaultInstance = new AgreeOrRefuseInviteResponse(true);
        private final UnknownFieldSet unknownFields;

        private AgreeOrRefuseInviteResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private AgreeOrRefuseInviteResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static AgreeOrRefuseInviteResponse getDefaultInstance() {
            return defaultInstance;
        }

        public AgreeOrRefuseInviteResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private AgreeOrRefuseInviteResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_AgreeOrRefuseInviteResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_AgreeOrRefuseInviteResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(AgreeOrRefuseInviteResponse.class, Builder.class);
        }

        public static Parser<AgreeOrRefuseInviteResponse> PARSER = (Parser<AgreeOrRefuseInviteResponse>) new AbstractParser<AgreeOrRefuseInviteResponse>() {
            public GuildHandler.AgreeOrRefuseInviteResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.AgreeOrRefuseInviteResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<AgreeOrRefuseInviteResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static AgreeOrRefuseInviteResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (AgreeOrRefuseInviteResponse) PARSER.parseFrom(data);
        }

        public static AgreeOrRefuseInviteResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (AgreeOrRefuseInviteResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static AgreeOrRefuseInviteResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (AgreeOrRefuseInviteResponse) PARSER.parseFrom(data);
        }

        public static AgreeOrRefuseInviteResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (AgreeOrRefuseInviteResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static AgreeOrRefuseInviteResponse parseFrom(InputStream input) throws IOException {
            return (AgreeOrRefuseInviteResponse) PARSER.parseFrom(input);
        }

        public static AgreeOrRefuseInviteResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (AgreeOrRefuseInviteResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static AgreeOrRefuseInviteResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (AgreeOrRefuseInviteResponse) PARSER.parseDelimitedFrom(input);
        }

        public static AgreeOrRefuseInviteResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (AgreeOrRefuseInviteResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static AgreeOrRefuseInviteResponse parseFrom(CodedInputStream input) throws IOException {
            return (AgreeOrRefuseInviteResponse) PARSER.parseFrom(input);
        }

        public static AgreeOrRefuseInviteResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (AgreeOrRefuseInviteResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(AgreeOrRefuseInviteResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.AgreeOrRefuseInviteResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_AgreeOrRefuseInviteResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_AgreeOrRefuseInviteResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.AgreeOrRefuseInviteResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.AgreeOrRefuseInviteResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_AgreeOrRefuseInviteResponse_descriptor;
            }

            public GuildHandler.AgreeOrRefuseInviteResponse getDefaultInstanceForType() {
                return GuildHandler.AgreeOrRefuseInviteResponse.getDefaultInstance();
            }

            public GuildHandler.AgreeOrRefuseInviteResponse build() {
                GuildHandler.AgreeOrRefuseInviteResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.AgreeOrRefuseInviteResponse buildPartial() {
                GuildHandler.AgreeOrRefuseInviteResponse result = new GuildHandler.AgreeOrRefuseInviteResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.AgreeOrRefuseInviteResponse)
                    return mergeFrom((GuildHandler.AgreeOrRefuseInviteResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.AgreeOrRefuseInviteResponse other) {
                if (other == GuildHandler.AgreeOrRefuseInviteResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.AgreeOrRefuseInviteResponse parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.AgreeOrRefuseInviteResponse) GuildHandler.AgreeOrRefuseInviteResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.AgreeOrRefuseInviteResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.AgreeOrRefuseInviteResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class DealApplyResponse
            extends GeneratedMessage
            implements DealApplyResponseOrBuilder {
        private static final DealApplyResponse defaultInstance = new DealApplyResponse(true);
        private final UnknownFieldSet unknownFields;

        private DealApplyResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private DealApplyResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static DealApplyResponse getDefaultInstance() {
            return defaultInstance;
        }

        public DealApplyResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private DealApplyResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_DealApplyResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_DealApplyResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(DealApplyResponse.class, Builder.class);
        }

        public static Parser<DealApplyResponse> PARSER = (Parser<DealApplyResponse>) new AbstractParser<DealApplyResponse>() {
            public GuildHandler.DealApplyResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.DealApplyResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<DealApplyResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static DealApplyResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (DealApplyResponse) PARSER.parseFrom(data);
        }

        public static DealApplyResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (DealApplyResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static DealApplyResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (DealApplyResponse) PARSER.parseFrom(data);
        }

        public static DealApplyResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (DealApplyResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static DealApplyResponse parseFrom(InputStream input) throws IOException {
            return (DealApplyResponse) PARSER.parseFrom(input);
        }

        public static DealApplyResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DealApplyResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static DealApplyResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (DealApplyResponse) PARSER.parseDelimitedFrom(input);
        }

        public static DealApplyResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DealApplyResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static DealApplyResponse parseFrom(CodedInputStream input) throws IOException {
            return (DealApplyResponse) PARSER.parseFrom(input);
        }

        public static DealApplyResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DealApplyResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(DealApplyResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.DealApplyResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_DealApplyResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_DealApplyResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.DealApplyResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.DealApplyResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_DealApplyResponse_descriptor;
            }

            public GuildHandler.DealApplyResponse getDefaultInstanceForType() {
                return GuildHandler.DealApplyResponse.getDefaultInstance();
            }

            public GuildHandler.DealApplyResponse build() {
                GuildHandler.DealApplyResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.DealApplyResponse buildPartial() {
                GuildHandler.DealApplyResponse result = new GuildHandler.DealApplyResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.DealApplyResponse)
                    return mergeFrom((GuildHandler.DealApplyResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.DealApplyResponse other) {
                if (other == GuildHandler.DealApplyResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.DealApplyResponse parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.DealApplyResponse) GuildHandler.DealApplyResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.DealApplyResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.DealApplyResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class GetMyGuildInfoResponse
            extends GeneratedMessage
            implements GetMyGuildInfoResponseOrBuilder {
        private static final GetMyGuildInfoResponse defaultInstance = new GetMyGuildInfoResponse(true);
        private final UnknownFieldSet unknownFields;

        private GetMyGuildInfoResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private GetMyGuildInfoResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static GetMyGuildInfoResponse getDefaultInstance() {
            return defaultInstance;
        }

        public GetMyGuildInfoResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private GetMyGuildInfoResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    GuildHandler.MyGuildInfo.Builder subBuilder;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 26:
                            subBuilder = null;
                            if ((this.bitField0_ & 0x4) == 4) subBuilder = this.s2CGuildInfo_.toBuilder();
                            this.s2CGuildInfo_ = (GuildHandler.MyGuildInfo) input.readMessage(GuildHandler.MyGuildInfo.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.s2CGuildInfo_);
                                this.s2CGuildInfo_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x4;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_GetMyGuildInfoResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_GetMyGuildInfoResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GetMyGuildInfoResponse.class, Builder.class);
        }

        public static Parser<GetMyGuildInfoResponse> PARSER = (Parser<GetMyGuildInfoResponse>) new AbstractParser<GetMyGuildInfoResponse>() {
            public GuildHandler.GetMyGuildInfoResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.GetMyGuildInfoResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int S2C_GUILDINFO_FIELD_NUMBER = 3;
        private GuildHandler.MyGuildInfo s2CGuildInfo_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<GetMyGuildInfoResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        static {
            defaultInstance.initFields();
        }


        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }


        public boolean hasS2CGuildInfo() {
            return ((this.bitField0_ & 0x4) == 4);
        }


        public GuildHandler.MyGuildInfo getS2CGuildInfo() {
            return this.s2CGuildInfo_;
        }


        public GuildHandler.MyGuildInfoOrBuilder getS2CGuildInfoOrBuilder() {
            return this.s2CGuildInfo_;
        }


        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.getDefaultInstance();
        }


        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
                return true;
            }
            if (isInitialized == 0) {
                return false;
            }
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }


        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) {
                output.writeInt32(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                output.writeBytes(2, getS2CMsgBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                output.writeMessage(3, (MessageLite) this.s2CGuildInfo_);
            }
            getUnknownFields().writeTo(output);
        }


        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) {
                size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                size += CodedOutputStream.computeMessageSize(3, (MessageLite) this.s2CGuildInfo_);
            }
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }


        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }


        public static GetMyGuildInfoResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (GetMyGuildInfoResponse) PARSER.parseFrom(data);
        }


        public static GetMyGuildInfoResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetMyGuildInfoResponse) PARSER.parseFrom(data, extensionRegistry);
        }


        public static GetMyGuildInfoResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (GetMyGuildInfoResponse) PARSER.parseFrom(data);
        }


        public static GetMyGuildInfoResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetMyGuildInfoResponse) PARSER.parseFrom(data, extensionRegistry);
        }


        public static GetMyGuildInfoResponse parseFrom(InputStream input) throws IOException {
            return (GetMyGuildInfoResponse) PARSER.parseFrom(input);
        }


        public static GetMyGuildInfoResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetMyGuildInfoResponse) PARSER.parseFrom(input, extensionRegistry);
        }


        public static GetMyGuildInfoResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (GetMyGuildInfoResponse) PARSER.parseDelimitedFrom(input);
        }


        public static GetMyGuildInfoResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetMyGuildInfoResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }


        public static GetMyGuildInfoResponse parseFrom(CodedInputStream input) throws IOException {
            return (GetMyGuildInfoResponse) PARSER.parseFrom(input);
        }


        public static GetMyGuildInfoResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetMyGuildInfoResponse) PARSER.parseFrom(input, extensionRegistry);
        }


        public static Builder newBuilder() {
            return Builder.create();
        }


        public Builder newBuilderForType() {
            return newBuilder();
        }


        public static Builder newBuilder(GetMyGuildInfoResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }


        public Builder toBuilder() {
            return newBuilder(this);
        }


        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }


        public static final class Builder
                extends GeneratedMessage.Builder<Builder>
                implements GuildHandler.GetMyGuildInfoResponseOrBuilder {
            private int bitField0_;


            private int s2CCode_;


            private Object s2CMsg_;


            private GuildHandler.MyGuildInfo s2CGuildInfo_;


            private SingleFieldBuilder<GuildHandler.MyGuildInfo, GuildHandler.MyGuildInfo.Builder, GuildHandler.MyGuildInfoOrBuilder> s2CGuildInfoBuilder_;


            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_GetMyGuildInfoResponse_descriptor;
            }


            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_GetMyGuildInfoResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.GetMyGuildInfoResponse.class, Builder.class);
            }


            private Builder() {
                this.s2CMsg_ = "";
                this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }


            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }


            private void maybeForceBuilderInitialization() {
                if (GuildHandler.GetMyGuildInfoResponse.alwaysUseFieldBuilders) {
                    getS2CGuildInfoFieldBuilder();
                }
            }


            private static Builder create() {
                return new Builder();
            }


            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                if (this.s2CGuildInfoBuilder_ == null) {
                    this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.getDefaultInstance();
                } else {
                    this.s2CGuildInfoBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }


            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }


            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_GetMyGuildInfoResponse_descriptor;
            }


            public GuildHandler.GetMyGuildInfoResponse getDefaultInstanceForType() {
                return GuildHandler.GetMyGuildInfoResponse.getDefaultInstance();
            }


            public GuildHandler.GetMyGuildInfoResponse build() {
                GuildHandler.GetMyGuildInfoResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }


            public GuildHandler.GetMyGuildInfoResponse buildPartial() {
                GuildHandler.GetMyGuildInfoResponse result = new GuildHandler.GetMyGuildInfoResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) {
                    to_bitField0_ |= 0x1;
                }
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) {
                    to_bitField0_ |= 0x2;
                }
                result.s2CMsg_ = this.s2CMsg_;
                if ((from_bitField0_ & 0x4) == 4) {
                    to_bitField0_ |= 0x4;
                }
                if (this.s2CGuildInfoBuilder_ == null) {
                    result.s2CGuildInfo_ = this.s2CGuildInfo_;
                } else {
                    result.s2CGuildInfo_ = (GuildHandler.MyGuildInfo) this.s2CGuildInfoBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }


            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.GetMyGuildInfoResponse) {
                    return mergeFrom((GuildHandler.GetMyGuildInfoResponse) other);
                }
                super.mergeFrom(other);
                return this;
            }


            public Builder mergeFrom(GuildHandler.GetMyGuildInfoResponse other) {
                if (other == GuildHandler.GetMyGuildInfoResponse.getDefaultInstance()) {
                    return this;
                }
                if (other.hasS2CCode()) {
                    setS2CCode(other.getS2CCode());
                }
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (other.hasS2CGuildInfo()) {
                    mergeS2CGuildInfo(other.getS2CGuildInfo());
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }


            public final boolean isInitialized() {
                if (!hasS2CCode()) {
                    return false;
                }
                return true;
            }


            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.GetMyGuildInfoResponse parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.GetMyGuildInfoResponse) GuildHandler.GetMyGuildInfoResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.GetMyGuildInfoResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }


            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }


            public int getS2CCode() {
                return this.s2CCode_;
            }


            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }


            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }


            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }


            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.s2CMsg_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setS2CMsg(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }


            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.GetMyGuildInfoResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }


            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }


            public boolean hasS2CGuildInfo() {
                return ((this.bitField0_ & 0x4) == 4);
            }


            public GuildHandler.MyGuildInfo getS2CGuildInfo() {
                if (this.s2CGuildInfoBuilder_ == null) {
                    return this.s2CGuildInfo_;
                }
                return (GuildHandler.MyGuildInfo) this.s2CGuildInfoBuilder_.getMessage();
            }


            public Builder setS2CGuildInfo(GuildHandler.MyGuildInfo value) {
                if (this.s2CGuildInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.s2CGuildInfo_ = value;
                    onChanged();
                } else {
                    this.s2CGuildInfoBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }


            public Builder setS2CGuildInfo(GuildHandler.MyGuildInfo.Builder builderForValue) {
                if (this.s2CGuildInfoBuilder_ == null) {
                    this.s2CGuildInfo_ = builderForValue.build();
                    onChanged();
                } else {
                    this.s2CGuildInfoBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x4;
                return this;
            }


            public Builder mergeS2CGuildInfo(GuildHandler.MyGuildInfo value) {
                if (this.s2CGuildInfoBuilder_ == null) {
                    if ((this.bitField0_ & 0x4) == 4 && this.s2CGuildInfo_ != GuildHandler.MyGuildInfo.getDefaultInstance()) {
                        this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.newBuilder(this.s2CGuildInfo_).mergeFrom(value).buildPartial();
                    } else {
                        this.s2CGuildInfo_ = value;
                    }
                    onChanged();
                } else {
                    this.s2CGuildInfoBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }


            public Builder clearS2CGuildInfo() {
                if (this.s2CGuildInfoBuilder_ == null) {
                    this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.s2CGuildInfoBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }


            public GuildHandler.MyGuildInfo.Builder getS2CGuildInfoBuilder() {
                this.bitField0_ |= 0x4;
                onChanged();
                return (GuildHandler.MyGuildInfo.Builder) getS2CGuildInfoFieldBuilder().getBuilder();
            }


            public GuildHandler.MyGuildInfoOrBuilder getS2CGuildInfoOrBuilder() {
                if (this.s2CGuildInfoBuilder_ != null) {
                    return (GuildHandler.MyGuildInfoOrBuilder) this.s2CGuildInfoBuilder_.getMessageOrBuilder();
                }
                return this.s2CGuildInfo_;
            }


            private SingleFieldBuilder<GuildHandler.MyGuildInfo, GuildHandler.MyGuildInfo.Builder, GuildHandler.MyGuildInfoOrBuilder> getS2CGuildInfoFieldBuilder() {
                if (this.s2CGuildInfoBuilder_ == null) {
                    this.s2CGuildInfoBuilder_ = new SingleFieldBuilder(getS2CGuildInfo(), getParentForChildren(), isClean());
                    this.s2CGuildInfo_ = null;
                }
                return this.s2CGuildInfoBuilder_;
            }
        }
    }


    public static final class GetMyGuildMembersResponse
            extends GeneratedMessage
            implements GetMyGuildMembersResponseOrBuilder {
        private static final GetMyGuildMembersResponse defaultInstance = new GetMyGuildMembersResponse(true);
        private final UnknownFieldSet unknownFields;

        private GetMyGuildMembersResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private GetMyGuildMembersResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static GetMyGuildMembersResponse getDefaultInstance() {
            return defaultInstance;
        }

        public GetMyGuildMembersResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private GetMyGuildMembersResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 26:
                            if ((mutable_bitField0_ & 0x4) != 4) {
                                this.s2CMemberList_ = new ArrayList<>();
                                mutable_bitField0_ |= 0x4;
                            }
                            this.s2CMemberList_.add(input.readMessage(GuildHandler.MemberInfo.PARSER, extensionRegistry));
                            break;
                        case 32:
                            this.bitField0_ |= 0x4;
                            this.s2CLeftKickNum_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                if ((mutable_bitField0_ & 0x4) == 4)
                    this.s2CMemberList_ = Collections.unmodifiableList(this.s2CMemberList_);
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_GetMyGuildMembersResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_GetMyGuildMembersResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GetMyGuildMembersResponse.class, Builder.class);
        }

        public static Parser<GetMyGuildMembersResponse> PARSER = (Parser<GetMyGuildMembersResponse>) new AbstractParser<GetMyGuildMembersResponse>() {
            public GuildHandler.GetMyGuildMembersResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.GetMyGuildMembersResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int S2C_MEMBERLIST_FIELD_NUMBER = 3;
        private List<GuildHandler.MemberInfo> s2CMemberList_;
        public static final int S2C_LEFTKICKNUM_FIELD_NUMBER = 4;
        private int s2CLeftKickNum_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<GetMyGuildMembersResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        static {
            defaultInstance.initFields();
        }


        public List<GuildHandler.MemberInfo> getS2CMemberListList() {
            return this.s2CMemberList_;
        }


        public List<? extends GuildHandler.MemberInfoOrBuilder> getS2CMemberListOrBuilderList() {
            return (List) this.s2CMemberList_;
        }


        public int getS2CMemberListCount() {
            return this.s2CMemberList_.size();
        }


        public GuildHandler.MemberInfo getS2CMemberList(int index) {
            return this.s2CMemberList_.get(index);
        }


        public GuildHandler.MemberInfoOrBuilder getS2CMemberListOrBuilder(int index) {
            return this.s2CMemberList_.get(index);
        }


        public boolean hasS2CLeftKickNum() {
            return ((this.bitField0_ & 0x4) == 4);
        }


        public int getS2CLeftKickNum() {
            return this.s2CLeftKickNum_;
        }


        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.s2CMemberList_ = Collections.emptyList();
            this.s2CLeftKickNum_ = 0;
        }


        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
                return true;
            }
            if (isInitialized == 0) {
                return false;
            }
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }


        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) {
                output.writeInt32(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                output.writeBytes(2, getS2CMsgBytes());
            }
            for (int i = 0; i < this.s2CMemberList_.size(); i++) {
                output.writeMessage(3, (MessageLite) this.s2CMemberList_.get(i));
            }
            if ((this.bitField0_ & 0x4) == 4) {
                output.writeInt32(4, this.s2CLeftKickNum_);
            }
            getUnknownFields().writeTo(output);
        }


        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) {
                size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            }
            for (int i = 0; i < this.s2CMemberList_.size(); i++) {
                size += CodedOutputStream.computeMessageSize(3, (MessageLite) this.s2CMemberList_.get(i));
            }
            if ((this.bitField0_ & 0x4) == 4) {
                size += CodedOutputStream.computeInt32Size(4, this.s2CLeftKickNum_);
            }
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }


        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }


        public static GetMyGuildMembersResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (GetMyGuildMembersResponse) PARSER.parseFrom(data);
        }


        public static GetMyGuildMembersResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetMyGuildMembersResponse) PARSER.parseFrom(data, extensionRegistry);
        }


        public static GetMyGuildMembersResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (GetMyGuildMembersResponse) PARSER.parseFrom(data);
        }


        public static GetMyGuildMembersResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetMyGuildMembersResponse) PARSER.parseFrom(data, extensionRegistry);
        }


        public static GetMyGuildMembersResponse parseFrom(InputStream input) throws IOException {
            return (GetMyGuildMembersResponse) PARSER.parseFrom(input);
        }


        public static GetMyGuildMembersResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetMyGuildMembersResponse) PARSER.parseFrom(input, extensionRegistry);
        }


        public static GetMyGuildMembersResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (GetMyGuildMembersResponse) PARSER.parseDelimitedFrom(input);
        }


        public static GetMyGuildMembersResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetMyGuildMembersResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }


        public static GetMyGuildMembersResponse parseFrom(CodedInputStream input) throws IOException {
            return (GetMyGuildMembersResponse) PARSER.parseFrom(input);
        }


        public static GetMyGuildMembersResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetMyGuildMembersResponse) PARSER.parseFrom(input, extensionRegistry);
        }


        public static Builder newBuilder() {
            return Builder.create();
        }


        public Builder newBuilderForType() {
            return newBuilder();
        }


        public static Builder newBuilder(GetMyGuildMembersResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }


        public Builder toBuilder() {
            return newBuilder(this);
        }


        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }


        public static final class Builder
                extends GeneratedMessage.Builder<Builder>
                implements GuildHandler.GetMyGuildMembersResponseOrBuilder {
            private int bitField0_;


            private int s2CCode_;


            private Object s2CMsg_;


            private List<GuildHandler.MemberInfo> s2CMemberList_;


            private RepeatedFieldBuilder<GuildHandler.MemberInfo, GuildHandler.MemberInfo.Builder, GuildHandler.MemberInfoOrBuilder> s2CMemberListBuilder_;


            private int s2CLeftKickNum_;


            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_GetMyGuildMembersResponse_descriptor;
            }


            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_GetMyGuildMembersResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.GetMyGuildMembersResponse.class, Builder.class);
            }


            private Builder() {
                this.s2CMsg_ = "";
                this.s2CMemberList_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }


            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                this.s2CMemberList_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }


            private void maybeForceBuilderInitialization() {
                if (GuildHandler.GetMyGuildMembersResponse.alwaysUseFieldBuilders) {
                    getS2CMemberListFieldBuilder();
                }
            }


            private static Builder create() {
                return new Builder();
            }


            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                if (this.s2CMemberListBuilder_ == null) {
                    this.s2CMemberList_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFB;
                } else {
                    this.s2CMemberListBuilder_.clear();
                }
                this.s2CLeftKickNum_ = 0;
                this.bitField0_ &= 0xFFFFFFF7;
                return this;
            }


            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }


            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_GetMyGuildMembersResponse_descriptor;
            }


            public GuildHandler.GetMyGuildMembersResponse getDefaultInstanceForType() {
                return GuildHandler.GetMyGuildMembersResponse.getDefaultInstance();
            }


            public GuildHandler.GetMyGuildMembersResponse build() {
                GuildHandler.GetMyGuildMembersResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }


            public GuildHandler.GetMyGuildMembersResponse buildPartial() {
                GuildHandler.GetMyGuildMembersResponse result = new GuildHandler.GetMyGuildMembersResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) {
                    to_bitField0_ |= 0x1;
                }
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) {
                    to_bitField0_ |= 0x2;
                }
                result.s2CMsg_ = this.s2CMsg_;
                if (this.s2CMemberListBuilder_ == null) {
                    if ((this.bitField0_ & 0x4) == 4) {
                        this.s2CMemberList_ = Collections.unmodifiableList(this.s2CMemberList_);
                        this.bitField0_ &= 0xFFFFFFFB;
                    }
                    result.s2CMemberList_ = this.s2CMemberList_;
                } else {
                    result.s2CMemberList_ = this.s2CMemberListBuilder_.build();
                }
                if ((from_bitField0_ & 0x8) == 8) {
                    to_bitField0_ |= 0x4;
                }
                result.s2CLeftKickNum_ = this.s2CLeftKickNum_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }


            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.GetMyGuildMembersResponse) {
                    return mergeFrom((GuildHandler.GetMyGuildMembersResponse) other);
                }
                super.mergeFrom(other);
                return this;
            }


            public Builder mergeFrom(GuildHandler.GetMyGuildMembersResponse other) {
                if (other == GuildHandler.GetMyGuildMembersResponse.getDefaultInstance()) {
                    return this;
                }
                if (other.hasS2CCode()) {
                    setS2CCode(other.getS2CCode());
                }
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (this.s2CMemberListBuilder_ == null) {
                    if (!other.s2CMemberList_.isEmpty()) {
                        if (this.s2CMemberList_.isEmpty()) {
                            this.s2CMemberList_ = other.s2CMemberList_;
                            this.bitField0_ &= 0xFFFFFFFB;
                        } else {
                            ensureS2CMemberListIsMutable();
                            this.s2CMemberList_.addAll(other.s2CMemberList_);
                        }
                        onChanged();
                    }
                } else if (!other.s2CMemberList_.isEmpty()) {
                    if (this.s2CMemberListBuilder_.isEmpty()) {
                        this.s2CMemberListBuilder_.dispose();
                        this.s2CMemberListBuilder_ = null;
                        this.s2CMemberList_ = other.s2CMemberList_;
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.s2CMemberListBuilder_ = GuildHandler.GetMyGuildMembersResponse.alwaysUseFieldBuilders ? getS2CMemberListFieldBuilder() : null;
                    } else {
                        this.s2CMemberListBuilder_.addAllMessages(other.s2CMemberList_);
                    }
                }
                if (other.hasS2CLeftKickNum()) {
                    setS2CLeftKickNum(other.getS2CLeftKickNum());
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }


            public final boolean isInitialized() {
                if (!hasS2CCode()) {
                    return false;
                }
                return true;
            }


            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.GetMyGuildMembersResponse parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.GetMyGuildMembersResponse) GuildHandler.GetMyGuildMembersResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.GetMyGuildMembersResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }


            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }


            public int getS2CCode() {
                return this.s2CCode_;
            }


            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }


            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }


            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }


            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.s2CMsg_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setS2CMsg(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }


            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.GetMyGuildMembersResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }


            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }


            private void ensureS2CMemberListIsMutable() {
                if ((this.bitField0_ & 0x4) != 4) {
                    this.s2CMemberList_ = new ArrayList<>(this.s2CMemberList_);
                    this.bitField0_ |= 0x4;
                }
            }


            public List<GuildHandler.MemberInfo> getS2CMemberListList() {
                if (this.s2CMemberListBuilder_ == null) {
                    return Collections.unmodifiableList(this.s2CMemberList_);
                }
                return this.s2CMemberListBuilder_.getMessageList();
            }


            public int getS2CMemberListCount() {
                if (this.s2CMemberListBuilder_ == null) {
                    return this.s2CMemberList_.size();
                }
                return this.s2CMemberListBuilder_.getCount();
            }


            public GuildHandler.MemberInfo getS2CMemberList(int index) {
                if (this.s2CMemberListBuilder_ == null) {
                    return this.s2CMemberList_.get(index);
                }
                return (GuildHandler.MemberInfo) this.s2CMemberListBuilder_.getMessage(index);
            }


            public Builder setS2CMemberList(int index, GuildHandler.MemberInfo value) {
                if (this.s2CMemberListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureS2CMemberListIsMutable();
                    this.s2CMemberList_.set(index, value);
                    onChanged();
                } else {
                    this.s2CMemberListBuilder_.setMessage(index, value);
                }
                return this;
            }


            public Builder setS2CMemberList(int index, GuildHandler.MemberInfo.Builder builderForValue) {
                if (this.s2CMemberListBuilder_ == null) {
                    ensureS2CMemberListIsMutable();
                    this.s2CMemberList_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    this.s2CMemberListBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }


            public Builder addS2CMemberList(GuildHandler.MemberInfo value) {
                if (this.s2CMemberListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureS2CMemberListIsMutable();
                    this.s2CMemberList_.add(value);
                    onChanged();
                } else {
                    this.s2CMemberListBuilder_.addMessage(value);
                }
                return this;
            }


            public Builder addS2CMemberList(int index, GuildHandler.MemberInfo value) {
                if (this.s2CMemberListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureS2CMemberListIsMutable();
                    this.s2CMemberList_.add(index, value);
                    onChanged();
                } else {
                    this.s2CMemberListBuilder_.addMessage(index, value);
                }
                return this;
            }


            public Builder addS2CMemberList(GuildHandler.MemberInfo.Builder builderForValue) {
                if (this.s2CMemberListBuilder_ == null) {
                    ensureS2CMemberListIsMutable();
                    this.s2CMemberList_.add(builderForValue.build());
                    onChanged();
                } else {
                    this.s2CMemberListBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }


            public Builder addS2CMemberList(int index, GuildHandler.MemberInfo.Builder builderForValue) {
                if (this.s2CMemberListBuilder_ == null) {
                    ensureS2CMemberListIsMutable();
                    this.s2CMemberList_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    this.s2CMemberListBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }


            public Builder addAllS2CMemberList(Iterable<? extends GuildHandler.MemberInfo> values) {
                if (this.s2CMemberListBuilder_ == null) {
                    ensureS2CMemberListIsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.s2CMemberList_);
                    onChanged();
                } else {
                    this.s2CMemberListBuilder_.addAllMessages(values);
                }
                return this;
            }


            public Builder clearS2CMemberList() {
                if (this.s2CMemberListBuilder_ == null) {
                    this.s2CMemberList_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFB;
                    onChanged();
                } else {
                    this.s2CMemberListBuilder_.clear();
                }
                return this;
            }


            public Builder removeS2CMemberList(int index) {
                if (this.s2CMemberListBuilder_ == null) {
                    ensureS2CMemberListIsMutable();
                    this.s2CMemberList_.remove(index);
                    onChanged();
                } else {
                    this.s2CMemberListBuilder_.remove(index);
                }
                return this;
            }


            public GuildHandler.MemberInfo.Builder getS2CMemberListBuilder(int index) {
                return (GuildHandler.MemberInfo.Builder) getS2CMemberListFieldBuilder().getBuilder(index);
            }


            public GuildHandler.MemberInfoOrBuilder getS2CMemberListOrBuilder(int index) {
                if (this.s2CMemberListBuilder_ == null) {
                    return this.s2CMemberList_.get(index);
                }
                return (GuildHandler.MemberInfoOrBuilder) this.s2CMemberListBuilder_.getMessageOrBuilder(index);
            }


            public List<? extends GuildHandler.MemberInfoOrBuilder> getS2CMemberListOrBuilderList() {
                if (this.s2CMemberListBuilder_ != null) {
                    return this.s2CMemberListBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList((List) this.s2CMemberList_);
            }


            public GuildHandler.MemberInfo.Builder addS2CMemberListBuilder() {
                return (GuildHandler.MemberInfo.Builder) getS2CMemberListFieldBuilder().addBuilder(GuildHandler.MemberInfo.getDefaultInstance());
            }


            public GuildHandler.MemberInfo.Builder addS2CMemberListBuilder(int index) {
                return (GuildHandler.MemberInfo.Builder) getS2CMemberListFieldBuilder().addBuilder(index, GuildHandler.MemberInfo.getDefaultInstance());
            }


            public List<GuildHandler.MemberInfo.Builder> getS2CMemberListBuilderList() {
                return getS2CMemberListFieldBuilder().getBuilderList();
            }


            private RepeatedFieldBuilder<GuildHandler.MemberInfo, GuildHandler.MemberInfo.Builder, GuildHandler.MemberInfoOrBuilder> getS2CMemberListFieldBuilder() {
                if (this.s2CMemberListBuilder_ == null) {
                    this.s2CMemberListBuilder_ = new RepeatedFieldBuilder(this.s2CMemberList_, ((this.bitField0_ & 0x4) == 4), getParentForChildren(), isClean());
                    this.s2CMemberList_ = null;
                }
                return this.s2CMemberListBuilder_;
            }


            public boolean hasS2CLeftKickNum() {
                return ((this.bitField0_ & 0x8) == 8);
            }


            public int getS2CLeftKickNum() {
                return this.s2CLeftKickNum_;
            }


            public Builder setS2CLeftKickNum(int value) {
                this.bitField0_ |= 0x8;
                this.s2CLeftKickNum_ = value;
                onChanged();
                return this;
            }


            public Builder clearS2CLeftKickNum() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.s2CLeftKickNum_ = 0;
                onChanged();
                return this;
            }
        }
    }


    public static final class GetApplyListResponse
            extends GeneratedMessage
            implements GetApplyListResponseOrBuilder {
        private static final GetApplyListResponse defaultInstance = new GetApplyListResponse(true);
        private final UnknownFieldSet unknownFields;

        private GetApplyListResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private GetApplyListResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static GetApplyListResponse getDefaultInstance() {
            return defaultInstance;
        }

        public GetApplyListResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private GetApplyListResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 26:
                            if ((mutable_bitField0_ & 0x4) != 4) {
                                this.s2CApplyList_ = new ArrayList<>();
                                mutable_bitField0_ |= 0x4;
                            }
                            this.s2CApplyList_.add(input.readMessage(GuildHandler.ApplyInfo.PARSER, extensionRegistry));
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                if ((mutable_bitField0_ & 0x4) == 4)
                    this.s2CApplyList_ = Collections.unmodifiableList(this.s2CApplyList_);
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_GetApplyListResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_GetApplyListResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GetApplyListResponse.class, Builder.class);
        }

        public static Parser<GetApplyListResponse> PARSER = (Parser<GetApplyListResponse>) new AbstractParser<GetApplyListResponse>() {
            public GuildHandler.GetApplyListResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.GetApplyListResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int S2C_APPLYLIST_FIELD_NUMBER = 3;
        private List<GuildHandler.ApplyInfo> s2CApplyList_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<GetApplyListResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        static {
            defaultInstance.initFields();
        }


        public List<GuildHandler.ApplyInfo> getS2CApplyListList() {
            return this.s2CApplyList_;
        }

        public List<? extends GuildHandler.ApplyInfoOrBuilder> getS2CApplyListOrBuilderList() {
            return (List) this.s2CApplyList_;
        }

        public int getS2CApplyListCount() {
            return this.s2CApplyList_.size();
        }

        public GuildHandler.ApplyInfo getS2CApplyList(int index) {
            return this.s2CApplyList_.get(index);
        }

        public GuildHandler.ApplyInfoOrBuilder getS2CApplyListOrBuilder(int index) {
            return this.s2CApplyList_.get(index);
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.s2CApplyList_ = Collections.emptyList();
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
                return true;
            }
            if (isInitialized == 0) {
                return false;
            }
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) {
                output.writeInt32(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                output.writeBytes(2, getS2CMsgBytes());
            }
            for (int i = 0; i < this.s2CApplyList_.size(); i++) {
                output.writeMessage(3, (MessageLite) this.s2CApplyList_.get(i));
            }
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) {
                size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            }
            for (int i = 0; i < this.s2CApplyList_.size(); i++) {
                size += CodedOutputStream.computeMessageSize(3, (MessageLite) this.s2CApplyList_.get(i));
            }
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static GetApplyListResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (GetApplyListResponse) PARSER.parseFrom(data);
        }

        public static GetApplyListResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetApplyListResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GetApplyListResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (GetApplyListResponse) PARSER.parseFrom(data);
        }

        public static GetApplyListResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetApplyListResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GetApplyListResponse parseFrom(InputStream input) throws IOException {
            return (GetApplyListResponse) PARSER.parseFrom(input);
        }

        public static GetApplyListResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetApplyListResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static GetApplyListResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (GetApplyListResponse) PARSER.parseDelimitedFrom(input);
        }

        public static GetApplyListResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetApplyListResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static GetApplyListResponse parseFrom(CodedInputStream input) throws IOException {
            return (GetApplyListResponse) PARSER.parseFrom(input);
        }

        public static GetApplyListResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetApplyListResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(GetApplyListResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder
                extends GeneratedMessage.Builder<Builder>
                implements GuildHandler.GetApplyListResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;
            private List<GuildHandler.ApplyInfo> s2CApplyList_;
            private RepeatedFieldBuilder<GuildHandler.ApplyInfo, GuildHandler.ApplyInfo.Builder, GuildHandler.ApplyInfoOrBuilder> s2CApplyListBuilder_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_GetApplyListResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_GetApplyListResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.GetApplyListResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                this.s2CApplyList_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                this.s2CApplyList_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.GetApplyListResponse.alwaysUseFieldBuilders) {
                    getS2CApplyListFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                if (this.s2CApplyListBuilder_ == null) {
                    this.s2CApplyList_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFB;
                } else {
                    this.s2CApplyListBuilder_.clear();
                }
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_GetApplyListResponse_descriptor;
            }

            public GuildHandler.GetApplyListResponse getDefaultInstanceForType() {
                return GuildHandler.GetApplyListResponse.getDefaultInstance();
            }

            public GuildHandler.GetApplyListResponse build() {
                GuildHandler.GetApplyListResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public GuildHandler.GetApplyListResponse buildPartial() {
                GuildHandler.GetApplyListResponse result = new GuildHandler.GetApplyListResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) {
                    to_bitField0_ |= 0x1;
                }
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) {
                    to_bitField0_ |= 0x2;
                }
                result.s2CMsg_ = this.s2CMsg_;
                if (this.s2CApplyListBuilder_ == null) {
                    if ((this.bitField0_ & 0x4) == 4) {
                        this.s2CApplyList_ = Collections.unmodifiableList(this.s2CApplyList_);
                        this.bitField0_ &= 0xFFFFFFFB;
                    }
                    result.s2CApplyList_ = this.s2CApplyList_;
                } else {
                    result.s2CApplyList_ = this.s2CApplyListBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.GetApplyListResponse) {
                    return mergeFrom((GuildHandler.GetApplyListResponse) other);
                }
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.GetApplyListResponse other) {
                if (other == GuildHandler.GetApplyListResponse.getDefaultInstance()) {
                    return this;
                }
                if (other.hasS2CCode()) {
                    setS2CCode(other.getS2CCode());
                }
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (this.s2CApplyListBuilder_ == null) {
                    if (!other.s2CApplyList_.isEmpty()) {
                        if (this.s2CApplyList_.isEmpty()) {
                            this.s2CApplyList_ = other.s2CApplyList_;
                            this.bitField0_ &= 0xFFFFFFFB;
                        } else {
                            ensureS2CApplyListIsMutable();
                            this.s2CApplyList_.addAll(other.s2CApplyList_);
                        }
                        onChanged();
                    }
                } else if (!other.s2CApplyList_.isEmpty()) {
                    if (this.s2CApplyListBuilder_.isEmpty()) {
                        this.s2CApplyListBuilder_.dispose();
                        this.s2CApplyListBuilder_ = null;
                        this.s2CApplyList_ = other.s2CApplyList_;
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.s2CApplyListBuilder_ = GuildHandler.GetApplyListResponse.alwaysUseFieldBuilders ? getS2CApplyListFieldBuilder() : null;
                    } else {
                        this.s2CApplyListBuilder_.addAllMessages(other.s2CApplyList_);
                    }
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) {
                    return false;
                }
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.GetApplyListResponse parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.GetApplyListResponse) GuildHandler.GetApplyListResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.GetApplyListResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.s2CMsg_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.GetApplyListResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            private void ensureS2CApplyListIsMutable() {
                if ((this.bitField0_ & 0x4) != 4) {
                    this.s2CApplyList_ = new ArrayList<>(this.s2CApplyList_);
                    this.bitField0_ |= 0x4;
                }
            }

            public List<GuildHandler.ApplyInfo> getS2CApplyListList() {
                if (this.s2CApplyListBuilder_ == null)
                    return Collections.unmodifiableList(this.s2CApplyList_);
                return this.s2CApplyListBuilder_.getMessageList();
            }

            public int getS2CApplyListCount() {
                if (this.s2CApplyListBuilder_ == null)
                    return this.s2CApplyList_.size();
                return this.s2CApplyListBuilder_.getCount();
            }

            public GuildHandler.ApplyInfo getS2CApplyList(int index) {
                if (this.s2CApplyListBuilder_ == null)
                    return this.s2CApplyList_.get(index);
                return (GuildHandler.ApplyInfo) this.s2CApplyListBuilder_.getMessage(index);
            }

            public Builder setS2CApplyList(int index, GuildHandler.ApplyInfo value) {
                if (this.s2CApplyListBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureS2CApplyListIsMutable();
                    this.s2CApplyList_.set(index, value);
                    onChanged();
                } else {
                    this.s2CApplyListBuilder_.setMessage(index, value);
                }
                return this;
            }

            public Builder setS2CApplyList(int index, GuildHandler.ApplyInfo.Builder builderForValue) {
                if (this.s2CApplyListBuilder_ == null) {
                    ensureS2CApplyListIsMutable();
                    this.s2CApplyList_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    this.s2CApplyListBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            public Builder addS2CApplyList(GuildHandler.ApplyInfo value) {
                if (this.s2CApplyListBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureS2CApplyListIsMutable();
                    this.s2CApplyList_.add(value);
                    onChanged();
                } else {
                    this.s2CApplyListBuilder_.addMessage(value);
                }
                return this;
            }

            public Builder addS2CApplyList(int index, GuildHandler.ApplyInfo value) {
                if (this.s2CApplyListBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureS2CApplyListIsMutable();
                    this.s2CApplyList_.add(index, value);
                    onChanged();
                } else {
                    this.s2CApplyListBuilder_.addMessage(index, value);
                }
                return this;
            }

            public Builder addS2CApplyList(GuildHandler.ApplyInfo.Builder builderForValue) {
                if (this.s2CApplyListBuilder_ == null) {
                    ensureS2CApplyListIsMutable();
                    this.s2CApplyList_.add(builderForValue.build());
                    onChanged();
                } else {
                    this.s2CApplyListBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            public Builder addS2CApplyList(int index, GuildHandler.ApplyInfo.Builder builderForValue) {
                if (this.s2CApplyListBuilder_ == null) {
                    ensureS2CApplyListIsMutable();
                    this.s2CApplyList_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    this.s2CApplyListBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            public Builder addAllS2CApplyList(Iterable<? extends GuildHandler.ApplyInfo> values) {
                if (this.s2CApplyListBuilder_ == null) {
                    ensureS2CApplyListIsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.s2CApplyList_);
                    onChanged();
                } else {
                    this.s2CApplyListBuilder_.addAllMessages(values);
                }
                return this;
            }

            public Builder clearS2CApplyList() {
                if (this.s2CApplyListBuilder_ == null) {
                    this.s2CApplyList_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFB;
                    onChanged();
                } else {
                    this.s2CApplyListBuilder_.clear();
                }
                return this;
            }

            public Builder removeS2CApplyList(int index) {
                if (this.s2CApplyListBuilder_ == null) {
                    ensureS2CApplyListIsMutable();
                    this.s2CApplyList_.remove(index);
                    onChanged();
                } else {
                    this.s2CApplyListBuilder_.remove(index);
                }
                return this;
            }

            public GuildHandler.ApplyInfo.Builder getS2CApplyListBuilder(int index) {
                return (GuildHandler.ApplyInfo.Builder) getS2CApplyListFieldBuilder().getBuilder(index);
            }

            public GuildHandler.ApplyInfoOrBuilder getS2CApplyListOrBuilder(int index) {
                if (this.s2CApplyListBuilder_ == null)
                    return this.s2CApplyList_.get(index);
                return (GuildHandler.ApplyInfoOrBuilder) this.s2CApplyListBuilder_.getMessageOrBuilder(index);
            }

            public List<? extends GuildHandler.ApplyInfoOrBuilder> getS2CApplyListOrBuilderList() {
                if (this.s2CApplyListBuilder_ != null)
                    return this.s2CApplyListBuilder_.getMessageOrBuilderList();
                return Collections.unmodifiableList((List) this.s2CApplyList_);
            }

            public GuildHandler.ApplyInfo.Builder addS2CApplyListBuilder() {
                return (GuildHandler.ApplyInfo.Builder) getS2CApplyListFieldBuilder().addBuilder(GuildHandler.ApplyInfo.getDefaultInstance());
            }

            public GuildHandler.ApplyInfo.Builder addS2CApplyListBuilder(int index) {
                return (GuildHandler.ApplyInfo.Builder) getS2CApplyListFieldBuilder().addBuilder(index, GuildHandler.ApplyInfo.getDefaultInstance());
            }

            public List<GuildHandler.ApplyInfo.Builder> getS2CApplyListBuilderList() {
                return getS2CApplyListFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilder<GuildHandler.ApplyInfo, GuildHandler.ApplyInfo.Builder, GuildHandler.ApplyInfoOrBuilder> getS2CApplyListFieldBuilder() {
                if (this.s2CApplyListBuilder_ == null) {
                    this.s2CApplyListBuilder_ = new RepeatedFieldBuilder(this.s2CApplyList_, ((this.bitField0_ & 0x4) == 4), getParentForChildren(), isClean());
                    this.s2CApplyList_ = null;
                }
                return this.s2CApplyListBuilder_;
            }
        }
    }

    public static final class SetGuildInfoResponse
            extends GeneratedMessage
            implements SetGuildInfoResponseOrBuilder {
        private static final SetGuildInfoResponse defaultInstance = new SetGuildInfoResponse(true);
        private final UnknownFieldSet unknownFields;

        private SetGuildInfoResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private SetGuildInfoResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static SetGuildInfoResponse getDefaultInstance() {
            return defaultInstance;
        }

        public SetGuildInfoResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private SetGuildInfoResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_SetGuildInfoResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_SetGuildInfoResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(SetGuildInfoResponse.class, Builder.class);
        }

        public static Parser<SetGuildInfoResponse> PARSER = (Parser<SetGuildInfoResponse>) new AbstractParser<SetGuildInfoResponse>() {
            public GuildHandler.SetGuildInfoResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.SetGuildInfoResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<SetGuildInfoResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static SetGuildInfoResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (SetGuildInfoResponse) PARSER.parseFrom(data);
        }

        public static SetGuildInfoResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (SetGuildInfoResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static SetGuildInfoResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (SetGuildInfoResponse) PARSER.parseFrom(data);
        }

        public static SetGuildInfoResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (SetGuildInfoResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static SetGuildInfoResponse parseFrom(InputStream input) throws IOException {
            return (SetGuildInfoResponse) PARSER.parseFrom(input);
        }

        public static SetGuildInfoResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (SetGuildInfoResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static SetGuildInfoResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (SetGuildInfoResponse) PARSER.parseDelimitedFrom(input);
        }

        public static SetGuildInfoResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (SetGuildInfoResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static SetGuildInfoResponse parseFrom(CodedInputStream input) throws IOException {
            return (SetGuildInfoResponse) PARSER.parseFrom(input);
        }

        public static SetGuildInfoResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (SetGuildInfoResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(SetGuildInfoResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.SetGuildInfoResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_SetGuildInfoResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_SetGuildInfoResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.SetGuildInfoResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.SetGuildInfoResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_SetGuildInfoResponse_descriptor;
            }

            public GuildHandler.SetGuildInfoResponse getDefaultInstanceForType() {
                return GuildHandler.SetGuildInfoResponse.getDefaultInstance();
            }

            public GuildHandler.SetGuildInfoResponse build() {
                GuildHandler.SetGuildInfoResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.SetGuildInfoResponse buildPartial() {
                GuildHandler.SetGuildInfoResponse result = new GuildHandler.SetGuildInfoResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.SetGuildInfoResponse)
                    return mergeFrom((GuildHandler.SetGuildInfoResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.SetGuildInfoResponse other) {
                if (other == GuildHandler.SetGuildInfoResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.SetGuildInfoResponse parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.SetGuildInfoResponse) GuildHandler.SetGuildInfoResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.SetGuildInfoResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.SetGuildInfoResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class SetGuildQQGroupResponse
            extends GeneratedMessage
            implements SetGuildQQGroupResponseOrBuilder {
        private static final SetGuildQQGroupResponse defaultInstance = new SetGuildQQGroupResponse(true);
        private final UnknownFieldSet unknownFields;

        private SetGuildQQGroupResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private SetGuildQQGroupResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static SetGuildQQGroupResponse getDefaultInstance() {
            return defaultInstance;
        }

        public SetGuildQQGroupResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private SetGuildQQGroupResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_SetGuildQQGroupResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_SetGuildQQGroupResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(SetGuildQQGroupResponse.class, Builder.class);
        }

        public static Parser<SetGuildQQGroupResponse> PARSER = (Parser<SetGuildQQGroupResponse>) new AbstractParser<SetGuildQQGroupResponse>() {
            public GuildHandler.SetGuildQQGroupResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.SetGuildQQGroupResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<SetGuildQQGroupResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static SetGuildQQGroupResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (SetGuildQQGroupResponse) PARSER.parseFrom(data);
        }

        public static SetGuildQQGroupResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (SetGuildQQGroupResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static SetGuildQQGroupResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (SetGuildQQGroupResponse) PARSER.parseFrom(data);
        }

        public static SetGuildQQGroupResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (SetGuildQQGroupResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static SetGuildQQGroupResponse parseFrom(InputStream input) throws IOException {
            return (SetGuildQQGroupResponse) PARSER.parseFrom(input);
        }

        public static SetGuildQQGroupResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (SetGuildQQGroupResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static SetGuildQQGroupResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (SetGuildQQGroupResponse) PARSER.parseDelimitedFrom(input);
        }

        public static SetGuildQQGroupResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (SetGuildQQGroupResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static SetGuildQQGroupResponse parseFrom(CodedInputStream input) throws IOException {
            return (SetGuildQQGroupResponse) PARSER.parseFrom(input);
        }

        public static SetGuildQQGroupResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (SetGuildQQGroupResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(SetGuildQQGroupResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.SetGuildQQGroupResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_SetGuildQQGroupResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_SetGuildQQGroupResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.SetGuildQQGroupResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.SetGuildQQGroupResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_SetGuildQQGroupResponse_descriptor;
            }

            public GuildHandler.SetGuildQQGroupResponse getDefaultInstanceForType() {
                return GuildHandler.SetGuildQQGroupResponse.getDefaultInstance();
            }

            public GuildHandler.SetGuildQQGroupResponse build() {
                GuildHandler.SetGuildQQGroupResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.SetGuildQQGroupResponse buildPartial() {
                GuildHandler.SetGuildQQGroupResponse result = new GuildHandler.SetGuildQQGroupResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.SetGuildQQGroupResponse)
                    return mergeFrom((GuildHandler.SetGuildQQGroupResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.SetGuildQQGroupResponse other) {
                if (other == GuildHandler.SetGuildQQGroupResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.SetGuildQQGroupResponse parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.SetGuildQQGroupResponse) GuildHandler.SetGuildQQGroupResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.SetGuildQQGroupResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.SetGuildQQGroupResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class ExitGuildResponse
            extends GeneratedMessage
            implements ExitGuildResponseOrBuilder {
        private static final ExitGuildResponse defaultInstance = new ExitGuildResponse(true);
        private final UnknownFieldSet unknownFields;

        private ExitGuildResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private ExitGuildResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static ExitGuildResponse getDefaultInstance() {
            return defaultInstance;
        }

        public ExitGuildResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ExitGuildResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_ExitGuildResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_ExitGuildResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(ExitGuildResponse.class, Builder.class);
        }

        public static Parser<ExitGuildResponse> PARSER = (Parser<ExitGuildResponse>) new AbstractParser<ExitGuildResponse>() {
            public GuildHandler.ExitGuildResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.ExitGuildResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<ExitGuildResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static ExitGuildResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (ExitGuildResponse) PARSER.parseFrom(data);
        }

        public static ExitGuildResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ExitGuildResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ExitGuildResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (ExitGuildResponse) PARSER.parseFrom(data);
        }

        public static ExitGuildResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ExitGuildResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ExitGuildResponse parseFrom(InputStream input) throws IOException {
            return (ExitGuildResponse) PARSER.parseFrom(input);
        }

        public static ExitGuildResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ExitGuildResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static ExitGuildResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (ExitGuildResponse) PARSER.parseDelimitedFrom(input);
        }

        public static ExitGuildResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ExitGuildResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static ExitGuildResponse parseFrom(CodedInputStream input) throws IOException {
            return (ExitGuildResponse) PARSER.parseFrom(input);
        }

        public static ExitGuildResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ExitGuildResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ExitGuildResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.ExitGuildResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_ExitGuildResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_ExitGuildResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.ExitGuildResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.ExitGuildResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_ExitGuildResponse_descriptor;
            }

            public GuildHandler.ExitGuildResponse getDefaultInstanceForType() {
                return GuildHandler.ExitGuildResponse.getDefaultInstance();
            }

            public GuildHandler.ExitGuildResponse build() {
                GuildHandler.ExitGuildResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.ExitGuildResponse buildPartial() {
                GuildHandler.ExitGuildResponse result = new GuildHandler.ExitGuildResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.ExitGuildResponse)
                    return mergeFrom((GuildHandler.ExitGuildResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.ExitGuildResponse other) {
                if (other == GuildHandler.ExitGuildResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.ExitGuildResponse parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.ExitGuildResponse) GuildHandler.ExitGuildResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.ExitGuildResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.ExitGuildResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class KickMemberResponse
            extends GeneratedMessage
            implements KickMemberResponseOrBuilder {
        private static final KickMemberResponse defaultInstance = new KickMemberResponse(true);
        private final UnknownFieldSet unknownFields;

        private KickMemberResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private KickMemberResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static KickMemberResponse getDefaultInstance() {
            return defaultInstance;
        }

        public KickMemberResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private KickMemberResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 24:
                            this.bitField0_ |= 0x4;
                            this.s2CLeftKickNum_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_KickMemberResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_KickMemberResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(KickMemberResponse.class, Builder.class);
        }

        public static Parser<KickMemberResponse> PARSER = (Parser<KickMemberResponse>) new AbstractParser<KickMemberResponse>() {
            public GuildHandler.KickMemberResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.KickMemberResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int S2C_LEFTKICKNUM_FIELD_NUMBER = 3;
        private int s2CLeftKickNum_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<KickMemberResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasS2CLeftKickNum() {
            return ((this.bitField0_ & 0x4) == 4);
        }

        public int getS2CLeftKickNum() {
            return this.s2CLeftKickNum_;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.s2CLeftKickNum_ = 0;
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            if ((this.bitField0_ & 0x4) == 4) output.writeInt32(3, this.s2CLeftKickNum_);
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            if ((this.bitField0_ & 0x4) == 4) size += CodedOutputStream.computeInt32Size(3, this.s2CLeftKickNum_);
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static KickMemberResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (KickMemberResponse) PARSER.parseFrom(data);
        }

        public static KickMemberResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (KickMemberResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static KickMemberResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (KickMemberResponse) PARSER.parseFrom(data);
        }

        public static KickMemberResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (KickMemberResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static KickMemberResponse parseFrom(InputStream input) throws IOException {
            return (KickMemberResponse) PARSER.parseFrom(input);
        }

        public static KickMemberResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (KickMemberResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static KickMemberResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (KickMemberResponse) PARSER.parseDelimitedFrom(input);
        }

        public static KickMemberResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (KickMemberResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static KickMemberResponse parseFrom(CodedInputStream input) throws IOException {
            return (KickMemberResponse) PARSER.parseFrom(input);
        }

        public static KickMemberResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (KickMemberResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(KickMemberResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.KickMemberResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;
            private int s2CLeftKickNum_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_KickMemberResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_KickMemberResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.KickMemberResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.KickMemberResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CLeftKickNum_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_KickMemberResponse_descriptor;
            }

            public GuildHandler.KickMemberResponse getDefaultInstanceForType() {
                return GuildHandler.KickMemberResponse.getDefaultInstance();
            }

            public GuildHandler.KickMemberResponse build() {
                GuildHandler.KickMemberResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.KickMemberResponse buildPartial() {
                GuildHandler.KickMemberResponse result = new GuildHandler.KickMemberResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                if ((from_bitField0_ & 0x4) == 4) to_bitField0_ |= 0x4;
                result.s2CLeftKickNum_ = this.s2CLeftKickNum_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.KickMemberResponse)
                    return mergeFrom((GuildHandler.KickMemberResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.KickMemberResponse other) {
                if (other == GuildHandler.KickMemberResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (other.hasS2CLeftKickNum()) setS2CLeftKickNum(other.getS2CLeftKickNum());
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.KickMemberResponse parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.KickMemberResponse) GuildHandler.KickMemberResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.KickMemberResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.KickMemberResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public boolean hasS2CLeftKickNum() {
                return ((this.bitField0_ & 0x4) == 4);
            }

            public int getS2CLeftKickNum() {
                return this.s2CLeftKickNum_;
            }

            public Builder setS2CLeftKickNum(int value) {
                this.bitField0_ |= 0x4;
                this.s2CLeftKickNum_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CLeftKickNum() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.s2CLeftKickNum_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class UpgradeGuildLevelResponse
            extends GeneratedMessage
            implements UpgradeGuildLevelResponseOrBuilder {
        private static final UpgradeGuildLevelResponse defaultInstance = new UpgradeGuildLevelResponse(true);
        private final UnknownFieldSet unknownFields;

        private UpgradeGuildLevelResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private UpgradeGuildLevelResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static UpgradeGuildLevelResponse getDefaultInstance() {
            return defaultInstance;
        }

        public UpgradeGuildLevelResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private UpgradeGuildLevelResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    GuildHandler.MyGuildInfo.Builder subBuilder;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 26:
                            subBuilder = null;
                            if ((this.bitField0_ & 0x4) == 4) subBuilder = this.s2CGuildInfo_.toBuilder();
                            this.s2CGuildInfo_ = (GuildHandler.MyGuildInfo) input.readMessage(GuildHandler.MyGuildInfo.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.s2CGuildInfo_);
                                this.s2CGuildInfo_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x4;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_UpgradeGuildLevelResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_UpgradeGuildLevelResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(UpgradeGuildLevelResponse.class, Builder.class);
        }

        public static Parser<UpgradeGuildLevelResponse> PARSER = (Parser<UpgradeGuildLevelResponse>) new AbstractParser<UpgradeGuildLevelResponse>() {
            public GuildHandler.UpgradeGuildLevelResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.UpgradeGuildLevelResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int S2C_GUILDINFO_FIELD_NUMBER = 3;
        private GuildHandler.MyGuildInfo s2CGuildInfo_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<UpgradeGuildLevelResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        static {
            defaultInstance.initFields();
        }


        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }


        public boolean hasS2CGuildInfo() {
            return ((this.bitField0_ & 0x4) == 4);
        }


        public GuildHandler.MyGuildInfo getS2CGuildInfo() {
            return this.s2CGuildInfo_;
        }


        public GuildHandler.MyGuildInfoOrBuilder getS2CGuildInfoOrBuilder() {
            return this.s2CGuildInfo_;
        }


        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.getDefaultInstance();
        }


        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
                return true;
            }
            if (isInitialized == 0) {
                return false;
            }
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }


        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) {
                output.writeInt32(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                output.writeBytes(2, getS2CMsgBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                output.writeMessage(3, (MessageLite) this.s2CGuildInfo_);
            }
            getUnknownFields().writeTo(output);
        }


        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) {
                size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                size += CodedOutputStream.computeMessageSize(3, (MessageLite) this.s2CGuildInfo_);
            }
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }


        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }


        public static UpgradeGuildLevelResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (UpgradeGuildLevelResponse) PARSER.parseFrom(data);
        }


        public static UpgradeGuildLevelResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (UpgradeGuildLevelResponse) PARSER.parseFrom(data, extensionRegistry);
        }


        public static UpgradeGuildLevelResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (UpgradeGuildLevelResponse) PARSER.parseFrom(data);
        }


        public static UpgradeGuildLevelResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (UpgradeGuildLevelResponse) PARSER.parseFrom(data, extensionRegistry);
        }


        public static UpgradeGuildLevelResponse parseFrom(InputStream input) throws IOException {
            return (UpgradeGuildLevelResponse) PARSER.parseFrom(input);
        }


        public static UpgradeGuildLevelResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UpgradeGuildLevelResponse) PARSER.parseFrom(input, extensionRegistry);
        }


        public static UpgradeGuildLevelResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (UpgradeGuildLevelResponse) PARSER.parseDelimitedFrom(input);
        }


        public static UpgradeGuildLevelResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UpgradeGuildLevelResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }


        public static UpgradeGuildLevelResponse parseFrom(CodedInputStream input) throws IOException {
            return (UpgradeGuildLevelResponse) PARSER.parseFrom(input);
        }


        public static UpgradeGuildLevelResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UpgradeGuildLevelResponse) PARSER.parseFrom(input, extensionRegistry);
        }


        public static Builder newBuilder() {
            return Builder.create();
        }


        public Builder newBuilderForType() {
            return newBuilder();
        }


        public static Builder newBuilder(UpgradeGuildLevelResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }


        public Builder toBuilder() {
            return newBuilder(this);
        }


        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }


        public static final class Builder
                extends GeneratedMessage.Builder<Builder>
                implements GuildHandler.UpgradeGuildLevelResponseOrBuilder {
            private int bitField0_;


            private int s2CCode_;


            private Object s2CMsg_;


            private GuildHandler.MyGuildInfo s2CGuildInfo_;


            private SingleFieldBuilder<GuildHandler.MyGuildInfo, GuildHandler.MyGuildInfo.Builder, GuildHandler.MyGuildInfoOrBuilder> s2CGuildInfoBuilder_;


            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_UpgradeGuildLevelResponse_descriptor;
            }


            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_UpgradeGuildLevelResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.UpgradeGuildLevelResponse.class, Builder.class);
            }


            private Builder() {
                this.s2CMsg_ = "";
                this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }


            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }


            private void maybeForceBuilderInitialization() {
                if (GuildHandler.UpgradeGuildLevelResponse.alwaysUseFieldBuilders) {
                    getS2CGuildInfoFieldBuilder();
                }
            }


            private static Builder create() {
                return new Builder();
            }


            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                if (this.s2CGuildInfoBuilder_ == null) {
                    this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.getDefaultInstance();
                } else {
                    this.s2CGuildInfoBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }


            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }


            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_UpgradeGuildLevelResponse_descriptor;
            }


            public GuildHandler.UpgradeGuildLevelResponse getDefaultInstanceForType() {
                return GuildHandler.UpgradeGuildLevelResponse.getDefaultInstance();
            }


            public GuildHandler.UpgradeGuildLevelResponse build() {
                GuildHandler.UpgradeGuildLevelResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }


            public GuildHandler.UpgradeGuildLevelResponse buildPartial() {
                GuildHandler.UpgradeGuildLevelResponse result = new GuildHandler.UpgradeGuildLevelResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) {
                    to_bitField0_ |= 0x1;
                }
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) {
                    to_bitField0_ |= 0x2;
                }
                result.s2CMsg_ = this.s2CMsg_;
                if ((from_bitField0_ & 0x4) == 4) {
                    to_bitField0_ |= 0x4;
                }
                if (this.s2CGuildInfoBuilder_ == null) {
                    result.s2CGuildInfo_ = this.s2CGuildInfo_;
                } else {
                    result.s2CGuildInfo_ = (GuildHandler.MyGuildInfo) this.s2CGuildInfoBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }


            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.UpgradeGuildLevelResponse) {
                    return mergeFrom((GuildHandler.UpgradeGuildLevelResponse) other);
                }
                super.mergeFrom(other);
                return this;
            }


            public Builder mergeFrom(GuildHandler.UpgradeGuildLevelResponse other) {
                if (other == GuildHandler.UpgradeGuildLevelResponse.getDefaultInstance()) {
                    return this;
                }
                if (other.hasS2CCode()) {
                    setS2CCode(other.getS2CCode());
                }
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (other.hasS2CGuildInfo()) {
                    mergeS2CGuildInfo(other.getS2CGuildInfo());
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }


            public final boolean isInitialized() {
                if (!hasS2CCode()) {
                    return false;
                }
                return true;
            }


            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.UpgradeGuildLevelResponse parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.UpgradeGuildLevelResponse) GuildHandler.UpgradeGuildLevelResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.UpgradeGuildLevelResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }


            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }


            public int getS2CCode() {
                return this.s2CCode_;
            }


            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }


            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }


            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }


            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.s2CMsg_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setS2CMsg(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }


            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.UpgradeGuildLevelResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }


            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }


            public boolean hasS2CGuildInfo() {
                return ((this.bitField0_ & 0x4) == 4);
            }


            public GuildHandler.MyGuildInfo getS2CGuildInfo() {
                if (this.s2CGuildInfoBuilder_ == null) {
                    return this.s2CGuildInfo_;
                }
                return (GuildHandler.MyGuildInfo) this.s2CGuildInfoBuilder_.getMessage();
            }


            public Builder setS2CGuildInfo(GuildHandler.MyGuildInfo value) {
                if (this.s2CGuildInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.s2CGuildInfo_ = value;
                    onChanged();
                } else {
                    this.s2CGuildInfoBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }


            public Builder setS2CGuildInfo(GuildHandler.MyGuildInfo.Builder builderForValue) {
                if (this.s2CGuildInfoBuilder_ == null) {
                    this.s2CGuildInfo_ = builderForValue.build();
                    onChanged();
                } else {
                    this.s2CGuildInfoBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x4;
                return this;
            }


            public Builder mergeS2CGuildInfo(GuildHandler.MyGuildInfo value) {
                if (this.s2CGuildInfoBuilder_ == null) {
                    if ((this.bitField0_ & 0x4) == 4 && this.s2CGuildInfo_ != GuildHandler.MyGuildInfo.getDefaultInstance()) {
                        this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.newBuilder(this.s2CGuildInfo_).mergeFrom(value).buildPartial();
                    } else {
                        this.s2CGuildInfo_ = value;
                    }
                    onChanged();
                } else {
                    this.s2CGuildInfoBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }


            public Builder clearS2CGuildInfo() {
                if (this.s2CGuildInfoBuilder_ == null) {
                    this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.s2CGuildInfoBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }


            public GuildHandler.MyGuildInfo.Builder getS2CGuildInfoBuilder() {
                this.bitField0_ |= 0x4;
                onChanged();
                return (GuildHandler.MyGuildInfo.Builder) getS2CGuildInfoFieldBuilder().getBuilder();
            }


            public GuildHandler.MyGuildInfoOrBuilder getS2CGuildInfoOrBuilder() {
                if (this.s2CGuildInfoBuilder_ != null) {
                    return (GuildHandler.MyGuildInfoOrBuilder) this.s2CGuildInfoBuilder_.getMessageOrBuilder();
                }
                return this.s2CGuildInfo_;
            }


            private SingleFieldBuilder<GuildHandler.MyGuildInfo, GuildHandler.MyGuildInfo.Builder, GuildHandler.MyGuildInfoOrBuilder> getS2CGuildInfoFieldBuilder() {
                if (this.s2CGuildInfoBuilder_ == null) {
                    this.s2CGuildInfoBuilder_ = new SingleFieldBuilder(getS2CGuildInfo(), getParentForChildren(), isClean());
                    this.s2CGuildInfo_ = null;
                }
                return this.s2CGuildInfoBuilder_;
            }
        }
    }


    public static final class ChangeGuildNoticeResponse
            extends GeneratedMessage
            implements ChangeGuildNoticeResponseOrBuilder {
        private static final ChangeGuildNoticeResponse defaultInstance = new ChangeGuildNoticeResponse(true);
        private final UnknownFieldSet unknownFields;

        private ChangeGuildNoticeResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private ChangeGuildNoticeResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static ChangeGuildNoticeResponse getDefaultInstance() {
            return defaultInstance;
        }

        public ChangeGuildNoticeResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ChangeGuildNoticeResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 26:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x4;
                            this.s2CNotice_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_ChangeGuildNoticeResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_ChangeGuildNoticeResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(ChangeGuildNoticeResponse.class, Builder.class);
        }

        public static Parser<ChangeGuildNoticeResponse> PARSER = (Parser<ChangeGuildNoticeResponse>) new AbstractParser<ChangeGuildNoticeResponse>() {
            public GuildHandler.ChangeGuildNoticeResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.ChangeGuildNoticeResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int S2C_NOTICE_FIELD_NUMBER = 3;
        private Object s2CNotice_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<ChangeGuildNoticeResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasS2CNotice() {
            return ((this.bitField0_ & 0x4) == 4);
        }

        public String getS2CNotice() {
            Object ref = this.s2CNotice_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CNotice_ = s;
            return s;
        }

        public ByteString getS2CNoticeBytes() {
            Object ref = this.s2CNotice_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CNotice_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.s2CNotice_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            if ((this.bitField0_ & 0x4) == 4) output.writeBytes(3, getS2CNoticeBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            if ((this.bitField0_ & 0x4) == 4) size += CodedOutputStream.computeBytesSize(3, getS2CNoticeBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static ChangeGuildNoticeResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (ChangeGuildNoticeResponse) PARSER.parseFrom(data);
        }

        public static ChangeGuildNoticeResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ChangeGuildNoticeResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ChangeGuildNoticeResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (ChangeGuildNoticeResponse) PARSER.parseFrom(data);
        }

        public static ChangeGuildNoticeResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ChangeGuildNoticeResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ChangeGuildNoticeResponse parseFrom(InputStream input) throws IOException {
            return (ChangeGuildNoticeResponse) PARSER.parseFrom(input);
        }

        public static ChangeGuildNoticeResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangeGuildNoticeResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static ChangeGuildNoticeResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (ChangeGuildNoticeResponse) PARSER.parseDelimitedFrom(input);
        }

        public static ChangeGuildNoticeResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangeGuildNoticeResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static ChangeGuildNoticeResponse parseFrom(CodedInputStream input) throws IOException {
            return (ChangeGuildNoticeResponse) PARSER.parseFrom(input);
        }

        public static ChangeGuildNoticeResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangeGuildNoticeResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ChangeGuildNoticeResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.ChangeGuildNoticeResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;
            private Object s2CNotice_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_ChangeGuildNoticeResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_ChangeGuildNoticeResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.ChangeGuildNoticeResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                this.s2CNotice_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                this.s2CNotice_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.ChangeGuildNoticeResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CNotice_ = "";
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_ChangeGuildNoticeResponse_descriptor;
            }

            public GuildHandler.ChangeGuildNoticeResponse getDefaultInstanceForType() {
                return GuildHandler.ChangeGuildNoticeResponse.getDefaultInstance();
            }

            public GuildHandler.ChangeGuildNoticeResponse build() {
                GuildHandler.ChangeGuildNoticeResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.ChangeGuildNoticeResponse buildPartial() {
                GuildHandler.ChangeGuildNoticeResponse result = new GuildHandler.ChangeGuildNoticeResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                if ((from_bitField0_ & 0x4) == 4) to_bitField0_ |= 0x4;
                result.s2CNotice_ = this.s2CNotice_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.ChangeGuildNoticeResponse)
                    return mergeFrom((GuildHandler.ChangeGuildNoticeResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.ChangeGuildNoticeResponse other) {
                if (other == GuildHandler.ChangeGuildNoticeResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (other.hasS2CNotice()) {
                    this.bitField0_ |= 0x4;
                    this.s2CNotice_ = other.s2CNotice_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.ChangeGuildNoticeResponse parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.ChangeGuildNoticeResponse) GuildHandler.ChangeGuildNoticeResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.ChangeGuildNoticeResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.ChangeGuildNoticeResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public boolean hasS2CNotice() {
                return ((this.bitField0_ & 0x4) == 4);
            }

            public String getS2CNotice() {
                Object ref = this.s2CNotice_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CNotice_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CNoticeBytes() {
                Object ref = this.s2CNotice_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CNotice_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CNotice(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x4;
                this.s2CNotice_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CNotice() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.s2CNotice_ = GuildHandler.ChangeGuildNoticeResponse.getDefaultInstance().getS2CNotice();
                onChanged();
                return this;
            }

            public Builder setS2CNoticeBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x4;
                this.s2CNotice_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class ChangeGuildNameResponse
            extends GeneratedMessage
            implements ChangeGuildNameResponseOrBuilder {
        private static final ChangeGuildNameResponse defaultInstance = new ChangeGuildNameResponse(true);
        private final UnknownFieldSet unknownFields;

        private ChangeGuildNameResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private ChangeGuildNameResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static ChangeGuildNameResponse getDefaultInstance() {
            return defaultInstance;
        }

        public ChangeGuildNameResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ChangeGuildNameResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_ChangeGuildNameResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_ChangeGuildNameResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(ChangeGuildNameResponse.class, Builder.class);
        }

        public static Parser<ChangeGuildNameResponse> PARSER = (Parser<ChangeGuildNameResponse>) new AbstractParser<ChangeGuildNameResponse>() {
            public GuildHandler.ChangeGuildNameResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.ChangeGuildNameResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<ChangeGuildNameResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static ChangeGuildNameResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (ChangeGuildNameResponse) PARSER.parseFrom(data);
        }

        public static ChangeGuildNameResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ChangeGuildNameResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ChangeGuildNameResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (ChangeGuildNameResponse) PARSER.parseFrom(data);
        }

        public static ChangeGuildNameResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ChangeGuildNameResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ChangeGuildNameResponse parseFrom(InputStream input) throws IOException {
            return (ChangeGuildNameResponse) PARSER.parseFrom(input);
        }

        public static ChangeGuildNameResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangeGuildNameResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static ChangeGuildNameResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (ChangeGuildNameResponse) PARSER.parseDelimitedFrom(input);
        }

        public static ChangeGuildNameResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangeGuildNameResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static ChangeGuildNameResponse parseFrom(CodedInputStream input) throws IOException {
            return (ChangeGuildNameResponse) PARSER.parseFrom(input);
        }

        public static ChangeGuildNameResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangeGuildNameResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ChangeGuildNameResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.ChangeGuildNameResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_ChangeGuildNameResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_ChangeGuildNameResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.ChangeGuildNameResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.ChangeGuildNameResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_ChangeGuildNameResponse_descriptor;
            }

            public GuildHandler.ChangeGuildNameResponse getDefaultInstanceForType() {
                return GuildHandler.ChangeGuildNameResponse.getDefaultInstance();
            }

            public GuildHandler.ChangeGuildNameResponse build() {
                GuildHandler.ChangeGuildNameResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.ChangeGuildNameResponse buildPartial() {
                GuildHandler.ChangeGuildNameResponse result = new GuildHandler.ChangeGuildNameResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.ChangeGuildNameResponse)
                    return mergeFrom((GuildHandler.ChangeGuildNameResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.ChangeGuildNameResponse other) {
                if (other == GuildHandler.ChangeGuildNameResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.ChangeGuildNameResponse parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.ChangeGuildNameResponse) GuildHandler.ChangeGuildNameResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.ChangeGuildNameResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.ChangeGuildNameResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class ChangeOfficeNameResponse
            extends GeneratedMessage
            implements ChangeOfficeNameResponseOrBuilder {
        private static final ChangeOfficeNameResponse defaultInstance = new ChangeOfficeNameResponse(true);
        private final UnknownFieldSet unknownFields;

        private ChangeOfficeNameResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private ChangeOfficeNameResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static ChangeOfficeNameResponse getDefaultInstance() {
            return defaultInstance;
        }

        public ChangeOfficeNameResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ChangeOfficeNameResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_ChangeOfficeNameResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_ChangeOfficeNameResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(ChangeOfficeNameResponse.class, Builder.class);
        }

        public static Parser<ChangeOfficeNameResponse> PARSER = (Parser<ChangeOfficeNameResponse>) new AbstractParser<ChangeOfficeNameResponse>() {
            public GuildHandler.ChangeOfficeNameResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.ChangeOfficeNameResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<ChangeOfficeNameResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static ChangeOfficeNameResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (ChangeOfficeNameResponse) PARSER.parseFrom(data);
        }

        public static ChangeOfficeNameResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ChangeOfficeNameResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ChangeOfficeNameResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (ChangeOfficeNameResponse) PARSER.parseFrom(data);
        }

        public static ChangeOfficeNameResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ChangeOfficeNameResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ChangeOfficeNameResponse parseFrom(InputStream input) throws IOException {
            return (ChangeOfficeNameResponse) PARSER.parseFrom(input);
        }

        public static ChangeOfficeNameResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangeOfficeNameResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static ChangeOfficeNameResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (ChangeOfficeNameResponse) PARSER.parseDelimitedFrom(input);
        }

        public static ChangeOfficeNameResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangeOfficeNameResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static ChangeOfficeNameResponse parseFrom(CodedInputStream input) throws IOException {
            return (ChangeOfficeNameResponse) PARSER.parseFrom(input);
        }

        public static ChangeOfficeNameResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ChangeOfficeNameResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ChangeOfficeNameResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.ChangeOfficeNameResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_ChangeOfficeNameResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_ChangeOfficeNameResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.ChangeOfficeNameResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.ChangeOfficeNameResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_ChangeOfficeNameResponse_descriptor;
            }

            public GuildHandler.ChangeOfficeNameResponse getDefaultInstanceForType() {
                return GuildHandler.ChangeOfficeNameResponse.getDefaultInstance();
            }

            public GuildHandler.ChangeOfficeNameResponse build() {
                GuildHandler.ChangeOfficeNameResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.ChangeOfficeNameResponse buildPartial() {
                GuildHandler.ChangeOfficeNameResponse result = new GuildHandler.ChangeOfficeNameResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.ChangeOfficeNameResponse)
                    return mergeFrom((GuildHandler.ChangeOfficeNameResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.ChangeOfficeNameResponse other) {
                if (other == GuildHandler.ChangeOfficeNameResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.ChangeOfficeNameResponse parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.ChangeOfficeNameResponse) GuildHandler.ChangeOfficeNameResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.ChangeOfficeNameResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.ChangeOfficeNameResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class ContributeToGuildResponse
            extends GeneratedMessage
            implements ContributeToGuildResponseOrBuilder {
        private static final ContributeToGuildResponse defaultInstance = new ContributeToGuildResponse(true);
        private final UnknownFieldSet unknownFields;

        private ContributeToGuildResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private ContributeToGuildResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static ContributeToGuildResponse getDefaultInstance() {
            return defaultInstance;
        }

        public ContributeToGuildResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ContributeToGuildResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    GuildHandler.MyGuildInfo.Builder subBuilder;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 26:
                            subBuilder = null;
                            if ((this.bitField0_ & 0x4) == 4) subBuilder = this.s2CGuildInfo_.toBuilder();
                            this.s2CGuildInfo_ = (GuildHandler.MyGuildInfo) input.readMessage(GuildHandler.MyGuildInfo.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.s2CGuildInfo_);
                                this.s2CGuildInfo_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x4;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_ContributeToGuildResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_ContributeToGuildResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(ContributeToGuildResponse.class, Builder.class);
        }

        public static Parser<ContributeToGuildResponse> PARSER = (Parser<ContributeToGuildResponse>) new AbstractParser<ContributeToGuildResponse>() {
            public GuildHandler.ContributeToGuildResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.ContributeToGuildResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int S2C_GUILDINFO_FIELD_NUMBER = 3;
        private GuildHandler.MyGuildInfo s2CGuildInfo_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<ContributeToGuildResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        static {
            defaultInstance.initFields();
        }


        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }


        public boolean hasS2CGuildInfo() {
            return ((this.bitField0_ & 0x4) == 4);
        }


        public GuildHandler.MyGuildInfo getS2CGuildInfo() {
            return this.s2CGuildInfo_;
        }


        public GuildHandler.MyGuildInfoOrBuilder getS2CGuildInfoOrBuilder() {
            return this.s2CGuildInfo_;
        }


        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.getDefaultInstance();
        }


        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
                return true;
            }
            if (isInitialized == 0) {
                return false;
            }
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }


        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) {
                output.writeInt32(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                output.writeBytes(2, getS2CMsgBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                output.writeMessage(3, (MessageLite) this.s2CGuildInfo_);
            }
            getUnknownFields().writeTo(output);
        }


        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) {
                size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                size += CodedOutputStream.computeMessageSize(3, (MessageLite) this.s2CGuildInfo_);
            }
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }


        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }


        public static ContributeToGuildResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (ContributeToGuildResponse) PARSER.parseFrom(data);
        }


        public static ContributeToGuildResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ContributeToGuildResponse) PARSER.parseFrom(data, extensionRegistry);
        }


        public static ContributeToGuildResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (ContributeToGuildResponse) PARSER.parseFrom(data);
        }


        public static ContributeToGuildResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ContributeToGuildResponse) PARSER.parseFrom(data, extensionRegistry);
        }


        public static ContributeToGuildResponse parseFrom(InputStream input) throws IOException {
            return (ContributeToGuildResponse) PARSER.parseFrom(input);
        }


        public static ContributeToGuildResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ContributeToGuildResponse) PARSER.parseFrom(input, extensionRegistry);
        }


        public static ContributeToGuildResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (ContributeToGuildResponse) PARSER.parseDelimitedFrom(input);
        }


        public static ContributeToGuildResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ContributeToGuildResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }


        public static ContributeToGuildResponse parseFrom(CodedInputStream input) throws IOException {
            return (ContributeToGuildResponse) PARSER.parseFrom(input);
        }


        public static ContributeToGuildResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ContributeToGuildResponse) PARSER.parseFrom(input, extensionRegistry);
        }


        public static Builder newBuilder() {
            return Builder.create();
        }


        public Builder newBuilderForType() {
            return newBuilder();
        }


        public static Builder newBuilder(ContributeToGuildResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }


        public Builder toBuilder() {
            return newBuilder(this);
        }


        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }


        public static final class Builder
                extends GeneratedMessage.Builder<Builder>
                implements GuildHandler.ContributeToGuildResponseOrBuilder {
            private int bitField0_;


            private int s2CCode_;


            private Object s2CMsg_;


            private GuildHandler.MyGuildInfo s2CGuildInfo_;


            private SingleFieldBuilder<GuildHandler.MyGuildInfo, GuildHandler.MyGuildInfo.Builder, GuildHandler.MyGuildInfoOrBuilder> s2CGuildInfoBuilder_;


            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_ContributeToGuildResponse_descriptor;
            }


            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_ContributeToGuildResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.ContributeToGuildResponse.class, Builder.class);
            }


            private Builder() {
                this.s2CMsg_ = "";
                this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }


            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }


            private void maybeForceBuilderInitialization() {
                if (GuildHandler.ContributeToGuildResponse.alwaysUseFieldBuilders) {
                    getS2CGuildInfoFieldBuilder();
                }
            }


            private static Builder create() {
                return new Builder();
            }


            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                if (this.s2CGuildInfoBuilder_ == null) {
                    this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.getDefaultInstance();
                } else {
                    this.s2CGuildInfoBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }


            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }


            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_ContributeToGuildResponse_descriptor;
            }


            public GuildHandler.ContributeToGuildResponse getDefaultInstanceForType() {
                return GuildHandler.ContributeToGuildResponse.getDefaultInstance();
            }


            public GuildHandler.ContributeToGuildResponse build() {
                GuildHandler.ContributeToGuildResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }


            public GuildHandler.ContributeToGuildResponse buildPartial() {
                GuildHandler.ContributeToGuildResponse result = new GuildHandler.ContributeToGuildResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) {
                    to_bitField0_ |= 0x1;
                }
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) {
                    to_bitField0_ |= 0x2;
                }
                result.s2CMsg_ = this.s2CMsg_;
                if ((from_bitField0_ & 0x4) == 4) {
                    to_bitField0_ |= 0x4;
                }
                if (this.s2CGuildInfoBuilder_ == null) {
                    result.s2CGuildInfo_ = this.s2CGuildInfo_;
                } else {
                    result.s2CGuildInfo_ = (GuildHandler.MyGuildInfo) this.s2CGuildInfoBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }


            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.ContributeToGuildResponse) {
                    return mergeFrom((GuildHandler.ContributeToGuildResponse) other);
                }
                super.mergeFrom(other);
                return this;
            }


            public Builder mergeFrom(GuildHandler.ContributeToGuildResponse other) {
                if (other == GuildHandler.ContributeToGuildResponse.getDefaultInstance()) {
                    return this;
                }
                if (other.hasS2CCode()) {
                    setS2CCode(other.getS2CCode());
                }
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (other.hasS2CGuildInfo()) {
                    mergeS2CGuildInfo(other.getS2CGuildInfo());
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }


            public final boolean isInitialized() {
                if (!hasS2CCode()) {
                    return false;
                }
                return true;
            }


            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.ContributeToGuildResponse parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.ContributeToGuildResponse) GuildHandler.ContributeToGuildResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.ContributeToGuildResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }


            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }


            public int getS2CCode() {
                return this.s2CCode_;
            }


            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }


            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }


            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }


            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.s2CMsg_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setS2CMsg(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }


            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.ContributeToGuildResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }


            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }


            public boolean hasS2CGuildInfo() {
                return ((this.bitField0_ & 0x4) == 4);
            }


            public GuildHandler.MyGuildInfo getS2CGuildInfo() {
                if (this.s2CGuildInfoBuilder_ == null) {
                    return this.s2CGuildInfo_;
                }
                return (GuildHandler.MyGuildInfo) this.s2CGuildInfoBuilder_.getMessage();
            }


            public Builder setS2CGuildInfo(GuildHandler.MyGuildInfo value) {
                if (this.s2CGuildInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.s2CGuildInfo_ = value;
                    onChanged();
                } else {
                    this.s2CGuildInfoBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }


            public Builder setS2CGuildInfo(GuildHandler.MyGuildInfo.Builder builderForValue) {
                if (this.s2CGuildInfoBuilder_ == null) {
                    this.s2CGuildInfo_ = builderForValue.build();
                    onChanged();
                } else {
                    this.s2CGuildInfoBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x4;
                return this;
            }


            public Builder mergeS2CGuildInfo(GuildHandler.MyGuildInfo value) {
                if (this.s2CGuildInfoBuilder_ == null) {
                    if ((this.bitField0_ & 0x4) == 4 && this.s2CGuildInfo_ != GuildHandler.MyGuildInfo.getDefaultInstance()) {
                        this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.newBuilder(this.s2CGuildInfo_).mergeFrom(value).buildPartial();
                    } else {
                        this.s2CGuildInfo_ = value;
                    }
                    onChanged();
                } else {
                    this.s2CGuildInfoBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }


            public Builder clearS2CGuildInfo() {
                if (this.s2CGuildInfoBuilder_ == null) {
                    this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.s2CGuildInfoBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }


            public GuildHandler.MyGuildInfo.Builder getS2CGuildInfoBuilder() {
                this.bitField0_ |= 0x4;
                onChanged();
                return (GuildHandler.MyGuildInfo.Builder) getS2CGuildInfoFieldBuilder().getBuilder();
            }


            public GuildHandler.MyGuildInfoOrBuilder getS2CGuildInfoOrBuilder() {
                if (this.s2CGuildInfoBuilder_ != null) {
                    return (GuildHandler.MyGuildInfoOrBuilder) this.s2CGuildInfoBuilder_.getMessageOrBuilder();
                }
                return this.s2CGuildInfo_;
            }


            private SingleFieldBuilder<GuildHandler.MyGuildInfo, GuildHandler.MyGuildInfo.Builder, GuildHandler.MyGuildInfoOrBuilder> getS2CGuildInfoFieldBuilder() {
                if (this.s2CGuildInfoBuilder_ == null) {
                    this.s2CGuildInfoBuilder_ = new SingleFieldBuilder(getS2CGuildInfo(), getParentForChildren(), isClean());
                    this.s2CGuildInfo_ = null;
                }
                return this.s2CGuildInfoBuilder_;
            }
        }
    }


    public static final class SetMemberJobResponse
            extends GeneratedMessage
            implements SetMemberJobResponseOrBuilder {
        private static final SetMemberJobResponse defaultInstance = new SetMemberJobResponse(true);
        private final UnknownFieldSet unknownFields;

        private SetMemberJobResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private SetMemberJobResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static SetMemberJobResponse getDefaultInstance() {
            return defaultInstance;
        }

        public SetMemberJobResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private SetMemberJobResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_SetMemberJobResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_SetMemberJobResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(SetMemberJobResponse.class, Builder.class);
        }

        public static Parser<SetMemberJobResponse> PARSER = (Parser<SetMemberJobResponse>) new AbstractParser<SetMemberJobResponse>() {
            public GuildHandler.SetMemberJobResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.SetMemberJobResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<SetMemberJobResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static SetMemberJobResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (SetMemberJobResponse) PARSER.parseFrom(data);
        }

        public static SetMemberJobResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (SetMemberJobResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static SetMemberJobResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (SetMemberJobResponse) PARSER.parseFrom(data);
        }

        public static SetMemberJobResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (SetMemberJobResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static SetMemberJobResponse parseFrom(InputStream input) throws IOException {
            return (SetMemberJobResponse) PARSER.parseFrom(input);
        }

        public static SetMemberJobResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (SetMemberJobResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static SetMemberJobResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (SetMemberJobResponse) PARSER.parseDelimitedFrom(input);
        }

        public static SetMemberJobResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (SetMemberJobResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static SetMemberJobResponse parseFrom(CodedInputStream input) throws IOException {
            return (SetMemberJobResponse) PARSER.parseFrom(input);
        }

        public static SetMemberJobResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (SetMemberJobResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(SetMemberJobResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.SetMemberJobResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_SetMemberJobResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_SetMemberJobResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.SetMemberJobResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.SetMemberJobResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_SetMemberJobResponse_descriptor;
            }

            public GuildHandler.SetMemberJobResponse getDefaultInstanceForType() {
                return GuildHandler.SetMemberJobResponse.getDefaultInstance();
            }

            public GuildHandler.SetMemberJobResponse build() {
                GuildHandler.SetMemberJobResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.SetMemberJobResponse buildPartial() {
                GuildHandler.SetMemberJobResponse result = new GuildHandler.SetMemberJobResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.SetMemberJobResponse)
                    return mergeFrom((GuildHandler.SetMemberJobResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.SetMemberJobResponse other) {
                if (other == GuildHandler.SetMemberJobResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.SetMemberJobResponse parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.SetMemberJobResponse) GuildHandler.SetMemberJobResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.SetMemberJobResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.SetMemberJobResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class TransferPresidentResponse
            extends GeneratedMessage
            implements TransferPresidentResponseOrBuilder {
        private static final TransferPresidentResponse defaultInstance = new TransferPresidentResponse(true);
        private final UnknownFieldSet unknownFields;

        private TransferPresidentResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private TransferPresidentResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static TransferPresidentResponse getDefaultInstance() {
            return defaultInstance;
        }

        public TransferPresidentResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private TransferPresidentResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    GuildHandler.MyGuildInfo.Builder subBuilder;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 26:
                            if ((mutable_bitField0_ & 0x4) != 4) {
                                this.s2CMemberList_ = new ArrayList<>();
                                mutable_bitField0_ |= 0x4;
                            }
                            this.s2CMemberList_.add(input.readMessage(GuildHandler.MemberInfo.PARSER, extensionRegistry));
                            break;
                        case 34:
                            subBuilder = null;
                            if ((this.bitField0_ & 0x4) == 4) subBuilder = this.s2CGuildInfo_.toBuilder();
                            this.s2CGuildInfo_ = (GuildHandler.MyGuildInfo) input.readMessage(GuildHandler.MyGuildInfo.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.s2CGuildInfo_);
                                this.s2CGuildInfo_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x4;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                if ((mutable_bitField0_ & 0x4) == 4)
                    this.s2CMemberList_ = Collections.unmodifiableList(this.s2CMemberList_);
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_TransferPresidentResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_TransferPresidentResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(TransferPresidentResponse.class, Builder.class);
        }

        public static Parser<TransferPresidentResponse> PARSER = (Parser<TransferPresidentResponse>) new AbstractParser<TransferPresidentResponse>() {
            public GuildHandler.TransferPresidentResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.TransferPresidentResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int S2C_MEMBERLIST_FIELD_NUMBER = 3;
        private List<GuildHandler.MemberInfo> s2CMemberList_;
        public static final int S2C_GUILDINFO_FIELD_NUMBER = 4;
        private GuildHandler.MyGuildInfo s2CGuildInfo_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<TransferPresidentResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        static {
            defaultInstance.initFields();
        }

        public List<GuildHandler.MemberInfo> getS2CMemberListList() {
            return this.s2CMemberList_;
        }

        public List<? extends GuildHandler.MemberInfoOrBuilder> getS2CMemberListOrBuilderList() {
            return (List) this.s2CMemberList_;
        }

        public int getS2CMemberListCount() {
            return this.s2CMemberList_.size();
        }

        public GuildHandler.MemberInfo getS2CMemberList(int index) {
            return this.s2CMemberList_.get(index);
        }

        public GuildHandler.MemberInfoOrBuilder getS2CMemberListOrBuilder(int index) {
            return this.s2CMemberList_.get(index);
        }

        public boolean hasS2CGuildInfo() {
            return ((this.bitField0_ & 0x4) == 4);
        }

        public GuildHandler.MyGuildInfo getS2CGuildInfo() {
            return this.s2CGuildInfo_;
        }

        public GuildHandler.MyGuildInfoOrBuilder getS2CGuildInfoOrBuilder() {
            return this.s2CGuildInfo_;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.s2CMemberList_ = Collections.emptyList();
            this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.getDefaultInstance();
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1)
                output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2)
                output.writeBytes(2, getS2CMsgBytes());
            for (int i = 0; i < this.s2CMemberList_.size(); i++)
                output.writeMessage(3, (MessageLite) this.s2CMemberList_.get(i));
            if ((this.bitField0_ & 0x4) == 4)
                output.writeMessage(4, (MessageLite) this.s2CGuildInfo_);
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1)
                return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1)
                size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2)
                size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            for (int i = 0; i < this.s2CMemberList_.size(); i++)
                size += CodedOutputStream.computeMessageSize(3, (MessageLite) this.s2CMemberList_.get(i));
            if ((this.bitField0_ & 0x4) == 4)
                size += CodedOutputStream.computeMessageSize(4, (MessageLite) this.s2CGuildInfo_);
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static TransferPresidentResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (TransferPresidentResponse) PARSER.parseFrom(data);
        }

        public static TransferPresidentResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (TransferPresidentResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static TransferPresidentResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (TransferPresidentResponse) PARSER.parseFrom(data);
        }

        public static TransferPresidentResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (TransferPresidentResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static TransferPresidentResponse parseFrom(InputStream input) throws IOException {
            return (TransferPresidentResponse) PARSER.parseFrom(input);
        }

        public static TransferPresidentResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (TransferPresidentResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static TransferPresidentResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (TransferPresidentResponse) PARSER.parseDelimitedFrom(input);
        }

        public static TransferPresidentResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (TransferPresidentResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static TransferPresidentResponse parseFrom(CodedInputStream input) throws IOException {
            return (TransferPresidentResponse) PARSER.parseFrom(input);
        }

        public static TransferPresidentResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (TransferPresidentResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(TransferPresidentResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.TransferPresidentResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;
            private List<GuildHandler.MemberInfo> s2CMemberList_;
            private RepeatedFieldBuilder<GuildHandler.MemberInfo, GuildHandler.MemberInfo.Builder, GuildHandler.MemberInfoOrBuilder> s2CMemberListBuilder_;
            private GuildHandler.MyGuildInfo s2CGuildInfo_;
            private SingleFieldBuilder<GuildHandler.MyGuildInfo, GuildHandler.MyGuildInfo.Builder, GuildHandler.MyGuildInfoOrBuilder> s2CGuildInfoBuilder_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_TransferPresidentResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_TransferPresidentResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.TransferPresidentResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                this.s2CMemberList_ = Collections.emptyList();
                this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                this.s2CMemberList_ = Collections.emptyList();
                this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.TransferPresidentResponse.alwaysUseFieldBuilders) {
                    getS2CMemberListFieldBuilder();
                    getS2CGuildInfoFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                if (this.s2CMemberListBuilder_ == null) {
                    this.s2CMemberList_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFB;
                } else {
                    this.s2CMemberListBuilder_.clear();
                }
                if (this.s2CGuildInfoBuilder_ == null) {
                    this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.getDefaultInstance();
                } else {
                    this.s2CGuildInfoBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFF7;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_TransferPresidentResponse_descriptor;
            }

            public GuildHandler.TransferPresidentResponse getDefaultInstanceForType() {
                return GuildHandler.TransferPresidentResponse.getDefaultInstance();
            }

            public GuildHandler.TransferPresidentResponse build() {
                GuildHandler.TransferPresidentResponse result = buildPartial();
                if (!result.isInitialized())
                    throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.TransferPresidentResponse buildPartial() {
                GuildHandler.TransferPresidentResponse result = new GuildHandler.TransferPresidentResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1)
                    to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2)
                    to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                if (this.s2CMemberListBuilder_ == null) {
                    if ((this.bitField0_ & 0x4) == 4) {
                        this.s2CMemberList_ = Collections.unmodifiableList(this.s2CMemberList_);
                        this.bitField0_ &= 0xFFFFFFFB;
                    }
                    result.s2CMemberList_ = this.s2CMemberList_;
                } else {
                    result.s2CMemberList_ = this.s2CMemberListBuilder_.build();
                }
                if ((from_bitField0_ & 0x8) == 8)
                    to_bitField0_ |= 0x4;
                if (this.s2CGuildInfoBuilder_ == null) {
                    result.s2CGuildInfo_ = this.s2CGuildInfo_;
                } else {
                    result.s2CGuildInfo_ = (GuildHandler.MyGuildInfo) this.s2CGuildInfoBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.TransferPresidentResponse)
                    return mergeFrom((GuildHandler.TransferPresidentResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.TransferPresidentResponse other) {
                if (other == GuildHandler.TransferPresidentResponse.getDefaultInstance())
                    return this;
                if (other.hasS2CCode())
                    setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (this.s2CMemberListBuilder_ == null) {
                    if (!other.s2CMemberList_.isEmpty()) {
                        if (this.s2CMemberList_.isEmpty()) {
                            this.s2CMemberList_ = other.s2CMemberList_;
                            this.bitField0_ &= 0xFFFFFFFB;
                        } else {
                            ensureS2CMemberListIsMutable();
                            this.s2CMemberList_.addAll(other.s2CMemberList_);
                        }
                        onChanged();
                    }
                } else if (!other.s2CMemberList_.isEmpty()) {
                    if (this.s2CMemberListBuilder_.isEmpty()) {
                        this.s2CMemberListBuilder_.dispose();
                        this.s2CMemberListBuilder_ = null;
                        this.s2CMemberList_ = other.s2CMemberList_;
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.s2CMemberListBuilder_ = GuildHandler.TransferPresidentResponse.alwaysUseFieldBuilders ? getS2CMemberListFieldBuilder() : null;
                    } else {
                        this.s2CMemberListBuilder_.addAllMessages(other.s2CMemberList_);
                    }
                }
                if (other.hasS2CGuildInfo())
                    mergeS2CGuildInfo(other.getS2CGuildInfo());
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode())
                    return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.TransferPresidentResponse parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.TransferPresidentResponse) GuildHandler.TransferPresidentResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.TransferPresidentResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null)
                        mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8())
                        this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.TransferPresidentResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            private void ensureS2CMemberListIsMutable() {
                if ((this.bitField0_ & 0x4) != 4) {
                    this.s2CMemberList_ = new ArrayList<>(this.s2CMemberList_);
                    this.bitField0_ |= 0x4;
                }
            }

            public List<GuildHandler.MemberInfo> getS2CMemberListList() {
                if (this.s2CMemberListBuilder_ == null)
                    return Collections.unmodifiableList(this.s2CMemberList_);
                return this.s2CMemberListBuilder_.getMessageList();
            }

            public int getS2CMemberListCount() {
                if (this.s2CMemberListBuilder_ == null)
                    return this.s2CMemberList_.size();
                return this.s2CMemberListBuilder_.getCount();
            }

            public GuildHandler.MemberInfo getS2CMemberList(int index) {
                if (this.s2CMemberListBuilder_ == null)
                    return this.s2CMemberList_.get(index);
                return (GuildHandler.MemberInfo) this.s2CMemberListBuilder_.getMessage(index);
            }

            public Builder setS2CMemberList(int index, GuildHandler.MemberInfo value) {
                if (this.s2CMemberListBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureS2CMemberListIsMutable();
                    this.s2CMemberList_.set(index, value);
                    onChanged();
                } else {
                    this.s2CMemberListBuilder_.setMessage(index, value);
                }
                return this;
            }

            public Builder setS2CMemberList(int index, GuildHandler.MemberInfo.Builder builderForValue) {
                if (this.s2CMemberListBuilder_ == null) {
                    ensureS2CMemberListIsMutable();
                    this.s2CMemberList_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    this.s2CMemberListBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            public Builder addS2CMemberList(GuildHandler.MemberInfo value) {
                if (this.s2CMemberListBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureS2CMemberListIsMutable();
                    this.s2CMemberList_.add(value);
                    onChanged();
                } else {
                    this.s2CMemberListBuilder_.addMessage(value);
                }
                return this;
            }

            public Builder addS2CMemberList(int index, GuildHandler.MemberInfo value) {
                if (this.s2CMemberListBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureS2CMemberListIsMutable();
                    this.s2CMemberList_.add(index, value);
                    onChanged();
                } else {
                    this.s2CMemberListBuilder_.addMessage(index, value);
                }
                return this;
            }

            public Builder addS2CMemberList(GuildHandler.MemberInfo.Builder builderForValue) {
                if (this.s2CMemberListBuilder_ == null) {
                    ensureS2CMemberListIsMutable();
                    this.s2CMemberList_.add(builderForValue.build());
                    onChanged();
                } else {
                    this.s2CMemberListBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            public Builder addS2CMemberList(int index, GuildHandler.MemberInfo.Builder builderForValue) {
                if (this.s2CMemberListBuilder_ == null) {
                    ensureS2CMemberListIsMutable();
                    this.s2CMemberList_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    this.s2CMemberListBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            public Builder addAllS2CMemberList(Iterable<? extends GuildHandler.MemberInfo> values) {
                if (this.s2CMemberListBuilder_ == null) {
                    ensureS2CMemberListIsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.s2CMemberList_);
                    onChanged();
                } else {
                    this.s2CMemberListBuilder_.addAllMessages(values);
                }
                return this;
            }

            public Builder clearS2CMemberList() {
                if (this.s2CMemberListBuilder_ == null) {
                    this.s2CMemberList_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFB;
                    onChanged();
                } else {
                    this.s2CMemberListBuilder_.clear();
                }
                return this;
            }

            public Builder removeS2CMemberList(int index) {
                if (this.s2CMemberListBuilder_ == null) {
                    ensureS2CMemberListIsMutable();
                    this.s2CMemberList_.remove(index);
                    onChanged();
                } else {
                    this.s2CMemberListBuilder_.remove(index);
                }
                return this;
            }

            public GuildHandler.MemberInfo.Builder getS2CMemberListBuilder(int index) {
                return (GuildHandler.MemberInfo.Builder) getS2CMemberListFieldBuilder().getBuilder(index);
            }

            public GuildHandler.MemberInfoOrBuilder getS2CMemberListOrBuilder(int index) {
                if (this.s2CMemberListBuilder_ == null)
                    return this.s2CMemberList_.get(index);
                return (GuildHandler.MemberInfoOrBuilder) this.s2CMemberListBuilder_.getMessageOrBuilder(index);
            }

            public List<? extends GuildHandler.MemberInfoOrBuilder> getS2CMemberListOrBuilderList() {
                if (this.s2CMemberListBuilder_ != null)
                    return this.s2CMemberListBuilder_.getMessageOrBuilderList();
                return Collections.unmodifiableList((List) this.s2CMemberList_);
            }

            public GuildHandler.MemberInfo.Builder addS2CMemberListBuilder() {
                return (GuildHandler.MemberInfo.Builder) getS2CMemberListFieldBuilder().addBuilder(GuildHandler.MemberInfo.getDefaultInstance());
            }

            public GuildHandler.MemberInfo.Builder addS2CMemberListBuilder(int index) {
                return (GuildHandler.MemberInfo.Builder) getS2CMemberListFieldBuilder().addBuilder(index, GuildHandler.MemberInfo.getDefaultInstance());
            }

            public List<GuildHandler.MemberInfo.Builder> getS2CMemberListBuilderList() {
                return getS2CMemberListFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilder<GuildHandler.MemberInfo, GuildHandler.MemberInfo.Builder, GuildHandler.MemberInfoOrBuilder> getS2CMemberListFieldBuilder() {
                if (this.s2CMemberListBuilder_ == null) {
                    this.s2CMemberListBuilder_ = new RepeatedFieldBuilder(this.s2CMemberList_, ((this.bitField0_ & 0x4) == 4), getParentForChildren(), isClean());
                    this.s2CMemberList_ = null;
                }
                return this.s2CMemberListBuilder_;
            }

            public boolean hasS2CGuildInfo() {
                return ((this.bitField0_ & 0x8) == 8);
            }

            public GuildHandler.MyGuildInfo getS2CGuildInfo() {
                if (this.s2CGuildInfoBuilder_ == null)
                    return this.s2CGuildInfo_;
                return (GuildHandler.MyGuildInfo) this.s2CGuildInfoBuilder_.getMessage();
            }

            public Builder setS2CGuildInfo(GuildHandler.MyGuildInfo value) {
                if (this.s2CGuildInfoBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    this.s2CGuildInfo_ = value;
                    onChanged();
                } else {
                    this.s2CGuildInfoBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x8;
                return this;
            }

            public Builder setS2CGuildInfo(GuildHandler.MyGuildInfo.Builder builderForValue) {
                if (this.s2CGuildInfoBuilder_ == null) {
                    this.s2CGuildInfo_ = builderForValue.build();
                    onChanged();
                } else {
                    this.s2CGuildInfoBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x8;
                return this;
            }

            public Builder mergeS2CGuildInfo(GuildHandler.MyGuildInfo value) {
                if (this.s2CGuildInfoBuilder_ == null) {
                    if ((this.bitField0_ & 0x8) == 8 && this.s2CGuildInfo_ != GuildHandler.MyGuildInfo.getDefaultInstance()) {
                        this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.newBuilder(this.s2CGuildInfo_).mergeFrom(value).buildPartial();
                    } else {
                        this.s2CGuildInfo_ = value;
                    }
                    onChanged();
                } else {
                    this.s2CGuildInfoBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x8;
                return this;
            }

            public Builder clearS2CGuildInfo() {
                if (this.s2CGuildInfoBuilder_ == null) {
                    this.s2CGuildInfo_ = GuildHandler.MyGuildInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.s2CGuildInfoBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFF7;
                return this;
            }

            public GuildHandler.MyGuildInfo.Builder getS2CGuildInfoBuilder() {
                this.bitField0_ |= 0x8;
                onChanged();
                return (GuildHandler.MyGuildInfo.Builder) getS2CGuildInfoFieldBuilder().getBuilder();
            }

            public GuildHandler.MyGuildInfoOrBuilder getS2CGuildInfoOrBuilder() {
                if (this.s2CGuildInfoBuilder_ != null)
                    return (GuildHandler.MyGuildInfoOrBuilder) this.s2CGuildInfoBuilder_.getMessageOrBuilder();
                return this.s2CGuildInfo_;
            }

            private SingleFieldBuilder<GuildHandler.MyGuildInfo, GuildHandler.MyGuildInfo.Builder, GuildHandler.MyGuildInfoOrBuilder> getS2CGuildInfoFieldBuilder() {
                if (this.s2CGuildInfoBuilder_ == null) {
                    this.s2CGuildInfoBuilder_ = new SingleFieldBuilder(getS2CGuildInfo(), getParentForChildren(), isClean());
                    this.s2CGuildInfo_ = null;
                }
                return this.s2CGuildInfoBuilder_;
            }
        }
    }

    public static final class RoleInfo extends GeneratedMessage implements RoleInfoOrBuilder {
        private static final RoleInfo defaultInstance = new RoleInfo(true);
        private final UnknownFieldSet unknownFields;

        private RoleInfo(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private RoleInfo(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static RoleInfo getDefaultInstance() {
            return defaultInstance;
        }

        public RoleInfo getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private RoleInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.pro_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.name_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_RoleInfo_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_RoleInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(RoleInfo.class, Builder.class);
        }

        public static Parser<RoleInfo> PARSER = (Parser<RoleInfo>) new AbstractParser<RoleInfo>() {
            public GuildHandler.RoleInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.RoleInfo(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int PRO_FIELD_NUMBER = 1;
        private int pro_;
        public static final int NAME_FIELD_NUMBER = 2;
        private Object name_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<RoleInfo> getParserForType() {
            return PARSER;
        }

        public boolean hasPro() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getPro() {
            return this.pro_;
        }

        public boolean hasName() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getName() {
            Object ref = this.name_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.name_ = s;
            return s;
        }

        public ByteString getNameBytes() {
            Object ref = this.name_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.name_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.pro_ = 0;
            this.name_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.pro_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getNameBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.pro_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getNameBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static RoleInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (RoleInfo) PARSER.parseFrom(data);
        }

        public static RoleInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (RoleInfo) PARSER.parseFrom(data, extensionRegistry);
        }

        public static RoleInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (RoleInfo) PARSER.parseFrom(data);
        }

        public static RoleInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (RoleInfo) PARSER.parseFrom(data, extensionRegistry);
        }

        public static RoleInfo parseFrom(InputStream input) throws IOException {
            return (RoleInfo) PARSER.parseFrom(input);
        }

        public static RoleInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (RoleInfo) PARSER.parseFrom(input, extensionRegistry);
        }

        public static RoleInfo parseDelimitedFrom(InputStream input) throws IOException {
            return (RoleInfo) PARSER.parseDelimitedFrom(input);
        }

        public static RoleInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (RoleInfo) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static RoleInfo parseFrom(CodedInputStream input) throws IOException {
            return (RoleInfo) PARSER.parseFrom(input);
        }

        public static RoleInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (RoleInfo) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(RoleInfo prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.RoleInfoOrBuilder {
            private int bitField0_;
            private int pro_;
            private Object name_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_RoleInfo_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_RoleInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.RoleInfo.class, Builder.class);
            }

            private Builder() {
                this.name_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.name_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.RoleInfo.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.pro_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.name_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_RoleInfo_descriptor;
            }

            public GuildHandler.RoleInfo getDefaultInstanceForType() {
                return GuildHandler.RoleInfo.getDefaultInstance();
            }

            public GuildHandler.RoleInfo build() {
                GuildHandler.RoleInfo result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.RoleInfo buildPartial() {
                GuildHandler.RoleInfo result = new GuildHandler.RoleInfo(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.pro_ = this.pro_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.name_ = this.name_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.RoleInfo) return mergeFrom((GuildHandler.RoleInfo) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.RoleInfo other) {
                if (other == GuildHandler.RoleInfo.getDefaultInstance()) return this;
                if (other.hasPro()) setPro(other.getPro());
                if (other.hasName()) {
                    this.bitField0_ |= 0x2;
                    this.name_ = other.name_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.RoleInfo parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.RoleInfo) GuildHandler.RoleInfo.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.RoleInfo) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasPro() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getPro() {
                return this.pro_;
            }

            public Builder setPro(int value) {
                this.bitField0_ |= 0x1;
                this.pro_ = value;
                onChanged();
                return this;
            }

            public Builder clearPro() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.pro_ = 0;
                onChanged();
                return this;
            }

            public boolean hasName() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getName() {
                Object ref = this.name_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.name_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getNameBytes() {
                Object ref = this.name_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.name_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setName(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.name_ = value;
                onChanged();
                return this;
            }

            public Builder clearName() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.name_ = GuildHandler.RoleInfo.getDefaultInstance().getName();
                onChanged();
                return this;
            }

            public Builder setNameBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.name_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }
    }


    public static final class RecordInfo
            extends GeneratedMessage
            implements RecordInfoOrBuilder {
        private static final RecordInfo defaultInstance = new RecordInfo(true);
        private final UnknownFieldSet unknownFields;

        private RecordInfo(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private RecordInfo(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static RecordInfo getDefaultInstance() {
            return defaultInstance;
        }

        public RecordInfo getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private RecordInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    GuildHandler.RoleInfo.Builder subBuilder;
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            subBuilder = null;
                            if ((this.bitField0_ & 0x1) == 1) subBuilder = this.role1_.toBuilder();
                            this.role1_ = (GuildHandler.RoleInfo) input.readMessage(GuildHandler.RoleInfo.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.role1_);
                                this.role1_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x1;
                            break;
                        case 18:
                            subBuilder = null;
                            if ((this.bitField0_ & 0x2) == 2) subBuilder = this.role2_.toBuilder();
                            this.role2_ = (GuildHandler.RoleInfo) input.readMessage(GuildHandler.RoleInfo.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.role2_);
                                this.role2_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x2;
                            break;
                        case 24:
                            this.bitField0_ |= 0x4;
                            this.resultNum_ = input.readInt32();
                            break;
                        case 34:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x8;
                            this.resultStr_ = bs;
                            break;
                        case 42:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x10;
                            this.time_ = bs;
                            break;
                        case 48:
                            this.bitField0_ |= 0x20;
                            this.recordType_ = input.readInt32();
                            break;
                        case 58:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x40;
                            this.build_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_RecordInfo_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_RecordInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(RecordInfo.class, Builder.class);
        }

        public static Parser<RecordInfo> PARSER = (Parser<RecordInfo>) new AbstractParser<RecordInfo>() {
            public GuildHandler.RecordInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.RecordInfo(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int ROLE1_FIELD_NUMBER = 1;
        private GuildHandler.RoleInfo role1_;
        public static final int ROLE2_FIELD_NUMBER = 2;
        private GuildHandler.RoleInfo role2_;
        public static final int RESULTNUM_FIELD_NUMBER = 3;
        private int resultNum_;
        public static final int RESULTSTR_FIELD_NUMBER = 4;
        private Object resultStr_;
        public static final int TIME_FIELD_NUMBER = 5;
        private Object time_;
        public static final int RECORDTYPE_FIELD_NUMBER = 6;
        private int recordType_;
        public static final int BUILD_FIELD_NUMBER = 7;
        private Object build_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<RecordInfo> getParserForType() {
            return PARSER;
        }

        public boolean hasRole1() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public GuildHandler.RoleInfo getRole1() {
            return this.role1_;
        }

        public GuildHandler.RoleInfoOrBuilder getRole1OrBuilder() {
            return this.role1_;
        }

        public boolean hasRole2() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public GuildHandler.RoleInfo getRole2() {
            return this.role2_;
        }

        static {
            defaultInstance.initFields();
        }


        public GuildHandler.RoleInfoOrBuilder getRole2OrBuilder() {
            return this.role2_;
        }


        public boolean hasResultNum() {
            return ((this.bitField0_ & 0x4) == 4);
        }


        public int getResultNum() {
            return this.resultNum_;
        }


        public boolean hasResultStr() {
            return ((this.bitField0_ & 0x8) == 8);
        }


        public String getResultStr() {
            Object ref = this.resultStr_;
            if (ref instanceof String) {
                return (String) ref;
            }
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.resultStr_ = s;
            }
            return s;
        }


        public ByteString getResultStrBytes() {
            Object ref = this.resultStr_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.resultStr_ = b;
                return b;
            }
            return (ByteString) ref;
        }


        public boolean hasTime() {
            return ((this.bitField0_ & 0x10) == 16);
        }


        public String getTime() {
            Object ref = this.time_;
            if (ref instanceof String) {
                return (String) ref;
            }
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.time_ = s;
            }
            return s;
        }


        public ByteString getTimeBytes() {
            Object ref = this.time_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.time_ = b;
                return b;
            }
            return (ByteString) ref;
        }


        public boolean hasRecordType() {
            return ((this.bitField0_ & 0x20) == 32);
        }


        public int getRecordType() {
            return this.recordType_;
        }


        public boolean hasBuild() {
            return ((this.bitField0_ & 0x40) == 64);
        }


        public String getBuild() {
            Object ref = this.build_;
            if (ref instanceof String) {
                return (String) ref;
            }
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.build_ = s;
            }
            return s;
        }


        public ByteString getBuildBytes() {
            Object ref = this.build_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.build_ = b;
                return b;
            }
            return (ByteString) ref;
        }


        private void initFields() {
            this.role1_ = GuildHandler.RoleInfo.getDefaultInstance();
            this.role2_ = GuildHandler.RoleInfo.getDefaultInstance();
            this.resultNum_ = 0;
            this.resultStr_ = "";
            this.time_ = "";
            this.recordType_ = 0;
            this.build_ = "";
        }


        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
                return true;
            }
            if (isInitialized == 0) {
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }


        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) {
                output.writeMessage(1, (MessageLite) this.role1_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                output.writeMessage(2, (MessageLite) this.role2_);
            }
            if ((this.bitField0_ & 0x4) == 4) {
                output.writeInt32(3, this.resultNum_);
            }
            if ((this.bitField0_ & 0x8) == 8) {
                output.writeBytes(4, getResultStrBytes());
            }
            if ((this.bitField0_ & 0x10) == 16) {
                output.writeBytes(5, getTimeBytes());
            }
            if ((this.bitField0_ & 0x20) == 32) {
                output.writeInt32(6, this.recordType_);
            }
            if ((this.bitField0_ & 0x40) == 64) {
                output.writeBytes(7, getBuildBytes());
            }
            getUnknownFields().writeTo(output);
        }


        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) {
                size += CodedOutputStream.computeMessageSize(1, (MessageLite) this.role1_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                size += CodedOutputStream.computeMessageSize(2, (MessageLite) this.role2_);
            }
            if ((this.bitField0_ & 0x4) == 4) {
                size += CodedOutputStream.computeInt32Size(3, this.resultNum_);
            }
            if ((this.bitField0_ & 0x8) == 8) {
                size += CodedOutputStream.computeBytesSize(4, getResultStrBytes());
            }
            if ((this.bitField0_ & 0x10) == 16) {
                size += CodedOutputStream.computeBytesSize(5, getTimeBytes());
            }
            if ((this.bitField0_ & 0x20) == 32) {
                size += CodedOutputStream.computeInt32Size(6, this.recordType_);
            }
            if ((this.bitField0_ & 0x40) == 64) {
                size += CodedOutputStream.computeBytesSize(7, getBuildBytes());
            }
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }


        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }


        public static RecordInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (RecordInfo) PARSER.parseFrom(data);
        }


        public static RecordInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (RecordInfo) PARSER.parseFrom(data, extensionRegistry);
        }


        public static RecordInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (RecordInfo) PARSER.parseFrom(data);
        }


        public static RecordInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (RecordInfo) PARSER.parseFrom(data, extensionRegistry);
        }


        public static RecordInfo parseFrom(InputStream input) throws IOException {
            return (RecordInfo) PARSER.parseFrom(input);
        }


        public static RecordInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (RecordInfo) PARSER.parseFrom(input, extensionRegistry);
        }


        public static RecordInfo parseDelimitedFrom(InputStream input) throws IOException {
            return (RecordInfo) PARSER.parseDelimitedFrom(input);
        }


        public static RecordInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (RecordInfo) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }


        public static RecordInfo parseFrom(CodedInputStream input) throws IOException {
            return (RecordInfo) PARSER.parseFrom(input);
        }


        public static RecordInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (RecordInfo) PARSER.parseFrom(input, extensionRegistry);
        }


        public static Builder newBuilder() {
            return Builder.create();
        }


        public Builder newBuilderForType() {
            return newBuilder();
        }


        public static Builder newBuilder(RecordInfo prototype) {
            return newBuilder().mergeFrom(prototype);
        }


        public Builder toBuilder() {
            return newBuilder(this);
        }


        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }


        public static final class Builder
                extends GeneratedMessage.Builder<Builder>
                implements GuildHandler.RecordInfoOrBuilder {
            private int bitField0_;


            private GuildHandler.RoleInfo role1_;


            private SingleFieldBuilder<GuildHandler.RoleInfo, GuildHandler.RoleInfo.Builder, GuildHandler.RoleInfoOrBuilder> role1Builder_;


            private GuildHandler.RoleInfo role2_;


            private SingleFieldBuilder<GuildHandler.RoleInfo, GuildHandler.RoleInfo.Builder, GuildHandler.RoleInfoOrBuilder> role2Builder_;


            private int resultNum_;


            private Object resultStr_;


            private Object time_;


            private int recordType_;


            private Object build_;


            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_RecordInfo_descriptor;
            }


            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_RecordInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.RecordInfo.class, Builder.class);
            }


            private Builder() {
                this.role1_ = GuildHandler.RoleInfo.getDefaultInstance();
                this.role2_ = GuildHandler.RoleInfo.getDefaultInstance();
                this.resultStr_ = "";
                this.time_ = "";
                this.build_ = "";
                maybeForceBuilderInitialization();
            }


            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.role1_ = GuildHandler.RoleInfo.getDefaultInstance();
                this.role2_ = GuildHandler.RoleInfo.getDefaultInstance();
                this.resultStr_ = "";
                this.time_ = "";
                this.build_ = "";
                maybeForceBuilderInitialization();
            }


            private void maybeForceBuilderInitialization() {
                if (GuildHandler.RecordInfo.alwaysUseFieldBuilders) {
                    getRole1FieldBuilder();
                    getRole2FieldBuilder();
                }
            }


            private static Builder create() {
                return new Builder();
            }


            public Builder clear() {
                super.clear();
                if (this.role1Builder_ == null) {
                    this.role1_ = GuildHandler.RoleInfo.getDefaultInstance();
                } else {
                    this.role1Builder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                if (this.role2Builder_ == null) {
                    this.role2_ = GuildHandler.RoleInfo.getDefaultInstance();
                } else {
                    this.role2Builder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                this.resultNum_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.resultStr_ = "";
                this.bitField0_ &= 0xFFFFFFF7;
                this.time_ = "";
                this.bitField0_ &= 0xFFFFFFEF;
                this.recordType_ = 0;
                this.bitField0_ &= 0xFFFFFFDF;
                this.build_ = "";
                this.bitField0_ &= 0xFFFFFFBF;
                return this;
            }


            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }


            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_RecordInfo_descriptor;
            }


            public GuildHandler.RecordInfo getDefaultInstanceForType() {
                return GuildHandler.RecordInfo.getDefaultInstance();
            }


            public GuildHandler.RecordInfo build() {
                GuildHandler.RecordInfo result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }


            public GuildHandler.RecordInfo buildPartial() {
                GuildHandler.RecordInfo result = new GuildHandler.RecordInfo(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) {
                    to_bitField0_ |= 0x1;
                }
                if (this.role1Builder_ == null) {
                    result.role1_ = this.role1_;
                } else {
                    result.role1_ = (GuildHandler.RoleInfo) this.role1Builder_.build();
                }
                if ((from_bitField0_ & 0x2) == 2) {
                    to_bitField0_ |= 0x2;
                }
                if (this.role2Builder_ == null) {
                    result.role2_ = this.role2_;
                } else {
                    result.role2_ = (GuildHandler.RoleInfo) this.role2Builder_.build();
                }
                if ((from_bitField0_ & 0x4) == 4) {
                    to_bitField0_ |= 0x4;
                }
                result.resultNum_ = this.resultNum_;
                if ((from_bitField0_ & 0x8) == 8) {
                    to_bitField0_ |= 0x8;
                }
                result.resultStr_ = this.resultStr_;
                if ((from_bitField0_ & 0x10) == 16) {
                    to_bitField0_ |= 0x10;
                }
                result.time_ = this.time_;
                if ((from_bitField0_ & 0x20) == 32) {
                    to_bitField0_ |= 0x20;
                }
                result.recordType_ = this.recordType_;
                if ((from_bitField0_ & 0x40) == 64) {
                    to_bitField0_ |= 0x40;
                }
                result.build_ = this.build_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }


            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.RecordInfo) {
                    return mergeFrom((GuildHandler.RecordInfo) other);
                }
                super.mergeFrom(other);
                return this;
            }


            public Builder mergeFrom(GuildHandler.RecordInfo other) {
                if (other == GuildHandler.RecordInfo.getDefaultInstance()) {
                    return this;
                }
                if (other.hasRole1()) {
                    mergeRole1(other.getRole1());
                }
                if (other.hasRole2()) {
                    mergeRole2(other.getRole2());
                }
                if (other.hasResultNum()) {
                    setResultNum(other.getResultNum());
                }
                if (other.hasResultStr()) {
                    this.bitField0_ |= 0x8;
                    this.resultStr_ = other.resultStr_;
                    onChanged();
                }
                if (other.hasTime()) {
                    this.bitField0_ |= 0x10;
                    this.time_ = other.time_;
                    onChanged();
                }
                if (other.hasRecordType()) {
                    setRecordType(other.getRecordType());
                }
                if (other.hasBuild()) {
                    this.bitField0_ |= 0x40;
                    this.build_ = other.build_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }


            public final boolean isInitialized() {
                return true;
            }


            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.RecordInfo parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.RecordInfo) GuildHandler.RecordInfo.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.RecordInfo) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }


            public boolean hasRole1() {
                return ((this.bitField0_ & 0x1) == 1);
            }


            public GuildHandler.RoleInfo getRole1() {
                if (this.role1Builder_ == null) {
                    return this.role1_;
                }
                return (GuildHandler.RoleInfo) this.role1Builder_.getMessage();
            }


            public Builder setRole1(GuildHandler.RoleInfo value) {
                if (this.role1Builder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.role1_ = value;
                    onChanged();
                } else {
                    this.role1Builder_.setMessage(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }


            public Builder setRole1(GuildHandler.RoleInfo.Builder builderForValue) {
                if (this.role1Builder_ == null) {
                    this.role1_ = builderForValue.build();
                    onChanged();
                } else {
                    this.role1Builder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }


            public Builder mergeRole1(GuildHandler.RoleInfo value) {
                if (this.role1Builder_ == null) {
                    if ((this.bitField0_ & 0x1) == 1 && this.role1_ != GuildHandler.RoleInfo.getDefaultInstance()) {
                        this.role1_ = GuildHandler.RoleInfo.newBuilder(this.role1_).mergeFrom(value).buildPartial();
                    } else {
                        this.role1_ = value;
                    }
                    onChanged();
                } else {
                    this.role1Builder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }


            public Builder clearRole1() {
                if (this.role1Builder_ == null) {
                    this.role1_ = GuildHandler.RoleInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.role1Builder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }


            public GuildHandler.RoleInfo.Builder getRole1Builder() {
                this.bitField0_ |= 0x1;
                onChanged();
                return (GuildHandler.RoleInfo.Builder) getRole1FieldBuilder().getBuilder();
            }


            public GuildHandler.RoleInfoOrBuilder getRole1OrBuilder() {
                if (this.role1Builder_ != null) {
                    return (GuildHandler.RoleInfoOrBuilder) this.role1Builder_.getMessageOrBuilder();
                }
                return this.role1_;
            }


            private SingleFieldBuilder<GuildHandler.RoleInfo, GuildHandler.RoleInfo.Builder, GuildHandler.RoleInfoOrBuilder> getRole1FieldBuilder() {
                if (this.role1Builder_ == null) {
                    this.role1Builder_ = new SingleFieldBuilder(getRole1(), getParentForChildren(), isClean());
                    this.role1_ = null;
                }
                return this.role1Builder_;
            }


            public boolean hasRole2() {
                return ((this.bitField0_ & 0x2) == 2);
            }


            public GuildHandler.RoleInfo getRole2() {
                if (this.role2Builder_ == null) {
                    return this.role2_;
                }
                return (GuildHandler.RoleInfo) this.role2Builder_.getMessage();
            }


            public Builder setRole2(GuildHandler.RoleInfo value) {
                if (this.role2Builder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.role2_ = value;
                    onChanged();
                } else {
                    this.role2Builder_.setMessage(value);
                }
                this.bitField0_ |= 0x2;
                return this;
            }


            public Builder setRole2(GuildHandler.RoleInfo.Builder builderForValue) {
                if (this.role2Builder_ == null) {
                    this.role2_ = builderForValue.build();
                    onChanged();
                } else {
                    this.role2Builder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x2;
                return this;
            }


            public Builder mergeRole2(GuildHandler.RoleInfo value) {
                if (this.role2Builder_ == null) {
                    if ((this.bitField0_ & 0x2) == 2 && this.role2_ != GuildHandler.RoleInfo.getDefaultInstance()) {
                        this.role2_ = GuildHandler.RoleInfo.newBuilder(this.role2_).mergeFrom(value).buildPartial();
                    } else {
                        this.role2_ = value;
                    }
                    onChanged();
                } else {
                    this.role2Builder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x2;
                return this;
            }


            public Builder clearRole2() {
                if (this.role2Builder_ == null) {
                    this.role2_ = GuildHandler.RoleInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.role2Builder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }


            public GuildHandler.RoleInfo.Builder getRole2Builder() {
                this.bitField0_ |= 0x2;
                onChanged();
                return (GuildHandler.RoleInfo.Builder) getRole2FieldBuilder().getBuilder();
            }


            public GuildHandler.RoleInfoOrBuilder getRole2OrBuilder() {
                if (this.role2Builder_ != null) {
                    return (GuildHandler.RoleInfoOrBuilder) this.role2Builder_.getMessageOrBuilder();
                }
                return this.role2_;
            }


            private SingleFieldBuilder<GuildHandler.RoleInfo, GuildHandler.RoleInfo.Builder, GuildHandler.RoleInfoOrBuilder> getRole2FieldBuilder() {
                if (this.role2Builder_ == null) {
                    this.role2Builder_ = new SingleFieldBuilder(getRole2(), getParentForChildren(), isClean());
                    this.role2_ = null;
                }
                return this.role2Builder_;
            }


            public boolean hasResultNum() {
                return ((this.bitField0_ & 0x4) == 4);
            }


            public int getResultNum() {
                return this.resultNum_;
            }


            public Builder setResultNum(int value) {
                this.bitField0_ |= 0x4;
                this.resultNum_ = value;
                onChanged();
                return this;
            }


            public Builder clearResultNum() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.resultNum_ = 0;
                onChanged();
                return this;
            }


            public boolean hasResultStr() {
                return ((this.bitField0_ & 0x8) == 8);
            }


            public String getResultStr() {
                Object ref = this.resultStr_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.resultStr_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getResultStrBytes() {
                Object ref = this.resultStr_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.resultStr_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setResultStr(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x8;
                this.resultStr_ = value;
                onChanged();
                return this;
            }


            public Builder clearResultStr() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.resultStr_ = GuildHandler.RecordInfo.getDefaultInstance().getResultStr();
                onChanged();
                return this;
            }


            public Builder setResultStrBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x8;
                this.resultStr_ = value;
                onChanged();
                return this;
            }


            public boolean hasTime() {
                return ((this.bitField0_ & 0x10) == 16);
            }


            public String getTime() {
                Object ref = this.time_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.time_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getTimeBytes() {
                Object ref = this.time_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.time_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setTime(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x10;
                this.time_ = value;
                onChanged();
                return this;
            }


            public Builder clearTime() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.time_ = GuildHandler.RecordInfo.getDefaultInstance().getTime();
                onChanged();
                return this;
            }


            public Builder setTimeBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x10;
                this.time_ = value;
                onChanged();
                return this;
            }


            public boolean hasRecordType() {
                return ((this.bitField0_ & 0x20) == 32);
            }


            public int getRecordType() {
                return this.recordType_;
            }


            public Builder setRecordType(int value) {
                this.bitField0_ |= 0x20;
                this.recordType_ = value;
                onChanged();
                return this;
            }


            public Builder clearRecordType() {
                this.bitField0_ &= 0xFFFFFFDF;
                this.recordType_ = 0;
                onChanged();
                return this;
            }


            public boolean hasBuild() {
                return ((this.bitField0_ & 0x40) == 64);
            }


            public String getBuild() {
                Object ref = this.build_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.build_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getBuildBytes() {
                Object ref = this.build_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.build_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setBuild(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x40;
                this.build_ = value;
                onChanged();
                return this;
            }


            public Builder clearBuild() {
                this.bitField0_ &= 0xFFFFFFBF;
                this.build_ = GuildHandler.RecordInfo.getDefaultInstance().getBuild();
                onChanged();
                return this;
            }


            public Builder setBuildBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x40;
                this.build_ = value;
                onChanged();
                return this;
            }
        }
    }


    public static final class GetGuildRecordResponse
            extends GeneratedMessage
            implements GetGuildRecordResponseOrBuilder {
        private static final GetGuildRecordResponse defaultInstance = new GetGuildRecordResponse(true);
        private final UnknownFieldSet unknownFields;

        private GetGuildRecordResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private GetGuildRecordResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static GetGuildRecordResponse getDefaultInstance() {
            return defaultInstance;
        }

        public GetGuildRecordResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private GetGuildRecordResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 24:
                            this.bitField0_ |= 0x4;
                            this.s2CPage_ = input.readInt32();
                            break;
                        case 34:
                            if ((mutable_bitField0_ & 0x8) != 8) {
                                this.s2CRecordList_ = new ArrayList<>();
                                mutable_bitField0_ |= 0x8;
                            }
                            this.s2CRecordList_.add(input.readMessage(GuildHandler.RecordInfo.PARSER, extensionRegistry));
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                if ((mutable_bitField0_ & 0x8) == 8)
                    this.s2CRecordList_ = Collections.unmodifiableList(this.s2CRecordList_);
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_GetGuildRecordResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_GetGuildRecordResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GetGuildRecordResponse.class, Builder.class);
        }

        public static Parser<GetGuildRecordResponse> PARSER = (Parser<GetGuildRecordResponse>) new AbstractParser<GetGuildRecordResponse>() {
            public GuildHandler.GetGuildRecordResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.GetGuildRecordResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int S2C_PAGE_FIELD_NUMBER = 3;
        private int s2CPage_;
        public static final int S2C_RECORDLIST_FIELD_NUMBER = 4;
        private List<GuildHandler.RecordInfo> s2CRecordList_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<GetGuildRecordResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        static {
            defaultInstance.initFields();
        }


        public boolean hasS2CPage() {
            return ((this.bitField0_ & 0x4) == 4);
        }


        public int getS2CPage() {
            return this.s2CPage_;
        }


        public List<GuildHandler.RecordInfo> getS2CRecordListList() {
            return this.s2CRecordList_;
        }


        public List<? extends GuildHandler.RecordInfoOrBuilder> getS2CRecordListOrBuilderList() {
            return (List) this.s2CRecordList_;
        }


        public int getS2CRecordListCount() {
            return this.s2CRecordList_.size();
        }


        public GuildHandler.RecordInfo getS2CRecordList(int index) {
            return this.s2CRecordList_.get(index);
        }


        public GuildHandler.RecordInfoOrBuilder getS2CRecordListOrBuilder(int index) {
            return this.s2CRecordList_.get(index);
        }


        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.s2CPage_ = 0;
            this.s2CRecordList_ = Collections.emptyList();
        }


        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
                return true;
            }
            if (isInitialized == 0) {
                return false;
            }
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }


        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) {
                output.writeInt32(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                output.writeBytes(2, getS2CMsgBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                output.writeInt32(3, this.s2CPage_);
            }
            for (int i = 0; i < this.s2CRecordList_.size(); i++) {
                output.writeMessage(4, (MessageLite) this.s2CRecordList_.get(i));
            }
            getUnknownFields().writeTo(output);
        }


        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) {
                size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                size += CodedOutputStream.computeInt32Size(3, this.s2CPage_);
            }
            for (int i = 0; i < this.s2CRecordList_.size(); i++) {
                size += CodedOutputStream.computeMessageSize(4, (MessageLite) this.s2CRecordList_.get(i));
            }
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }


        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }


        public static GetGuildRecordResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (GetGuildRecordResponse) PARSER.parseFrom(data);
        }


        public static GetGuildRecordResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetGuildRecordResponse) PARSER.parseFrom(data, extensionRegistry);
        }


        public static GetGuildRecordResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (GetGuildRecordResponse) PARSER.parseFrom(data);
        }


        public static GetGuildRecordResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetGuildRecordResponse) PARSER.parseFrom(data, extensionRegistry);
        }


        public static GetGuildRecordResponse parseFrom(InputStream input) throws IOException {
            return (GetGuildRecordResponse) PARSER.parseFrom(input);
        }


        public static GetGuildRecordResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetGuildRecordResponse) PARSER.parseFrom(input, extensionRegistry);
        }


        public static GetGuildRecordResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (GetGuildRecordResponse) PARSER.parseDelimitedFrom(input);
        }


        public static GetGuildRecordResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetGuildRecordResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }


        public static GetGuildRecordResponse parseFrom(CodedInputStream input) throws IOException {
            return (GetGuildRecordResponse) PARSER.parseFrom(input);
        }


        public static GetGuildRecordResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetGuildRecordResponse) PARSER.parseFrom(input, extensionRegistry);
        }


        public static Builder newBuilder() {
            return Builder.create();
        }


        public Builder newBuilderForType() {
            return newBuilder();
        }


        public static Builder newBuilder(GetGuildRecordResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }


        public Builder toBuilder() {
            return newBuilder(this);
        }


        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }


        public static final class Builder
                extends GeneratedMessage.Builder<Builder>
                implements GuildHandler.GetGuildRecordResponseOrBuilder {
            private int bitField0_;

            private int s2CCode_;

            private Object s2CMsg_;

            private int s2CPage_;

            private List<GuildHandler.RecordInfo> s2CRecordList_;

            private RepeatedFieldBuilder<GuildHandler.RecordInfo, GuildHandler.RecordInfo.Builder, GuildHandler.RecordInfoOrBuilder> s2CRecordListBuilder_;


            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_GetGuildRecordResponse_descriptor;
            }


            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_GetGuildRecordResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.GetGuildRecordResponse.class, Builder.class);
            }


            private Builder() {
                this.s2CMsg_ = "";
                this.s2CRecordList_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }


            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                this.s2CRecordList_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }


            private void maybeForceBuilderInitialization() {
                if (GuildHandler.GetGuildRecordResponse.alwaysUseFieldBuilders) {
                    getS2CRecordListFieldBuilder();
                }
            }


            private static Builder create() {
                return new Builder();
            }


            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CPage_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                if (this.s2CRecordListBuilder_ == null) {
                    this.s2CRecordList_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFF7;
                } else {
                    this.s2CRecordListBuilder_.clear();
                }
                return this;
            }


            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }


            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_GetGuildRecordResponse_descriptor;
            }


            public GuildHandler.GetGuildRecordResponse getDefaultInstanceForType() {
                return GuildHandler.GetGuildRecordResponse.getDefaultInstance();
            }


            public GuildHandler.GetGuildRecordResponse build() {
                GuildHandler.GetGuildRecordResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }


            public GuildHandler.GetGuildRecordResponse buildPartial() {
                GuildHandler.GetGuildRecordResponse result = new GuildHandler.GetGuildRecordResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) {
                    to_bitField0_ |= 0x1;
                }
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) {
                    to_bitField0_ |= 0x2;
                }
                result.s2CMsg_ = this.s2CMsg_;
                if ((from_bitField0_ & 0x4) == 4) {
                    to_bitField0_ |= 0x4;
                }
                result.s2CPage_ = this.s2CPage_;
                if (this.s2CRecordListBuilder_ == null) {
                    if ((this.bitField0_ & 0x8) == 8) {
                        this.s2CRecordList_ = Collections.unmodifiableList(this.s2CRecordList_);
                        this.bitField0_ &= 0xFFFFFFF7;
                    }
                    result.s2CRecordList_ = this.s2CRecordList_;
                } else {
                    result.s2CRecordList_ = this.s2CRecordListBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }


            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.GetGuildRecordResponse) {
                    return mergeFrom((GuildHandler.GetGuildRecordResponse) other);
                }
                super.mergeFrom(other);
                return this;
            }


            public Builder mergeFrom(GuildHandler.GetGuildRecordResponse other) {
                if (other == GuildHandler.GetGuildRecordResponse.getDefaultInstance()) {
                    return this;
                }
                if (other.hasS2CCode()) {
                    setS2CCode(other.getS2CCode());
                }
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (other.hasS2CPage()) {
                    setS2CPage(other.getS2CPage());
                }
                if (this.s2CRecordListBuilder_ == null) {
                    if (!other.s2CRecordList_.isEmpty()) {
                        if (this.s2CRecordList_.isEmpty()) {
                            this.s2CRecordList_ = other.s2CRecordList_;
                            this.bitField0_ &= 0xFFFFFFF7;
                        } else {
                            ensureS2CRecordListIsMutable();
                            this.s2CRecordList_.addAll(other.s2CRecordList_);
                        }
                        onChanged();
                    }
                } else if (!other.s2CRecordList_.isEmpty()) {
                    if (this.s2CRecordListBuilder_.isEmpty()) {
                        this.s2CRecordListBuilder_.dispose();
                        this.s2CRecordListBuilder_ = null;
                        this.s2CRecordList_ = other.s2CRecordList_;
                        this.bitField0_ &= 0xFFFFFFF7;
                        this.s2CRecordListBuilder_ = GuildHandler.GetGuildRecordResponse.alwaysUseFieldBuilders ? getS2CRecordListFieldBuilder() : null;
                    } else {
                        this.s2CRecordListBuilder_.addAllMessages(other.s2CRecordList_);
                    }
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }


            public final boolean isInitialized() {
                if (!hasS2CCode()) {
                    return false;
                }
                return true;
            }


            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.GetGuildRecordResponse parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.GetGuildRecordResponse) GuildHandler.GetGuildRecordResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.GetGuildRecordResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }


            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }


            public int getS2CCode() {
                return this.s2CCode_;
            }


            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }


            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }


            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.s2CMsg_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.GetGuildRecordResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public boolean hasS2CPage() {
                return ((this.bitField0_ & 0x4) == 4);
            }

            public int getS2CPage() {
                return this.s2CPage_;
            }

            public Builder setS2CPage(int value) {
                this.bitField0_ |= 0x4;
                this.s2CPage_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CPage() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.s2CPage_ = 0;
                onChanged();
                return this;
            }

            private void ensureS2CRecordListIsMutable() {
                if ((this.bitField0_ & 0x8) != 8) {
                    this.s2CRecordList_ = new ArrayList<>(this.s2CRecordList_);
                    this.bitField0_ |= 0x8;
                }
            }

            public List<GuildHandler.RecordInfo> getS2CRecordListList() {
                if (this.s2CRecordListBuilder_ == null) {
                    return Collections.unmodifiableList(this.s2CRecordList_);
                }
                return this.s2CRecordListBuilder_.getMessageList();
            }

            public int getS2CRecordListCount() {
                if (this.s2CRecordListBuilder_ == null) {
                    return this.s2CRecordList_.size();
                }
                return this.s2CRecordListBuilder_.getCount();
            }

            public GuildHandler.RecordInfo getS2CRecordList(int index) {
                if (this.s2CRecordListBuilder_ == null) {
                    return this.s2CRecordList_.get(index);
                }
                return (GuildHandler.RecordInfo) this.s2CRecordListBuilder_.getMessage(index);
            }

            public Builder setS2CRecordList(int index, GuildHandler.RecordInfo value) {
                if (this.s2CRecordListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureS2CRecordListIsMutable();
                    this.s2CRecordList_.set(index, value);
                    onChanged();
                } else {
                    this.s2CRecordListBuilder_.setMessage(index, value);
                }
                return this;
            }

            public Builder setS2CRecordList(int index, GuildHandler.RecordInfo.Builder builderForValue) {
                if (this.s2CRecordListBuilder_ == null) {
                    ensureS2CRecordListIsMutable();
                    this.s2CRecordList_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    this.s2CRecordListBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            public Builder addS2CRecordList(GuildHandler.RecordInfo value) {
                if (this.s2CRecordListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureS2CRecordListIsMutable();
                    this.s2CRecordList_.add(value);
                    onChanged();
                } else {
                    this.s2CRecordListBuilder_.addMessage(value);
                }
                return this;
            }

            public Builder addS2CRecordList(int index, GuildHandler.RecordInfo value) {
                if (this.s2CRecordListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureS2CRecordListIsMutable();
                    this.s2CRecordList_.add(index, value);
                    onChanged();
                } else {
                    this.s2CRecordListBuilder_.addMessage(index, value);
                }
                return this;
            }

            public Builder addS2CRecordList(GuildHandler.RecordInfo.Builder builderForValue) {
                if (this.s2CRecordListBuilder_ == null) {
                    ensureS2CRecordListIsMutable();
                    this.s2CRecordList_.add(builderForValue.build());
                    onChanged();
                } else {
                    this.s2CRecordListBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            public Builder addS2CRecordList(int index, GuildHandler.RecordInfo.Builder builderForValue) {
                if (this.s2CRecordListBuilder_ == null) {
                    ensureS2CRecordListIsMutable();
                    this.s2CRecordList_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    this.s2CRecordListBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            public Builder addAllS2CRecordList(Iterable<? extends GuildHandler.RecordInfo> values) {
                if (this.s2CRecordListBuilder_ == null) {
                    ensureS2CRecordListIsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.s2CRecordList_);
                    onChanged();
                } else {
                    this.s2CRecordListBuilder_.addAllMessages(values);
                }
                return this;
            }

            public Builder clearS2CRecordList() {
                if (this.s2CRecordListBuilder_ == null) {
                    this.s2CRecordList_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFF7;
                    onChanged();
                } else {
                    this.s2CRecordListBuilder_.clear();
                }
                return this;
            }

            public Builder removeS2CRecordList(int index) {
                if (this.s2CRecordListBuilder_ == null) {
                    ensureS2CRecordListIsMutable();
                    this.s2CRecordList_.remove(index);
                    onChanged();
                } else {
                    this.s2CRecordListBuilder_.remove(index);
                }
                return this;
            }

            public GuildHandler.RecordInfo.Builder getS2CRecordListBuilder(int index) {
                return (GuildHandler.RecordInfo.Builder) getS2CRecordListFieldBuilder().getBuilder(index);
            }

            public GuildHandler.RecordInfoOrBuilder getS2CRecordListOrBuilder(int index) {
                if (this.s2CRecordListBuilder_ == null) {
                    return this.s2CRecordList_.get(index);
                }
                return (GuildHandler.RecordInfoOrBuilder) this.s2CRecordListBuilder_.getMessageOrBuilder(index);
            }

            public List<? extends GuildHandler.RecordInfoOrBuilder> getS2CRecordListOrBuilderList() {
                if (this.s2CRecordListBuilder_ != null) {
                    return this.s2CRecordListBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList((List) this.s2CRecordList_);
            }

            public GuildHandler.RecordInfo.Builder addS2CRecordListBuilder() {
                return (GuildHandler.RecordInfo.Builder) getS2CRecordListFieldBuilder().addBuilder(GuildHandler.RecordInfo.getDefaultInstance());
            }

            public GuildHandler.RecordInfo.Builder addS2CRecordListBuilder(int index) {
                return (GuildHandler.RecordInfo.Builder) getS2CRecordListFieldBuilder().addBuilder(index, GuildHandler.RecordInfo.getDefaultInstance());
            }

            public List<GuildHandler.RecordInfo.Builder> getS2CRecordListBuilderList() {
                return getS2CRecordListFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilder<GuildHandler.RecordInfo, GuildHandler.RecordInfo.Builder, GuildHandler.RecordInfoOrBuilder> getS2CRecordListFieldBuilder() {
                if (this.s2CRecordListBuilder_ == null) {
                    this.s2CRecordListBuilder_ = new RepeatedFieldBuilder(this.s2CRecordList_, ((this.bitField0_ & 0x8) == 8), getParentForChildren(), isClean());
                    this.s2CRecordList_ = null;
                }
                return this.s2CRecordListBuilder_;
            }
        }
    }

    public static final class ImpeachGuildPresidentResponse
            extends GeneratedMessage
            implements ImpeachGuildPresidentResponseOrBuilder {
        private static final ImpeachGuildPresidentResponse defaultInstance = new ImpeachGuildPresidentResponse(true);
        private final UnknownFieldSet unknownFields;

        private ImpeachGuildPresidentResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private ImpeachGuildPresidentResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static ImpeachGuildPresidentResponse getDefaultInstance() {
            return defaultInstance;
        }

        public ImpeachGuildPresidentResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ImpeachGuildPresidentResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 24:
                            this.bitField0_ |= 0x4;
                            this.isNew_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_ImpeachGuildPresidentResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_ImpeachGuildPresidentResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(ImpeachGuildPresidentResponse.class, Builder.class);
        }

        public static Parser<ImpeachGuildPresidentResponse> PARSER = (Parser<ImpeachGuildPresidentResponse>) new AbstractParser<ImpeachGuildPresidentResponse>() {
            public GuildHandler.ImpeachGuildPresidentResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.ImpeachGuildPresidentResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int ISNEW_FIELD_NUMBER = 3;
        private int isNew_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<ImpeachGuildPresidentResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasIsNew() {
            return ((this.bitField0_ & 0x4) == 4);
        }

        public int getIsNew() {
            return this.isNew_;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.isNew_ = 0;
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            if ((this.bitField0_ & 0x4) == 4) output.writeInt32(3, this.isNew_);
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            if ((this.bitField0_ & 0x4) == 4) size += CodedOutputStream.computeInt32Size(3, this.isNew_);
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static ImpeachGuildPresidentResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (ImpeachGuildPresidentResponse) PARSER.parseFrom(data);
        }

        public static ImpeachGuildPresidentResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ImpeachGuildPresidentResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ImpeachGuildPresidentResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (ImpeachGuildPresidentResponse) PARSER.parseFrom(data);
        }

        public static ImpeachGuildPresidentResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ImpeachGuildPresidentResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static ImpeachGuildPresidentResponse parseFrom(InputStream input) throws IOException {
            return (ImpeachGuildPresidentResponse) PARSER.parseFrom(input);
        }

        public static ImpeachGuildPresidentResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ImpeachGuildPresidentResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static ImpeachGuildPresidentResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (ImpeachGuildPresidentResponse) PARSER.parseDelimitedFrom(input);
        }

        public static ImpeachGuildPresidentResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ImpeachGuildPresidentResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static ImpeachGuildPresidentResponse parseFrom(CodedInputStream input) throws IOException {
            return (ImpeachGuildPresidentResponse) PARSER.parseFrom(input);
        }

        public static ImpeachGuildPresidentResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ImpeachGuildPresidentResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ImpeachGuildPresidentResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.ImpeachGuildPresidentResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;
            private int isNew_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_ImpeachGuildPresidentResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_ImpeachGuildPresidentResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.ImpeachGuildPresidentResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.ImpeachGuildPresidentResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.isNew_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_ImpeachGuildPresidentResponse_descriptor;
            }

            public GuildHandler.ImpeachGuildPresidentResponse getDefaultInstanceForType() {
                return GuildHandler.ImpeachGuildPresidentResponse.getDefaultInstance();
            }

            public GuildHandler.ImpeachGuildPresidentResponse build() {
                GuildHandler.ImpeachGuildPresidentResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.ImpeachGuildPresidentResponse buildPartial() {
                GuildHandler.ImpeachGuildPresidentResponse result = new GuildHandler.ImpeachGuildPresidentResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                if ((from_bitField0_ & 0x4) == 4) to_bitField0_ |= 0x4;
                result.isNew_ = this.isNew_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.ImpeachGuildPresidentResponse)
                    return mergeFrom((GuildHandler.ImpeachGuildPresidentResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.ImpeachGuildPresidentResponse other) {
                if (other == GuildHandler.ImpeachGuildPresidentResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (other.hasIsNew()) setIsNew(other.getIsNew());
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.ImpeachGuildPresidentResponse parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.ImpeachGuildPresidentResponse) GuildHandler.ImpeachGuildPresidentResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.ImpeachGuildPresidentResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.ImpeachGuildPresidentResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public boolean hasIsNew() {
                return ((this.bitField0_ & 0x4) == 4);
            }

            public int getIsNew() {
                return this.isNew_;
            }

            public Builder setIsNew(int value) {
                this.bitField0_ |= 0x4;
                this.isNew_ = value;
                onChanged();
                return this;
            }

            public Builder clearIsNew() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.isNew_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class GetGuildMoneyResponse
            extends GeneratedMessage
            implements GetGuildMoneyResponseOrBuilder {
        private static final GetGuildMoneyResponse defaultInstance = new GetGuildMoneyResponse(true);
        private final UnknownFieldSet unknownFields;

        private GetGuildMoneyResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private GetGuildMoneyResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static GetGuildMoneyResponse getDefaultInstance() {
            return defaultInstance;
        }

        public GetGuildMoneyResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private GetGuildMoneyResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 24:
                            this.bitField0_ |= 0x4;
                            this.depositCount_ = input.readInt32();
                            break;
                        case 32:
                            this.bitField0_ |= 0x8;
                            this.depositCountMax_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_GetGuildMoneyResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_GetGuildMoneyResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GetGuildMoneyResponse.class, Builder.class);
        }

        public static Parser<GetGuildMoneyResponse> PARSER = (Parser<GetGuildMoneyResponse>) new AbstractParser<GetGuildMoneyResponse>() {
            public GuildHandler.GetGuildMoneyResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.GetGuildMoneyResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int DEPOSITCOUNT_FIELD_NUMBER = 3;
        private int depositCount_;
        public static final int DEPOSITCOUNTMAX_FIELD_NUMBER = 4;
        private int depositCountMax_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<GetGuildMoneyResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasDepositCount() {
            return ((this.bitField0_ & 0x4) == 4);
        }

        public int getDepositCount() {
            return this.depositCount_;
        }

        public boolean hasDepositCountMax() {
            return ((this.bitField0_ & 0x8) == 8);
        }

        public int getDepositCountMax() {
            return this.depositCountMax_;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.depositCount_ = 0;
            this.depositCountMax_ = 0;
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            if ((this.bitField0_ & 0x4) == 4) output.writeInt32(3, this.depositCount_);
            if ((this.bitField0_ & 0x8) == 8) output.writeInt32(4, this.depositCountMax_);
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            if ((this.bitField0_ & 0x4) == 4) size += CodedOutputStream.computeInt32Size(3, this.depositCount_);
            if ((this.bitField0_ & 0x8) == 8) size += CodedOutputStream.computeInt32Size(4, this.depositCountMax_);
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static GetGuildMoneyResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (GetGuildMoneyResponse) PARSER.parseFrom(data);
        }

        public static GetGuildMoneyResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetGuildMoneyResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GetGuildMoneyResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (GetGuildMoneyResponse) PARSER.parseFrom(data);
        }

        public static GetGuildMoneyResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GetGuildMoneyResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GetGuildMoneyResponse parseFrom(InputStream input) throws IOException {
            return (GetGuildMoneyResponse) PARSER.parseFrom(input);
        }

        public static GetGuildMoneyResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetGuildMoneyResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static GetGuildMoneyResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (GetGuildMoneyResponse) PARSER.parseDelimitedFrom(input);
        }

        public static GetGuildMoneyResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetGuildMoneyResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static GetGuildMoneyResponse parseFrom(CodedInputStream input) throws IOException {
            return (GetGuildMoneyResponse) PARSER.parseFrom(input);
        }

        public static GetGuildMoneyResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GetGuildMoneyResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(GetGuildMoneyResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.GetGuildMoneyResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;
            private int depositCount_;
            private int depositCountMax_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_GetGuildMoneyResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_GetGuildMoneyResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.GetGuildMoneyResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.GetGuildMoneyResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.depositCount_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.depositCountMax_ = 0;
                this.bitField0_ &= 0xFFFFFFF7;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_GetGuildMoneyResponse_descriptor;
            }

            public GuildHandler.GetGuildMoneyResponse getDefaultInstanceForType() {
                return GuildHandler.GetGuildMoneyResponse.getDefaultInstance();
            }

            public GuildHandler.GetGuildMoneyResponse build() {
                GuildHandler.GetGuildMoneyResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.GetGuildMoneyResponse buildPartial() {
                GuildHandler.GetGuildMoneyResponse result = new GuildHandler.GetGuildMoneyResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                if ((from_bitField0_ & 0x4) == 4) to_bitField0_ |= 0x4;
                result.depositCount_ = this.depositCount_;
                if ((from_bitField0_ & 0x8) == 8) to_bitField0_ |= 0x8;
                result.depositCountMax_ = this.depositCountMax_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.GetGuildMoneyResponse)
                    return mergeFrom((GuildHandler.GetGuildMoneyResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.GetGuildMoneyResponse other) {
                if (other == GuildHandler.GetGuildMoneyResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (other.hasDepositCount()) setDepositCount(other.getDepositCount());
                if (other.hasDepositCountMax()) setDepositCountMax(other.getDepositCountMax());
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.GetGuildMoneyResponse parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.GetGuildMoneyResponse) GuildHandler.GetGuildMoneyResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.GetGuildMoneyResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.GetGuildMoneyResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public boolean hasDepositCount() {
                return ((this.bitField0_ & 0x4) == 4);
            }

            public int getDepositCount() {
                return this.depositCount_;
            }

            public Builder setDepositCount(int value) {
                this.bitField0_ |= 0x4;
                this.depositCount_ = value;
                onChanged();
                return this;
            }

            public Builder clearDepositCount() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.depositCount_ = 0;
                onChanged();
                return this;
            }

            public boolean hasDepositCountMax() {
                return ((this.bitField0_ & 0x8) == 8);
            }

            public int getDepositCountMax() {
                return this.depositCountMax_;
            }

            public Builder setDepositCountMax(int value) {
                this.bitField0_ |= 0x8;
                this.depositCountMax_ = value;
                onChanged();
                return this;
            }

            public Builder clearDepositCountMax() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.depositCountMax_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class JoinGuildDungeonRequest
            extends GeneratedMessage
            implements JoinGuildDungeonRequestOrBuilder {
        private static final JoinGuildDungeonRequest defaultInstance = new JoinGuildDungeonRequest(true);
        private final UnknownFieldSet unknownFields;

        private JoinGuildDungeonRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private JoinGuildDungeonRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static JoinGuildDungeonRequest getDefaultInstance() {
            return defaultInstance;
        }

        public JoinGuildDungeonRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private JoinGuildDungeonRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.c2SType_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_JoinGuildDungeonRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_JoinGuildDungeonRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(JoinGuildDungeonRequest.class, Builder.class);
        }

        public static Parser<JoinGuildDungeonRequest> PARSER = (Parser<JoinGuildDungeonRequest>) new AbstractParser<JoinGuildDungeonRequest>() {
            public GuildHandler.JoinGuildDungeonRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.JoinGuildDungeonRequest(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int C2S_TYPE_FIELD_NUMBER = 1;
        private int c2SType_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<JoinGuildDungeonRequest> getParserForType() {
            return PARSER;
        }

        public boolean hasC2SType() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getC2SType() {
            return this.c2SType_;
        }

        private void initFields() {
            this.c2SType_ = 0;
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasC2SType()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.c2SType_);
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.c2SType_);
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static JoinGuildDungeonRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (JoinGuildDungeonRequest) PARSER.parseFrom(data);
        }

        public static JoinGuildDungeonRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (JoinGuildDungeonRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static JoinGuildDungeonRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (JoinGuildDungeonRequest) PARSER.parseFrom(data);
        }

        public static JoinGuildDungeonRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (JoinGuildDungeonRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static JoinGuildDungeonRequest parseFrom(InputStream input) throws IOException {
            return (JoinGuildDungeonRequest) PARSER.parseFrom(input);
        }

        public static JoinGuildDungeonRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (JoinGuildDungeonRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static JoinGuildDungeonRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (JoinGuildDungeonRequest) PARSER.parseDelimitedFrom(input);
        }

        public static JoinGuildDungeonRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (JoinGuildDungeonRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static JoinGuildDungeonRequest parseFrom(CodedInputStream input) throws IOException {
            return (JoinGuildDungeonRequest) PARSER.parseFrom(input);
        }

        public static JoinGuildDungeonRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (JoinGuildDungeonRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(JoinGuildDungeonRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.JoinGuildDungeonRequestOrBuilder {
            private int bitField0_;
            private int c2SType_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_JoinGuildDungeonRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_JoinGuildDungeonRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.JoinGuildDungeonRequest.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.JoinGuildDungeonRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.c2SType_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_JoinGuildDungeonRequest_descriptor;
            }

            public GuildHandler.JoinGuildDungeonRequest getDefaultInstanceForType() {
                return GuildHandler.JoinGuildDungeonRequest.getDefaultInstance();
            }

            public GuildHandler.JoinGuildDungeonRequest build() {
                GuildHandler.JoinGuildDungeonRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.JoinGuildDungeonRequest buildPartial() {
                GuildHandler.JoinGuildDungeonRequest result = new GuildHandler.JoinGuildDungeonRequest(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.c2SType_ = this.c2SType_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.JoinGuildDungeonRequest)
                    return mergeFrom((GuildHandler.JoinGuildDungeonRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.JoinGuildDungeonRequest other) {
                if (other == GuildHandler.JoinGuildDungeonRequest.getDefaultInstance()) return this;
                if (other.hasC2SType()) setC2SType(other.getC2SType());
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasC2SType()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.JoinGuildDungeonRequest parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.JoinGuildDungeonRequest) GuildHandler.JoinGuildDungeonRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.JoinGuildDungeonRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasC2SType() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getC2SType() {
                return this.c2SType_;
            }

            public Builder setC2SType(int value) {
                this.bitField0_ |= 0x1;
                this.c2SType_ = value;
                onChanged();
                return this;
            }

            public Builder clearC2SType() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.c2SType_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class JoinGuildDungeonResponse
            extends GeneratedMessage
            implements JoinGuildDungeonResponseOrBuilder {
        private static final JoinGuildDungeonResponse defaultInstance = new JoinGuildDungeonResponse(true);
        private final UnknownFieldSet unknownFields;

        private JoinGuildDungeonResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private JoinGuildDungeonResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static JoinGuildDungeonResponse getDefaultInstance() {
            return defaultInstance;
        }

        public JoinGuildDungeonResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private JoinGuildDungeonResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 24:
                            this.bitField0_ |= 0x4;
                            this.s2CType_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_JoinGuildDungeonResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_JoinGuildDungeonResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(JoinGuildDungeonResponse.class, Builder.class);
        }

        public static Parser<JoinGuildDungeonResponse> PARSER = (Parser<JoinGuildDungeonResponse>) new AbstractParser<JoinGuildDungeonResponse>() {
            public GuildHandler.JoinGuildDungeonResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.JoinGuildDungeonResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int S2C_TYPE_FIELD_NUMBER = 3;
        private int s2CType_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<JoinGuildDungeonResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasS2CType() {
            return ((this.bitField0_ & 0x4) == 4);
        }

        public int getS2CType() {
            return this.s2CType_;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.s2CType_ = 0;
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            if ((this.bitField0_ & 0x4) == 4) output.writeInt32(3, this.s2CType_);
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            if ((this.bitField0_ & 0x4) == 4) size += CodedOutputStream.computeInt32Size(3, this.s2CType_);
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static JoinGuildDungeonResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (JoinGuildDungeonResponse) PARSER.parseFrom(data);
        }

        public static JoinGuildDungeonResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (JoinGuildDungeonResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static JoinGuildDungeonResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (JoinGuildDungeonResponse) PARSER.parseFrom(data);
        }

        public static JoinGuildDungeonResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (JoinGuildDungeonResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static JoinGuildDungeonResponse parseFrom(InputStream input) throws IOException {
            return (JoinGuildDungeonResponse) PARSER.parseFrom(input);
        }

        public static JoinGuildDungeonResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (JoinGuildDungeonResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static JoinGuildDungeonResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (JoinGuildDungeonResponse) PARSER.parseDelimitedFrom(input);
        }

        public static JoinGuildDungeonResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (JoinGuildDungeonResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static JoinGuildDungeonResponse parseFrom(CodedInputStream input) throws IOException {
            return (JoinGuildDungeonResponse) PARSER.parseFrom(input);
        }

        public static JoinGuildDungeonResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (JoinGuildDungeonResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(JoinGuildDungeonResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.JoinGuildDungeonResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;
            private int s2CType_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_JoinGuildDungeonResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_JoinGuildDungeonResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.JoinGuildDungeonResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.JoinGuildDungeonResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CType_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_JoinGuildDungeonResponse_descriptor;
            }

            public GuildHandler.JoinGuildDungeonResponse getDefaultInstanceForType() {
                return GuildHandler.JoinGuildDungeonResponse.getDefaultInstance();
            }

            public GuildHandler.JoinGuildDungeonResponse build() {
                GuildHandler.JoinGuildDungeonResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.JoinGuildDungeonResponse buildPartial() {
                GuildHandler.JoinGuildDungeonResponse result = new GuildHandler.JoinGuildDungeonResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                if ((from_bitField0_ & 0x4) == 4) to_bitField0_ |= 0x4;
                result.s2CType_ = this.s2CType_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.JoinGuildDungeonResponse)
                    return mergeFrom((GuildHandler.JoinGuildDungeonResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.JoinGuildDungeonResponse other) {
                if (other == GuildHandler.JoinGuildDungeonResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (other.hasS2CType()) setS2CType(other.getS2CType());
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.JoinGuildDungeonResponse parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.JoinGuildDungeonResponse) GuildHandler.JoinGuildDungeonResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.JoinGuildDungeonResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.JoinGuildDungeonResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public boolean hasS2CType() {
                return ((this.bitField0_ & 0x4) == 4);
            }

            public int getS2CType() {
                return this.s2CType_;
            }

            public Builder setS2CType(int value) {
                this.bitField0_ |= 0x4;
                this.s2CType_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CType() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.s2CType_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class LeaveGuildDungeonRequest
            extends GeneratedMessage
            implements LeaveGuildDungeonRequestOrBuilder {
        private static final LeaveGuildDungeonRequest defaultInstance = new LeaveGuildDungeonRequest(true);
        private final UnknownFieldSet unknownFields;

        private LeaveGuildDungeonRequest(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private LeaveGuildDungeonRequest(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static LeaveGuildDungeonRequest getDefaultInstance() {
            return defaultInstance;
        }

        public LeaveGuildDungeonRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private LeaveGuildDungeonRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            continue;
                    }
                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_LeaveGuildDungeonRequest_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_LeaveGuildDungeonRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(LeaveGuildDungeonRequest.class, Builder.class);
        }

        public static Parser<LeaveGuildDungeonRequest> PARSER = (Parser<LeaveGuildDungeonRequest>) new AbstractParser<LeaveGuildDungeonRequest>() {
            public GuildHandler.LeaveGuildDungeonRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.LeaveGuildDungeonRequest(input, extensionRegistry);
            }
        };
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<LeaveGuildDungeonRequest> getParserForType() {
            return PARSER;
        }

        private void initFields() {
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static LeaveGuildDungeonRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (LeaveGuildDungeonRequest) PARSER.parseFrom(data);
        }

        public static LeaveGuildDungeonRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (LeaveGuildDungeonRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static LeaveGuildDungeonRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (LeaveGuildDungeonRequest) PARSER.parseFrom(data);
        }

        public static LeaveGuildDungeonRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (LeaveGuildDungeonRequest) PARSER.parseFrom(data, extensionRegistry);
        }

        public static LeaveGuildDungeonRequest parseFrom(InputStream input) throws IOException {
            return (LeaveGuildDungeonRequest) PARSER.parseFrom(input);
        }

        public static LeaveGuildDungeonRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (LeaveGuildDungeonRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static LeaveGuildDungeonRequest parseDelimitedFrom(InputStream input) throws IOException {
            return (LeaveGuildDungeonRequest) PARSER.parseDelimitedFrom(input);
        }

        public static LeaveGuildDungeonRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (LeaveGuildDungeonRequest) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static LeaveGuildDungeonRequest parseFrom(CodedInputStream input) throws IOException {
            return (LeaveGuildDungeonRequest) PARSER.parseFrom(input);
        }

        public static LeaveGuildDungeonRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (LeaveGuildDungeonRequest) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(LeaveGuildDungeonRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.LeaveGuildDungeonRequestOrBuilder {
            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_LeaveGuildDungeonRequest_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_LeaveGuildDungeonRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.LeaveGuildDungeonRequest.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.LeaveGuildDungeonRequest.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_LeaveGuildDungeonRequest_descriptor;
            }

            public GuildHandler.LeaveGuildDungeonRequest getDefaultInstanceForType() {
                return GuildHandler.LeaveGuildDungeonRequest.getDefaultInstance();
            }

            public GuildHandler.LeaveGuildDungeonRequest build() {
                GuildHandler.LeaveGuildDungeonRequest result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.LeaveGuildDungeonRequest buildPartial() {
                GuildHandler.LeaveGuildDungeonRequest result = new GuildHandler.LeaveGuildDungeonRequest(this);
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.LeaveGuildDungeonRequest)
                    return mergeFrom((GuildHandler.LeaveGuildDungeonRequest) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.LeaveGuildDungeonRequest other) {
                if (other == GuildHandler.LeaveGuildDungeonRequest.getDefaultInstance()) return this;
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.LeaveGuildDungeonRequest parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.LeaveGuildDungeonRequest) GuildHandler.LeaveGuildDungeonRequest.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.LeaveGuildDungeonRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class LeaveGuildDungeonResponse
            extends GeneratedMessage
            implements LeaveGuildDungeonResponseOrBuilder {
        private static final LeaveGuildDungeonResponse defaultInstance = new LeaveGuildDungeonResponse(true);
        private final UnknownFieldSet unknownFields;

        private LeaveGuildDungeonResponse(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private LeaveGuildDungeonResponse(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static LeaveGuildDungeonResponse getDefaultInstance() {
            return defaultInstance;
        }

        public LeaveGuildDungeonResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private LeaveGuildDungeonResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_LeaveGuildDungeonResponse_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_LeaveGuildDungeonResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(LeaveGuildDungeonResponse.class, Builder.class);
        }

        public static Parser<LeaveGuildDungeonResponse> PARSER = (Parser<LeaveGuildDungeonResponse>) new AbstractParser<LeaveGuildDungeonResponse>() {
            public GuildHandler.LeaveGuildDungeonResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.LeaveGuildDungeonResponse(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<LeaveGuildDungeonResponse> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static LeaveGuildDungeonResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (LeaveGuildDungeonResponse) PARSER.parseFrom(data);
        }

        public static LeaveGuildDungeonResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (LeaveGuildDungeonResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static LeaveGuildDungeonResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (LeaveGuildDungeonResponse) PARSER.parseFrom(data);
        }

        public static LeaveGuildDungeonResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (LeaveGuildDungeonResponse) PARSER.parseFrom(data, extensionRegistry);
        }

        public static LeaveGuildDungeonResponse parseFrom(InputStream input) throws IOException {
            return (LeaveGuildDungeonResponse) PARSER.parseFrom(input);
        }

        public static LeaveGuildDungeonResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (LeaveGuildDungeonResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static LeaveGuildDungeonResponse parseDelimitedFrom(InputStream input) throws IOException {
            return (LeaveGuildDungeonResponse) PARSER.parseDelimitedFrom(input);
        }

        public static LeaveGuildDungeonResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (LeaveGuildDungeonResponse) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static LeaveGuildDungeonResponse parseFrom(CodedInputStream input) throws IOException {
            return (LeaveGuildDungeonResponse) PARSER.parseFrom(input);
        }

        public static LeaveGuildDungeonResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (LeaveGuildDungeonResponse) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(LeaveGuildDungeonResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.LeaveGuildDungeonResponseOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_LeaveGuildDungeonResponse_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_LeaveGuildDungeonResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.LeaveGuildDungeonResponse.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.LeaveGuildDungeonResponse.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_LeaveGuildDungeonResponse_descriptor;
            }

            public GuildHandler.LeaveGuildDungeonResponse getDefaultInstanceForType() {
                return GuildHandler.LeaveGuildDungeonResponse.getDefaultInstance();
            }

            public GuildHandler.LeaveGuildDungeonResponse build() {
                GuildHandler.LeaveGuildDungeonResponse result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.LeaveGuildDungeonResponse buildPartial() {
                GuildHandler.LeaveGuildDungeonResponse result = new GuildHandler.LeaveGuildDungeonResponse(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.LeaveGuildDungeonResponse)
                    return mergeFrom((GuildHandler.LeaveGuildDungeonResponse) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.LeaveGuildDungeonResponse other) {
                if (other == GuildHandler.LeaveGuildDungeonResponse.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.LeaveGuildDungeonResponse parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.LeaveGuildDungeonResponse) GuildHandler.LeaveGuildDungeonResponse.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.LeaveGuildDungeonResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.LeaveGuildDungeonResponse.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class GuildRefreshPush
            extends GeneratedMessage
            implements GuildRefreshPushOrBuilder {
        private static final GuildRefreshPush defaultInstance = new GuildRefreshPush(true);
        private final UnknownFieldSet unknownFields;

        private GuildRefreshPush(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private GuildRefreshPush(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static GuildRefreshPush getDefaultInstance() {
            return defaultInstance;
        }

        public GuildRefreshPush getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private GuildRefreshPush(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 24:
                            this.bitField0_ |= 0x4;
                            this.isIn_ = input.readInt32();
                            break;
                        case 32:
                            this.bitField0_ |= 0x8;
                            this.isOut_ = input.readInt32();
                            break;
                        case 40:
                            this.bitField0_ |= 0x10;
                            this.job_ = input.readInt32();
                            break;
                        case 50:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x20;
                            this.jobName_ = bs;
                            break;
                        case 58:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x40;
                            this.guildName_ = bs;
                            break;
                        case 66:
                            if ((mutable_bitField0_ & 0x80) != 128) {
                                this.timesList_ = new ArrayList<>();
                                mutable_bitField0_ |= 0x80;
                            }
                            this.timesList_.add(input.readMessage(GuildHandler.ContributeTimesInfo.PARSER, extensionRegistry));
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                if ((mutable_bitField0_ & 0x80) == 128) this.timesList_ = Collections.unmodifiableList(this.timesList_);
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_GuildRefreshPush_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_GuildRefreshPush_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildRefreshPush.class, Builder.class);
        }

        public static Parser<GuildRefreshPush> PARSER = (Parser<GuildRefreshPush>) new AbstractParser<GuildRefreshPush>() {
            public GuildHandler.GuildRefreshPush parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.GuildRefreshPush(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int ISIN_FIELD_NUMBER = 3;
        private int isIn_;
        public static final int ISOUT_FIELD_NUMBER = 4;
        private int isOut_;
        public static final int JOB_FIELD_NUMBER = 5;
        private int job_;
        public static final int JOBNAME_FIELD_NUMBER = 6;
        private Object jobName_;
        public static final int GUILDNAME_FIELD_NUMBER = 7;
        private Object guildName_;
        public static final int TIMESLIST_FIELD_NUMBER = 8;
        private List<GuildHandler.ContributeTimesInfo> timesList_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<GuildRefreshPush> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasIsIn() {
            return ((this.bitField0_ & 0x4) == 4);
        }

        static {
            defaultInstance.initFields();
        }


        public int getIsIn() {
            return this.isIn_;
        }


        public boolean hasIsOut() {
            return ((this.bitField0_ & 0x8) == 8);
        }


        public int getIsOut() {
            return this.isOut_;
        }


        public boolean hasJob() {
            return ((this.bitField0_ & 0x10) == 16);
        }


        public int getJob() {
            return this.job_;
        }


        public boolean hasJobName() {
            return ((this.bitField0_ & 0x20) == 32);
        }


        public String getJobName() {
            Object ref = this.jobName_;
            if (ref instanceof String) {
                return (String) ref;
            }
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.jobName_ = s;
            }
            return s;
        }


        public ByteString getJobNameBytes() {
            Object ref = this.jobName_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.jobName_ = b;
                return b;
            }
            return (ByteString) ref;
        }


        public boolean hasGuildName() {
            return ((this.bitField0_ & 0x40) == 64);
        }


        public String getGuildName() {
            Object ref = this.guildName_;
            if (ref instanceof String) {
                return (String) ref;
            }
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.guildName_ = s;
            }
            return s;
        }


        public ByteString getGuildNameBytes() {
            Object ref = this.guildName_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.guildName_ = b;
                return b;
            }
            return (ByteString) ref;
        }


        public List<GuildHandler.ContributeTimesInfo> getTimesListList() {
            return this.timesList_;
        }


        public List<? extends GuildHandler.ContributeTimesInfoOrBuilder> getTimesListOrBuilderList() {
            return (List) this.timesList_;
        }


        public int getTimesListCount() {
            return this.timesList_.size();
        }


        public GuildHandler.ContributeTimesInfo getTimesList(int index) {
            return this.timesList_.get(index);
        }


        public GuildHandler.ContributeTimesInfoOrBuilder getTimesListOrBuilder(int index) {
            return this.timesList_.get(index);
        }


        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.isIn_ = 0;
            this.isOut_ = 0;
            this.job_ = 0;
            this.jobName_ = "";
            this.guildName_ = "";
            this.timesList_ = Collections.emptyList();
        }


        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
                return true;
            }
            if (isInitialized == 0) {
                return false;
            }
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }


        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) {
                output.writeInt32(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                output.writeBytes(2, getS2CMsgBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                output.writeInt32(3, this.isIn_);
            }
            if ((this.bitField0_ & 0x8) == 8) {
                output.writeInt32(4, this.isOut_);
            }
            if ((this.bitField0_ & 0x10) == 16) {
                output.writeInt32(5, this.job_);
            }
            if ((this.bitField0_ & 0x20) == 32) {
                output.writeBytes(6, getJobNameBytes());
            }
            if ((this.bitField0_ & 0x40) == 64) {
                output.writeBytes(7, getGuildNameBytes());
            }
            for (int i = 0; i < this.timesList_.size(); i++) {
                output.writeMessage(8, (MessageLite) this.timesList_.get(i));
            }
            getUnknownFields().writeTo(output);
        }


        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) {
                size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                size += CodedOutputStream.computeInt32Size(3, this.isIn_);
            }
            if ((this.bitField0_ & 0x8) == 8) {
                size += CodedOutputStream.computeInt32Size(4, this.isOut_);
            }
            if ((this.bitField0_ & 0x10) == 16) {
                size += CodedOutputStream.computeInt32Size(5, this.job_);
            }
            if ((this.bitField0_ & 0x20) == 32) {
                size += CodedOutputStream.computeBytesSize(6, getJobNameBytes());
            }
            if ((this.bitField0_ & 0x40) == 64) {
                size += CodedOutputStream.computeBytesSize(7, getGuildNameBytes());
            }
            for (int i = 0; i < this.timesList_.size(); i++) {
                size += CodedOutputStream.computeMessageSize(8, (MessageLite) this.timesList_.get(i));
            }
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }


        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }


        public static GuildRefreshPush parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (GuildRefreshPush) PARSER.parseFrom(data);
        }


        public static GuildRefreshPush parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GuildRefreshPush) PARSER.parseFrom(data, extensionRegistry);
        }


        public static GuildRefreshPush parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (GuildRefreshPush) PARSER.parseFrom(data);
        }


        public static GuildRefreshPush parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GuildRefreshPush) PARSER.parseFrom(data, extensionRegistry);
        }


        public static GuildRefreshPush parseFrom(InputStream input) throws IOException {
            return (GuildRefreshPush) PARSER.parseFrom(input);
        }


        public static GuildRefreshPush parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GuildRefreshPush) PARSER.parseFrom(input, extensionRegistry);
        }


        public static GuildRefreshPush parseDelimitedFrom(InputStream input) throws IOException {
            return (GuildRefreshPush) PARSER.parseDelimitedFrom(input);
        }


        public static GuildRefreshPush parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GuildRefreshPush) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }


        public static GuildRefreshPush parseFrom(CodedInputStream input) throws IOException {
            return (GuildRefreshPush) PARSER.parseFrom(input);
        }


        public static GuildRefreshPush parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GuildRefreshPush) PARSER.parseFrom(input, extensionRegistry);
        }


        public static Builder newBuilder() {
            return Builder.create();
        }


        public Builder newBuilderForType() {
            return newBuilder();
        }


        public static Builder newBuilder(GuildRefreshPush prototype) {
            return newBuilder().mergeFrom(prototype);
        }


        public Builder toBuilder() {
            return newBuilder(this);
        }


        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }


        public static final class Builder
                extends GeneratedMessage.Builder<Builder>
                implements GuildHandler.GuildRefreshPushOrBuilder {
            private int bitField0_;


            private int s2CCode_;


            private Object s2CMsg_;


            private int isIn_;


            private int isOut_;


            private int job_;


            private Object jobName_;


            private Object guildName_;


            private List<GuildHandler.ContributeTimesInfo> timesList_;


            private RepeatedFieldBuilder<GuildHandler.ContributeTimesInfo, GuildHandler.ContributeTimesInfo.Builder, GuildHandler.ContributeTimesInfoOrBuilder> timesListBuilder_;


            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_GuildRefreshPush_descriptor;
            }


            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_GuildRefreshPush_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.GuildRefreshPush.class, Builder.class);
            }


            private Builder() {
                this.s2CMsg_ = "";
                this.jobName_ = "";
                this.guildName_ = "";
                this.timesList_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }


            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                this.jobName_ = "";
                this.guildName_ = "";
                this.timesList_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }


            private void maybeForceBuilderInitialization() {
                if (GuildHandler.GuildRefreshPush.alwaysUseFieldBuilders) {
                    getTimesListFieldBuilder();
                }
            }


            private static Builder create() {
                return new Builder();
            }


            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.isIn_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.isOut_ = 0;
                this.bitField0_ &= 0xFFFFFFF7;
                this.job_ = 0;
                this.bitField0_ &= 0xFFFFFFEF;
                this.jobName_ = "";
                this.bitField0_ &= 0xFFFFFFDF;
                this.guildName_ = "";
                this.bitField0_ &= 0xFFFFFFBF;
                if (this.timesListBuilder_ == null) {
                    this.timesList_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFF7F;
                } else {
                    this.timesListBuilder_.clear();
                }
                return this;
            }


            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }


            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_GuildRefreshPush_descriptor;
            }


            public GuildHandler.GuildRefreshPush getDefaultInstanceForType() {
                return GuildHandler.GuildRefreshPush.getDefaultInstance();
            }


            public GuildHandler.GuildRefreshPush build() {
                GuildHandler.GuildRefreshPush result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }


            public GuildHandler.GuildRefreshPush buildPartial() {
                GuildHandler.GuildRefreshPush result = new GuildHandler.GuildRefreshPush(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) {
                    to_bitField0_ |= 0x1;
                }
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) {
                    to_bitField0_ |= 0x2;
                }
                result.s2CMsg_ = this.s2CMsg_;
                if ((from_bitField0_ & 0x4) == 4) {
                    to_bitField0_ |= 0x4;
                }
                result.isIn_ = this.isIn_;
                if ((from_bitField0_ & 0x8) == 8) {
                    to_bitField0_ |= 0x8;
                }
                result.isOut_ = this.isOut_;
                if ((from_bitField0_ & 0x10) == 16) {
                    to_bitField0_ |= 0x10;
                }
                result.job_ = this.job_;
                if ((from_bitField0_ & 0x20) == 32) {
                    to_bitField0_ |= 0x20;
                }
                result.jobName_ = this.jobName_;
                if ((from_bitField0_ & 0x40) == 64) {
                    to_bitField0_ |= 0x40;
                }
                result.guildName_ = this.guildName_;
                if (this.timesListBuilder_ == null) {
                    if ((this.bitField0_ & 0x80) == 128) {
                        this.timesList_ = Collections.unmodifiableList(this.timesList_);
                        this.bitField0_ &= 0xFFFFFF7F;
                    }
                    result.timesList_ = this.timesList_;
                } else {
                    result.timesList_ = this.timesListBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }


            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.GuildRefreshPush) {
                    return mergeFrom((GuildHandler.GuildRefreshPush) other);
                }
                super.mergeFrom(other);
                return this;
            }


            public Builder mergeFrom(GuildHandler.GuildRefreshPush other) {
                if (other == GuildHandler.GuildRefreshPush.getDefaultInstance()) {
                    return this;
                }
                if (other.hasS2CCode()) {
                    setS2CCode(other.getS2CCode());
                }
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (other.hasIsIn()) {
                    setIsIn(other.getIsIn());
                }
                if (other.hasIsOut()) {
                    setIsOut(other.getIsOut());
                }
                if (other.hasJob()) {
                    setJob(other.getJob());
                }
                if (other.hasJobName()) {
                    this.bitField0_ |= 0x20;
                    this.jobName_ = other.jobName_;
                    onChanged();
                }
                if (other.hasGuildName()) {
                    this.bitField0_ |= 0x40;
                    this.guildName_ = other.guildName_;
                    onChanged();
                }
                if (this.timesListBuilder_ == null) {
                    if (!other.timesList_.isEmpty()) {
                        if (this.timesList_.isEmpty()) {
                            this.timesList_ = other.timesList_;
                            this.bitField0_ &= 0xFFFFFF7F;
                        } else {
                            ensureTimesListIsMutable();
                            this.timesList_.addAll(other.timesList_);
                        }
                        onChanged();
                    }
                } else if (!other.timesList_.isEmpty()) {
                    if (this.timesListBuilder_.isEmpty()) {
                        this.timesListBuilder_.dispose();
                        this.timesListBuilder_ = null;
                        this.timesList_ = other.timesList_;
                        this.bitField0_ &= 0xFFFFFF7F;
                        this.timesListBuilder_ = GuildHandler.GuildRefreshPush.alwaysUseFieldBuilders ? getTimesListFieldBuilder() : null;
                    } else {
                        this.timesListBuilder_.addAllMessages(other.timesList_);
                    }
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }


            public final boolean isInitialized() {
                if (!hasS2CCode()) {
                    return false;
                }
                return true;
            }


            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.GuildRefreshPush parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.GuildRefreshPush) GuildHandler.GuildRefreshPush.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.GuildRefreshPush) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }


            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }


            public int getS2CCode() {
                return this.s2CCode_;
            }


            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }


            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }


            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }


            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.s2CMsg_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setS2CMsg(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }


            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.GuildRefreshPush.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }


            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }


            public boolean hasIsIn() {
                return ((this.bitField0_ & 0x4) == 4);
            }


            public int getIsIn() {
                return this.isIn_;
            }


            public Builder setIsIn(int value) {
                this.bitField0_ |= 0x4;
                this.isIn_ = value;
                onChanged();
                return this;
            }


            public Builder clearIsIn() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.isIn_ = 0;
                onChanged();
                return this;
            }


            public boolean hasIsOut() {
                return ((this.bitField0_ & 0x8) == 8);
            }


            public int getIsOut() {
                return this.isOut_;
            }


            public Builder setIsOut(int value) {
                this.bitField0_ |= 0x8;
                this.isOut_ = value;
                onChanged();
                return this;
            }


            public Builder clearIsOut() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.isOut_ = 0;
                onChanged();
                return this;
            }


            public boolean hasJob() {
                return ((this.bitField0_ & 0x10) == 16);
            }


            public int getJob() {
                return this.job_;
            }


            public Builder setJob(int value) {
                this.bitField0_ |= 0x10;
                this.job_ = value;
                onChanged();
                return this;
            }


            public Builder clearJob() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.job_ = 0;
                onChanged();
                return this;
            }


            public boolean hasJobName() {
                return ((this.bitField0_ & 0x20) == 32);
            }


            public String getJobName() {
                Object ref = this.jobName_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.jobName_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getJobNameBytes() {
                Object ref = this.jobName_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.jobName_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setJobName(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x20;
                this.jobName_ = value;
                onChanged();
                return this;
            }


            public Builder clearJobName() {
                this.bitField0_ &= 0xFFFFFFDF;
                this.jobName_ = GuildHandler.GuildRefreshPush.getDefaultInstance().getJobName();
                onChanged();
                return this;
            }


            public Builder setJobNameBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x20;
                this.jobName_ = value;
                onChanged();
                return this;
            }


            public boolean hasGuildName() {
                return ((this.bitField0_ & 0x40) == 64);
            }


            public String getGuildName() {
                Object ref = this.guildName_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.guildName_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getGuildNameBytes() {
                Object ref = this.guildName_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.guildName_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setGuildName(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x40;
                this.guildName_ = value;
                onChanged();
                return this;
            }


            public Builder clearGuildName() {
                this.bitField0_ &= 0xFFFFFFBF;
                this.guildName_ = GuildHandler.GuildRefreshPush.getDefaultInstance().getGuildName();
                onChanged();
                return this;
            }


            public Builder setGuildNameBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x40;
                this.guildName_ = value;
                onChanged();
                return this;
            }


            private void ensureTimesListIsMutable() {
                if ((this.bitField0_ & 0x80) != 128) {
                    this.timesList_ = new ArrayList<>(this.timesList_);
                    this.bitField0_ |= 0x80;
                }
            }


            public List<GuildHandler.ContributeTimesInfo> getTimesListList() {
                if (this.timesListBuilder_ == null) {
                    return Collections.unmodifiableList(this.timesList_);
                }
                return this.timesListBuilder_.getMessageList();
            }


            public int getTimesListCount() {
                if (this.timesListBuilder_ == null) {
                    return this.timesList_.size();
                }
                return this.timesListBuilder_.getCount();
            }


            public GuildHandler.ContributeTimesInfo getTimesList(int index) {
                if (this.timesListBuilder_ == null) {
                    return this.timesList_.get(index);
                }
                return (GuildHandler.ContributeTimesInfo) this.timesListBuilder_.getMessage(index);
            }


            public Builder setTimesList(int index, GuildHandler.ContributeTimesInfo value) {
                if (this.timesListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureTimesListIsMutable();
                    this.timesList_.set(index, value);
                    onChanged();
                } else {
                    this.timesListBuilder_.setMessage(index, value);
                }
                return this;
            }


            public Builder setTimesList(int index, GuildHandler.ContributeTimesInfo.Builder builderForValue) {
                if (this.timesListBuilder_ == null) {
                    ensureTimesListIsMutable();
                    this.timesList_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    this.timesListBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }


            public Builder addTimesList(GuildHandler.ContributeTimesInfo value) {
                if (this.timesListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureTimesListIsMutable();
                    this.timesList_.add(value);
                    onChanged();
                } else {
                    this.timesListBuilder_.addMessage(value);
                }
                return this;
            }


            public Builder addTimesList(int index, GuildHandler.ContributeTimesInfo value) {
                if (this.timesListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureTimesListIsMutable();
                    this.timesList_.add(index, value);
                    onChanged();
                } else {
                    this.timesListBuilder_.addMessage(index, value);
                }
                return this;
            }


            public Builder addTimesList(GuildHandler.ContributeTimesInfo.Builder builderForValue) {
                if (this.timesListBuilder_ == null) {
                    ensureTimesListIsMutable();
                    this.timesList_.add(builderForValue.build());
                    onChanged();
                } else {
                    this.timesListBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }


            public Builder addTimesList(int index, GuildHandler.ContributeTimesInfo.Builder builderForValue) {
                if (this.timesListBuilder_ == null) {
                    ensureTimesListIsMutable();
                    this.timesList_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    this.timesListBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }


            public Builder addAllTimesList(Iterable<? extends GuildHandler.ContributeTimesInfo> values) {
                if (this.timesListBuilder_ == null) {
                    ensureTimesListIsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.timesList_);
                    onChanged();
                } else {
                    this.timesListBuilder_.addAllMessages(values);
                }
                return this;
            }


            public Builder clearTimesList() {
                if (this.timesListBuilder_ == null) {
                    this.timesList_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFF7F;
                    onChanged();
                } else {
                    this.timesListBuilder_.clear();
                }
                return this;
            }


            public Builder removeTimesList(int index) {
                if (this.timesListBuilder_ == null) {
                    ensureTimesListIsMutable();
                    this.timesList_.remove(index);
                    onChanged();
                } else {
                    this.timesListBuilder_.remove(index);
                }
                return this;
            }


            public GuildHandler.ContributeTimesInfo.Builder getTimesListBuilder(int index) {
                return (GuildHandler.ContributeTimesInfo.Builder) getTimesListFieldBuilder().getBuilder(index);
            }


            public GuildHandler.ContributeTimesInfoOrBuilder getTimesListOrBuilder(int index) {
                if (this.timesListBuilder_ == null) {
                    return this.timesList_.get(index);
                }
                return (GuildHandler.ContributeTimesInfoOrBuilder) this.timesListBuilder_.getMessageOrBuilder(index);
            }


            public List<? extends GuildHandler.ContributeTimesInfoOrBuilder> getTimesListOrBuilderList() {
                if (this.timesListBuilder_ != null) {
                    return this.timesListBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList((List) this.timesList_);
            }


            public GuildHandler.ContributeTimesInfo.Builder addTimesListBuilder() {
                return (GuildHandler.ContributeTimesInfo.Builder) getTimesListFieldBuilder().addBuilder(GuildHandler.ContributeTimesInfo.getDefaultInstance());
            }


            public GuildHandler.ContributeTimesInfo.Builder addTimesListBuilder(int index) {
                return (GuildHandler.ContributeTimesInfo.Builder) getTimesListFieldBuilder().addBuilder(index, GuildHandler.ContributeTimesInfo.getDefaultInstance());
            }


            public List<GuildHandler.ContributeTimesInfo.Builder> getTimesListBuilderList() {
                return getTimesListFieldBuilder().getBuilderList();
            }


            private RepeatedFieldBuilder<GuildHandler.ContributeTimesInfo, GuildHandler.ContributeTimesInfo.Builder, GuildHandler.ContributeTimesInfoOrBuilder> getTimesListFieldBuilder() {
                if (this.timesListBuilder_ == null) {
                    this.timesListBuilder_ = new RepeatedFieldBuilder(this.timesList_, ((this.bitField0_ & 0x80) == 128), getParentForChildren(), isClean());
                    this.timesList_ = null;
                }
                return this.timesListBuilder_;
            }
        }
    }


    public static final class GuildInvitePush
            extends GeneratedMessage
            implements GuildInvitePushOrBuilder {
        private static final GuildInvitePush defaultInstance = new GuildInvitePush(true);
        private final UnknownFieldSet unknownFields;

        private GuildInvitePush(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private GuildInvitePush(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static GuildInvitePush getDefaultInstance() {
            return defaultInstance;
        }

        public GuildInvitePush getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private GuildInvitePush(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 26:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x4;
                            this.playerId_ = bs;
                            break;
                        case 34:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x8;
                            this.playerName_ = bs;
                            break;
                        case 42:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x10;
                            this.guildId_ = bs;
                            break;
                        case 50:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x20;
                            this.guildName_ = bs;
                            break;
                        case 56:
                            this.bitField0_ |= 0x40;
                            this.playerPro_ = input.readInt32();
                            break;
                        case 64:
                            this.bitField0_ |= 0x80;
                            this.guildLevel_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_GuildInvitePush_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_GuildInvitePush_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildInvitePush.class, Builder.class);
        }

        public static Parser<GuildInvitePush> PARSER = (Parser<GuildInvitePush>) new AbstractParser<GuildInvitePush>() {
            public GuildHandler.GuildInvitePush parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.GuildInvitePush(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int PLAYERID_FIELD_NUMBER = 3;
        private Object playerId_;
        public static final int PLAYERNAME_FIELD_NUMBER = 4;
        private Object playerName_;
        public static final int GUILDID_FIELD_NUMBER = 5;
        private Object guildId_;
        public static final int GUILDNAME_FIELD_NUMBER = 6;
        private Object guildName_;
        public static final int PLAYERPRO_FIELD_NUMBER = 7;
        private int playerPro_;
        public static final int GUILDLEVEL_FIELD_NUMBER = 8;
        private int guildLevel_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<GuildInvitePush> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        static {
            defaultInstance.initFields();
        }


        public boolean hasPlayerId() {
            return ((this.bitField0_ & 0x4) == 4);
        }


        public String getPlayerId() {
            Object ref = this.playerId_;
            if (ref instanceof String) {
                return (String) ref;
            }
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.playerId_ = s;
            }
            return s;
        }


        public ByteString getPlayerIdBytes() {
            Object ref = this.playerId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.playerId_ = b;
                return b;
            }
            return (ByteString) ref;
        }


        public boolean hasPlayerName() {
            return ((this.bitField0_ & 0x8) == 8);
        }


        public String getPlayerName() {
            Object ref = this.playerName_;
            if (ref instanceof String) {
                return (String) ref;
            }
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.playerName_ = s;
            }
            return s;
        }


        public ByteString getPlayerNameBytes() {
            Object ref = this.playerName_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.playerName_ = b;
                return b;
            }
            return (ByteString) ref;
        }


        public boolean hasGuildId() {
            return ((this.bitField0_ & 0x10) == 16);
        }


        public String getGuildId() {
            Object ref = this.guildId_;
            if (ref instanceof String) {
                return (String) ref;
            }
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.guildId_ = s;
            }
            return s;
        }


        public ByteString getGuildIdBytes() {
            Object ref = this.guildId_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.guildId_ = b;
                return b;
            }
            return (ByteString) ref;
        }


        public boolean hasGuildName() {
            return ((this.bitField0_ & 0x20) == 32);
        }


        public String getGuildName() {
            Object ref = this.guildName_;
            if (ref instanceof String) {
                return (String) ref;
            }
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.guildName_ = s;
            }
            return s;
        }


        public ByteString getGuildNameBytes() {
            Object ref = this.guildName_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.guildName_ = b;
                return b;
            }
            return (ByteString) ref;
        }


        public boolean hasPlayerPro() {
            return ((this.bitField0_ & 0x40) == 64);
        }


        public int getPlayerPro() {
            return this.playerPro_;
        }


        public boolean hasGuildLevel() {
            return ((this.bitField0_ & 0x80) == 128);
        }


        public int getGuildLevel() {
            return this.guildLevel_;
        }


        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.playerId_ = "";
            this.playerName_ = "";
            this.guildId_ = "";
            this.guildName_ = "";
            this.playerPro_ = 0;
            this.guildLevel_ = 0;
        }


        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
                return true;
            }
            if (isInitialized == 0) {
                return false;
            }
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }


        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) {
                output.writeInt32(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                output.writeBytes(2, getS2CMsgBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                output.writeBytes(3, getPlayerIdBytes());
            }
            if ((this.bitField0_ & 0x8) == 8) {
                output.writeBytes(4, getPlayerNameBytes());
            }
            if ((this.bitField0_ & 0x10) == 16) {
                output.writeBytes(5, getGuildIdBytes());
            }
            if ((this.bitField0_ & 0x20) == 32) {
                output.writeBytes(6, getGuildNameBytes());
            }
            if ((this.bitField0_ & 0x40) == 64) {
                output.writeInt32(7, this.playerPro_);
            }
            if ((this.bitField0_ & 0x80) == 128) {
                output.writeInt32(8, this.guildLevel_);
            }
            getUnknownFields().writeTo(output);
        }


        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) {
                size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            }
            if ((this.bitField0_ & 0x2) == 2) {
                size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            }
            if ((this.bitField0_ & 0x4) == 4) {
                size += CodedOutputStream.computeBytesSize(3, getPlayerIdBytes());
            }
            if ((this.bitField0_ & 0x8) == 8) {
                size += CodedOutputStream.computeBytesSize(4, getPlayerNameBytes());
            }
            if ((this.bitField0_ & 0x10) == 16) {
                size += CodedOutputStream.computeBytesSize(5, getGuildIdBytes());
            }
            if ((this.bitField0_ & 0x20) == 32) {
                size += CodedOutputStream.computeBytesSize(6, getGuildNameBytes());
            }
            if ((this.bitField0_ & 0x40) == 64) {
                size += CodedOutputStream.computeInt32Size(7, this.playerPro_);
            }
            if ((this.bitField0_ & 0x80) == 128) {
                size += CodedOutputStream.computeInt32Size(8, this.guildLevel_);
            }
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }


        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }


        public static GuildInvitePush parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (GuildInvitePush) PARSER.parseFrom(data);
        }


        public static GuildInvitePush parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GuildInvitePush) PARSER.parseFrom(data, extensionRegistry);
        }


        public static GuildInvitePush parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (GuildInvitePush) PARSER.parseFrom(data);
        }


        public static GuildInvitePush parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GuildInvitePush) PARSER.parseFrom(data, extensionRegistry);
        }


        public static GuildInvitePush parseFrom(InputStream input) throws IOException {
            return (GuildInvitePush) PARSER.parseFrom(input);
        }


        public static GuildInvitePush parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GuildInvitePush) PARSER.parseFrom(input, extensionRegistry);
        }


        public static GuildInvitePush parseDelimitedFrom(InputStream input) throws IOException {
            return (GuildInvitePush) PARSER.parseDelimitedFrom(input);
        }


        public static GuildInvitePush parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GuildInvitePush) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }


        public static GuildInvitePush parseFrom(CodedInputStream input) throws IOException {
            return (GuildInvitePush) PARSER.parseFrom(input);
        }


        public static GuildInvitePush parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GuildInvitePush) PARSER.parseFrom(input, extensionRegistry);
        }


        public static Builder newBuilder() {
            return Builder.create();
        }


        public Builder newBuilderForType() {
            return newBuilder();
        }


        public static Builder newBuilder(GuildInvitePush prototype) {
            return newBuilder().mergeFrom(prototype);
        }


        public Builder toBuilder() {
            return newBuilder(this);
        }


        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }


        public static final class Builder
                extends GeneratedMessage.Builder<Builder>
                implements GuildHandler.GuildInvitePushOrBuilder {
            private int bitField0_;


            private int s2CCode_;


            private Object s2CMsg_;


            private Object playerId_;


            private Object playerName_;


            private Object guildId_;


            private Object guildName_;


            private int playerPro_;


            private int guildLevel_;


            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_GuildInvitePush_descriptor;
            }


            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_GuildInvitePush_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.GuildInvitePush.class, Builder.class);
            }


            private Builder() {
                this.s2CMsg_ = "";
                this.playerId_ = "";
                this.playerName_ = "";
                this.guildId_ = "";
                this.guildName_ = "";
                maybeForceBuilderInitialization();
            }


            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                this.playerId_ = "";
                this.playerName_ = "";
                this.guildId_ = "";
                this.guildName_ = "";
                maybeForceBuilderInitialization();
            }


            private void maybeForceBuilderInitialization() {
                if (GuildHandler.GuildInvitePush.alwaysUseFieldBuilders) ;
            }


            private static Builder create() {
                return new Builder();
            }


            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.playerId_ = "";
                this.bitField0_ &= 0xFFFFFFFB;
                this.playerName_ = "";
                this.bitField0_ &= 0xFFFFFFF7;
                this.guildId_ = "";
                this.bitField0_ &= 0xFFFFFFEF;
                this.guildName_ = "";
                this.bitField0_ &= 0xFFFFFFDF;
                this.playerPro_ = 0;
                this.bitField0_ &= 0xFFFFFFBF;
                this.guildLevel_ = 0;
                this.bitField0_ &= 0xFFFFFF7F;
                return this;
            }


            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }


            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_GuildInvitePush_descriptor;
            }


            public GuildHandler.GuildInvitePush getDefaultInstanceForType() {
                return GuildHandler.GuildInvitePush.getDefaultInstance();
            }


            public GuildHandler.GuildInvitePush build() {
                GuildHandler.GuildInvitePush result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }


            public GuildHandler.GuildInvitePush buildPartial() {
                GuildHandler.GuildInvitePush result = new GuildHandler.GuildInvitePush(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) {
                    to_bitField0_ |= 0x1;
                }
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) {
                    to_bitField0_ |= 0x2;
                }
                result.s2CMsg_ = this.s2CMsg_;
                if ((from_bitField0_ & 0x4) == 4) {
                    to_bitField0_ |= 0x4;
                }
                result.playerId_ = this.playerId_;
                if ((from_bitField0_ & 0x8) == 8) {
                    to_bitField0_ |= 0x8;
                }
                result.playerName_ = this.playerName_;
                if ((from_bitField0_ & 0x10) == 16) {
                    to_bitField0_ |= 0x10;
                }
                result.guildId_ = this.guildId_;
                if ((from_bitField0_ & 0x20) == 32) {
                    to_bitField0_ |= 0x20;
                }
                result.guildName_ = this.guildName_;
                if ((from_bitField0_ & 0x40) == 64) {
                    to_bitField0_ |= 0x40;
                }
                result.playerPro_ = this.playerPro_;
                if ((from_bitField0_ & 0x80) == 128) {
                    to_bitField0_ |= 0x80;
                }
                result.guildLevel_ = this.guildLevel_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }


            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.GuildInvitePush) {
                    return mergeFrom((GuildHandler.GuildInvitePush) other);
                }
                super.mergeFrom(other);
                return this;
            }


            public Builder mergeFrom(GuildHandler.GuildInvitePush other) {
                if (other == GuildHandler.GuildInvitePush.getDefaultInstance()) {
                    return this;
                }
                if (other.hasS2CCode()) {
                    setS2CCode(other.getS2CCode());
                }
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (other.hasPlayerId()) {
                    this.bitField0_ |= 0x4;
                    this.playerId_ = other.playerId_;
                    onChanged();
                }
                if (other.hasPlayerName()) {
                    this.bitField0_ |= 0x8;
                    this.playerName_ = other.playerName_;
                    onChanged();
                }
                if (other.hasGuildId()) {
                    this.bitField0_ |= 0x10;
                    this.guildId_ = other.guildId_;
                    onChanged();
                }
                if (other.hasGuildName()) {
                    this.bitField0_ |= 0x20;
                    this.guildName_ = other.guildName_;
                    onChanged();
                }
                if (other.hasPlayerPro()) {
                    setPlayerPro(other.getPlayerPro());
                }
                if (other.hasGuildLevel()) {
                    setGuildLevel(other.getGuildLevel());
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }


            public final boolean isInitialized() {
                if (!hasS2CCode()) {
                    return false;
                }
                return true;
            }


            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.GuildInvitePush parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.GuildInvitePush) GuildHandler.GuildInvitePush.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.GuildInvitePush) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }


            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }


            public int getS2CCode() {
                return this.s2CCode_;
            }


            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }


            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }


            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }


            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.s2CMsg_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setS2CMsg(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }


            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.GuildInvitePush.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }


            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }


            public boolean hasPlayerId() {
                return ((this.bitField0_ & 0x4) == 4);
            }


            public String getPlayerId() {
                Object ref = this.playerId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.playerId_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getPlayerIdBytes() {
                Object ref = this.playerId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.playerId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setPlayerId(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x4;
                this.playerId_ = value;
                onChanged();
                return this;
            }


            public Builder clearPlayerId() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.playerId_ = GuildHandler.GuildInvitePush.getDefaultInstance().getPlayerId();
                onChanged();
                return this;
            }


            public Builder setPlayerIdBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x4;
                this.playerId_ = value;
                onChanged();
                return this;
            }


            public boolean hasPlayerName() {
                return ((this.bitField0_ & 0x8) == 8);
            }


            public String getPlayerName() {
                Object ref = this.playerName_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.playerName_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getPlayerNameBytes() {
                Object ref = this.playerName_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.playerName_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setPlayerName(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x8;
                this.playerName_ = value;
                onChanged();
                return this;
            }


            public Builder clearPlayerName() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.playerName_ = GuildHandler.GuildInvitePush.getDefaultInstance().getPlayerName();
                onChanged();
                return this;
            }


            public Builder setPlayerNameBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x8;
                this.playerName_ = value;
                onChanged();
                return this;
            }


            public boolean hasGuildId() {
                return ((this.bitField0_ & 0x10) == 16);
            }


            public String getGuildId() {
                Object ref = this.guildId_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.guildId_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getGuildIdBytes() {
                Object ref = this.guildId_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.guildId_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setGuildId(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x10;
                this.guildId_ = value;
                onChanged();
                return this;
            }


            public Builder clearGuildId() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.guildId_ = GuildHandler.GuildInvitePush.getDefaultInstance().getGuildId();
                onChanged();
                return this;
            }


            public Builder setGuildIdBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x10;
                this.guildId_ = value;
                onChanged();
                return this;
            }


            public boolean hasGuildName() {
                return ((this.bitField0_ & 0x20) == 32);
            }


            public String getGuildName() {
                Object ref = this.guildName_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        this.guildName_ = s;
                    }
                    return s;
                }
                return (String) ref;
            }


            public ByteString getGuildNameBytes() {
                Object ref = this.guildName_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.guildName_ = b;
                    return b;
                }
                return (ByteString) ref;
            }


            public Builder setGuildName(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x20;
                this.guildName_ = value;
                onChanged();
                return this;
            }


            public Builder clearGuildName() {
                this.bitField0_ &= 0xFFFFFFDF;
                this.guildName_ = GuildHandler.GuildInvitePush.getDefaultInstance().getGuildName();
                onChanged();
                return this;
            }


            public Builder setGuildNameBytes(ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x20;
                this.guildName_ = value;
                onChanged();
                return this;
            }


            public boolean hasPlayerPro() {
                return ((this.bitField0_ & 0x40) == 64);
            }


            public int getPlayerPro() {
                return this.playerPro_;
            }


            public Builder setPlayerPro(int value) {
                this.bitField0_ |= 0x40;
                this.playerPro_ = value;
                onChanged();
                return this;
            }


            public Builder clearPlayerPro() {
                this.bitField0_ &= 0xFFFFFFBF;
                this.playerPro_ = 0;
                onChanged();
                return this;
            }


            public boolean hasGuildLevel() {
                return ((this.bitField0_ & 0x80) == 128);
            }


            public int getGuildLevel() {
                return this.guildLevel_;
            }


            public Builder setGuildLevel(int value) {
                this.bitField0_ |= 0x80;
                this.guildLevel_ = value;
                onChanged();
                return this;
            }


            public Builder clearGuildLevel() {
                this.bitField0_ &= 0xFFFFFF7F;
                this.guildLevel_ = 0;
                onChanged();
                return this;
            }
        }
    }


    public static final class OnDungeonEndPush
            extends GeneratedMessage
            implements OnDungeonEndPushOrBuilder {
        private static final OnDungeonEndPush defaultInstance = new OnDungeonEndPush(true);
        private final UnknownFieldSet unknownFields;

        private OnDungeonEndPush(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private OnDungeonEndPush(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static OnDungeonEndPush getDefaultInstance() {
            return defaultInstance;
        }

        public OnDungeonEndPush getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private OnDungeonEndPush(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 24:
                            this.bitField0_ |= 0x4;
                            this.state_ = input.readInt32();
                            break;
                        case 32:
                            this.bitField0_ |= 0x8;
                            this.leftTime_ = input.readInt32();
                            break;
                        case 42:
                            if ((mutable_bitField0_ & 0x10) != 16) {
                                this.awardItem_ = new ArrayList<>();
                                mutable_bitField0_ |= 0x10;
                            }
                            this.awardItem_.add(input.readMessage(ItemOuterClass.ItemDetail.PARSER, extensionRegistry));
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                if ((mutable_bitField0_ & 0x10) == 16) this.awardItem_ = Collections.unmodifiableList(this.awardItem_);
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_OnDungeonEndPush_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_OnDungeonEndPush_fieldAccessorTable.ensureFieldAccessorsInitialized(OnDungeonEndPush.class, Builder.class);
        }

        public static Parser<OnDungeonEndPush> PARSER = (Parser<OnDungeonEndPush>) new AbstractParser<OnDungeonEndPush>() {
            public GuildHandler.OnDungeonEndPush parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.OnDungeonEndPush(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int STATE_FIELD_NUMBER = 3;
        private int state_;
        public static final int LEFTTIME_FIELD_NUMBER = 4;
        private int leftTime_;
        public static final int AWARDITEM_FIELD_NUMBER = 5;
        private List<ItemOuterClass.ItemDetail> awardItem_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<OnDungeonEndPush> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        static {
            defaultInstance.initFields();
        }

        public boolean hasState() {
            return ((this.bitField0_ & 0x4) == 4);
        }

        public int getState() {
            return this.state_;
        }

        public boolean hasLeftTime() {
            return ((this.bitField0_ & 0x8) == 8);
        }

        public int getLeftTime() {
            return this.leftTime_;
        }

        public List<ItemOuterClass.ItemDetail> getAwardItemList() {
            return this.awardItem_;
        }

        public List<? extends ItemOuterClass.ItemDetailOrBuilder> getAwardItemOrBuilderList() {
            return (List) this.awardItem_;
        }

        public int getAwardItemCount() {
            return this.awardItem_.size();
        }

        public ItemOuterClass.ItemDetail getAwardItem(int index) {
            return this.awardItem_.get(index);
        }

        public ItemOuterClass.ItemDetailOrBuilder getAwardItemOrBuilder(int index) {
            return (ItemOuterClass.ItemDetailOrBuilder) this.awardItem_.get(index);
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.state_ = 0;
            this.leftTime_ = 0;
            this.awardItem_ = Collections.emptyList();
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasState()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasLeftTime()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            for (int i = 0; i < getAwardItemCount(); i++) {
                if (!getAwardItem(i).isInitialized()) {
                    this.memoizedIsInitialized = 0;
                    return false;
                }
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1)
                output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2)
                output.writeBytes(2, getS2CMsgBytes());
            if ((this.bitField0_ & 0x4) == 4)
                output.writeInt32(3, this.state_);
            if ((this.bitField0_ & 0x8) == 8)
                output.writeInt32(4, this.leftTime_);
            for (int i = 0; i < this.awardItem_.size(); i++)
                output.writeMessage(5, (MessageLite) this.awardItem_.get(i));
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1)
                return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1)
                size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2)
                size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            if ((this.bitField0_ & 0x4) == 4)
                size += CodedOutputStream.computeInt32Size(3, this.state_);
            if ((this.bitField0_ & 0x8) == 8)
                size += CodedOutputStream.computeInt32Size(4, this.leftTime_);
            for (int i = 0; i < this.awardItem_.size(); i++)
                size += CodedOutputStream.computeMessageSize(5, (MessageLite) this.awardItem_.get(i));
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static OnDungeonEndPush parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (OnDungeonEndPush) PARSER.parseFrom(data);
        }

        public static OnDungeonEndPush parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (OnDungeonEndPush) PARSER.parseFrom(data, extensionRegistry);
        }

        public static OnDungeonEndPush parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (OnDungeonEndPush) PARSER.parseFrom(data);
        }

        public static OnDungeonEndPush parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (OnDungeonEndPush) PARSER.parseFrom(data, extensionRegistry);
        }

        public static OnDungeonEndPush parseFrom(InputStream input) throws IOException {
            return (OnDungeonEndPush) PARSER.parseFrom(input);
        }

        public static OnDungeonEndPush parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (OnDungeonEndPush) PARSER.parseFrom(input, extensionRegistry);
        }

        public static OnDungeonEndPush parseDelimitedFrom(InputStream input) throws IOException {
            return (OnDungeonEndPush) PARSER.parseDelimitedFrom(input);
        }

        public static OnDungeonEndPush parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (OnDungeonEndPush) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static OnDungeonEndPush parseFrom(CodedInputStream input) throws IOException {
            return (OnDungeonEndPush) PARSER.parseFrom(input);
        }

        public static OnDungeonEndPush parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (OnDungeonEndPush) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(OnDungeonEndPush prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.OnDungeonEndPushOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;
            private int state_;
            private int leftTime_;
            private List<ItemOuterClass.ItemDetail> awardItem_;
            private RepeatedFieldBuilder<ItemOuterClass.ItemDetail, ItemOuterClass.ItemDetail.Builder, ItemOuterClass.ItemDetailOrBuilder> awardItemBuilder_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_OnDungeonEndPush_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_OnDungeonEndPush_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.OnDungeonEndPush.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                this.awardItem_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                this.awardItem_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.OnDungeonEndPush.alwaysUseFieldBuilders)
                    getAwardItemFieldBuilder();
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.state_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.leftTime_ = 0;
                this.bitField0_ &= 0xFFFFFFF7;
                if (this.awardItemBuilder_ == null) {
                    this.awardItem_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFEF;
                } else {
                    this.awardItemBuilder_.clear();
                }
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_OnDungeonEndPush_descriptor;
            }

            public GuildHandler.OnDungeonEndPush getDefaultInstanceForType() {
                return GuildHandler.OnDungeonEndPush.getDefaultInstance();
            }

            public GuildHandler.OnDungeonEndPush build() {
                GuildHandler.OnDungeonEndPush result = buildPartial();
                if (!result.isInitialized())
                    throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.OnDungeonEndPush buildPartial() {
                GuildHandler.OnDungeonEndPush result = new GuildHandler.OnDungeonEndPush(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1)
                    to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2)
                    to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                if ((from_bitField0_ & 0x4) == 4)
                    to_bitField0_ |= 0x4;
                result.state_ = this.state_;
                if ((from_bitField0_ & 0x8) == 8)
                    to_bitField0_ |= 0x8;
                result.leftTime_ = this.leftTime_;
                if (this.awardItemBuilder_ == null) {
                    if ((this.bitField0_ & 0x10) == 16) {
                        this.awardItem_ = Collections.unmodifiableList(this.awardItem_);
                        this.bitField0_ &= 0xFFFFFFEF;
                    }
                    result.awardItem_ = this.awardItem_;
                } else {
                    result.awardItem_ = this.awardItemBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.OnDungeonEndPush)
                    return mergeFrom((GuildHandler.OnDungeonEndPush) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.OnDungeonEndPush other) {
                if (other == GuildHandler.OnDungeonEndPush.getDefaultInstance())
                    return this;
                if (other.hasS2CCode())
                    setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (other.hasState())
                    setState(other.getState());
                if (other.hasLeftTime())
                    setLeftTime(other.getLeftTime());
                if (this.awardItemBuilder_ == null) {
                    if (!other.awardItem_.isEmpty()) {
                        if (this.awardItem_.isEmpty()) {
                            this.awardItem_ = other.awardItem_;
                            this.bitField0_ &= 0xFFFFFFEF;
                        } else {
                            ensureAwardItemIsMutable();
                            this.awardItem_.addAll(other.awardItem_);
                        }
                        onChanged();
                    }
                } else if (!other.awardItem_.isEmpty()) {
                    if (this.awardItemBuilder_.isEmpty()) {
                        this.awardItemBuilder_.dispose();
                        this.awardItemBuilder_ = null;
                        this.awardItem_ = other.awardItem_;
                        this.bitField0_ &= 0xFFFFFFEF;
                        this.awardItemBuilder_ = GuildHandler.OnDungeonEndPush.alwaysUseFieldBuilders ? getAwardItemFieldBuilder() : null;
                    } else {
                        this.awardItemBuilder_.addAllMessages(other.awardItem_);
                    }
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode())
                    return false;
                if (!hasState())
                    return false;
                if (!hasLeftTime())
                    return false;
                for (int i = 0; i < getAwardItemCount(); i++) {
                    if (!getAwardItem(i).isInitialized())
                        return false;
                }
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.OnDungeonEndPush parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.OnDungeonEndPush) GuildHandler.OnDungeonEndPush.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.OnDungeonEndPush) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null)
                        mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8())
                        this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.OnDungeonEndPush.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public boolean hasState() {
                return ((this.bitField0_ & 0x4) == 4);
            }

            public int getState() {
                return this.state_;
            }

            public Builder setState(int value) {
                this.bitField0_ |= 0x4;
                this.state_ = value;
                onChanged();
                return this;
            }

            public Builder clearState() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.state_ = 0;
                onChanged();
                return this;
            }

            public boolean hasLeftTime() {
                return ((this.bitField0_ & 0x8) == 8);
            }

            public int getLeftTime() {
                return this.leftTime_;
            }

            public Builder setLeftTime(int value) {
                this.bitField0_ |= 0x8;
                this.leftTime_ = value;
                onChanged();
                return this;
            }

            public Builder clearLeftTime() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.leftTime_ = 0;
                onChanged();
                return this;
            }

            private void ensureAwardItemIsMutable() {
                if ((this.bitField0_ & 0x10) != 16) {
                    this.awardItem_ = new ArrayList<>(this.awardItem_);
                    this.bitField0_ |= 0x10;
                }
            }

            public List<ItemOuterClass.ItemDetail> getAwardItemList() {
                if (this.awardItemBuilder_ == null)
                    return Collections.unmodifiableList(this.awardItem_);
                return this.awardItemBuilder_.getMessageList();
            }

            public int getAwardItemCount() {
                if (this.awardItemBuilder_ == null)
                    return this.awardItem_.size();
                return this.awardItemBuilder_.getCount();
            }

            public ItemOuterClass.ItemDetail getAwardItem(int index) {
                if (this.awardItemBuilder_ == null)
                    return this.awardItem_.get(index);
                return (ItemOuterClass.ItemDetail) this.awardItemBuilder_.getMessage(index);
            }

            public Builder setAwardItem(int index, ItemOuterClass.ItemDetail value) {
                if (this.awardItemBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureAwardItemIsMutable();
                    this.awardItem_.set(index, value);
                    onChanged();
                } else {
                    this.awardItemBuilder_.setMessage(index, (GeneratedMessage) value);
                }
                return this;
            }

            public Builder setAwardItem(int index, ItemOuterClass.ItemDetail.Builder builderForValue) {
                if (this.awardItemBuilder_ == null) {
                    ensureAwardItemIsMutable();
                    this.awardItem_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    this.awardItemBuilder_.setMessage(index, (GeneratedMessage) builderForValue.build());
                }
                return this;
            }

            public Builder addAwardItem(ItemOuterClass.ItemDetail value) {
                if (this.awardItemBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureAwardItemIsMutable();
                    this.awardItem_.add(value);
                    onChanged();
                } else {
                    this.awardItemBuilder_.addMessage((GeneratedMessage) value);
                }
                return this;
            }

            public Builder addAwardItem(int index, ItemOuterClass.ItemDetail value) {
                if (this.awardItemBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureAwardItemIsMutable();
                    this.awardItem_.add(index, value);
                    onChanged();
                } else {
                    this.awardItemBuilder_.addMessage(index, (GeneratedMessage) value);
                }
                return this;
            }

            public Builder addAwardItem(ItemOuterClass.ItemDetail.Builder builderForValue) {
                if (this.awardItemBuilder_ == null) {
                    ensureAwardItemIsMutable();
                    this.awardItem_.add(builderForValue.build());
                    onChanged();
                } else {
                    this.awardItemBuilder_.addMessage((GeneratedMessage) builderForValue.build());
                }
                return this;
            }

            public Builder addAwardItem(int index, ItemOuterClass.ItemDetail.Builder builderForValue) {
                if (this.awardItemBuilder_ == null) {
                    ensureAwardItemIsMutable();
                    this.awardItem_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    this.awardItemBuilder_.addMessage(index, (GeneratedMessage) builderForValue.build());
                }
                return this;
            }

            public Builder addAllAwardItem(Iterable<? extends ItemOuterClass.ItemDetail> values) {
                if (this.awardItemBuilder_ == null) {
                    ensureAwardItemIsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.awardItem_);
                    onChanged();
                } else {
                    this.awardItemBuilder_.addAllMessages(values);
                }
                return this;
            }

            public Builder clearAwardItem() {
                if (this.awardItemBuilder_ == null) {
                    this.awardItem_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFEF;
                    onChanged();
                } else {
                    this.awardItemBuilder_.clear();
                }
                return this;
            }

            public Builder removeAwardItem(int index) {
                if (this.awardItemBuilder_ == null) {
                    ensureAwardItemIsMutable();
                    this.awardItem_.remove(index);
                    onChanged();
                } else {
                    this.awardItemBuilder_.remove(index);
                }
                return this;
            }

            public ItemOuterClass.ItemDetail.Builder getAwardItemBuilder(int index) {
                return (ItemOuterClass.ItemDetail.Builder) getAwardItemFieldBuilder().getBuilder(index);
            }

            public ItemOuterClass.ItemDetailOrBuilder getAwardItemOrBuilder(int index) {
                if (this.awardItemBuilder_ == null)
                    return (ItemOuterClass.ItemDetailOrBuilder) this.awardItem_.get(index);
                return (ItemOuterClass.ItemDetailOrBuilder) this.awardItemBuilder_.getMessageOrBuilder(index);
            }

            public List<? extends ItemOuterClass.ItemDetailOrBuilder> getAwardItemOrBuilderList() {
                if (this.awardItemBuilder_ != null)
                    return this.awardItemBuilder_.getMessageOrBuilderList();
                return (List) Collections.unmodifiableList(this.awardItem_);
            }

            public ItemOuterClass.ItemDetail.Builder addAwardItemBuilder() {
                return (ItemOuterClass.ItemDetail.Builder) getAwardItemFieldBuilder().addBuilder((GeneratedMessage) ItemOuterClass.ItemDetail.getDefaultInstance());
            }

            public ItemOuterClass.ItemDetail.Builder addAwardItemBuilder(int index) {
                return (ItemOuterClass.ItemDetail.Builder) getAwardItemFieldBuilder().addBuilder(index, (GeneratedMessage) ItemOuterClass.ItemDetail.getDefaultInstance());
            }

            public List<ItemOuterClass.ItemDetail.Builder> getAwardItemBuilderList() {
                return getAwardItemFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilder<ItemOuterClass.ItemDetail, ItemOuterClass.ItemDetail.Builder, ItemOuterClass.ItemDetailOrBuilder> getAwardItemFieldBuilder() {
                if (this.awardItemBuilder_ == null) {
                    this.awardItemBuilder_ = new RepeatedFieldBuilder(this.awardItem_, ((this.bitField0_ & 0x10) == 16), getParentForChildren(), isClean());
                    this.awardItem_ = null;
                }
                return this.awardItemBuilder_;
            }
        }
    }

    public static final class GuildDungeonOpenPush extends GeneratedMessage implements GuildDungeonOpenPushOrBuilder {
        private static final GuildDungeonOpenPush defaultInstance = new GuildDungeonOpenPush(true);
        private final UnknownFieldSet unknownFields;

        private GuildDungeonOpenPush(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private GuildDungeonOpenPush(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static GuildDungeonOpenPush getDefaultInstance() {
            return defaultInstance;
        }

        public GuildDungeonOpenPush getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private GuildDungeonOpenPush(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_GuildDungeonOpenPush_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_GuildDungeonOpenPush_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildDungeonOpenPush.class, Builder.class);
        }

        public static Parser<GuildDungeonOpenPush> PARSER = (Parser<GuildDungeonOpenPush>) new AbstractParser<GuildDungeonOpenPush>() {
            public GuildHandler.GuildDungeonOpenPush parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.GuildDungeonOpenPush(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<GuildDungeonOpenPush> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static GuildDungeonOpenPush parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (GuildDungeonOpenPush) PARSER.parseFrom(data);
        }

        public static GuildDungeonOpenPush parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GuildDungeonOpenPush) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GuildDungeonOpenPush parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (GuildDungeonOpenPush) PARSER.parseFrom(data);
        }

        public static GuildDungeonOpenPush parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GuildDungeonOpenPush) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GuildDungeonOpenPush parseFrom(InputStream input) throws IOException {
            return (GuildDungeonOpenPush) PARSER.parseFrom(input);
        }

        public static GuildDungeonOpenPush parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GuildDungeonOpenPush) PARSER.parseFrom(input, extensionRegistry);
        }

        public static GuildDungeonOpenPush parseDelimitedFrom(InputStream input) throws IOException {
            return (GuildDungeonOpenPush) PARSER.parseDelimitedFrom(input);
        }

        public static GuildDungeonOpenPush parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GuildDungeonOpenPush) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static GuildDungeonOpenPush parseFrom(CodedInputStream input) throws IOException {
            return (GuildDungeonOpenPush) PARSER.parseFrom(input);
        }

        public static GuildDungeonOpenPush parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GuildDungeonOpenPush) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(GuildDungeonOpenPush prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.GuildDungeonOpenPushOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_GuildDungeonOpenPush_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_GuildDungeonOpenPush_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.GuildDungeonOpenPush.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.GuildDungeonOpenPush.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_GuildDungeonOpenPush_descriptor;
            }

            public GuildHandler.GuildDungeonOpenPush getDefaultInstanceForType() {
                return GuildHandler.GuildDungeonOpenPush.getDefaultInstance();
            }

            public GuildHandler.GuildDungeonOpenPush build() {
                GuildHandler.GuildDungeonOpenPush result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.GuildDungeonOpenPush buildPartial() {
                GuildHandler.GuildDungeonOpenPush result = new GuildHandler.GuildDungeonOpenPush(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.GuildDungeonOpenPush)
                    return mergeFrom((GuildHandler.GuildDungeonOpenPush) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.GuildDungeonOpenPush other) {
                if (other == GuildHandler.GuildDungeonOpenPush.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.GuildDungeonOpenPush parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.GuildDungeonOpenPush) GuildHandler.GuildDungeonOpenPush.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.GuildDungeonOpenPush) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.GuildDungeonOpenPush.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }
    }


    public static final class GuildDungeonPassPush
            extends GeneratedMessage
            implements GuildDungeonPassPushOrBuilder {
        private static final GuildDungeonPassPush defaultInstance = new GuildDungeonPassPush(true);
        private final UnknownFieldSet unknownFields;

        private GuildDungeonPassPush(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private GuildDungeonPassPush(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static GuildDungeonPassPush getDefaultInstance() {
            return defaultInstance;
        }

        public GuildDungeonPassPush getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private GuildDungeonPassPush(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 24:
                            this.bitField0_ |= 0x4;
                            this.dungeonCount_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_GuildDungeonPassPush_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_GuildDungeonPassPush_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildDungeonPassPush.class, Builder.class);
        }

        public static Parser<GuildDungeonPassPush> PARSER = (Parser<GuildDungeonPassPush>) new AbstractParser<GuildDungeonPassPush>() {
            public GuildHandler.GuildDungeonPassPush parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.GuildDungeonPassPush(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int DUNGEONCOUNT_FIELD_NUMBER = 3;
        private int dungeonCount_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<GuildDungeonPassPush> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasDungeonCount() {
            return ((this.bitField0_ & 0x4) == 4);
        }

        public int getDungeonCount() {
            return this.dungeonCount_;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.dungeonCount_ = 0;
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasDungeonCount()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            if ((this.bitField0_ & 0x4) == 4) output.writeInt32(3, this.dungeonCount_);
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            if ((this.bitField0_ & 0x4) == 4) size += CodedOutputStream.computeInt32Size(3, this.dungeonCount_);
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static GuildDungeonPassPush parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (GuildDungeonPassPush) PARSER.parseFrom(data);
        }

        public static GuildDungeonPassPush parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GuildDungeonPassPush) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GuildDungeonPassPush parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (GuildDungeonPassPush) PARSER.parseFrom(data);
        }

        public static GuildDungeonPassPush parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GuildDungeonPassPush) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GuildDungeonPassPush parseFrom(InputStream input) throws IOException {
            return (GuildDungeonPassPush) PARSER.parseFrom(input);
        }

        public static GuildDungeonPassPush parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GuildDungeonPassPush) PARSER.parseFrom(input, extensionRegistry);
        }

        public static GuildDungeonPassPush parseDelimitedFrom(InputStream input) throws IOException {
            return (GuildDungeonPassPush) PARSER.parseDelimitedFrom(input);
        }

        public static GuildDungeonPassPush parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GuildDungeonPassPush) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static GuildDungeonPassPush parseFrom(CodedInputStream input) throws IOException {
            return (GuildDungeonPassPush) PARSER.parseFrom(input);
        }

        public static GuildDungeonPassPush parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GuildDungeonPassPush) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(GuildDungeonPassPush prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.GuildDungeonPassPushOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;
            private int dungeonCount_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_GuildDungeonPassPush_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_GuildDungeonPassPush_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.GuildDungeonPassPush.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.GuildDungeonPassPush.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.dungeonCount_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_GuildDungeonPassPush_descriptor;
            }

            public GuildHandler.GuildDungeonPassPush getDefaultInstanceForType() {
                return GuildHandler.GuildDungeonPassPush.getDefaultInstance();
            }

            public GuildHandler.GuildDungeonPassPush build() {
                GuildHandler.GuildDungeonPassPush result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.GuildDungeonPassPush buildPartial() {
                GuildHandler.GuildDungeonPassPush result = new GuildHandler.GuildDungeonPassPush(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                if ((from_bitField0_ & 0x4) == 4) to_bitField0_ |= 0x4;
                result.dungeonCount_ = this.dungeonCount_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.GuildDungeonPassPush)
                    return mergeFrom((GuildHandler.GuildDungeonPassPush) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.GuildDungeonPassPush other) {
                if (other == GuildHandler.GuildDungeonPassPush.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (other.hasDungeonCount()) setDungeonCount(other.getDungeonCount());
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                if (!hasDungeonCount()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.GuildDungeonPassPush parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.GuildDungeonPassPush) GuildHandler.GuildDungeonPassPush.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.GuildDungeonPassPush) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.GuildDungeonPassPush.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public boolean hasDungeonCount() {
                return ((this.bitField0_ & 0x4) == 4);
            }

            public int getDungeonCount() {
                return this.dungeonCount_;
            }

            public Builder setDungeonCount(int value) {
                this.bitField0_ |= 0x4;
                this.dungeonCount_ = value;
                onChanged();
                return this;
            }

            public Builder clearDungeonCount() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.dungeonCount_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static final class GuildDungeonPlayerNumPush
            extends GeneratedMessage
            implements GuildDungeonPlayerNumPushOrBuilder {
        private static final GuildDungeonPlayerNumPush defaultInstance = new GuildDungeonPlayerNumPush(true);
        private final UnknownFieldSet unknownFields;

        private GuildDungeonPlayerNumPush(GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private GuildDungeonPlayerNumPush(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static GuildDungeonPlayerNumPush getDefaultInstance() {
            return defaultInstance;
        }

        public GuildDungeonPlayerNumPush getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private GuildDungeonPlayerNumPush(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    ByteString bs;
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8:
                            this.bitField0_ |= 0x1;
                            this.s2CCode_ = input.readInt32();
                            break;
                        case 18:
                            bs = input.readBytes();
                            this.bitField0_ |= 0x2;
                            this.s2CMsg_ = bs;
                            break;
                        case 24:
                            this.bitField0_ |= 0x4;
                            this.playerNum_ = input.readInt32();
                            break;
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return GuildHandler.internal_static_pomelo_area_GuildDungeonPlayerNumPush_descriptor;
        }

        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return GuildHandler.internal_static_pomelo_area_GuildDungeonPlayerNumPush_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildDungeonPlayerNumPush.class, Builder.class);
        }

        public static Parser<GuildDungeonPlayerNumPush> PARSER = (Parser<GuildDungeonPlayerNumPush>) new AbstractParser<GuildDungeonPlayerNumPush>() {
            public GuildHandler.GuildDungeonPlayerNumPush parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new GuildHandler.GuildDungeonPlayerNumPush(input, extensionRegistry);
            }
        };
        private int bitField0_;
        public static final int S2C_CODE_FIELD_NUMBER = 1;
        private int s2CCode_;
        public static final int S2C_MSG_FIELD_NUMBER = 2;
        private Object s2CMsg_;
        public static final int PLAYERNUM_FIELD_NUMBER = 3;
        private int playerNum_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;

        public Parser<GuildDungeonPlayerNumPush> getParserForType() {
            return PARSER;
        }

        public boolean hasS2CCode() {
            return ((this.bitField0_ & 0x1) == 1);
        }

        public int getS2CCode() {
            return this.s2CCode_;
        }

        public boolean hasS2CMsg() {
            return ((this.bitField0_ & 0x2) == 2);
        }

        public String getS2CMsg() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) return (String) ref;
            ByteString bs = (ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) this.s2CMsg_ = s;
            return s;
        }

        public ByteString getS2CMsgBytes() {
            Object ref = this.s2CMsg_;
            if (ref instanceof String) {
                ByteString b = ByteString.copyFromUtf8((String) ref);
                this.s2CMsg_ = b;
                return b;
            }
            return (ByteString) ref;
        }

        public boolean hasPlayerNum() {
            return ((this.bitField0_ & 0x4) == 4);
        }

        public int getPlayerNum() {
            return this.playerNum_;
        }

        private void initFields() {
            this.s2CCode_ = 0;
            this.s2CMsg_ = "";
            this.playerNum_ = 0;
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;
            if (!hasS2CCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!hasPlayerNum()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());
            if ((this.bitField0_ & 0x4) == 4) output.writeInt32(3, this.playerNum_);
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) return size;
            size = 0;
            if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
            if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
            if ((this.bitField0_ & 0x4) == 4) size += CodedOutputStream.computeInt32Size(3, this.playerNum_);
            size += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
        }

        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }

        public static GuildDungeonPlayerNumPush parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (GuildDungeonPlayerNumPush) PARSER.parseFrom(data);
        }

        public static GuildDungeonPlayerNumPush parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GuildDungeonPlayerNumPush) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GuildDungeonPlayerNumPush parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (GuildDungeonPlayerNumPush) PARSER.parseFrom(data);
        }

        public static GuildDungeonPlayerNumPush parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GuildDungeonPlayerNumPush) PARSER.parseFrom(data, extensionRegistry);
        }

        public static GuildDungeonPlayerNumPush parseFrom(InputStream input) throws IOException {
            return (GuildDungeonPlayerNumPush) PARSER.parseFrom(input);
        }

        public static GuildDungeonPlayerNumPush parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GuildDungeonPlayerNumPush) PARSER.parseFrom(input, extensionRegistry);
        }

        public static GuildDungeonPlayerNumPush parseDelimitedFrom(InputStream input) throws IOException {
            return (GuildDungeonPlayerNumPush) PARSER.parseDelimitedFrom(input);
        }

        public static GuildDungeonPlayerNumPush parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GuildDungeonPlayerNumPush) PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static GuildDungeonPlayerNumPush parseFrom(CodedInputStream input) throws IOException {
            return (GuildDungeonPlayerNumPush) PARSER.parseFrom(input);
        }

        public static GuildDungeonPlayerNumPush parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GuildDungeonPlayerNumPush) PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(GuildDungeonPlayerNumPush prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildHandler.GuildDungeonPlayerNumPushOrBuilder {
            private int bitField0_;
            private int s2CCode_;
            private Object s2CMsg_;
            private int playerNum_;

            public static final Descriptors.Descriptor getDescriptor() {
                return GuildHandler.internal_static_pomelo_area_GuildDungeonPlayerNumPush_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return GuildHandler.internal_static_pomelo_area_GuildDungeonPlayerNumPush_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildHandler.GuildDungeonPlayerNumPush.class, Builder.class);
            }

            private Builder() {
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
                super(parent);
                this.s2CMsg_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GuildHandler.GuildDungeonPlayerNumPush.alwaysUseFieldBuilders) ;
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                this.s2CCode_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CMsg_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.playerNum_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return GuildHandler.internal_static_pomelo_area_GuildDungeonPlayerNumPush_descriptor;
            }

            public GuildHandler.GuildDungeonPlayerNumPush getDefaultInstanceForType() {
                return GuildHandler.GuildDungeonPlayerNumPush.getDefaultInstance();
            }

            public GuildHandler.GuildDungeonPlayerNumPush build() {
                GuildHandler.GuildDungeonPlayerNumPush result = buildPartial();
                if (!result.isInitialized()) throw newUninitializedMessageException(result);
                return result;
            }

            public GuildHandler.GuildDungeonPlayerNumPush buildPartial() {
                GuildHandler.GuildDungeonPlayerNumPush result = new GuildHandler.GuildDungeonPlayerNumPush(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;
                result.s2CCode_ = this.s2CCode_;
                if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;
                result.s2CMsg_ = this.s2CMsg_;
                if ((from_bitField0_ & 0x4) == 4) to_bitField0_ |= 0x4;
                result.playerNum_ = this.playerNum_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof GuildHandler.GuildDungeonPlayerNumPush)
                    return mergeFrom((GuildHandler.GuildDungeonPlayerNumPush) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(GuildHandler.GuildDungeonPlayerNumPush other) {
                if (other == GuildHandler.GuildDungeonPlayerNumPush.getDefaultInstance()) return this;
                if (other.hasS2CCode()) setS2CCode(other.getS2CCode());
                if (other.hasS2CMsg()) {
                    this.bitField0_ |= 0x2;
                    this.s2CMsg_ = other.s2CMsg_;
                    onChanged();
                }
                if (other.hasPlayerNum()) setPlayerNum(other.getPlayerNum());
                mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasS2CCode()) return false;
                if (!hasPlayerNum()) return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                GuildHandler.GuildDungeonPlayerNumPush parsedMessage = null;
                try {
                    parsedMessage = (GuildHandler.GuildDungeonPlayerNumPush) GuildHandler.GuildDungeonPlayerNumPush.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (GuildHandler.GuildDungeonPlayerNumPush) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasS2CCode() {
                return ((this.bitField0_ & 0x1) == 1);
            }

            public int getS2CCode() {
                return this.s2CCode_;
            }

            public Builder setS2CCode(int value) {
                this.bitField0_ |= 0x1;
                this.s2CCode_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CCode() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.s2CCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasS2CMsg() {
                return ((this.bitField0_ & 0x2) == 2);
            }

            public String getS2CMsg() {
                Object ref = this.s2CMsg_;
                if (!(ref instanceof String)) {
                    ByteString bs = (ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) this.s2CMsg_ = s;
                    return s;
                }
                return (String) ref;
            }

            public ByteString getS2CMsgBytes() {
                Object ref = this.s2CMsg_;
                if (ref instanceof String) {
                    ByteString b = ByteString.copyFromUtf8((String) ref);
                    this.s2CMsg_ = b;
                    return b;
                }
                return (ByteString) ref;
            }

            public Builder setS2CMsg(String value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public Builder clearS2CMsg() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.s2CMsg_ = GuildHandler.GuildDungeonPlayerNumPush.getDefaultInstance().getS2CMsg();
                onChanged();
                return this;
            }

            public Builder setS2CMsgBytes(ByteString value) {
                if (value == null) throw new NullPointerException();
                this.bitField0_ |= 0x2;
                this.s2CMsg_ = value;
                onChanged();
                return this;
            }

            public boolean hasPlayerNum() {
                return ((this.bitField0_ & 0x4) == 4);
            }

            public int getPlayerNum() {
                return this.playerNum_;
            }

            public Builder setPlayerNum(int value) {
                this.bitField0_ |= 0x4;
                this.playerNum_ = value;
                onChanged();
                return this;
            }

            public Builder clearPlayerNum() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.playerNum_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            defaultInstance.initFields();
        }

    }


    public static Descriptors.FileDescriptor getDescriptor() {
        return descriptor;
    }


    static {
        String[] descriptorData = {"\n\022guildHandler.proto\022\013pomelo.area\032\nitem.proto\032\fcommon.proto\"M\n\022CreateGuildRequest\022\020\n\bc2s_icon\030\001 \001(\t\022\020\n\bc2s_name\030\002 \001(\t\022\023\n\013c2s_qqGroup\030\003 \001(\t\"'\n\023GetGuildListRequest\022\020\n\bc2s_name\030\001 \001(\t\"'\n\020JoinGuildRequest\022\023\n\013c2s_guildId\030\001 \001(\t\"0\n\030JoinGuildOfPlayerRequest\022\024\n\fc2s_playerId\030\001 \001(\t\"6\n\036InvitePlayerJoinMyGuildRequest\022\024\n\fc2s_playerId\030\001 \001(\t\"\\\n\032AgreeOrRefuseInviteRequest\022\023\n\013c2s_isAgree\030\001 \002(\005\022\024\n\fc2s_inviteId\030\002 \002(\t\022", "\023\n\013c2s_guildId\030\003 \002(\t\"<\n\020DealApplyRequest\022\023\n\013c2s_applyId\030\001 \001(\t\022\023\n\013c2s_operate\030\002 \001(\005\"\027\n\025GetMyGuildInfoRequest\"\032\n\030GetMyGuildMembersRequest\"\025\n\023GetApplyListRequest\"R\n\023SetGuildInfoRequest\022\022\n\nentryLevel\030\001 \001(\005\022\021\n\tguildMode\030\002 \001(\005\022\024\n\fentryUpLevel\030\004 \001(\005\")\n\026SetGuildQQGroupRequest\022\017\n\007qqGroup\030\003 \001(\t\"\022\n\020ExitGuildRequest\"%\n\021KickMemberRequest\022\020\n\bmemberId\030\001 \001(\t\"\032\n\030UpgradeGuildLevelRequest\"*\n\030ChangeGuildNoticeRequest", "\022\016\n\006notice\030\001 \001(\t\"&\n\026ChangeGuildNameRequest\022\f\n\004name\030\001 \001(\t\"'\n\nOfficeName\022\013\n\003job\030\001 \001(\005\022\f\n\004name\030\002 \001(\t\"G\n\027ChangeOfficeNameRequest\022,\n\013officeNames\030\001 \003(\0132\027.pomelo.area.OfficeName\"7\n\030ContributeToGuildRequest\022\f\n\004type\030\001 \001(\005\022\r\n\005times\030\002 \001(\005\"4\n\023SetMemberJobRequest\022\020\n\bmemberId\030\001 \001(\t\022\013\n\003job\030\002 \001(\005\",\n\030TransferPresidentRequest\022\020\n\bmemberId\030\001 \001(\t\"%\n\025GetGuildRecordRequest\022\f\n\004page\030\001 \001(\005\"\036\n\034ImpeachGuildPresidentRequest\"\026", "\n\024GetGuildMoneyRequest\"¡\002\n\rGuildBaseInfo\022\017\n\007guildId\030\001 \001(\t\022\f\n\004name\030\002 \001(\t\022\r\n\005level\030\003 \001(\005\022\023\n\013presidentId\030\004 \001(\t\022\025\n\rpresidentName\030\005 \001(\t\022\021\n\tmemberNum\030\006 \001(\005\022\021\n\tmemberMax\030\007 \001(\005\022\022\n\nentryLevel\030\b \001(\005\022\021\n\tguildMode\030\t \001(\005\022\021\n\tguildIcon\030\n \001(\t\022\024\n\fpresidentPro\030\013 \001(\005\022\026\n\016presidentLevel\030\f \001(\005\022\024\n\fentryUpLevel\030\r \001(\005\022\022\n\ncreateTime\030\016 \001(\t\"M\n\tGuildInfo\022,\n\bbaseInfo\030\001 \001(\0132\032.pomelo.area.GuildBaseInfo\022\022\n\napplyState\030\002 \001(\005\"D\n\023Con", "tributeTimesInfo\022\f\n\004type\030\001 \001(\005\022\r\n\005times\030\002 \001(\005\022\020\n\bmaxTimes\030\003 \001(\005\"{\n\020MyContributeInfo\022\031\n\021currentContribute\030\001 \001(\005\022\027\n\017totalContribute\030\002 \001(\005\0223\n\ttimesList\030\003 \003(\0132 .pomelo.area.ContributeTimesInfo\"ñ\001\n\013MyGuildInfo\022,\n\bbaseInfo\030\001 \001(\0132\032.pomelo.area.GuildBaseInfo\022\016\n\006notice\030\002 \001(\t\022\f\n\004fund\030\003 \001(\005\022\017\n\007qqGroup\030\004 \001(\t\022-\n\006myInfo\030\005 \001(\0132\035.pomelo.area.MyContributeInfo\022\033\n\023changeNamePassedDay\030\006 \001(\005\022,\n\013officeNames\030\007 \003(\0132\027.pom", "elo.area.OfficeName\022\013\n\003exp\030\b \001(\005\"ý\001\n\nMemberInfo\022\020\n\bplayerId\030\001 \001(\t\022\013\n\003pro\030\002 \001(\005\022\f\n\004name\030\003 \001(\t\022\r\n\005level\030\004 \001(\005\022\017\n\007upLevel\030\005 \001(\005\022\013\n\003job\030\006 \001(\005\022\017\n\007jobName\030\007 \001(\t\022\020\n\bjoinTime\030\b \001(\t\022\031\n\021currentContribute\030\t \001(\005\022\027\n\017totalContribute\030\n \001(\005\022\023\n\013onlineState\030\013 \001(\005\022\026\n\016lastActiveTime\030\f \001(\005\022\021\n\tguildName\030\r \001(\t\"\001\n\tApplyInfo\022\017\n\007applyId\030\001 \001(\t\022\020\n\bplayerId\030\002 \001(\t\022\013\n\003pro\030\003 \001(\005\022\f\n\004name\030\004 \001(\t\022\r\n\005level\030\005 \001(\005\022\022\n\nfightPower\030\006 \001(\005\022", "\017\n\007upLevel\030\007 \001(\005\022\022\n\ncreateTime\030\b \001(\t\"i\n\023CreateGuildResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022/\n\rs2c_guildInfo\030\003 \001(\0132\030.pomelo.area.MyGuildInfo\"h\n\024GetGuildListResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022-\n\rs2c_guildList\030\003 \003(\0132\026.pomelo.area.GuildInfo\"6\n\021JoinGuildResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\">\n\031JoinGuildOfPlayerResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\"D\n\037InvitePlayerJoinMyGuildResp", "onse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\"@\n\033AgreeOrRefuseInviteResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\"6\n\021DealApplyResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\"l\n\026GetMyGuildInfoResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022/\n\rs2c_guildInfo\030\003 \001(\0132\030.pomelo.area.MyGuildInfo\"\001\n\031GetMyGuildMembersResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022/\n\016s2c_memberList\030\003 \003(\0132\027.pomelo.area.MemberInfo\022\027\n\017s2c_leftKic", "kNum\030\004 \001(\005\"h\n\024GetApplyListResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022-\n\rs2c_applyList\030\003 \003(\0132\026.pomelo.area.ApplyInfo\"9\n\024SetGuildInfoResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\"<\n\027SetGuildQQGroupResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\"6\n\021ExitGuildResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\"P\n\022KickMemberResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022\027\n\017s2c_leftKickNum\030\003 \001(\005\"o\n\031UpgradeGuildLevelResp", "onse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022/\n\rs2c_guildInfo\030\003 \001(\0132\030.pomelo.area.MyGuildInfo\"R\n\031ChangeGuildNoticeResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022\022\n\ns2c_notice\030\003 \001(\t\"<\n\027ChangeGuildNameResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\"=\n\030ChangeOfficeNameResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\"o\n\031ContributeToGuildResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022/\n\rs2c_guildInfo\030\003 \001(\0132\030.pomelo.area.M", "yGuildInfo\"9\n\024SetMemberJobResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\" \001\n\031TransferPresidentResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022/\n\016s2c_memberList\030\003 \003(\0132\027.pomelo.area.MemberInfo\022/\n\rs2c_guildInfo\030\004 \001(\0132\030.pomelo.area.MyGuildInfo\"%\n\bRoleInfo\022\013\n\003pro\030\001 \001(\005\022\f\n\004name\030\002 \001(\t\"¯\001\n\nRecordInfo\022$\n\005role1\030\001 \001(\0132\025.pomelo.area.RoleInfo\022$\n\005role2\030\002 \001(\0132\025.pomelo.area.RoleInfo\022\021\n\tresultNum\030\003 \001(\005\022\021\n\tresultStr\030\004 \001(\t", "\022\f\n\004time\030\005 \001(\t\022\022\n\nrecordType\030\006 \001(\005\022\r\n\005build\030\007 \001(\t\"~\n\026GetGuildRecordResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022\020\n\bs2c_page\030\003 \001(\005\022/\n\016s2c_recordList\030\004 \003(\0132\027.pomelo.area.RecordInfo\"Q\n\035ImpeachGuildPresidentResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022\r\n\005isNew\030\003 \001(\005\"i\n\025GetGuildMoneyResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022\024\n\fdepositCount\030\003 \001(\005\022\027\n\017depositCountMax\030\004 \001(\005\"+\n\027JoinGuildDungeonRequest\022\020\n\bc2", "s_type\030\001 \002(\005\"O\n\030JoinGuildDungeonResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022\020\n\bs2c_type\030\003 \001(\005\"\032\n\030LeaveGuildDungeonRequest\">\n\031LeaveGuildDungeonResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\"¸\001\n\020GuildRefreshPush\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022\f\n\004isIn\030\003 \001(\005\022\r\n\005isOut\030\004 \001(\005\022\013\n\003job\030\005 \001(\005\022\017\n\007jobName\030\006 \001(\t\022\021\n\tguildName\030\007 \001(\t\0223\n\ttimesList\030\b \003(\0132 .pomelo.area.ContributeTimesInfo\"¥\001\n\017GuildInvitePush\022\020\n\bs2c_", "code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022\020\n\bplayerId\030\003 \001(\t\022\022\n\nplayerName\030\004 \001(\t\022\017\n\007guildId\030\005 \001(\t\022\021\n\tguildName\030\006 \001(\t\022\021\n\tplayerPro\030\007 \001(\005\022\022\n\nguildLevel\030\b \001(\005\"\001\n\020OnDungeonEndPush\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022\r\n\005state\030\003 \002(\005\022\020\n\bleftTime\030\004 \002(\005\022*\n\tawardItem\030\005 \003(\0132\027.pomelo.item.ItemDetail\"9\n\024GuildDungeonOpenPush\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\"O\n\024GuildDungeonPassPush\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022\024\n\fdunge", "onCount\030\003 \002(\005\"Q\n\031GuildDungeonPlayerNumPush\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022\021\n\tplayerNum\030\003 \002(\005**\n\tGuildMode\022\r\n\tAUTO_MODE\020\001\022\016\n\nCHECK_MODE\020\002*O\n\bGuildJob\022\r\n\tPRESIDENT\020\001\022\022\n\016VICE_PRESIDENT\020\002\022\t\n\005ELDER\020\003\022\t\n\005ELITE\020\004\022\n\n\006MEMBER\020\0052µ\024\n\fguildHandler\022W\n\022createGuildRequest\022\037.pomelo.area.CreateGuildRequest\032 .pomelo.area.CreateGuildResponse\022Z\n\023getGuildListRequest\022 .pomelo.area.GetGuildListRequest\032!.pomelo.area.G", "etGuildListResponse\022Q\n\020joinGuildRequest\022\035.pomelo.area.JoinGuildRequest\032\036.pomelo.area.JoinGuildResponse\022i\n\030joinGuildOfPlayerRequest\022%.pomelo.area.JoinGuildOfPlayerRequest\032&.pomelo.area.JoinGuildOfPlayerResponse\022{\n\036invitePlayerJoinMyGuildRequest\022+.pomelo.area.InvitePlayerJoinMyGuildRequest\032,.pomelo.area.InvitePlayerJoinMyGuildResponse\022o\n\032agreeOrRefuseInviteRequest\022'.pomelo.area.AgreeOrRefuseInviteRe", "quest\032(.pomelo.area.AgreeOrRefuseInviteResponse\022Q\n\020dealApplyRequest\022\035.pomelo.area.DealApplyRequest\032\036.pomelo.area.DealApplyResponse\022`\n\025getMyGuildInfoRequest\022\".pomelo.area.GetMyGuildInfoRequest\032#.pomelo.area.GetMyGuildInfoResponse\022i\n\030getMyGuildMembersRequest\022%.pomelo.area.GetMyGuildMembersRequest\032&.pomelo.area.GetMyGuildMembersResponse\022Z\n\023getApplyListRequest\022 .pomelo.area.GetApplyListRequest\032!.pomel", "o.area.GetApplyListResponse\022Z\n\023setGuildInfoRequest\022 .pomelo.area.SetGuildInfoRequest\032!.pomelo.area.SetGuildInfoResponse\022c\n\026setGuildQQGroupRequest\022#.pomelo.area.SetGuildQQGroupRequest\032$.pomelo.area.SetGuildQQGroupResponse\022Q\n\020exitGuildRequest\022\035.pomelo.area.ExitGuildRequest\032\036.pomelo.area.ExitGuildResponse\022T\n\021kickMemberRequest\022\036.pomelo.area.KickMemberRequest\032\037.pomelo.area.KickMemberResponse\022i\n\030upgrade", "GuildLevelRequest\022%.pomelo.area.UpgradeGuildLevelRequest\032&.pomelo.area.UpgradeGuildLevelResponse\022i\n\030changeGuildNoticeRequest\022%.pomelo.area.ChangeGuildNoticeRequest\032&.pomelo.area.ChangeGuildNoticeResponse\022c\n\026changeGuildNameRequest\022#.pomelo.area.ChangeGuildNameRequest\032$.pomelo.area.ChangeGuildNameResponse\022f\n\027changeOfficeNameRequest\022$.pomelo.area.ChangeOfficeNameRequest\032%.pomelo.area.ChangeOfficeName", "Response\022i\n\030contributeToGuildRequest\022%.pomelo.area.ContributeToGuildRequest\032&.pomelo.area.ContributeToGuildResponse\022Z\n\023setMemberJobRequest\022 .pomelo.area.SetMemberJobRequest\032!.pomelo.area.SetMemberJobResponse\022i\n\030transferPresidentRequest\022%.pomelo.area.TransferPresidentRequest\032&.pomelo.area.TransferPresidentResponse\022`\n\025getGuildRecordRequest\022\".pomelo.area.GetGuildRecordRequest\032#.pomelo.area.GetGuildRe", "cordResponse\022u\n\034impeachGuildPresidentRequest\022).pomelo.area.ImpeachGuildPresidentRequest\032*.pomelo.area.ImpeachGuildPresidentResponse\022]\n\024getGuildMoneyRequest\022!.pomelo.area.GetGuildMoneyRequest\032\".pomelo.area.GetGuildMoneyResponse\022f\n\027joinGuildDungeonRequest\022$.pomelo.area.JoinGuildDungeonRequest\032%.pomelo.area.JoinGuildDungeonResponse\022i\n\030leaveGuildDungeonRequest\022%.pomelo.area.LeaveGuildDungeonRequest\032&.", "pomelo.area.LeaveGuildDungeonResponse2±\003\n\tguildPush\022?\n\020guildRefreshPush\022\035.pomelo.area.GuildRefreshPush\032\f.pomelo.Void\022=\n\017guildInvitePush\022\034.pomelo.area.GuildInvitePush\032\f.pomelo.Void\022?\n\020onDungeonEndPush\022\035.pomelo.area.OnDungeonEndPush\032\f.pomelo.Void\022G\n\024guildDungeonOpenPush\022!.pomelo.area.GuildDungeonOpenPush\032\f.pomelo.Void\022G\n\024guildDungeonPassPush\022!.pomelo.area.GuildDungeonPassPush\032\f.pomelo.Void\022Q\n\031guildD", "ungeonPlayerNumPush\022&.pomelo.area.GuildDungeonPlayerNumPush\032\f.pomelo.Void"};


        Descriptors.FileDescriptor.InternalDescriptorAssigner assigner = new Descriptors.FileDescriptor.InternalDescriptorAssigner() {
            public ExtensionRegistry assignDescriptors(Descriptors.FileDescriptor root) {
                GuildHandler.descriptor = root;
                return null;
            }
        };

        Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData, new Descriptors.FileDescriptor[]{

                ItemOuterClass.getDescriptor(),
                Common.getDescriptor()}, assigner);
    }

    private static final Descriptors.Descriptor internal_static_pomelo_area_CreateGuildRequest_descriptor = getDescriptor().getMessageTypes().get(0);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_CreateGuildRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_CreateGuildRequest_descriptor, new String[]{"C2SIcon", "C2SName", "C2SQqGroup"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_GetGuildListRequest_descriptor = getDescriptor().getMessageTypes().get(1);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_GetGuildListRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_GetGuildListRequest_descriptor, new String[]{"C2SName"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_JoinGuildRequest_descriptor = getDescriptor().getMessageTypes().get(2);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_JoinGuildRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_JoinGuildRequest_descriptor, new String[]{"C2SGuildId"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_JoinGuildOfPlayerRequest_descriptor = getDescriptor().getMessageTypes().get(3);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_JoinGuildOfPlayerRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_JoinGuildOfPlayerRequest_descriptor, new String[]{"C2SPlayerId"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_InvitePlayerJoinMyGuildRequest_descriptor = getDescriptor().getMessageTypes().get(4);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_InvitePlayerJoinMyGuildRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_InvitePlayerJoinMyGuildRequest_descriptor, new String[]{"C2SPlayerId"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_AgreeOrRefuseInviteRequest_descriptor = getDescriptor().getMessageTypes().get(5);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_AgreeOrRefuseInviteRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_AgreeOrRefuseInviteRequest_descriptor, new String[]{"C2SIsAgree", "C2SInviteId", "C2SGuildId"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_DealApplyRequest_descriptor = getDescriptor().getMessageTypes().get(6);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_DealApplyRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_DealApplyRequest_descriptor, new String[]{"C2SApplyId", "C2SOperate"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_GetMyGuildInfoRequest_descriptor = getDescriptor().getMessageTypes().get(7);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_GetMyGuildInfoRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_GetMyGuildInfoRequest_descriptor, new String[0]);


    private static final Descriptors.Descriptor internal_static_pomelo_area_GetMyGuildMembersRequest_descriptor = getDescriptor().getMessageTypes().get(8);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_GetMyGuildMembersRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_GetMyGuildMembersRequest_descriptor, new String[0]);


    private static final Descriptors.Descriptor internal_static_pomelo_area_GetApplyListRequest_descriptor = getDescriptor().getMessageTypes().get(9);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_GetApplyListRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_GetApplyListRequest_descriptor, new String[0]);


    private static final Descriptors.Descriptor internal_static_pomelo_area_SetGuildInfoRequest_descriptor = getDescriptor().getMessageTypes().get(10);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_SetGuildInfoRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_SetGuildInfoRequest_descriptor, new String[]{"EntryLevel", "GuildMode", "EntryUpLevel"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_SetGuildQQGroupRequest_descriptor = getDescriptor().getMessageTypes().get(11);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_SetGuildQQGroupRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_SetGuildQQGroupRequest_descriptor, new String[]{"QqGroup"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_ExitGuildRequest_descriptor = getDescriptor().getMessageTypes().get(12);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_ExitGuildRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_ExitGuildRequest_descriptor, new String[0]);


    private static final Descriptors.Descriptor internal_static_pomelo_area_KickMemberRequest_descriptor = getDescriptor().getMessageTypes().get(13);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_KickMemberRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_KickMemberRequest_descriptor, new String[]{"MemberId"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_UpgradeGuildLevelRequest_descriptor = getDescriptor().getMessageTypes().get(14);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_UpgradeGuildLevelRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_UpgradeGuildLevelRequest_descriptor, new String[0]);


    private static final Descriptors.Descriptor internal_static_pomelo_area_ChangeGuildNoticeRequest_descriptor = getDescriptor().getMessageTypes().get(15);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_ChangeGuildNoticeRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_ChangeGuildNoticeRequest_descriptor, new String[]{"Notice"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_ChangeGuildNameRequest_descriptor = getDescriptor().getMessageTypes().get(16);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_ChangeGuildNameRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_ChangeGuildNameRequest_descriptor, new String[]{"Name"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_OfficeName_descriptor = getDescriptor().getMessageTypes().get(17);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_OfficeName_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_OfficeName_descriptor, new String[]{"Job", "Name"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_ChangeOfficeNameRequest_descriptor = getDescriptor().getMessageTypes().get(18);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_ChangeOfficeNameRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_ChangeOfficeNameRequest_descriptor, new String[]{"OfficeNames"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_ContributeToGuildRequest_descriptor = getDescriptor().getMessageTypes().get(19);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_ContributeToGuildRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_ContributeToGuildRequest_descriptor, new String[]{"Type", "Times"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_SetMemberJobRequest_descriptor = getDescriptor().getMessageTypes().get(20);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_SetMemberJobRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_SetMemberJobRequest_descriptor, new String[]{"MemberId", "Job"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_TransferPresidentRequest_descriptor = getDescriptor().getMessageTypes().get(21);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_TransferPresidentRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_TransferPresidentRequest_descriptor, new String[]{"MemberId"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_GetGuildRecordRequest_descriptor = getDescriptor().getMessageTypes().get(22);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_GetGuildRecordRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_GetGuildRecordRequest_descriptor, new String[]{"Page"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_ImpeachGuildPresidentRequest_descriptor = getDescriptor().getMessageTypes().get(23);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_ImpeachGuildPresidentRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_ImpeachGuildPresidentRequest_descriptor, new String[0]);


    private static final Descriptors.Descriptor internal_static_pomelo_area_GetGuildMoneyRequest_descriptor = getDescriptor().getMessageTypes().get(24);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_GetGuildMoneyRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_GetGuildMoneyRequest_descriptor, new String[0]);


    private static final Descriptors.Descriptor internal_static_pomelo_area_GuildBaseInfo_descriptor = getDescriptor().getMessageTypes().get(25);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_GuildBaseInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_GuildBaseInfo_descriptor, new String[]{"GuildId", "Name", "Level", "PresidentId", "PresidentName", "MemberNum", "MemberMax", "EntryLevel", "GuildMode", "GuildIcon", "PresidentPro", "PresidentLevel", "EntryUpLevel", "CreateTime"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_GuildInfo_descriptor = getDescriptor().getMessageTypes().get(26);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_GuildInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_GuildInfo_descriptor, new String[]{"BaseInfo", "ApplyState"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_ContributeTimesInfo_descriptor = getDescriptor().getMessageTypes().get(27);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_ContributeTimesInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_ContributeTimesInfo_descriptor, new String[]{"Type", "Times", "MaxTimes"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_MyContributeInfo_descriptor = getDescriptor().getMessageTypes().get(28);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_MyContributeInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_MyContributeInfo_descriptor, new String[]{"CurrentContribute", "TotalContribute", "TimesList"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_MyGuildInfo_descriptor = getDescriptor().getMessageTypes().get(29);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_MyGuildInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_MyGuildInfo_descriptor, new String[]{"BaseInfo", "Notice", "Fund", "QqGroup", "MyInfo", "ChangeNamePassedDay", "OfficeNames", "Exp"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_MemberInfo_descriptor = getDescriptor().getMessageTypes().get(30);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_MemberInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_MemberInfo_descriptor, new String[]{"PlayerId", "Pro", "Name", "Level", "UpLevel", "Job", "JobName", "JoinTime", "CurrentContribute", "TotalContribute", "OnlineState", "LastActiveTime", "GuildName"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_ApplyInfo_descriptor = getDescriptor().getMessageTypes().get(31);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_ApplyInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_ApplyInfo_descriptor, new String[]{"ApplyId", "PlayerId", "Pro", "Name", "Level", "FightPower", "UpLevel", "CreateTime"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_CreateGuildResponse_descriptor = getDescriptor().getMessageTypes().get(32);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_CreateGuildResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_CreateGuildResponse_descriptor, new String[]{"S2CCode", "S2CMsg", "S2CGuildInfo"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_GetGuildListResponse_descriptor = getDescriptor().getMessageTypes().get(33);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_GetGuildListResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_GetGuildListResponse_descriptor, new String[]{"S2CCode", "S2CMsg", "S2CGuildList"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_JoinGuildResponse_descriptor = getDescriptor().getMessageTypes().get(34);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_JoinGuildResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_JoinGuildResponse_descriptor, new String[]{"S2CCode", "S2CMsg"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_JoinGuildOfPlayerResponse_descriptor = getDescriptor().getMessageTypes().get(35);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_JoinGuildOfPlayerResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_JoinGuildOfPlayerResponse_descriptor, new String[]{"S2CCode", "S2CMsg"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_InvitePlayerJoinMyGuildResponse_descriptor = getDescriptor().getMessageTypes().get(36);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_InvitePlayerJoinMyGuildResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_InvitePlayerJoinMyGuildResponse_descriptor, new String[]{"S2CCode", "S2CMsg"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_AgreeOrRefuseInviteResponse_descriptor = getDescriptor().getMessageTypes().get(37);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_AgreeOrRefuseInviteResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_AgreeOrRefuseInviteResponse_descriptor, new String[]{"S2CCode", "S2CMsg"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_DealApplyResponse_descriptor = getDescriptor().getMessageTypes().get(38);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_DealApplyResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_DealApplyResponse_descriptor, new String[]{"S2CCode", "S2CMsg"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_GetMyGuildInfoResponse_descriptor = getDescriptor().getMessageTypes().get(39);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_GetMyGuildInfoResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_GetMyGuildInfoResponse_descriptor, new String[]{"S2CCode", "S2CMsg", "S2CGuildInfo"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_GetMyGuildMembersResponse_descriptor = getDescriptor().getMessageTypes().get(40);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_GetMyGuildMembersResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_GetMyGuildMembersResponse_descriptor, new String[]{"S2CCode", "S2CMsg", "S2CMemberList", "S2CLeftKickNum"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_GetApplyListResponse_descriptor = getDescriptor().getMessageTypes().get(41);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_GetApplyListResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_GetApplyListResponse_descriptor, new String[]{"S2CCode", "S2CMsg", "S2CApplyList"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_SetGuildInfoResponse_descriptor = getDescriptor().getMessageTypes().get(42);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_SetGuildInfoResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_SetGuildInfoResponse_descriptor, new String[]{"S2CCode", "S2CMsg"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_SetGuildQQGroupResponse_descriptor = getDescriptor().getMessageTypes().get(43);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_SetGuildQQGroupResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_SetGuildQQGroupResponse_descriptor, new String[]{"S2CCode", "S2CMsg"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_ExitGuildResponse_descriptor = getDescriptor().getMessageTypes().get(44);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_ExitGuildResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_ExitGuildResponse_descriptor, new String[]{"S2CCode", "S2CMsg"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_KickMemberResponse_descriptor = getDescriptor().getMessageTypes().get(45);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_KickMemberResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_KickMemberResponse_descriptor, new String[]{"S2CCode", "S2CMsg", "S2CLeftKickNum"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_UpgradeGuildLevelResponse_descriptor = getDescriptor().getMessageTypes().get(46);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_UpgradeGuildLevelResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_UpgradeGuildLevelResponse_descriptor, new String[]{"S2CCode", "S2CMsg", "S2CGuildInfo"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_ChangeGuildNoticeResponse_descriptor = getDescriptor().getMessageTypes().get(47);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_ChangeGuildNoticeResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_ChangeGuildNoticeResponse_descriptor, new String[]{"S2CCode", "S2CMsg", "S2CNotice"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_ChangeGuildNameResponse_descriptor = getDescriptor().getMessageTypes().get(48);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_ChangeGuildNameResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_ChangeGuildNameResponse_descriptor, new String[]{"S2CCode", "S2CMsg"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_ChangeOfficeNameResponse_descriptor = getDescriptor().getMessageTypes().get(49);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_ChangeOfficeNameResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_ChangeOfficeNameResponse_descriptor, new String[]{"S2CCode", "S2CMsg"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_ContributeToGuildResponse_descriptor = getDescriptor().getMessageTypes().get(50);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_ContributeToGuildResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_ContributeToGuildResponse_descriptor, new String[]{"S2CCode", "S2CMsg", "S2CGuildInfo"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_SetMemberJobResponse_descriptor = getDescriptor().getMessageTypes().get(51);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_SetMemberJobResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_SetMemberJobResponse_descriptor, new String[]{"S2CCode", "S2CMsg"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_TransferPresidentResponse_descriptor = getDescriptor().getMessageTypes().get(52);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_TransferPresidentResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_TransferPresidentResponse_descriptor, new String[]{"S2CCode", "S2CMsg", "S2CMemberList", "S2CGuildInfo"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_RoleInfo_descriptor = getDescriptor().getMessageTypes().get(53);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_RoleInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_RoleInfo_descriptor, new String[]{"Pro", "Name"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_RecordInfo_descriptor = getDescriptor().getMessageTypes().get(54);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_RecordInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_RecordInfo_descriptor, new String[]{"Role1", "Role2", "ResultNum", "ResultStr", "Time", "RecordType", "Build"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_GetGuildRecordResponse_descriptor = getDescriptor().getMessageTypes().get(55);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_GetGuildRecordResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_GetGuildRecordResponse_descriptor, new String[]{"S2CCode", "S2CMsg", "S2CPage", "S2CRecordList"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_ImpeachGuildPresidentResponse_descriptor = getDescriptor().getMessageTypes().get(56);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_ImpeachGuildPresidentResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_ImpeachGuildPresidentResponse_descriptor, new String[]{"S2CCode", "S2CMsg", "IsNew"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_GetGuildMoneyResponse_descriptor = getDescriptor().getMessageTypes().get(57);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_GetGuildMoneyResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_GetGuildMoneyResponse_descriptor, new String[]{"S2CCode", "S2CMsg", "DepositCount", "DepositCountMax"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_JoinGuildDungeonRequest_descriptor = getDescriptor().getMessageTypes().get(58);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_JoinGuildDungeonRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_JoinGuildDungeonRequest_descriptor, new String[]{"C2SType"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_JoinGuildDungeonResponse_descriptor = getDescriptor().getMessageTypes().get(59);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_JoinGuildDungeonResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_JoinGuildDungeonResponse_descriptor, new String[]{"S2CCode", "S2CMsg", "S2CType"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_LeaveGuildDungeonRequest_descriptor = getDescriptor().getMessageTypes().get(60);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_LeaveGuildDungeonRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_LeaveGuildDungeonRequest_descriptor, new String[0]);


    private static final Descriptors.Descriptor internal_static_pomelo_area_LeaveGuildDungeonResponse_descriptor = getDescriptor().getMessageTypes().get(61);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_LeaveGuildDungeonResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_LeaveGuildDungeonResponse_descriptor, new String[]{"S2CCode", "S2CMsg"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_GuildRefreshPush_descriptor = getDescriptor().getMessageTypes().get(62);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_GuildRefreshPush_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_GuildRefreshPush_descriptor, new String[]{"S2CCode", "S2CMsg", "IsIn", "IsOut", "Job", "JobName", "GuildName", "TimesList"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_GuildInvitePush_descriptor = getDescriptor().getMessageTypes().get(63);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_GuildInvitePush_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_GuildInvitePush_descriptor, new String[]{"S2CCode", "S2CMsg", "PlayerId", "PlayerName", "GuildId", "GuildName", "PlayerPro", "GuildLevel"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_OnDungeonEndPush_descriptor = getDescriptor().getMessageTypes().get(64);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_OnDungeonEndPush_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_OnDungeonEndPush_descriptor, new String[]{"S2CCode", "S2CMsg", "State", "LeftTime", "AwardItem"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_GuildDungeonOpenPush_descriptor = getDescriptor().getMessageTypes().get(65);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_GuildDungeonOpenPush_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_GuildDungeonOpenPush_descriptor, new String[]{"S2CCode", "S2CMsg"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_GuildDungeonPassPush_descriptor = getDescriptor().getMessageTypes().get(66);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_GuildDungeonPassPush_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_GuildDungeonPassPush_descriptor, new String[]{"S2CCode", "S2CMsg", "DungeonCount"});


    private static final Descriptors.Descriptor internal_static_pomelo_area_GuildDungeonPlayerNumPush_descriptor = getDescriptor().getMessageTypes().get(67);
    private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_area_GuildDungeonPlayerNumPush_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_area_GuildDungeonPlayerNumPush_descriptor, new String[]{"S2CCode", "S2CMsg", "PlayerNum"});
    private static Descriptors.FileDescriptor descriptor;

    static {
        ItemOuterClass.getDescriptor();
        Common.getDescriptor();
    }

    public static interface GuildDungeonPlayerNumPushOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        boolean hasPlayerNum();

        int getPlayerNum();
    }

    public static interface GuildDungeonPassPushOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        boolean hasDungeonCount();

        int getDungeonCount();
    }

    public static interface GuildDungeonOpenPushOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();
    }

    public static interface OnDungeonEndPushOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        boolean hasState();

        int getState();

        boolean hasLeftTime();

        int getLeftTime();

        List<ItemOuterClass.ItemDetail> getAwardItemList();

        ItemOuterClass.ItemDetail getAwardItem(int param1Int);

        int getAwardItemCount();

        List<? extends ItemOuterClass.ItemDetailOrBuilder> getAwardItemOrBuilderList();

        ItemOuterClass.ItemDetailOrBuilder getAwardItemOrBuilder(int param1Int);
    }

    public static interface GuildInvitePushOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        boolean hasPlayerId();

        String getPlayerId();

        ByteString getPlayerIdBytes();

        boolean hasPlayerName();

        String getPlayerName();

        ByteString getPlayerNameBytes();

        boolean hasGuildId();

        String getGuildId();

        ByteString getGuildIdBytes();

        boolean hasGuildName();

        String getGuildName();

        ByteString getGuildNameBytes();

        boolean hasPlayerPro();

        int getPlayerPro();

        boolean hasGuildLevel();

        int getGuildLevel();
    }

    public static interface GuildRefreshPushOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        boolean hasIsIn();

        int getIsIn();

        boolean hasIsOut();

        int getIsOut();

        boolean hasJob();

        int getJob();

        boolean hasJobName();

        String getJobName();

        ByteString getJobNameBytes();

        boolean hasGuildName();

        String getGuildName();

        ByteString getGuildNameBytes();

        List<GuildHandler.ContributeTimesInfo> getTimesListList();

        GuildHandler.ContributeTimesInfo getTimesList(int param1Int);

        int getTimesListCount();

        List<? extends GuildHandler.ContributeTimesInfoOrBuilder> getTimesListOrBuilderList();

        GuildHandler.ContributeTimesInfoOrBuilder getTimesListOrBuilder(int param1Int);
    }

    public static interface LeaveGuildDungeonResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();
    }

    public static interface LeaveGuildDungeonRequestOrBuilder extends MessageOrBuilder {
    }

    public static interface JoinGuildDungeonResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        boolean hasS2CType();

        int getS2CType();
    }

    public static interface JoinGuildDungeonRequestOrBuilder extends MessageOrBuilder {
        boolean hasC2SType();

        int getC2SType();
    }

    public static interface GetGuildMoneyResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        boolean hasDepositCount();

        int getDepositCount();

        boolean hasDepositCountMax();

        int getDepositCountMax();
    }

    public static interface ImpeachGuildPresidentResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        boolean hasIsNew();

        int getIsNew();
    }

    public static interface GetGuildRecordResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        boolean hasS2CPage();

        int getS2CPage();

        List<GuildHandler.RecordInfo> getS2CRecordListList();

        GuildHandler.RecordInfo getS2CRecordList(int param1Int);

        int getS2CRecordListCount();

        List<? extends GuildHandler.RecordInfoOrBuilder> getS2CRecordListOrBuilderList();

        GuildHandler.RecordInfoOrBuilder getS2CRecordListOrBuilder(int param1Int);
    }

    public static interface RecordInfoOrBuilder extends MessageOrBuilder {
        boolean hasRole1();

        GuildHandler.RoleInfo getRole1();

        GuildHandler.RoleInfoOrBuilder getRole1OrBuilder();

        boolean hasRole2();

        GuildHandler.RoleInfo getRole2();

        GuildHandler.RoleInfoOrBuilder getRole2OrBuilder();

        boolean hasResultNum();

        int getResultNum();

        boolean hasResultStr();

        String getResultStr();

        ByteString getResultStrBytes();

        boolean hasTime();

        String getTime();

        ByteString getTimeBytes();

        boolean hasRecordType();

        int getRecordType();

        boolean hasBuild();

        String getBuild();

        ByteString getBuildBytes();
    }

    public static interface RoleInfoOrBuilder extends MessageOrBuilder {
        boolean hasPro();

        int getPro();

        boolean hasName();

        String getName();

        ByteString getNameBytes();
    }

    public static interface TransferPresidentResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        List<GuildHandler.MemberInfo> getS2CMemberListList();

        GuildHandler.MemberInfo getS2CMemberList(int param1Int);

        int getS2CMemberListCount();

        List<? extends GuildHandler.MemberInfoOrBuilder> getS2CMemberListOrBuilderList();

        GuildHandler.MemberInfoOrBuilder getS2CMemberListOrBuilder(int param1Int);

        boolean hasS2CGuildInfo();

        GuildHandler.MyGuildInfo getS2CGuildInfo();

        GuildHandler.MyGuildInfoOrBuilder getS2CGuildInfoOrBuilder();
    }

    public static interface SetMemberJobResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();
    }

    public static interface ContributeToGuildResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        boolean hasS2CGuildInfo();

        GuildHandler.MyGuildInfo getS2CGuildInfo();

        GuildHandler.MyGuildInfoOrBuilder getS2CGuildInfoOrBuilder();
    }

    public static interface ChangeOfficeNameResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();
    }

    public static interface ChangeGuildNameResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();
    }

    public static interface ChangeGuildNoticeResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        boolean hasS2CNotice();

        String getS2CNotice();

        ByteString getS2CNoticeBytes();
    }

    public static interface UpgradeGuildLevelResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        boolean hasS2CGuildInfo();

        GuildHandler.MyGuildInfo getS2CGuildInfo();

        GuildHandler.MyGuildInfoOrBuilder getS2CGuildInfoOrBuilder();
    }

    public static interface KickMemberResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        boolean hasS2CLeftKickNum();

        int getS2CLeftKickNum();
    }

    public static interface ExitGuildResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();
    }

    public static interface SetGuildQQGroupResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();
    }

    public static interface SetGuildInfoResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();
    }

    public static interface GetApplyListResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        List<GuildHandler.ApplyInfo> getS2CApplyListList();

        GuildHandler.ApplyInfo getS2CApplyList(int param1Int);

        int getS2CApplyListCount();

        List<? extends GuildHandler.ApplyInfoOrBuilder> getS2CApplyListOrBuilderList();

        GuildHandler.ApplyInfoOrBuilder getS2CApplyListOrBuilder(int param1Int);
    }

    public static interface GetMyGuildMembersResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        List<GuildHandler.MemberInfo> getS2CMemberListList();

        GuildHandler.MemberInfo getS2CMemberList(int param1Int);

        int getS2CMemberListCount();

        List<? extends GuildHandler.MemberInfoOrBuilder> getS2CMemberListOrBuilderList();

        GuildHandler.MemberInfoOrBuilder getS2CMemberListOrBuilder(int param1Int);

        boolean hasS2CLeftKickNum();

        int getS2CLeftKickNum();
    }

    public static interface GetMyGuildInfoResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        boolean hasS2CGuildInfo();

        GuildHandler.MyGuildInfo getS2CGuildInfo();

        GuildHandler.MyGuildInfoOrBuilder getS2CGuildInfoOrBuilder();
    }

    public static interface DealApplyResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();
    }

    public static interface AgreeOrRefuseInviteResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();
    }

    public static interface InvitePlayerJoinMyGuildResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();
    }

    public static interface JoinGuildOfPlayerResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();
    }

    public static interface JoinGuildResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();
    }

    public static interface GetGuildListResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        List<GuildHandler.GuildInfo> getS2CGuildListList();

        GuildHandler.GuildInfo getS2CGuildList(int param1Int);

        int getS2CGuildListCount();

        List<? extends GuildHandler.GuildInfoOrBuilder> getS2CGuildListOrBuilderList();

        GuildHandler.GuildInfoOrBuilder getS2CGuildListOrBuilder(int param1Int);
    }

    public static interface CreateGuildResponseOrBuilder extends MessageOrBuilder {
        boolean hasS2CCode();

        int getS2CCode();

        boolean hasS2CMsg();

        String getS2CMsg();

        ByteString getS2CMsgBytes();

        boolean hasS2CGuildInfo();

        GuildHandler.MyGuildInfo getS2CGuildInfo();

        GuildHandler.MyGuildInfoOrBuilder getS2CGuildInfoOrBuilder();
    }

    public static interface ApplyInfoOrBuilder extends MessageOrBuilder {
        boolean hasApplyId();

        String getApplyId();

        ByteString getApplyIdBytes();

        boolean hasPlayerId();

        String getPlayerId();

        ByteString getPlayerIdBytes();

        boolean hasPro();

        int getPro();

        boolean hasName();

        String getName();

        ByteString getNameBytes();

        boolean hasLevel();

        int getLevel();

        boolean hasFightPower();

        int getFightPower();

        boolean hasUpLevel();

        int getUpLevel();

        boolean hasCreateTime();

        String getCreateTime();

        ByteString getCreateTimeBytes();
    }

    public static interface MemberInfoOrBuilder extends MessageOrBuilder {
        boolean hasPlayerId();

        String getPlayerId();

        ByteString getPlayerIdBytes();

        boolean hasPro();

        int getPro();

        boolean hasName();

        String getName();

        ByteString getNameBytes();

        boolean hasLevel();

        int getLevel();

        boolean hasUpLevel();

        int getUpLevel();

        boolean hasJob();

        int getJob();

        boolean hasJobName();

        String getJobName();

        ByteString getJobNameBytes();

        boolean hasJoinTime();

        String getJoinTime();

        ByteString getJoinTimeBytes();

        boolean hasCurrentContribute();

        int getCurrentContribute();

        boolean hasTotalContribute();

        int getTotalContribute();

        boolean hasOnlineState();

        int getOnlineState();

        boolean hasLastActiveTime();

        int getLastActiveTime();

        boolean hasGuildName();

        String getGuildName();

        ByteString getGuildNameBytes();
    }

    public static interface MyGuildInfoOrBuilder extends MessageOrBuilder {
        boolean hasBaseInfo();

        GuildHandler.GuildBaseInfo getBaseInfo();

        GuildHandler.GuildBaseInfoOrBuilder getBaseInfoOrBuilder();

        boolean hasNotice();

        String getNotice();

        ByteString getNoticeBytes();

        boolean hasFund();

        int getFund();

        boolean hasQqGroup();

        String getQqGroup();

        ByteString getQqGroupBytes();

        boolean hasMyInfo();

        GuildHandler.MyContributeInfo getMyInfo();

        GuildHandler.MyContributeInfoOrBuilder getMyInfoOrBuilder();

        boolean hasChangeNamePassedDay();

        int getChangeNamePassedDay();

        List<GuildHandler.OfficeName> getOfficeNamesList();

        GuildHandler.OfficeName getOfficeNames(int param1Int);

        int getOfficeNamesCount();

        List<? extends GuildHandler.OfficeNameOrBuilder> getOfficeNamesOrBuilderList();

        GuildHandler.OfficeNameOrBuilder getOfficeNamesOrBuilder(int param1Int);

        boolean hasExp();

        int getExp();
    }

    public static interface MyContributeInfoOrBuilder extends MessageOrBuilder {
        boolean hasCurrentContribute();

        int getCurrentContribute();

        boolean hasTotalContribute();

        int getTotalContribute();

        List<GuildHandler.ContributeTimesInfo> getTimesListList();

        GuildHandler.ContributeTimesInfo getTimesList(int param1Int);

        int getTimesListCount();

        List<? extends GuildHandler.ContributeTimesInfoOrBuilder> getTimesListOrBuilderList();

        GuildHandler.ContributeTimesInfoOrBuilder getTimesListOrBuilder(int param1Int);
    }

    public static interface ContributeTimesInfoOrBuilder extends MessageOrBuilder {
        boolean hasType();

        int getType();

        boolean hasTimes();

        int getTimes();

        boolean hasMaxTimes();

        int getMaxTimes();
    }

    public static interface GuildInfoOrBuilder extends MessageOrBuilder {
        boolean hasBaseInfo();

        GuildHandler.GuildBaseInfo getBaseInfo();

        GuildHandler.GuildBaseInfoOrBuilder getBaseInfoOrBuilder();

        boolean hasApplyState();

        int getApplyState();
    }

    public static interface GuildBaseInfoOrBuilder extends MessageOrBuilder {
        boolean hasGuildId();

        String getGuildId();

        ByteString getGuildIdBytes();

        boolean hasName();

        String getName();

        ByteString getNameBytes();

        boolean hasLevel();

        int getLevel();

        boolean hasPresidentId();

        String getPresidentId();

        ByteString getPresidentIdBytes();

        boolean hasPresidentName();

        String getPresidentName();

        ByteString getPresidentNameBytes();

        boolean hasMemberNum();

        int getMemberNum();

        boolean hasMemberMax();

        int getMemberMax();

        boolean hasEntryLevel();

        int getEntryLevel();

        boolean hasGuildMode();

        int getGuildMode();

        boolean hasGuildIcon();

        String getGuildIcon();

        ByteString getGuildIconBytes();

        boolean hasPresidentPro();

        int getPresidentPro();

        boolean hasPresidentLevel();

        int getPresidentLevel();

        boolean hasEntryUpLevel();

        int getEntryUpLevel();

        boolean hasCreateTime();

        String getCreateTime();

        ByteString getCreateTimeBytes();
    }

    public static interface GetGuildMoneyRequestOrBuilder extends MessageOrBuilder {
    }

    public static interface ImpeachGuildPresidentRequestOrBuilder extends MessageOrBuilder {
    }

    public static interface GetGuildRecordRequestOrBuilder extends MessageOrBuilder {
        boolean hasPage();

        int getPage();
    }

    public static interface TransferPresidentRequestOrBuilder extends MessageOrBuilder {
        boolean hasMemberId();

        String getMemberId();

        ByteString getMemberIdBytes();
    }

    public static interface SetMemberJobRequestOrBuilder extends MessageOrBuilder {
        boolean hasMemberId();

        String getMemberId();

        ByteString getMemberIdBytes();

        boolean hasJob();

        int getJob();
    }

    public static interface ContributeToGuildRequestOrBuilder extends MessageOrBuilder {
        boolean hasType();

        int getType();

        boolean hasTimes();

        int getTimes();
    }

    public static interface ChangeOfficeNameRequestOrBuilder extends MessageOrBuilder {
        List<GuildHandler.OfficeName> getOfficeNamesList();

        GuildHandler.OfficeName getOfficeNames(int param1Int);

        int getOfficeNamesCount();

        List<? extends GuildHandler.OfficeNameOrBuilder> getOfficeNamesOrBuilderList();

        GuildHandler.OfficeNameOrBuilder getOfficeNamesOrBuilder(int param1Int);
    }

    public static interface OfficeNameOrBuilder extends MessageOrBuilder {
        boolean hasJob();

        int getJob();

        boolean hasName();

        String getName();

        ByteString getNameBytes();
    }

    public static interface ChangeGuildNameRequestOrBuilder extends MessageOrBuilder {
        boolean hasName();

        String getName();

        ByteString getNameBytes();
    }

    public static interface ChangeGuildNoticeRequestOrBuilder extends MessageOrBuilder {
        boolean hasNotice();

        String getNotice();

        ByteString getNoticeBytes();
    }

    public static interface UpgradeGuildLevelRequestOrBuilder extends MessageOrBuilder {
    }

    public static interface KickMemberRequestOrBuilder extends MessageOrBuilder {
        boolean hasMemberId();

        String getMemberId();

        ByteString getMemberIdBytes();
    }

    public static interface ExitGuildRequestOrBuilder extends MessageOrBuilder {
    }

    public static interface SetGuildQQGroupRequestOrBuilder extends MessageOrBuilder {
        boolean hasQqGroup();

        String getQqGroup();

        ByteString getQqGroupBytes();
    }

    public static interface SetGuildInfoRequestOrBuilder extends MessageOrBuilder {
        boolean hasEntryLevel();

        int getEntryLevel();

        boolean hasGuildMode();

        int getGuildMode();

        boolean hasEntryUpLevel();

        int getEntryUpLevel();
    }

    public static interface GetApplyListRequestOrBuilder extends MessageOrBuilder {
    }

    public static interface GetMyGuildMembersRequestOrBuilder extends MessageOrBuilder {
    }

    public static interface GetMyGuildInfoRequestOrBuilder extends MessageOrBuilder {
    }

    public static interface DealApplyRequestOrBuilder extends MessageOrBuilder {
        boolean hasC2SApplyId();

        String getC2SApplyId();

        ByteString getC2SApplyIdBytes();

        boolean hasC2SOperate();

        int getC2SOperate();
    }

    public static interface AgreeOrRefuseInviteRequestOrBuilder extends MessageOrBuilder {
        boolean hasC2SIsAgree();

        int getC2SIsAgree();

        boolean hasC2SInviteId();

        String getC2SInviteId();

        ByteString getC2SInviteIdBytes();

        boolean hasC2SGuildId();

        String getC2SGuildId();

        ByteString getC2SGuildIdBytes();
    }

    public static interface InvitePlayerJoinMyGuildRequestOrBuilder extends MessageOrBuilder {
        boolean hasC2SPlayerId();

        String getC2SPlayerId();

        ByteString getC2SPlayerIdBytes();
    }

    public static interface JoinGuildOfPlayerRequestOrBuilder extends MessageOrBuilder {
        boolean hasC2SPlayerId();

        String getC2SPlayerId();

        ByteString getC2SPlayerIdBytes();
    }

    public static interface JoinGuildRequestOrBuilder extends MessageOrBuilder {
        boolean hasC2SGuildId();

        String getC2SGuildId();

        ByteString getC2SGuildIdBytes();
    }

    public static interface GetGuildListRequestOrBuilder extends MessageOrBuilder {
        boolean hasC2SName();

        String getC2SName();

        ByteString getC2SNameBytes();
    }

    public static interface CreateGuildRequestOrBuilder extends MessageOrBuilder {
        boolean hasC2SIcon();

        String getC2SIcon();

        ByteString getC2SIconBytes();

        boolean hasC2SName();

        String getC2SName();

        ByteString getC2SNameBytes();

        boolean hasC2SQqGroup();

        String getC2SQqGroup();

        ByteString getC2SQqGroupBytes();
    }
}


