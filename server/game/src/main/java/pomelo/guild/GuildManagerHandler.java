/*       */ package pomelo.guild;
/*       */ 
/*       */ import com.google.protobuf.AbstractMessage;
/*       */ import com.google.protobuf.AbstractMessageLite;
/*       */ import com.google.protobuf.AbstractParser;
/*       */ import com.google.protobuf.ByteString;
/*       */ import com.google.protobuf.CodedInputStream;
/*       */ import com.google.protobuf.CodedOutputStream;
/*       */ import com.google.protobuf.Descriptors;
/*       */ import com.google.protobuf.ExtensionRegistry;
/*       */ import com.google.protobuf.ExtensionRegistryLite;
/*       */ import com.google.protobuf.GeneratedMessage;
/*       */ import com.google.protobuf.InvalidProtocolBufferException;
/*       */ import com.google.protobuf.Message;
/*       */ import com.google.protobuf.MessageLite;
/*       */ import com.google.protobuf.MessageOrBuilder;
/*       */ import com.google.protobuf.Parser;
/*       */ import com.google.protobuf.RepeatedFieldBuilder;
/*       */ import com.google.protobuf.SingleFieldBuilder;
/*       */ import com.google.protobuf.UnknownFieldSet;
/*       */ import java.io.IOException;
/*       */ import java.io.InputStream;
/*       */ import java.io.ObjectStreamException;
/*       */ import java.util.ArrayList;
/*       */ import java.util.Collections;
/*       */ import java.util.List;
/*       */ import pomelo.item.ItemOuterClass;
/*       */ import pomelo.player.PlayerOuterClass;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ public final class GuildManagerHandler
/*       */ {
/*       */   public static void registerAllExtensions(ExtensionRegistry registry) {}
/*       */   
/*       */   public static final class UseCond
/*       */     extends GeneratedMessage
/*       */     implements UseCondOrBuilder
/*       */   {
/*   573 */     private static final UseCond defaultInstance = new UseCond(true); private final UnknownFieldSet unknownFields; private UseCond(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private UseCond(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static UseCond getDefaultInstance() { return defaultInstance; } public UseCond getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private UseCond(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.level_ = input.readInt32(); break;case 16: this.bitField0_ |= 0x2; this.upLevel_ = input.readInt32(); break;case 24: this.bitField0_ |= 0x4; this.job_ = input.readInt32(); break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_UseCond_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_UseCond_fieldAccessorTable.ensureFieldAccessorsInitialized(UseCond.class, Builder.class); } public static Parser<UseCond> PARSER = (Parser<UseCond>)new AbstractParser<UseCond>() { public GuildManagerHandler.UseCond parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.UseCond(input, extensionRegistry); } }; private int bitField0_; public static final int LEVEL_FIELD_NUMBER = 1; private int level_; public static final int UPLEVEL_FIELD_NUMBER = 2; private int upLevel_; public static final int JOB_FIELD_NUMBER = 3; private int job_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<UseCond> getParserForType() { return PARSER; } public boolean hasLevel() { return ((this.bitField0_ & 0x1) == 1); } public int getLevel() { return this.level_; } public boolean hasUpLevel() { return ((this.bitField0_ & 0x2) == 2); } public int getUpLevel() { return this.upLevel_; } public boolean hasJob() { return ((this.bitField0_ & 0x4) == 4); } public int getJob() { return this.job_; } private void initFields() { this.level_ = 0; this.upLevel_ = 0; this.job_ = 0; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  if (!hasJob()) { this.memoizedIsInitialized = 0; return false; }  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.level_);  if ((this.bitField0_ & 0x2) == 2) output.writeInt32(2, this.upLevel_);  if ((this.bitField0_ & 0x4) == 4) output.writeInt32(3, this.job_);  getUnknownFields().writeTo(output); } public int getSerializedSize() { int size = this.memoizedSerializedSize; if (size != -1) return size;  size = 0; if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.level_);  if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeInt32Size(2, this.upLevel_);  if ((this.bitField0_ & 0x4) == 4) size += CodedOutputStream.computeInt32Size(3, this.job_);  size += getUnknownFields().getSerializedSize(); this.memoizedSerializedSize = size; return size; } protected Object writeReplace() throws ObjectStreamException { return super.writeReplace(); } public static UseCond parseFrom(ByteString data) throws InvalidProtocolBufferException { return (UseCond)PARSER.parseFrom(data); } public static UseCond parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (UseCond)PARSER.parseFrom(data, extensionRegistry); } public static UseCond parseFrom(byte[] data) throws InvalidProtocolBufferException { return (UseCond)PARSER.parseFrom(data); } public static UseCond parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (UseCond)PARSER.parseFrom(data, extensionRegistry); } public static UseCond parseFrom(InputStream input) throws IOException { return (UseCond)PARSER.parseFrom(input); } public static UseCond parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (UseCond)PARSER.parseFrom(input, extensionRegistry); } public static UseCond parseDelimitedFrom(InputStream input) throws IOException { return (UseCond)PARSER.parseDelimitedFrom(input); } public static UseCond parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (UseCond)PARSER.parseDelimitedFrom(input, extensionRegistry); } public static UseCond parseFrom(CodedInputStream input) throws IOException { return (UseCond)PARSER.parseFrom(input); } public static UseCond parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (UseCond)PARSER.parseFrom(input, extensionRegistry); } public static Builder newBuilder() { return Builder.create(); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder(UseCond prototype) { return newBuilder().mergeFrom(prototype); } public Builder toBuilder() { return newBuilder(this); } protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.UseCondOrBuilder {
/*   574 */       private int bitField0_; private int level_; private int upLevel_; private int job_; public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_UseCond_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_UseCond_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.UseCond.class, Builder.class); } private Builder() { maybeForceBuilderInitialization(); } private Builder(GeneratedMessage.BuilderParent parent) { super(parent); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GuildManagerHandler.UseCond.alwaysUseFieldBuilders); } private static Builder create() { return new Builder(); } public Builder clear() { super.clear(); this.level_ = 0; this.bitField0_ &= 0xFFFFFFFE; this.upLevel_ = 0; this.bitField0_ &= 0xFFFFFFFD; this.job_ = 0; this.bitField0_ &= 0xFFFFFFFB; return this; } public Builder clone() { return create().mergeFrom(buildPartial()); } public Descriptors.Descriptor getDescriptorForType() { return GuildManagerHandler.internal_static_pomelo_guild_UseCond_descriptor; } public GuildManagerHandler.UseCond getDefaultInstanceForType() { return GuildManagerHandler.UseCond.getDefaultInstance(); } public GuildManagerHandler.UseCond build() { GuildManagerHandler.UseCond result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public GuildManagerHandler.UseCond buildPartial() { GuildManagerHandler.UseCond result = new GuildManagerHandler.UseCond(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;  result.level_ = this.level_; if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;  result.upLevel_ = this.upLevel_; if ((from_bitField0_ & 0x4) == 4) to_bitField0_ |= 0x4;  result.job_ = this.job_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder mergeFrom(Message other) { if (other instanceof GuildManagerHandler.UseCond) return mergeFrom((GuildManagerHandler.UseCond)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(GuildManagerHandler.UseCond other) { if (other == GuildManagerHandler.UseCond.getDefaultInstance()) return this;  if (other.hasLevel()) setLevel(other.getLevel());  if (other.hasUpLevel()) setUpLevel(other.getUpLevel());  if (other.hasJob()) setJob(other.getJob());  mergeUnknownFields(other.getUnknownFields()); return this; } public final boolean isInitialized() { if (!hasJob()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { GuildManagerHandler.UseCond parsedMessage = null; try { parsedMessage = (GuildManagerHandler.UseCond)GuildManagerHandler.UseCond.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (GuildManagerHandler.UseCond)e.getUnfinishedMessage(); throw e; } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasLevel() { return ((this.bitField0_ & 0x1) == 1); } public int getLevel() { return this.level_; } public Builder setLevel(int value) { this.bitField0_ |= 0x1; this.level_ = value; onChanged(); return this; } public Builder clearLevel() { this.bitField0_ &= 0xFFFFFFFE; this.level_ = 0; onChanged(); return this; } public boolean hasUpLevel() { return ((this.bitField0_ & 0x2) == 2); } public int getUpLevel() { return this.upLevel_; } public Builder setUpLevel(int value) { this.bitField0_ |= 0x2; this.upLevel_ = value; onChanged(); return this; } public Builder clearUpLevel() { this.bitField0_ &= 0xFFFFFFFD; this.upLevel_ = 0; onChanged(); return this; } public boolean hasJob() { return ((this.bitField0_ & 0x4) == 4); } public int getJob() { return this.job_; } public Builder setJob(int value) { this.bitField0_ |= 0x4; this.job_ = value; onChanged(); return this; } public Builder clearJob() { this.bitField0_ &= 0xFFFFFFFB; this.job_ = 0; onChanged(); return this; } } static { defaultInstance.initFields(); }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class QualityCond
/*       */     extends GeneratedMessage
/*       */     implements QualityCondOrBuilder
/*       */   {
/*  1134 */     private static final QualityCond defaultInstance = new QualityCond(true); private final UnknownFieldSet unknownFields; private QualityCond(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private QualityCond(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static QualityCond getDefaultInstance() { return defaultInstance; } public QualityCond getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private QualityCond(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.level_ = input.readInt32(); break;case 16: this.bitField0_ |= 0x2; this.upLevel_ = input.readInt32(); break;case 24: this.bitField0_ |= 0x4; this.qColor_ = input.readInt32(); break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_QualityCond_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_QualityCond_fieldAccessorTable.ensureFieldAccessorsInitialized(QualityCond.class, Builder.class); } public static Parser<QualityCond> PARSER = (Parser<QualityCond>)new AbstractParser<QualityCond>() { public GuildManagerHandler.QualityCond parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.QualityCond(input, extensionRegistry); } }; private int bitField0_; public static final int LEVEL_FIELD_NUMBER = 1; private int level_; public static final int UPLEVEL_FIELD_NUMBER = 2; private int upLevel_; public static final int QCOLOR_FIELD_NUMBER = 3; private int qColor_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<QualityCond> getParserForType() { return PARSER; } public boolean hasLevel() { return ((this.bitField0_ & 0x1) == 1); } public int getLevel() { return this.level_; } public boolean hasUpLevel() { return ((this.bitField0_ & 0x2) == 2); } public int getUpLevel() { return this.upLevel_; } public boolean hasQColor() { return ((this.bitField0_ & 0x4) == 4); } public int getQColor() { return this.qColor_; } private void initFields() { this.level_ = 0; this.upLevel_ = 0; this.qColor_ = 0; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.level_);  if ((this.bitField0_ & 0x2) == 2) output.writeInt32(2, this.upLevel_);  if ((this.bitField0_ & 0x4) == 4) output.writeInt32(3, this.qColor_);  getUnknownFields().writeTo(output); } public int getSerializedSize() { int size = this.memoizedSerializedSize; if (size != -1) return size;  size = 0; if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.level_);  if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeInt32Size(2, this.upLevel_);  if ((this.bitField0_ & 0x4) == 4) size += CodedOutputStream.computeInt32Size(3, this.qColor_);  size += getUnknownFields().getSerializedSize(); this.memoizedSerializedSize = size; return size; } protected Object writeReplace() throws ObjectStreamException { return super.writeReplace(); } public static QualityCond parseFrom(ByteString data) throws InvalidProtocolBufferException { return (QualityCond)PARSER.parseFrom(data); } public static QualityCond parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (QualityCond)PARSER.parseFrom(data, extensionRegistry); } public static QualityCond parseFrom(byte[] data) throws InvalidProtocolBufferException { return (QualityCond)PARSER.parseFrom(data); } public static QualityCond parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (QualityCond)PARSER.parseFrom(data, extensionRegistry); } public static QualityCond parseFrom(InputStream input) throws IOException { return (QualityCond)PARSER.parseFrom(input); } public static QualityCond parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (QualityCond)PARSER.parseFrom(input, extensionRegistry); } public static QualityCond parseDelimitedFrom(InputStream input) throws IOException { return (QualityCond)PARSER.parseDelimitedFrom(input); } public static QualityCond parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (QualityCond)PARSER.parseDelimitedFrom(input, extensionRegistry); } public static QualityCond parseFrom(CodedInputStream input) throws IOException { return (QualityCond)PARSER.parseFrom(input); } public static QualityCond parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (QualityCond)PARSER.parseFrom(input, extensionRegistry); } public static Builder newBuilder() { return Builder.create(); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder(QualityCond prototype) { return newBuilder().mergeFrom(prototype); } public Builder toBuilder() { return newBuilder(this); } protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.QualityCondOrBuilder {
/*  1135 */       private int bitField0_; private int level_; private int upLevel_; private int qColor_; public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_QualityCond_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_QualityCond_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.QualityCond.class, Builder.class); } private Builder() { maybeForceBuilderInitialization(); } private Builder(GeneratedMessage.BuilderParent parent) { super(parent); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GuildManagerHandler.QualityCond.alwaysUseFieldBuilders); } private static Builder create() { return new Builder(); } public Builder clear() { super.clear(); this.level_ = 0; this.bitField0_ &= 0xFFFFFFFE; this.upLevel_ = 0; this.bitField0_ &= 0xFFFFFFFD; this.qColor_ = 0; this.bitField0_ &= 0xFFFFFFFB; return this; } public Builder clone() { return create().mergeFrom(buildPartial()); } public Descriptors.Descriptor getDescriptorForType() { return GuildManagerHandler.internal_static_pomelo_guild_QualityCond_descriptor; } public GuildManagerHandler.QualityCond getDefaultInstanceForType() { return GuildManagerHandler.QualityCond.getDefaultInstance(); } public GuildManagerHandler.QualityCond build() { GuildManagerHandler.QualityCond result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public GuildManagerHandler.QualityCond buildPartial() { GuildManagerHandler.QualityCond result = new GuildManagerHandler.QualityCond(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;  result.level_ = this.level_; if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;  result.upLevel_ = this.upLevel_; if ((from_bitField0_ & 0x4) == 4) to_bitField0_ |= 0x4;  result.qColor_ = this.qColor_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder mergeFrom(Message other) { if (other instanceof GuildManagerHandler.QualityCond) return mergeFrom((GuildManagerHandler.QualityCond)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(GuildManagerHandler.QualityCond other) { if (other == GuildManagerHandler.QualityCond.getDefaultInstance()) return this;  if (other.hasLevel()) setLevel(other.getLevel());  if (other.hasUpLevel()) setUpLevel(other.getUpLevel());  if (other.hasQColor()) setQColor(other.getQColor());  mergeUnknownFields(other.getUnknownFields()); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { GuildManagerHandler.QualityCond parsedMessage = null; try { parsedMessage = (GuildManagerHandler.QualityCond)GuildManagerHandler.QualityCond.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (GuildManagerHandler.QualityCond)e.getUnfinishedMessage(); throw e; } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasLevel() { return ((this.bitField0_ & 0x1) == 1); } public int getLevel() { return this.level_; } public Builder setLevel(int value) { this.bitField0_ |= 0x1; this.level_ = value; onChanged(); return this; } public Builder clearLevel() { this.bitField0_ &= 0xFFFFFFFE; this.level_ = 0; onChanged(); return this; } public boolean hasUpLevel() { return ((this.bitField0_ & 0x2) == 2); } public int getUpLevel() { return this.upLevel_; } public Builder setUpLevel(int value) { this.bitField0_ |= 0x2; this.upLevel_ = value; onChanged(); return this; } public Builder clearUpLevel() { this.bitField0_ &= 0xFFFFFFFD; this.upLevel_ = 0; onChanged(); return this; } public boolean hasQColor() { return ((this.bitField0_ & 0x4) == 4); } public int getQColor() { return this.qColor_; } public Builder setQColor(int value) { this.bitField0_ |= 0x4; this.qColor_ = value; onChanged(); return this; } public Builder clearQColor() { this.bitField0_ &= 0xFFFFFFFB; this.qColor_ = 0; onChanged(); return this; } } static { defaultInstance.initFields(); }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class DepotCondition
/*       */     extends GeneratedMessage
/*       */     implements DepotConditionOrBuilder
/*       */   {
/*  2212 */     private static final DepotCondition defaultInstance = new DepotCondition(true); private final UnknownFieldSet unknownFields; private DepotCondition(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private DepotCondition(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static DepotCondition getDefaultInstance() { return defaultInstance; } public DepotCondition getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private DepotCondition(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { GuildManagerHandler.UseCond.Builder builder; GuildManagerHandler.QualityCond.Builder subBuilder; int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 10: builder = null; if ((this.bitField0_ & 0x1) == 1) builder = this.useCond_.toBuilder();  this.useCond_ = (GuildManagerHandler.UseCond)input.readMessage(GuildManagerHandler.UseCond.PARSER, extensionRegistry); if (builder != null) { builder.mergeFrom(this.useCond_); this.useCond_ = builder.buildPartial(); }  this.bitField0_ |= 0x1; break;case 18: subBuilder = null; if ((this.bitField0_ & 0x2) == 2) subBuilder = this.minCond_.toBuilder();  this.minCond_ = (GuildManagerHandler.QualityCond)input.readMessage(GuildManagerHandler.QualityCond.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.minCond_); this.minCond_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x2; break;case 26: subBuilder = null; if ((this.bitField0_ & 0x4) == 4) subBuilder = this.maxCond_.toBuilder();  this.maxCond_ = (GuildManagerHandler.QualityCond)input.readMessage(GuildManagerHandler.QualityCond.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.maxCond_); this.maxCond_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x4; break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_DepotCondition_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_DepotCondition_fieldAccessorTable.ensureFieldAccessorsInitialized(DepotCondition.class, Builder.class); } public static Parser<DepotCondition> PARSER = (Parser<DepotCondition>)new AbstractParser<DepotCondition>() { public GuildManagerHandler.DepotCondition parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.DepotCondition(input, extensionRegistry); } }
/*  2213 */     ; private int bitField0_; public static final int USECOND_FIELD_NUMBER = 1; private GuildManagerHandler.UseCond useCond_; public static final int MINCOND_FIELD_NUMBER = 2; private GuildManagerHandler.QualityCond minCond_; public static final int MAXCOND_FIELD_NUMBER = 3; private GuildManagerHandler.QualityCond maxCond_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<DepotCondition> getParserForType() { return PARSER; } public boolean hasUseCond() { return ((this.bitField0_ & 0x1) == 1); } public GuildManagerHandler.UseCond getUseCond() { return this.useCond_; } public GuildManagerHandler.UseCondOrBuilder getUseCondOrBuilder() { return this.useCond_; } public boolean hasMinCond() { return ((this.bitField0_ & 0x2) == 2); } static { defaultInstance.initFields(); }
/*       */ 
/*       */     
/*       */     public GuildManagerHandler.QualityCond getMinCond() {
/*       */       return this.minCond_;
/*       */     }
/*       */     
/*       */     public GuildManagerHandler.QualityCondOrBuilder getMinCondOrBuilder() {
/*       */       return this.minCond_;
/*       */     }
/*       */     
/*       */     public boolean hasMaxCond() {
/*       */       return ((this.bitField0_ & 0x4) == 4);
/*       */     }
/*       */     
/*       */     public GuildManagerHandler.QualityCond getMaxCond() {
/*       */       return this.maxCond_;
/*       */     }
/*       */     
/*       */     public GuildManagerHandler.QualityCondOrBuilder getMaxCondOrBuilder() {
/*       */       return this.maxCond_;
/*       */     }
/*       */     
/*       */     private void initFields() {
/*       */       this.useCond_ = GuildManagerHandler.UseCond.getDefaultInstance();
/*       */       this.minCond_ = GuildManagerHandler.QualityCond.getDefaultInstance();
/*       */       this.maxCond_ = GuildManagerHandler.QualityCond.getDefaultInstance();
/*       */     }
/*       */     
/*       */     public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1) {
/*       */         return true;
/*       */       }
/*       */       if (isInitialized == 0) {
/*       */         return false;
/*       */       }
/*       */       if (hasUseCond() && !getUseCond().isInitialized()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     }
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       getSerializedSize();
/*       */       if ((this.bitField0_ & 0x1) == 1) {
/*       */         output.writeMessage(1, (MessageLite)this.useCond_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x2) == 2) {
/*       */         output.writeMessage(2, (MessageLite)this.minCond_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x4) == 4) {
/*       */         output.writeMessage(3, (MessageLite)this.maxCond_);
/*       */       }
/*       */       getUnknownFields().writeTo(output);
/*       */     }
/*       */     
/*       */     public int getSerializedSize() {
/*       */       int size = this.memoizedSerializedSize;
/*       */       if (size != -1) {
/*       */         return size;
/*       */       }
/*       */       size = 0;
/*       */       if ((this.bitField0_ & 0x1) == 1) {
/*       */         size += CodedOutputStream.computeMessageSize(1, (MessageLite)this.useCond_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x2) == 2) {
/*       */         size += CodedOutputStream.computeMessageSize(2, (MessageLite)this.minCond_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x4) == 4) {
/*       */         size += CodedOutputStream.computeMessageSize(3, (MessageLite)this.maxCond_);
/*       */       }
/*       */       size += getUnknownFields().getSerializedSize();
/*       */       this.memoizedSerializedSize = size;
/*       */       return size;
/*       */     }
/*       */     
/*       */     protected Object writeReplace() throws ObjectStreamException {
/*       */       return super.writeReplace();
/*       */     }
/*       */     
/*       */     public static DepotCondition parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (DepotCondition)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static DepotCondition parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (DepotCondition)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DepotCondition parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (DepotCondition)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static DepotCondition parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (DepotCondition)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DepotCondition parseFrom(InputStream input) throws IOException {
/*       */       return (DepotCondition)PARSER.parseFrom(input);
/*       */     }
/*       */     
/*       */     public static DepotCondition parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (DepotCondition)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DepotCondition parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (DepotCondition)PARSER.parseDelimitedFrom(input);
/*       */     }
/*       */     
/*       */     public static DepotCondition parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (DepotCondition)PARSER.parseDelimitedFrom(input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DepotCondition parseFrom(CodedInputStream input) throws IOException {
/*       */       return (DepotCondition)PARSER.parseFrom(input);
/*       */     }
/*       */     
/*       */     public static DepotCondition parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (DepotCondition)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Builder newBuilder() {
/*       */       return Builder.create();
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder(DepotCondition prototype) {
/*       */       return newBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*       */       return newBuilder(this);
/*       */     }
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
/*       */       Builder builder = new Builder(parent);
/*       */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessage.Builder<Builder>
/*       */       implements GuildManagerHandler.DepotConditionOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       private GuildManagerHandler.UseCond useCond_;
/*       */       private SingleFieldBuilder<GuildManagerHandler.UseCond, GuildManagerHandler.UseCond.Builder, GuildManagerHandler.UseCondOrBuilder> useCondBuilder_;
/*       */       private GuildManagerHandler.QualityCond minCond_;
/*       */       private SingleFieldBuilder<GuildManagerHandler.QualityCond, GuildManagerHandler.QualityCond.Builder, GuildManagerHandler.QualityCondOrBuilder> minCondBuilder_;
/*       */       private GuildManagerHandler.QualityCond maxCond_;
/*       */       private SingleFieldBuilder<GuildManagerHandler.QualityCond, GuildManagerHandler.QualityCond.Builder, GuildManagerHandler.QualityCondOrBuilder> maxCondBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_DepotCondition_descriptor;
/*       */       }
/*       */       
/*       */       protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_DepotCondition_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.DepotCondition.class, Builder.class);
/*       */       }
/*       */       
/*       */       private Builder() {
/*       */         this.useCond_ = GuildManagerHandler.UseCond.getDefaultInstance();
/*       */         this.minCond_ = GuildManagerHandler.QualityCond.getDefaultInstance();
/*       */         this.maxCond_ = GuildManagerHandler.QualityCond.getDefaultInstance();
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private Builder(GeneratedMessage.BuilderParent parent) {
/*       */         super(parent);
/*       */         this.useCond_ = GuildManagerHandler.UseCond.getDefaultInstance();
/*       */         this.minCond_ = GuildManagerHandler.QualityCond.getDefaultInstance();
/*       */         this.maxCond_ = GuildManagerHandler.QualityCond.getDefaultInstance();
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*       */         if (GuildManagerHandler.DepotCondition.alwaysUseFieldBuilders) {
/*       */           getUseCondFieldBuilder();
/*       */           getMinCondFieldBuilder();
/*       */           getMaxCondFieldBuilder();
/*       */         } 
/*       */       }
/*       */       
/*       */       private static Builder create() {
/*       */         return new Builder();
/*       */       }
/*       */       
/*       */       public Builder clear() {
/*       */         super.clear();
/*       */         if (this.useCondBuilder_ == null) {
/*       */           this.useCond_ = GuildManagerHandler.UseCond.getDefaultInstance();
/*       */         } else {
/*       */           this.useCondBuilder_.clear();
/*       */         } 
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         if (this.minCondBuilder_ == null) {
/*       */           this.minCond_ = GuildManagerHandler.QualityCond.getDefaultInstance();
/*       */         } else {
/*       */           this.minCondBuilder_.clear();
/*       */         } 
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         if (this.maxCondBuilder_ == null) {
/*       */           this.maxCond_ = GuildManagerHandler.QualityCond.getDefaultInstance();
/*       */         } else {
/*       */           this.maxCondBuilder_.clear();
/*       */         } 
/*       */         this.bitField0_ &= 0xFFFFFFFB;
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clone() {
/*       */         return create().mergeFrom(buildPartial());
/*       */       }
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_DepotCondition_descriptor;
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.DepotCondition getDefaultInstanceForType() {
/*       */         return GuildManagerHandler.DepotCondition.getDefaultInstance();
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.DepotCondition build() {
/*       */         GuildManagerHandler.DepotCondition result = buildPartial();
/*       */         if (!result.isInitialized()) {
/*       */           throw newUninitializedMessageException(result);
/*       */         }
/*       */         return result;
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.DepotCondition buildPartial() {
/*       */         GuildManagerHandler.DepotCondition result = new GuildManagerHandler.DepotCondition(this);
/*       */         int from_bitField0_ = this.bitField0_;
/*       */         int to_bitField0_ = 0;
/*       */         if ((from_bitField0_ & 0x1) == 1) {
/*       */           to_bitField0_ |= 0x1;
/*       */         }
/*       */         if (this.useCondBuilder_ == null) {
/*       */           result.useCond_ = this.useCond_;
/*       */         } else {
/*       */           result.useCond_ = (GuildManagerHandler.UseCond)this.useCondBuilder_.build();
/*       */         } 
/*       */         if ((from_bitField0_ & 0x2) == 2) {
/*       */           to_bitField0_ |= 0x2;
/*       */         }
/*       */         if (this.minCondBuilder_ == null) {
/*       */           result.minCond_ = this.minCond_;
/*       */         } else {
/*       */           result.minCond_ = (GuildManagerHandler.QualityCond)this.minCondBuilder_.build();
/*       */         } 
/*       */         if ((from_bitField0_ & 0x4) == 4) {
/*       */           to_bitField0_ |= 0x4;
/*       */         }
/*       */         if (this.maxCondBuilder_ == null) {
/*       */           result.maxCond_ = this.maxCond_;
/*       */         } else {
/*       */           result.maxCond_ = (GuildManagerHandler.QualityCond)this.maxCondBuilder_.build();
/*       */         } 
/*       */         result.bitField0_ = to_bitField0_;
/*       */         onBuilt();
/*       */         return result;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*       */         if (other instanceof GuildManagerHandler.DepotCondition)
/*       */           return mergeFrom((GuildManagerHandler.DepotCondition)other); 
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(GuildManagerHandler.DepotCondition other) {
/*       */         if (other == GuildManagerHandler.DepotCondition.getDefaultInstance())
/*       */           return this; 
/*       */         if (other.hasUseCond())
/*       */           mergeUseCond(other.getUseCond()); 
/*       */         if (other.hasMinCond())
/*       */           mergeMinCond(other.getMinCond()); 
/*       */         if (other.hasMaxCond())
/*       */           mergeMaxCond(other.getMaxCond()); 
/*       */         mergeUnknownFields(other.getUnknownFields());
/*       */         return this;
/*       */       }
/*       */       
/*       */       public final boolean isInitialized() {
/*       */         if (hasUseCond() && !getUseCond().isInitialized())
/*       */           return false; 
/*       */         return true;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         GuildManagerHandler.DepotCondition parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (GuildManagerHandler.DepotCondition)GuildManagerHandler.DepotCondition.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (GuildManagerHandler.DepotCondition)e.getUnfinishedMessage();
/*       */           throw e;
/*       */         } finally {
/*       */           if (parsedMessage != null)
/*       */             mergeFrom(parsedMessage); 
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public boolean hasUseCond() {
/*       */         return ((this.bitField0_ & 0x1) == 1);
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.UseCond getUseCond() {
/*       */         if (this.useCondBuilder_ == null)
/*       */           return this.useCond_; 
/*       */         return (GuildManagerHandler.UseCond)this.useCondBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setUseCond(GuildManagerHandler.UseCond value) {
/*       */         if (this.useCondBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.useCond_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.useCondBuilder_.setMessage(value);
/*       */         } 
/*       */         this.bitField0_ |= 0x1;
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setUseCond(GuildManagerHandler.UseCond.Builder builderForValue) {
/*       */         if (this.useCondBuilder_ == null) {
/*       */           this.useCond_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.useCondBuilder_.setMessage(builderForValue.build());
/*       */         } 
/*       */         this.bitField0_ |= 0x1;
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeUseCond(GuildManagerHandler.UseCond value) {
/*       */         if (this.useCondBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x1) == 1 && this.useCond_ != GuildManagerHandler.UseCond.getDefaultInstance()) {
/*       */             this.useCond_ = GuildManagerHandler.UseCond.newBuilder(this.useCond_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.useCond_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.useCondBuilder_.mergeFrom(value);
/*       */         } 
/*       */         this.bitField0_ |= 0x1;
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearUseCond() {
/*       */         if (this.useCondBuilder_ == null) {
/*       */           this.useCond_ = GuildManagerHandler.UseCond.getDefaultInstance();
/*       */           onChanged();
/*       */         } else {
/*       */           this.useCondBuilder_.clear();
/*       */         } 
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         return this;
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.UseCond.Builder getUseCondBuilder() {
/*       */         this.bitField0_ |= 0x1;
/*       */         onChanged();
/*       */         return (GuildManagerHandler.UseCond.Builder)getUseCondFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.UseCondOrBuilder getUseCondOrBuilder() {
/*       */         if (this.useCondBuilder_ != null)
/*       */           return (GuildManagerHandler.UseCondOrBuilder)this.useCondBuilder_.getMessageOrBuilder(); 
/*       */         return this.useCond_;
/*       */       }
/*       */       
/*       */       private SingleFieldBuilder<GuildManagerHandler.UseCond, GuildManagerHandler.UseCond.Builder, GuildManagerHandler.UseCondOrBuilder> getUseCondFieldBuilder() {
/*       */         if (this.useCondBuilder_ == null) {
/*       */           this.useCondBuilder_ = new SingleFieldBuilder(getUseCond(), getParentForChildren(), isClean());
/*       */           this.useCond_ = null;
/*       */         } 
/*       */         return this.useCondBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasMinCond() {
/*       */         return ((this.bitField0_ & 0x2) == 2);
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.QualityCond getMinCond() {
/*       */         if (this.minCondBuilder_ == null)
/*       */           return this.minCond_; 
/*       */         return (GuildManagerHandler.QualityCond)this.minCondBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setMinCond(GuildManagerHandler.QualityCond value) {
/*       */         if (this.minCondBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.minCond_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.minCondBuilder_.setMessage(value);
/*       */         } 
/*       */         this.bitField0_ |= 0x2;
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setMinCond(GuildManagerHandler.QualityCond.Builder builderForValue) {
/*       */         if (this.minCondBuilder_ == null) {
/*       */           this.minCond_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.minCondBuilder_.setMessage(builderForValue.build());
/*       */         } 
/*       */         this.bitField0_ |= 0x2;
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeMinCond(GuildManagerHandler.QualityCond value) {
/*       */         if (this.minCondBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x2) == 2 && this.minCond_ != GuildManagerHandler.QualityCond.getDefaultInstance()) {
/*       */             this.minCond_ = GuildManagerHandler.QualityCond.newBuilder(this.minCond_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.minCond_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.minCondBuilder_.mergeFrom(value);
/*       */         } 
/*       */         this.bitField0_ |= 0x2;
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearMinCond() {
/*       */         if (this.minCondBuilder_ == null) {
/*       */           this.minCond_ = GuildManagerHandler.QualityCond.getDefaultInstance();
/*       */           onChanged();
/*       */         } else {
/*       */           this.minCondBuilder_.clear();
/*       */         } 
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         return this;
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.QualityCond.Builder getMinCondBuilder() {
/*       */         this.bitField0_ |= 0x2;
/*       */         onChanged();
/*       */         return (GuildManagerHandler.QualityCond.Builder)getMinCondFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.QualityCondOrBuilder getMinCondOrBuilder() {
/*       */         if (this.minCondBuilder_ != null)
/*       */           return (GuildManagerHandler.QualityCondOrBuilder)this.minCondBuilder_.getMessageOrBuilder(); 
/*       */         return this.minCond_;
/*       */       }
/*       */       
/*       */       private SingleFieldBuilder<GuildManagerHandler.QualityCond, GuildManagerHandler.QualityCond.Builder, GuildManagerHandler.QualityCondOrBuilder> getMinCondFieldBuilder() {
/*       */         if (this.minCondBuilder_ == null) {
/*       */           this.minCondBuilder_ = new SingleFieldBuilder(getMinCond(), getParentForChildren(), isClean());
/*       */           this.minCond_ = null;
/*       */         } 
/*       */         return this.minCondBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasMaxCond() {
/*       */         return ((this.bitField0_ & 0x4) == 4);
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.QualityCond getMaxCond() {
/*       */         if (this.maxCondBuilder_ == null)
/*       */           return this.maxCond_; 
/*       */         return (GuildManagerHandler.QualityCond)this.maxCondBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setMaxCond(GuildManagerHandler.QualityCond value) {
/*       */         if (this.maxCondBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.maxCond_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.maxCondBuilder_.setMessage(value);
/*       */         } 
/*       */         this.bitField0_ |= 0x4;
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setMaxCond(GuildManagerHandler.QualityCond.Builder builderForValue) {
/*       */         if (this.maxCondBuilder_ == null) {
/*       */           this.maxCond_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.maxCondBuilder_.setMessage(builderForValue.build());
/*       */         } 
/*       */         this.bitField0_ |= 0x4;
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeMaxCond(GuildManagerHandler.QualityCond value) {
/*       */         if (this.maxCondBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x4) == 4 && this.maxCond_ != GuildManagerHandler.QualityCond.getDefaultInstance()) {
/*       */             this.maxCond_ = GuildManagerHandler.QualityCond.newBuilder(this.maxCond_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.maxCond_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.maxCondBuilder_.mergeFrom(value);
/*       */         } 
/*       */         this.bitField0_ |= 0x4;
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearMaxCond() {
/*       */         if (this.maxCondBuilder_ == null) {
/*       */           this.maxCond_ = GuildManagerHandler.QualityCond.getDefaultInstance();
/*       */           onChanged();
/*       */         } else {
/*       */           this.maxCondBuilder_.clear();
/*       */         } 
/*       */         this.bitField0_ &= 0xFFFFFFFB;
/*       */         return this;
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.QualityCond.Builder getMaxCondBuilder() {
/*       */         this.bitField0_ |= 0x4;
/*       */         onChanged();
/*       */         return (GuildManagerHandler.QualityCond.Builder)getMaxCondFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.QualityCondOrBuilder getMaxCondOrBuilder() {
/*       */         if (this.maxCondBuilder_ != null)
/*       */           return (GuildManagerHandler.QualityCondOrBuilder)this.maxCondBuilder_.getMessageOrBuilder(); 
/*       */         return this.maxCond_;
/*       */       }
/*       */       
/*       */       private SingleFieldBuilder<GuildManagerHandler.QualityCond, GuildManagerHandler.QualityCond.Builder, GuildManagerHandler.QualityCondOrBuilder> getMaxCondFieldBuilder() {
/*       */         if (this.maxCondBuilder_ == null) {
/*       */           this.maxCondBuilder_ = new SingleFieldBuilder(getMaxCond(), getParentForChildren(), isClean());
/*       */           this.maxCond_ = null;
/*       */         } 
/*       */         return this.maxCondBuilder_;
/*       */       }
/*       */     }
/*       */   }
/*       */   
/*       */   public static final class RoleInfo
/*       */     extends GeneratedMessage
/*       */     implements RoleInfoOrBuilder
/*       */   {
/*  2766 */     private static final RoleInfo defaultInstance = new RoleInfo(true); private final UnknownFieldSet unknownFields; private RoleInfo(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private RoleInfo(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static RoleInfo getDefaultInstance() { return defaultInstance; } public RoleInfo getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private RoleInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.pro_ = input.readInt32(); break;case 18: bs = input.readBytes(); this.bitField0_ |= 0x2; this.name_ = bs; break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_RoleInfo_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_RoleInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(RoleInfo.class, Builder.class); } public static Parser<RoleInfo> PARSER = (Parser<RoleInfo>)new AbstractParser<RoleInfo>() { public GuildManagerHandler.RoleInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.RoleInfo(input, extensionRegistry); } }; private int bitField0_; public static final int PRO_FIELD_NUMBER = 1; private int pro_; public static final int NAME_FIELD_NUMBER = 2; private Object name_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<RoleInfo> getParserForType() { return PARSER; } public boolean hasPro() { return ((this.bitField0_ & 0x1) == 1); } public int getPro() { return this.pro_; } public boolean hasName() { return ((this.bitField0_ & 0x2) == 2); } public String getName() { Object ref = this.name_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } private void initFields() { this.pro_ = 0; this.name_ = ""; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.pro_);  if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getNameBytes());  getUnknownFields().writeTo(output); } public int getSerializedSize() { int size = this.memoizedSerializedSize; if (size != -1) return size;  size = 0; if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.pro_);  if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getNameBytes());  size += getUnknownFields().getSerializedSize(); this.memoizedSerializedSize = size; return size; } protected Object writeReplace() throws ObjectStreamException { return super.writeReplace(); } public static RoleInfo parseFrom(ByteString data) throws InvalidProtocolBufferException { return (RoleInfo)PARSER.parseFrom(data); } public static RoleInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (RoleInfo)PARSER.parseFrom(data, extensionRegistry); } public static RoleInfo parseFrom(byte[] data) throws InvalidProtocolBufferException { return (RoleInfo)PARSER.parseFrom(data); } public static RoleInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (RoleInfo)PARSER.parseFrom(data, extensionRegistry); } public static RoleInfo parseFrom(InputStream input) throws IOException { return (RoleInfo)PARSER.parseFrom(input); } public static RoleInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (RoleInfo)PARSER.parseFrom(input, extensionRegistry); } public static RoleInfo parseDelimitedFrom(InputStream input) throws IOException { return (RoleInfo)PARSER.parseDelimitedFrom(input); } public static RoleInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (RoleInfo)PARSER.parseDelimitedFrom(input, extensionRegistry); } public static RoleInfo parseFrom(CodedInputStream input) throws IOException { return (RoleInfo)PARSER.parseFrom(input); } public static RoleInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (RoleInfo)PARSER.parseFrom(input, extensionRegistry); } public static Builder newBuilder() { return Builder.create(); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder(RoleInfo prototype) { return newBuilder().mergeFrom(prototype); } public Builder toBuilder() { return newBuilder(this); } protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.RoleInfoOrBuilder {
/*  2767 */       private int bitField0_; private int pro_; private Object name_; public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_RoleInfo_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_RoleInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.RoleInfo.class, Builder.class); } private Builder() { this.name_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessage.BuilderParent parent) { super(parent); this.name_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GuildManagerHandler.RoleInfo.alwaysUseFieldBuilders); } private static Builder create() { return new Builder(); } public Builder clear() { super.clear(); this.pro_ = 0; this.bitField0_ &= 0xFFFFFFFE; this.name_ = ""; this.bitField0_ &= 0xFFFFFFFD; return this; } public Builder clone() { return create().mergeFrom(buildPartial()); } public Descriptors.Descriptor getDescriptorForType() { return GuildManagerHandler.internal_static_pomelo_guild_RoleInfo_descriptor; } public GuildManagerHandler.RoleInfo getDefaultInstanceForType() { return GuildManagerHandler.RoleInfo.getDefaultInstance(); } public GuildManagerHandler.RoleInfo build() { GuildManagerHandler.RoleInfo result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public GuildManagerHandler.RoleInfo buildPartial() { GuildManagerHandler.RoleInfo result = new GuildManagerHandler.RoleInfo(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;  result.pro_ = this.pro_; if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;  result.name_ = this.name_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder mergeFrom(Message other) { if (other instanceof GuildManagerHandler.RoleInfo) return mergeFrom((GuildManagerHandler.RoleInfo)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(GuildManagerHandler.RoleInfo other) { if (other == GuildManagerHandler.RoleInfo.getDefaultInstance()) return this;  if (other.hasPro()) setPro(other.getPro());  if (other.hasName()) { this.bitField0_ |= 0x2; this.name_ = other.name_; onChanged(); }  mergeUnknownFields(other.getUnknownFields()); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { GuildManagerHandler.RoleInfo parsedMessage = null; try { parsedMessage = (GuildManagerHandler.RoleInfo)GuildManagerHandler.RoleInfo.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (GuildManagerHandler.RoleInfo)e.getUnfinishedMessage(); throw e; } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasPro() { return ((this.bitField0_ & 0x1) == 1); } public int getPro() { return this.pro_; } public Builder setPro(int value) { this.bitField0_ |= 0x1; this.pro_ = value; onChanged(); return this; } public Builder clearPro() { this.bitField0_ &= 0xFFFFFFFE; this.pro_ = 0; onChanged(); return this; } public boolean hasName() { return ((this.bitField0_ & 0x2) == 2); } public String getName() { Object ref = this.name_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; }  return (String)ref; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public Builder setName(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.name_ = value; onChanged(); return this; } public Builder clearName() { this.bitField0_ &= 0xFFFFFFFD; this.name_ = GuildManagerHandler.RoleInfo.getDefaultInstance().getName(); onChanged(); return this; } public Builder setNameBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.name_ = value; onChanged(); return this; } } static { defaultInstance.initFields(); }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class ItemRecordInfo
/*       */     extends GeneratedMessage
/*       */     implements ItemRecordInfoOrBuilder
/*       */   {
/*  3320 */     private static final ItemRecordInfo defaultInstance = new ItemRecordInfo(true); private final UnknownFieldSet unknownFields; private ItemRecordInfo(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private ItemRecordInfo(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static ItemRecordInfo getDefaultInstance() { return defaultInstance; } public ItemRecordInfo getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private ItemRecordInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.qColor_ = input.readInt32(); break;case 18: bs = input.readBytes(); this.bitField0_ |= 0x2; this.name_ = bs; break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_ItemRecordInfo_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_ItemRecordInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(ItemRecordInfo.class, Builder.class); } public static Parser<ItemRecordInfo> PARSER = (Parser<ItemRecordInfo>)new AbstractParser<ItemRecordInfo>() { public GuildManagerHandler.ItemRecordInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.ItemRecordInfo(input, extensionRegistry); } }; private int bitField0_; public static final int QCOLOR_FIELD_NUMBER = 1; private int qColor_; public static final int NAME_FIELD_NUMBER = 2; private Object name_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<ItemRecordInfo> getParserForType() { return PARSER; } public boolean hasQColor() { return ((this.bitField0_ & 0x1) == 1); } public int getQColor() { return this.qColor_; } public boolean hasName() { return ((this.bitField0_ & 0x2) == 2); } public String getName() { Object ref = this.name_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } private void initFields() { this.qColor_ = 0; this.name_ = ""; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.qColor_);  if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getNameBytes());  getUnknownFields().writeTo(output); } public int getSerializedSize() { int size = this.memoizedSerializedSize; if (size != -1) return size;  size = 0; if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.qColor_);  if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getNameBytes());  size += getUnknownFields().getSerializedSize(); this.memoizedSerializedSize = size; return size; } protected Object writeReplace() throws ObjectStreamException { return super.writeReplace(); } public static ItemRecordInfo parseFrom(ByteString data) throws InvalidProtocolBufferException { return (ItemRecordInfo)PARSER.parseFrom(data); } public static ItemRecordInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (ItemRecordInfo)PARSER.parseFrom(data, extensionRegistry); } public static ItemRecordInfo parseFrom(byte[] data) throws InvalidProtocolBufferException { return (ItemRecordInfo)PARSER.parseFrom(data); } public static ItemRecordInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (ItemRecordInfo)PARSER.parseFrom(data, extensionRegistry); } public static ItemRecordInfo parseFrom(InputStream input) throws IOException { return (ItemRecordInfo)PARSER.parseFrom(input); } public static ItemRecordInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (ItemRecordInfo)PARSER.parseFrom(input, extensionRegistry); } public static ItemRecordInfo parseDelimitedFrom(InputStream input) throws IOException { return (ItemRecordInfo)PARSER.parseDelimitedFrom(input); } public static ItemRecordInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (ItemRecordInfo)PARSER.parseDelimitedFrom(input, extensionRegistry); } public static ItemRecordInfo parseFrom(CodedInputStream input) throws IOException { return (ItemRecordInfo)PARSER.parseFrom(input); } public static ItemRecordInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (ItemRecordInfo)PARSER.parseFrom(input, extensionRegistry); } public static Builder newBuilder() { return Builder.create(); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder(ItemRecordInfo prototype) { return newBuilder().mergeFrom(prototype); } public Builder toBuilder() { return newBuilder(this); } protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.ItemRecordInfoOrBuilder {
/*  3321 */       private int bitField0_; private int qColor_; private Object name_; public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_ItemRecordInfo_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_ItemRecordInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.ItemRecordInfo.class, Builder.class); } private Builder() { this.name_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessage.BuilderParent parent) { super(parent); this.name_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GuildManagerHandler.ItemRecordInfo.alwaysUseFieldBuilders); } private static Builder create() { return new Builder(); } public Builder clear() { super.clear(); this.qColor_ = 0; this.bitField0_ &= 0xFFFFFFFE; this.name_ = ""; this.bitField0_ &= 0xFFFFFFFD; return this; } public Builder clone() { return create().mergeFrom(buildPartial()); } public Descriptors.Descriptor getDescriptorForType() { return GuildManagerHandler.internal_static_pomelo_guild_ItemRecordInfo_descriptor; } public GuildManagerHandler.ItemRecordInfo getDefaultInstanceForType() { return GuildManagerHandler.ItemRecordInfo.getDefaultInstance(); } public GuildManagerHandler.ItemRecordInfo build() { GuildManagerHandler.ItemRecordInfo result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public GuildManagerHandler.ItemRecordInfo buildPartial() { GuildManagerHandler.ItemRecordInfo result = new GuildManagerHandler.ItemRecordInfo(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;  result.qColor_ = this.qColor_; if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;  result.name_ = this.name_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder mergeFrom(Message other) { if (other instanceof GuildManagerHandler.ItemRecordInfo) return mergeFrom((GuildManagerHandler.ItemRecordInfo)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(GuildManagerHandler.ItemRecordInfo other) { if (other == GuildManagerHandler.ItemRecordInfo.getDefaultInstance()) return this;  if (other.hasQColor()) setQColor(other.getQColor());  if (other.hasName()) { this.bitField0_ |= 0x2; this.name_ = other.name_; onChanged(); }  mergeUnknownFields(other.getUnknownFields()); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { GuildManagerHandler.ItemRecordInfo parsedMessage = null; try { parsedMessage = (GuildManagerHandler.ItemRecordInfo)GuildManagerHandler.ItemRecordInfo.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (GuildManagerHandler.ItemRecordInfo)e.getUnfinishedMessage(); throw e; } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasQColor() { return ((this.bitField0_ & 0x1) == 1); } public int getQColor() { return this.qColor_; } public Builder setQColor(int value) { this.bitField0_ |= 0x1; this.qColor_ = value; onChanged(); return this; } public Builder clearQColor() { this.bitField0_ &= 0xFFFFFFFE; this.qColor_ = 0; onChanged(); return this; } public boolean hasName() { return ((this.bitField0_ & 0x2) == 2); } public String getName() { Object ref = this.name_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; }  return (String)ref; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public Builder setName(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.name_ = value; onChanged(); return this; } public Builder clearName() { this.bitField0_ &= 0xFFFFFFFD; this.name_ = GuildManagerHandler.ItemRecordInfo.getDefaultInstance().getName(); onChanged(); return this; } public Builder setNameBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.name_ = value; onChanged(); return this; } } static { defaultInstance.initFields(); }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class RecordInfo
/*       */     extends GeneratedMessage
/*       */     implements RecordInfoOrBuilder
/*       */   {
/*  5016 */     private static final RecordInfo defaultInstance = new RecordInfo(true); private final UnknownFieldSet unknownFields; private RecordInfo(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private RecordInfo(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static RecordInfo getDefaultInstance() { return defaultInstance; } public RecordInfo getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private RecordInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { GuildManagerHandler.RoleInfo.Builder builder; ByteString bs; GuildManagerHandler.ItemRecordInfo.Builder subBuilder; int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 10: builder = null; if ((this.bitField0_ & 0x1) == 1) builder = this.role1_.toBuilder();  this.role1_ = (GuildManagerHandler.RoleInfo)input.readMessage(GuildManagerHandler.RoleInfo.PARSER, extensionRegistry); if (builder != null) { builder.mergeFrom(this.role1_); this.role1_ = builder.buildPartial(); }  this.bitField0_ |= 0x1; break;case 18: builder = null; if ((this.bitField0_ & 0x2) == 2) builder = this.role2_.toBuilder();  this.role2_ = (GuildManagerHandler.RoleInfo)input.readMessage(GuildManagerHandler.RoleInfo.PARSER, extensionRegistry); if (builder != null) { builder.mergeFrom(this.role2_); this.role2_ = builder.buildPartial(); }  this.bitField0_ |= 0x2; break;case 24: this.bitField0_ |= 0x4; this.resultNum_ = input.readInt32(); break;case 34: bs = input.readBytes(); this.bitField0_ |= 0x8; this.resultStr_ = bs; break;case 42: bs = input.readBytes(); this.bitField0_ |= 0x10; this.time_ = bs; break;case 48: this.bitField0_ |= 0x20; this.recordType_ = input.readInt32(); break;case 58: subBuilder = null; if ((this.bitField0_ & 0x40) == 64) subBuilder = this.item_.toBuilder();  this.item_ = (GuildManagerHandler.ItemRecordInfo)input.readMessage(GuildManagerHandler.ItemRecordInfo.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.item_); this.item_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x40; break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_RecordInfo_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_RecordInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(RecordInfo.class, Builder.class); } public static Parser<RecordInfo> PARSER = (Parser<RecordInfo>)new AbstractParser<RecordInfo>() { public GuildManagerHandler.RecordInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.RecordInfo(input, extensionRegistry); } }
/*  5017 */     ; private int bitField0_; public static final int ROLE1_FIELD_NUMBER = 1; private GuildManagerHandler.RoleInfo role1_; public static final int ROLE2_FIELD_NUMBER = 2; private GuildManagerHandler.RoleInfo role2_; public static final int RESULTNUM_FIELD_NUMBER = 3; private int resultNum_; public static final int RESULTSTR_FIELD_NUMBER = 4; private Object resultStr_; public static final int TIME_FIELD_NUMBER = 5; private Object time_; public static final int RECORDTYPE_FIELD_NUMBER = 6; private int recordType_; public static final int ITEM_FIELD_NUMBER = 7; private GuildManagerHandler.ItemRecordInfo item_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<RecordInfo> getParserForType() { return PARSER; } public boolean hasRole1() { return ((this.bitField0_ & 0x1) == 1); } public GuildManagerHandler.RoleInfo getRole1() { return this.role1_; } public GuildManagerHandler.RoleInfoOrBuilder getRole1OrBuilder() { return this.role1_; } public boolean hasRole2() { return ((this.bitField0_ & 0x2) == 2); } public GuildManagerHandler.RoleInfo getRole2() { return this.role2_; } static { defaultInstance.initFields(); } public GuildManagerHandler.RoleInfoOrBuilder getRole2OrBuilder() { return this.role2_; }
/*       */     public boolean hasResultNum() { return ((this.bitField0_ & 0x4) == 4); }
/*       */     public int getResultNum() { return this.resultNum_; }
/*       */     public boolean hasResultStr() { return ((this.bitField0_ & 0x8) == 8); }
/*       */     public String getResultStr() { Object ref = this.resultStr_; if (ref instanceof String)
/*       */         return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8())
/*       */         this.resultStr_ = s;  return s; }
/*       */     public ByteString getResultStrBytes() { Object ref = this.resultStr_; if (ref instanceof String) {
/*       */         ByteString b = ByteString.copyFromUtf8((String)ref); this.resultStr_ = b; return b;
/*       */       }  return (ByteString)ref; }
/*       */     public boolean hasTime() { return ((this.bitField0_ & 0x10) == 16); }
/*       */     public String getTime() { Object ref = this.time_; if (ref instanceof String)
/*       */         return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8())
/*       */         this.time_ = s;  return s; }
/*       */     public ByteString getTimeBytes() { Object ref = this.time_; if (ref instanceof String) {
/*       */         ByteString b = ByteString.copyFromUtf8((String)ref); this.time_ = b; return b;
/*       */       }  return (ByteString)ref; }
/*       */     public boolean hasRecordType() { return ((this.bitField0_ & 0x20) == 32); }
/*       */     public int getRecordType() { return this.recordType_; }
/*       */     public boolean hasItem() { return ((this.bitField0_ & 0x40) == 64); }
/*       */     public GuildManagerHandler.ItemRecordInfo getItem() { return this.item_; }
/*       */     public GuildManagerHandler.ItemRecordInfoOrBuilder getItemOrBuilder() { return this.item_; }
/*       */     private void initFields() { this.role1_ = GuildManagerHandler.RoleInfo.getDefaultInstance(); this.role2_ = GuildManagerHandler.RoleInfo.getDefaultInstance(); this.resultNum_ = 0; this.resultStr_ = ""; this.time_ = ""; this.recordType_ = 0; this.item_ = GuildManagerHandler.ItemRecordInfo.getDefaultInstance(); }
/*       */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1)
/*       */         return true;  if (isInitialized == 0)
/*       */         return false;  this.memoizedIsInitialized = 1; return true; }
/*       */     public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); if ((this.bitField0_ & 0x1) == 1)
/*       */         output.writeMessage(1, (MessageLite)this.role1_);  if ((this.bitField0_ & 0x2) == 2)
/*       */         output.writeMessage(2, (MessageLite)this.role2_);  if ((this.bitField0_ & 0x4) == 4)
/*       */         output.writeInt32(3, this.resultNum_);  if ((this.bitField0_ & 0x8) == 8)
/*       */         output.writeBytes(4, getResultStrBytes());  if ((this.bitField0_ & 0x10) == 16)
/*       */         output.writeBytes(5, getTimeBytes());  if ((this.bitField0_ & 0x20) == 32)
/*       */         output.writeInt32(6, this.recordType_);  if ((this.bitField0_ & 0x40) == 64)
/*       */         output.writeMessage(7, (MessageLite)this.item_);  getUnknownFields().writeTo(output); }
/*       */     public int getSerializedSize() { int size = this.memoizedSerializedSize; if (size != -1)
/*       */         return size;  size = 0; if ((this.bitField0_ & 0x1) == 1)
/*       */         size += CodedOutputStream.computeMessageSize(1, (MessageLite)this.role1_);  if ((this.bitField0_ & 0x2) == 2)
/*       */         size += CodedOutputStream.computeMessageSize(2, (MessageLite)this.role2_);  if ((this.bitField0_ & 0x4) == 4)
/*       */         size += CodedOutputStream.computeInt32Size(3, this.resultNum_);  if ((this.bitField0_ & 0x8) == 8)
/*       */         size += CodedOutputStream.computeBytesSize(4, getResultStrBytes());  if ((this.bitField0_ & 0x10) == 16)
/*       */         size += CodedOutputStream.computeBytesSize(5, getTimeBytes());  if ((this.bitField0_ & 0x20) == 32)
/*       */         size += CodedOutputStream.computeInt32Size(6, this.recordType_);  if ((this.bitField0_ & 0x40) == 64)
/*       */         size += CodedOutputStream.computeMessageSize(7, (MessageLite)this.item_);  size += getUnknownFields().getSerializedSize(); this.memoizedSerializedSize = size; return size; }
/*       */     protected Object writeReplace() throws ObjectStreamException { return super.writeReplace(); }
/*       */     public static RecordInfo parseFrom(ByteString data) throws InvalidProtocolBufferException { return (RecordInfo)PARSER.parseFrom(data); }
/*       */     public static RecordInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (RecordInfo)PARSER.parseFrom(data, extensionRegistry); }
/*       */     public static RecordInfo parseFrom(byte[] data) throws InvalidProtocolBufferException { return (RecordInfo)PARSER.parseFrom(data); }
/*       */     public static RecordInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (RecordInfo)PARSER.parseFrom(data, extensionRegistry); }
/*       */     public static RecordInfo parseFrom(InputStream input) throws IOException { return (RecordInfo)PARSER.parseFrom(input); }
/*       */     public static RecordInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (RecordInfo)PARSER.parseFrom(input, extensionRegistry); }
/*       */     public static RecordInfo parseDelimitedFrom(InputStream input) throws IOException { return (RecordInfo)PARSER.parseDelimitedFrom(input); }
/*       */     public static RecordInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (RecordInfo)PARSER.parseDelimitedFrom(input, extensionRegistry); }
/*       */     public static RecordInfo parseFrom(CodedInputStream input) throws IOException { return (RecordInfo)PARSER.parseFrom(input); }
/*       */     public static RecordInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (RecordInfo)PARSER.parseFrom(input, extensionRegistry); }
/*       */     public static Builder newBuilder() { return Builder.create(); }
/*       */     public Builder newBuilderForType() { return newBuilder(); }
/*       */     public static Builder newBuilder(RecordInfo prototype) { return newBuilder().mergeFrom(prototype); }
/*       */     public Builder toBuilder() { return newBuilder(this); }
/*       */     protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) { Builder builder = new Builder(parent); return builder; }
/*       */     public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.RecordInfoOrBuilder { private int bitField0_; private GuildManagerHandler.RoleInfo role1_; private SingleFieldBuilder<GuildManagerHandler.RoleInfo, GuildManagerHandler.RoleInfo.Builder, GuildManagerHandler.RoleInfoOrBuilder> role1Builder_; private GuildManagerHandler.RoleInfo role2_; private SingleFieldBuilder<GuildManagerHandler.RoleInfo, GuildManagerHandler.RoleInfo.Builder, GuildManagerHandler.RoleInfoOrBuilder> role2Builder_; private int resultNum_; private Object resultStr_; private Object time_; private int recordType_; private GuildManagerHandler.ItemRecordInfo item_; private SingleFieldBuilder<GuildManagerHandler.ItemRecordInfo, GuildManagerHandler.ItemRecordInfo.Builder, GuildManagerHandler.ItemRecordInfoOrBuilder> itemBuilder_;
/*       */       public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_RecordInfo_descriptor; }
/*       */       protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_RecordInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.RecordInfo.class, Builder.class); }
/*       */       private Builder() { this.role1_ = GuildManagerHandler.RoleInfo.getDefaultInstance(); this.role2_ = GuildManagerHandler.RoleInfo.getDefaultInstance(); this.resultStr_ = ""; this.time_ = ""; this.item_ = GuildManagerHandler.ItemRecordInfo.getDefaultInstance(); maybeForceBuilderInitialization(); }
/*       */       private Builder(GeneratedMessage.BuilderParent parent) { super(parent); this.role1_ = GuildManagerHandler.RoleInfo.getDefaultInstance(); this.role2_ = GuildManagerHandler.RoleInfo.getDefaultInstance(); this.resultStr_ = ""; this.time_ = ""; this.item_ = GuildManagerHandler.ItemRecordInfo.getDefaultInstance(); maybeForceBuilderInitialization(); }
/*       */       private void maybeForceBuilderInitialization() { if (GuildManagerHandler.RecordInfo.alwaysUseFieldBuilders) {
/*       */           getRole1FieldBuilder(); getRole2FieldBuilder(); getItemFieldBuilder();
/*       */         }  }
/*       */       private static Builder create() { return new Builder(); }
/*       */       public Builder clear() { super.clear(); if (this.role1Builder_ == null) {
/*       */           this.role1_ = GuildManagerHandler.RoleInfo.getDefaultInstance();
/*       */         } else {
/*       */           this.role1Builder_.clear();
/*       */         }  this.bitField0_ &= 0xFFFFFFFE; if (this.role2Builder_ == null) {
/*       */           this.role2_ = GuildManagerHandler.RoleInfo.getDefaultInstance();
/*       */         } else {
/*       */           this.role2Builder_.clear();
/*       */         }  this.bitField0_ &= 0xFFFFFFFD; this.resultNum_ = 0; this.bitField0_ &= 0xFFFFFFFB; this.resultStr_ = ""; this.bitField0_ &= 0xFFFFFFF7; this.time_ = ""; this.bitField0_ &= 0xFFFFFFEF; this.recordType_ = 0; this.bitField0_ &= 0xFFFFFFDF; if (this.itemBuilder_ == null) {
/*       */           this.item_ = GuildManagerHandler.ItemRecordInfo.getDefaultInstance();
/*       */         } else {
/*       */           this.itemBuilder_.clear();
/*       */         }  this.bitField0_ &= 0xFFFFFFBF; return this; }
/*       */       public Builder clone() { return create().mergeFrom(buildPartial()); }
/*       */       public Descriptors.Descriptor getDescriptorForType() { return GuildManagerHandler.internal_static_pomelo_guild_RecordInfo_descriptor; }
/*       */       public GuildManagerHandler.RecordInfo getDefaultInstanceForType() { return GuildManagerHandler.RecordInfo.getDefaultInstance(); }
/*       */       public GuildManagerHandler.RecordInfo build() { GuildManagerHandler.RecordInfo result = buildPartial(); if (!result.isInitialized())
/*       */           throw newUninitializedMessageException(result);  return result; }
/*       */       public GuildManagerHandler.RecordInfo buildPartial() { GuildManagerHandler.RecordInfo result = new GuildManagerHandler.RecordInfo(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) == 1)
/*       */           to_bitField0_ |= 0x1;  if (this.role1Builder_ == null) {
/*       */           result.role1_ = this.role1_;
/*       */         } else {
/*       */           result.role1_ = (GuildManagerHandler.RoleInfo)this.role1Builder_.build();
/*       */         }  if ((from_bitField0_ & 0x2) == 2)
/*       */           to_bitField0_ |= 0x2;  if (this.role2Builder_ == null) {
/*       */           result.role2_ = this.role2_;
/*       */         } else {
/*       */           result.role2_ = (GuildManagerHandler.RoleInfo)this.role2Builder_.build();
/*       */         }  if ((from_bitField0_ & 0x4) == 4)
/*       */           to_bitField0_ |= 0x4;  result.resultNum_ = this.resultNum_; if ((from_bitField0_ & 0x8) == 8)
/*       */           to_bitField0_ |= 0x8;  result.resultStr_ = this.resultStr_; if ((from_bitField0_ & 0x10) == 16)
/*       */           to_bitField0_ |= 0x10;  result.time_ = this.time_; if ((from_bitField0_ & 0x20) == 32)
/*       */           to_bitField0_ |= 0x20;  result.recordType_ = this.recordType_; if ((from_bitField0_ & 0x40) == 64)
/*       */           to_bitField0_ |= 0x40;  if (this.itemBuilder_ == null) {
/*       */           result.item_ = this.item_;
/*       */         } else {
/*       */           result.item_ = (GuildManagerHandler.ItemRecordInfo)this.itemBuilder_.build();
/*       */         }  result.bitField0_ = to_bitField0_; onBuilt(); return result; }
/*       */       public Builder mergeFrom(Message other) { if (other instanceof GuildManagerHandler.RecordInfo)
/*       */           return mergeFrom((GuildManagerHandler.RecordInfo)other);  super.mergeFrom(other); return this; }
/*       */       public Builder mergeFrom(GuildManagerHandler.RecordInfo other) { if (other == GuildManagerHandler.RecordInfo.getDefaultInstance())
/*       */           return this;  if (other.hasRole1())
/*       */           mergeRole1(other.getRole1());  if (other.hasRole2())
/*       */           mergeRole2(other.getRole2());  if (other.hasResultNum())
/*       */           setResultNum(other.getResultNum());  if (other.hasResultStr()) {
/*       */           this.bitField0_ |= 0x8; this.resultStr_ = other.resultStr_; onChanged();
/*       */         }  if (other.hasTime()) {
/*       */           this.bitField0_ |= 0x10; this.time_ = other.time_; onChanged();
/*       */         }  if (other.hasRecordType())
/*       */           setRecordType(other.getRecordType());  if (other.hasItem())
/*       */           mergeItem(other.getItem());  mergeUnknownFields(other.getUnknownFields()); return this; }
/*       */       public final boolean isInitialized() { return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { GuildManagerHandler.RecordInfo parsedMessage = null; try {
/*       */           parsedMessage = (GuildManagerHandler.RecordInfo)GuildManagerHandler.RecordInfo.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (GuildManagerHandler.RecordInfo)e.getUnfinishedMessage(); throw e;
/*       */         } finally {
/*       */           if (parsedMessage != null)
/*       */             mergeFrom(parsedMessage); 
/*       */         }  return this; }
/*       */       public boolean hasRole1() { return ((this.bitField0_ & 0x1) == 1); }
/*       */       public GuildManagerHandler.RoleInfo getRole1() { if (this.role1Builder_ == null)
/*       */           return this.role1_;  return (GuildManagerHandler.RoleInfo)this.role1Builder_.getMessage(); }
/*       */       public Builder setRole1(GuildManagerHandler.RoleInfo value) { if (this.role1Builder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException();  this.role1_ = value; onChanged();
/*       */         } else {
/*       */           this.role1Builder_.setMessage(value);
/*       */         }  this.bitField0_ |= 0x1; return this; }
/*       */       public Builder setRole1(GuildManagerHandler.RoleInfo.Builder builderForValue) { if (this.role1Builder_ == null) {
/*       */           this.role1_ = builderForValue.build(); onChanged();
/*       */         } else {
/*       */           this.role1Builder_.setMessage(builderForValue.build());
/*       */         }  this.bitField0_ |= 0x1; return this; }
/*       */       public Builder mergeRole1(GuildManagerHandler.RoleInfo value) { if (this.role1Builder_ == null) {
/*       */           if ((this.bitField0_ & 0x1) == 1 && this.role1_ != GuildManagerHandler.RoleInfo.getDefaultInstance()) {
/*       */             this.role1_ = GuildManagerHandler.RoleInfo.newBuilder(this.role1_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.role1_ = value;
/*       */           }  onChanged();
/*       */         } else {
/*       */           this.role1Builder_.mergeFrom(value);
/*       */         }  this.bitField0_ |= 0x1; return this; }
/*       */       public Builder clearRole1() { if (this.role1Builder_ == null) {
/*       */           this.role1_ = GuildManagerHandler.RoleInfo.getDefaultInstance(); onChanged();
/*       */         } else {
/*       */           this.role1Builder_.clear();
/*       */         }  this.bitField0_ &= 0xFFFFFFFE; return this; }
/*       */       public GuildManagerHandler.RoleInfo.Builder getRole1Builder() { this.bitField0_ |= 0x1; onChanged(); return (GuildManagerHandler.RoleInfo.Builder)getRole1FieldBuilder().getBuilder(); }
/*       */       public GuildManagerHandler.RoleInfoOrBuilder getRole1OrBuilder() { if (this.role1Builder_ != null)
/*       */           return (GuildManagerHandler.RoleInfoOrBuilder)this.role1Builder_.getMessageOrBuilder();  return this.role1_; }
/*       */       private SingleFieldBuilder<GuildManagerHandler.RoleInfo, GuildManagerHandler.RoleInfo.Builder, GuildManagerHandler.RoleInfoOrBuilder> getRole1FieldBuilder() { if (this.role1Builder_ == null) {
/*       */           this.role1Builder_ = new SingleFieldBuilder(getRole1(), getParentForChildren(), isClean()); this.role1_ = null;
/*       */         }  return this.role1Builder_; }
/*       */       public boolean hasRole2() { return ((this.bitField0_ & 0x2) == 2); }
/*       */       public GuildManagerHandler.RoleInfo getRole2() { if (this.role2Builder_ == null)
/*       */           return this.role2_;  return (GuildManagerHandler.RoleInfo)this.role2Builder_.getMessage(); }
/*       */       public Builder setRole2(GuildManagerHandler.RoleInfo value) { if (this.role2Builder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException();  this.role2_ = value; onChanged();
/*       */         } else {
/*       */           this.role2Builder_.setMessage(value);
/*       */         }  this.bitField0_ |= 0x2; return this; }
/*       */       public Builder setRole2(GuildManagerHandler.RoleInfo.Builder builderForValue) { if (this.role2Builder_ == null) {
/*       */           this.role2_ = builderForValue.build(); onChanged();
/*       */         } else {
/*       */           this.role2Builder_.setMessage(builderForValue.build());
/*       */         }  this.bitField0_ |= 0x2; return this; }
/*       */       public Builder mergeRole2(GuildManagerHandler.RoleInfo value) { if (this.role2Builder_ == null) {
/*       */           if ((this.bitField0_ & 0x2) == 2 && this.role2_ != GuildManagerHandler.RoleInfo.getDefaultInstance()) {
/*       */             this.role2_ = GuildManagerHandler.RoleInfo.newBuilder(this.role2_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.role2_ = value;
/*       */           }  onChanged();
/*       */         } else {
/*       */           this.role2Builder_.mergeFrom(value);
/*       */         }  this.bitField0_ |= 0x2; return this; }
/*       */       public Builder clearRole2() { if (this.role2Builder_ == null) {
/*       */           this.role2_ = GuildManagerHandler.RoleInfo.getDefaultInstance(); onChanged();
/*       */         } else {
/*       */           this.role2Builder_.clear();
/*       */         }  this.bitField0_ &= 0xFFFFFFFD; return this; }
/*       */       public GuildManagerHandler.RoleInfo.Builder getRole2Builder() { this.bitField0_ |= 0x2; onChanged(); return (GuildManagerHandler.RoleInfo.Builder)getRole2FieldBuilder().getBuilder(); }
/*       */       public GuildManagerHandler.RoleInfoOrBuilder getRole2OrBuilder() { if (this.role2Builder_ != null)
/*       */           return (GuildManagerHandler.RoleInfoOrBuilder)this.role2Builder_.getMessageOrBuilder();  return this.role2_; }
/*       */       private SingleFieldBuilder<GuildManagerHandler.RoleInfo, GuildManagerHandler.RoleInfo.Builder, GuildManagerHandler.RoleInfoOrBuilder> getRole2FieldBuilder() { if (this.role2Builder_ == null) {
/*       */           this.role2Builder_ = new SingleFieldBuilder(getRole2(), getParentForChildren(), isClean()); this.role2_ = null;
/*       */         }  return this.role2Builder_; }
/*       */       public boolean hasResultNum() { return ((this.bitField0_ & 0x4) == 4); }
/*       */       public int getResultNum() { return this.resultNum_; }
/*       */       public Builder setResultNum(int value) { this.bitField0_ |= 0x4; this.resultNum_ = value; onChanged(); return this; }
/*       */       public Builder clearResultNum() { this.bitField0_ &= 0xFFFFFFFB; this.resultNum_ = 0; onChanged(); return this; }
/*       */       public boolean hasResultStr() { return ((this.bitField0_ & 0x8) == 8); }
/*       */       public String getResultStr() { Object ref = this.resultStr_; if (!(ref instanceof String)) {
/*       */           ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8())
/*       */             this.resultStr_ = s;  return s;
/*       */         }  return (String)ref; }
/*       */       public ByteString getResultStrBytes() { Object ref = this.resultStr_; if (ref instanceof String) {
/*       */           ByteString b = ByteString.copyFromUtf8((String)ref); this.resultStr_ = b; return b;
/*       */         }  return (ByteString)ref; }
/*       */       public Builder setResultStr(String value) { if (value == null)
/*       */           throw new NullPointerException(); 
/*       */         this.bitField0_ |= 0x8;
/*       */         this.resultStr_ = value;
/*       */         onChanged();
/*       */         return this; }
/*       */       public Builder clearResultStr() { this.bitField0_ &= 0xFFFFFFF7;
/*       */         this.resultStr_ = GuildManagerHandler.RecordInfo.getDefaultInstance().getResultStr();
/*       */         onChanged();
/*       */         return this; }
/*       */       public Builder setResultStrBytes(ByteString value) { if (value == null)
/*       */           throw new NullPointerException(); 
/*       */         this.bitField0_ |= 0x8;
/*       */         this.resultStr_ = value;
/*       */         onChanged();
/*       */         return this; }
/*       */       public boolean hasTime() { return ((this.bitField0_ & 0x10) == 16); }
/*       */       public String getTime() { Object ref = this.time_;
/*       */         if (!(ref instanceof String)) {
/*       */           ByteString bs = (ByteString)ref;
/*       */           String s = bs.toStringUtf8();
/*       */           if (bs.isValidUtf8())
/*       */             this.time_ = s; 
/*       */           return s;
/*       */         } 
/*       */         return (String)ref; }
/*       */       public ByteString getTimeBytes() { Object ref = this.time_;
/*       */         if (ref instanceof String) {
/*       */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           this.time_ = b;
/*       */           return b;
/*       */         } 
/*       */         return (ByteString)ref; }
/*       */       public Builder setTime(String value) { if (value == null)
/*       */           throw new NullPointerException(); 
/*       */         this.bitField0_ |= 0x10;
/*       */         this.time_ = value;
/*       */         onChanged();
/*       */         return this; }
/*       */       public Builder clearTime() { this.bitField0_ &= 0xFFFFFFEF;
/*       */         this.time_ = GuildManagerHandler.RecordInfo.getDefaultInstance().getTime();
/*       */         onChanged();
/*       */         return this; }
/*       */       public Builder setTimeBytes(ByteString value) { if (value == null)
/*       */           throw new NullPointerException(); 
/*       */         this.bitField0_ |= 0x10;
/*       */         this.time_ = value;
/*       */         onChanged();
/*       */         return this; }
/*       */       public boolean hasRecordType() { return ((this.bitField0_ & 0x20) == 32); }
/*       */       public int getRecordType() { return this.recordType_; }
/*       */       public Builder setRecordType(int value) { this.bitField0_ |= 0x20;
/*       */         this.recordType_ = value;
/*       */         onChanged();
/*       */         return this; }
/*       */       public Builder clearRecordType() { this.bitField0_ &= 0xFFFFFFDF;
/*       */         this.recordType_ = 0;
/*       */         onChanged();
/*       */         return this; }
/*       */       public boolean hasItem() { return ((this.bitField0_ & 0x40) == 64); }
/*       */       public GuildManagerHandler.ItemRecordInfo getItem() { if (this.itemBuilder_ == null)
/*       */           return this.item_; 
/*       */         return (GuildManagerHandler.ItemRecordInfo)this.itemBuilder_.getMessage(); }
/*       */       public Builder setItem(GuildManagerHandler.ItemRecordInfo value) { if (this.itemBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.item_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.itemBuilder_.setMessage(value);
/*       */         } 
/*       */         this.bitField0_ |= 0x40;
/*       */         return this; }
/*       */       public Builder setItem(GuildManagerHandler.ItemRecordInfo.Builder builderForValue) { if (this.itemBuilder_ == null) {
/*       */           this.item_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.itemBuilder_.setMessage(builderForValue.build());
/*       */         } 
/*       */         this.bitField0_ |= 0x40;
/*       */         return this; }
/*       */       public Builder mergeItem(GuildManagerHandler.ItemRecordInfo value) { if (this.itemBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x40) == 64 && this.item_ != GuildManagerHandler.ItemRecordInfo.getDefaultInstance()) {
/*       */             this.item_ = GuildManagerHandler.ItemRecordInfo.newBuilder(this.item_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.item_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.itemBuilder_.mergeFrom(value);
/*       */         } 
/*       */         this.bitField0_ |= 0x40;
/*       */         return this; }
/*       */       public Builder clearItem() { if (this.itemBuilder_ == null) {
/*       */           this.item_ = GuildManagerHandler.ItemRecordInfo.getDefaultInstance();
/*       */           onChanged();
/*       */         } else {
/*       */           this.itemBuilder_.clear();
/*       */         } 
/*       */         this.bitField0_ &= 0xFFFFFFBF;
/*       */         return this; }
/*       */       public GuildManagerHandler.ItemRecordInfo.Builder getItemBuilder() { this.bitField0_ |= 0x40;
/*       */         onChanged();
/*       */         return (GuildManagerHandler.ItemRecordInfo.Builder)getItemFieldBuilder().getBuilder(); }
/*       */       public GuildManagerHandler.ItemRecordInfoOrBuilder getItemOrBuilder() { if (this.itemBuilder_ != null)
/*       */           return (GuildManagerHandler.ItemRecordInfoOrBuilder)this.itemBuilder_.getMessageOrBuilder(); 
/*       */         return this.item_; }
/*       */       private SingleFieldBuilder<GuildManagerHandler.ItemRecordInfo, GuildManagerHandler.ItemRecordInfo.Builder, GuildManagerHandler.ItemRecordInfoOrBuilder> getItemFieldBuilder() { if (this.itemBuilder_ == null) {
/*       */           this.itemBuilder_ = new SingleFieldBuilder(getItem(), getParentForChildren(), isClean());
/*       */           this.item_ = null;
/*       */         } 
/*       */         return this.itemBuilder_; } } }
/*  5337 */   public static final class GetDepotAllGridsRequest extends GeneratedMessage implements GetDepotAllGridsRequestOrBuilder { private static final GetDepotAllGridsRequest defaultInstance = new GetDepotAllGridsRequest(true); private final UnknownFieldSet unknownFields; private GetDepotAllGridsRequest(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private GetDepotAllGridsRequest(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static GetDepotAllGridsRequest getDefaultInstance() { return defaultInstance; } public GetDepotAllGridsRequest getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private GetDepotAllGridsRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotAllGridsRequest_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotAllGridsRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GetDepotAllGridsRequest.class, Builder.class); } public static Parser<GetDepotAllGridsRequest> PARSER = (Parser<GetDepotAllGridsRequest>)new AbstractParser<GetDepotAllGridsRequest>() { public GuildManagerHandler.GetDepotAllGridsRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.GetDepotAllGridsRequest(input, extensionRegistry); } }; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<GetDepotAllGridsRequest> getParserForType() { return PARSER; } private void initFields() {} public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); getUnknownFields().writeTo(output); } public int getSerializedSize() { int size = this.memoizedSerializedSize; if (size != -1) return size;  size = 0; size += getUnknownFields().getSerializedSize(); this.memoizedSerializedSize = size; return size; } protected Object writeReplace() throws ObjectStreamException { return super.writeReplace(); } public static GetDepotAllGridsRequest parseFrom(ByteString data) throws InvalidProtocolBufferException { return (GetDepotAllGridsRequest)PARSER.parseFrom(data); } public static GetDepotAllGridsRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (GetDepotAllGridsRequest)PARSER.parseFrom(data, extensionRegistry); } public static GetDepotAllGridsRequest parseFrom(byte[] data) throws InvalidProtocolBufferException { return (GetDepotAllGridsRequest)PARSER.parseFrom(data); } public static GetDepotAllGridsRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (GetDepotAllGridsRequest)PARSER.parseFrom(data, extensionRegistry); } public static GetDepotAllGridsRequest parseFrom(InputStream input) throws IOException { return (GetDepotAllGridsRequest)PARSER.parseFrom(input); } public static GetDepotAllGridsRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetDepotAllGridsRequest)PARSER.parseFrom(input, extensionRegistry); } public static GetDepotAllGridsRequest parseDelimitedFrom(InputStream input) throws IOException { return (GetDepotAllGridsRequest)PARSER.parseDelimitedFrom(input); } public static GetDepotAllGridsRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetDepotAllGridsRequest)PARSER.parseDelimitedFrom(input, extensionRegistry); } public static GetDepotAllGridsRequest parseFrom(CodedInputStream input) throws IOException { return (GetDepotAllGridsRequest)PARSER.parseFrom(input); } public static GetDepotAllGridsRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetDepotAllGridsRequest)PARSER.parseFrom(input, extensionRegistry); } public static Builder newBuilder() { return Builder.create(); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder(GetDepotAllGridsRequest prototype) { return newBuilder().mergeFrom(prototype); } public Builder toBuilder() { return newBuilder(this); } protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.GetDepotAllGridsRequestOrBuilder {
/*  5338 */       public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotAllGridsRequest_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotAllGridsRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.GetDepotAllGridsRequest.class, Builder.class); } private Builder() { maybeForceBuilderInitialization(); } private Builder(GeneratedMessage.BuilderParent parent) { super(parent); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GuildManagerHandler.GetDepotAllGridsRequest.alwaysUseFieldBuilders); } private static Builder create() { return new Builder(); } public Builder clear() { super.clear(); return this; } public Builder clone() { return create().mergeFrom(buildPartial()); } public Descriptors.Descriptor getDescriptorForType() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotAllGridsRequest_descriptor; } public GuildManagerHandler.GetDepotAllGridsRequest getDefaultInstanceForType() { return GuildManagerHandler.GetDepotAllGridsRequest.getDefaultInstance(); } public GuildManagerHandler.GetDepotAllGridsRequest build() { GuildManagerHandler.GetDepotAllGridsRequest result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public GuildManagerHandler.GetDepotAllGridsRequest buildPartial() { GuildManagerHandler.GetDepotAllGridsRequest result = new GuildManagerHandler.GetDepotAllGridsRequest(this); onBuilt(); return result; } public Builder mergeFrom(Message other) { if (other instanceof GuildManagerHandler.GetDepotAllGridsRequest) return mergeFrom((GuildManagerHandler.GetDepotAllGridsRequest)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(GuildManagerHandler.GetDepotAllGridsRequest other) { if (other == GuildManagerHandler.GetDepotAllGridsRequest.getDefaultInstance()) return this;  mergeUnknownFields(other.getUnknownFields()); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { GuildManagerHandler.GetDepotAllGridsRequest parsedMessage = null; try { parsedMessage = (GuildManagerHandler.GetDepotAllGridsRequest)GuildManagerHandler.GetDepotAllGridsRequest.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (GuildManagerHandler.GetDepotAllGridsRequest)e.getUnfinishedMessage(); throw e; } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } } static { defaultInstance.initFields(); }
/*       */      }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class GetDepotAllDetailsRequest
/*       */     extends GeneratedMessage
/*       */     implements GetDepotAllDetailsRequestOrBuilder
/*       */   {
/*  5658 */     private static final GetDepotAllDetailsRequest defaultInstance = new GetDepotAllDetailsRequest(true); private final UnknownFieldSet unknownFields; private GetDepotAllDetailsRequest(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private GetDepotAllDetailsRequest(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static GetDepotAllDetailsRequest getDefaultInstance() { return defaultInstance; } public GetDepotAllDetailsRequest getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private GetDepotAllDetailsRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotAllDetailsRequest_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotAllDetailsRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GetDepotAllDetailsRequest.class, Builder.class); } public static Parser<GetDepotAllDetailsRequest> PARSER = (Parser<GetDepotAllDetailsRequest>)new AbstractParser<GetDepotAllDetailsRequest>() { public GuildManagerHandler.GetDepotAllDetailsRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.GetDepotAllDetailsRequest(input, extensionRegistry); } }; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<GetDepotAllDetailsRequest> getParserForType() { return PARSER; } private void initFields() {} public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); getUnknownFields().writeTo(output); } public int getSerializedSize() { int size = this.memoizedSerializedSize; if (size != -1) return size;  size = 0; size += getUnknownFields().getSerializedSize(); this.memoizedSerializedSize = size; return size; } protected Object writeReplace() throws ObjectStreamException { return super.writeReplace(); } public static GetDepotAllDetailsRequest parseFrom(ByteString data) throws InvalidProtocolBufferException { return (GetDepotAllDetailsRequest)PARSER.parseFrom(data); } public static GetDepotAllDetailsRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (GetDepotAllDetailsRequest)PARSER.parseFrom(data, extensionRegistry); } public static GetDepotAllDetailsRequest parseFrom(byte[] data) throws InvalidProtocolBufferException { return (GetDepotAllDetailsRequest)PARSER.parseFrom(data); } public static GetDepotAllDetailsRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (GetDepotAllDetailsRequest)PARSER.parseFrom(data, extensionRegistry); } public static GetDepotAllDetailsRequest parseFrom(InputStream input) throws IOException { return (GetDepotAllDetailsRequest)PARSER.parseFrom(input); } public static GetDepotAllDetailsRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetDepotAllDetailsRequest)PARSER.parseFrom(input, extensionRegistry); } public static GetDepotAllDetailsRequest parseDelimitedFrom(InputStream input) throws IOException { return (GetDepotAllDetailsRequest)PARSER.parseDelimitedFrom(input); } public static GetDepotAllDetailsRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetDepotAllDetailsRequest)PARSER.parseDelimitedFrom(input, extensionRegistry); } public static GetDepotAllDetailsRequest parseFrom(CodedInputStream input) throws IOException { return (GetDepotAllDetailsRequest)PARSER.parseFrom(input); } public static GetDepotAllDetailsRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetDepotAllDetailsRequest)PARSER.parseFrom(input, extensionRegistry); } public static Builder newBuilder() { return Builder.create(); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder(GetDepotAllDetailsRequest prototype) { return newBuilder().mergeFrom(prototype); } public Builder toBuilder() { return newBuilder(this); } protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.GetDepotAllDetailsRequestOrBuilder {
/*  5659 */       public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotAllDetailsRequest_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotAllDetailsRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.GetDepotAllDetailsRequest.class, Builder.class); } private Builder() { maybeForceBuilderInitialization(); } private Builder(GeneratedMessage.BuilderParent parent) { super(parent); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GuildManagerHandler.GetDepotAllDetailsRequest.alwaysUseFieldBuilders); } private static Builder create() { return new Builder(); } public Builder clear() { super.clear(); return this; } public Builder clone() { return create().mergeFrom(buildPartial()); } public Descriptors.Descriptor getDescriptorForType() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotAllDetailsRequest_descriptor; } public GuildManagerHandler.GetDepotAllDetailsRequest getDefaultInstanceForType() { return GuildManagerHandler.GetDepotAllDetailsRequest.getDefaultInstance(); } public GuildManagerHandler.GetDepotAllDetailsRequest build() { GuildManagerHandler.GetDepotAllDetailsRequest result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public GuildManagerHandler.GetDepotAllDetailsRequest buildPartial() { GuildManagerHandler.GetDepotAllDetailsRequest result = new GuildManagerHandler.GetDepotAllDetailsRequest(this); onBuilt(); return result; } public Builder mergeFrom(Message other) { if (other instanceof GuildManagerHandler.GetDepotAllDetailsRequest) return mergeFrom((GuildManagerHandler.GetDepotAllDetailsRequest)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(GuildManagerHandler.GetDepotAllDetailsRequest other) { if (other == GuildManagerHandler.GetDepotAllDetailsRequest.getDefaultInstance()) return this;  mergeUnknownFields(other.getUnknownFields()); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { GuildManagerHandler.GetDepotAllDetailsRequest parsedMessage = null; try { parsedMessage = (GuildManagerHandler.GetDepotAllDetailsRequest)GuildManagerHandler.GetDepotAllDetailsRequest.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (GuildManagerHandler.GetDepotAllDetailsRequest)e.getUnfinishedMessage(); throw e; } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } } static { defaultInstance.initFields(); }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class GetDepotOneGridInfoRequest
/*       */     extends GeneratedMessage
/*       */     implements GetDepotOneGridInfoRequestOrBuilder
/*       */   {
/*  6063 */     private static final GetDepotOneGridInfoRequest defaultInstance = new GetDepotOneGridInfoRequest(true); private final UnknownFieldSet unknownFields; private GetDepotOneGridInfoRequest(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private GetDepotOneGridInfoRequest(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static GetDepotOneGridInfoRequest getDefaultInstance() { return defaultInstance; } public GetDepotOneGridInfoRequest getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private GetDepotOneGridInfoRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.bagIndex_ = input.readInt32(); break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotOneGridInfoRequest_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotOneGridInfoRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GetDepotOneGridInfoRequest.class, Builder.class); } public static Parser<GetDepotOneGridInfoRequest> PARSER = (Parser<GetDepotOneGridInfoRequest>)new AbstractParser<GetDepotOneGridInfoRequest>() { public GuildManagerHandler.GetDepotOneGridInfoRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.GetDepotOneGridInfoRequest(input, extensionRegistry); } }; private int bitField0_; public static final int BAGINDEX_FIELD_NUMBER = 1; private int bagIndex_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<GetDepotOneGridInfoRequest> getParserForType() { return PARSER; } public boolean hasBagIndex() { return ((this.bitField0_ & 0x1) == 1); } public int getBagIndex() { return this.bagIndex_; } private void initFields() { this.bagIndex_ = 0; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.bagIndex_);  getUnknownFields().writeTo(output); } public int getSerializedSize() { int size = this.memoizedSerializedSize; if (size != -1) return size;  size = 0; if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.bagIndex_);  size += getUnknownFields().getSerializedSize(); this.memoizedSerializedSize = size; return size; } protected Object writeReplace() throws ObjectStreamException { return super.writeReplace(); } public static GetDepotOneGridInfoRequest parseFrom(ByteString data) throws InvalidProtocolBufferException { return (GetDepotOneGridInfoRequest)PARSER.parseFrom(data); } public static GetDepotOneGridInfoRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (GetDepotOneGridInfoRequest)PARSER.parseFrom(data, extensionRegistry); } public static GetDepotOneGridInfoRequest parseFrom(byte[] data) throws InvalidProtocolBufferException { return (GetDepotOneGridInfoRequest)PARSER.parseFrom(data); } public static GetDepotOneGridInfoRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (GetDepotOneGridInfoRequest)PARSER.parseFrom(data, extensionRegistry); } public static GetDepotOneGridInfoRequest parseFrom(InputStream input) throws IOException { return (GetDepotOneGridInfoRequest)PARSER.parseFrom(input); } public static GetDepotOneGridInfoRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetDepotOneGridInfoRequest)PARSER.parseFrom(input, extensionRegistry); } public static GetDepotOneGridInfoRequest parseDelimitedFrom(InputStream input) throws IOException { return (GetDepotOneGridInfoRequest)PARSER.parseDelimitedFrom(input); } public static GetDepotOneGridInfoRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetDepotOneGridInfoRequest)PARSER.parseDelimitedFrom(input, extensionRegistry); } public static GetDepotOneGridInfoRequest parseFrom(CodedInputStream input) throws IOException { return (GetDepotOneGridInfoRequest)PARSER.parseFrom(input); } public static GetDepotOneGridInfoRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetDepotOneGridInfoRequest)PARSER.parseFrom(input, extensionRegistry); } public static Builder newBuilder() { return Builder.create(); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder(GetDepotOneGridInfoRequest prototype) { return newBuilder().mergeFrom(prototype); } public Builder toBuilder() { return newBuilder(this); } protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.GetDepotOneGridInfoRequestOrBuilder {
/*  6064 */       private int bitField0_; private int bagIndex_; public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotOneGridInfoRequest_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotOneGridInfoRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.GetDepotOneGridInfoRequest.class, Builder.class); } private Builder() { maybeForceBuilderInitialization(); } private Builder(GeneratedMessage.BuilderParent parent) { super(parent); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GuildManagerHandler.GetDepotOneGridInfoRequest.alwaysUseFieldBuilders); } private static Builder create() { return new Builder(); } public Builder clear() { super.clear(); this.bagIndex_ = 0; this.bitField0_ &= 0xFFFFFFFE; return this; } public Builder clone() { return create().mergeFrom(buildPartial()); } public Descriptors.Descriptor getDescriptorForType() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotOneGridInfoRequest_descriptor; } public GuildManagerHandler.GetDepotOneGridInfoRequest getDefaultInstanceForType() { return GuildManagerHandler.GetDepotOneGridInfoRequest.getDefaultInstance(); } public GuildManagerHandler.GetDepotOneGridInfoRequest build() { GuildManagerHandler.GetDepotOneGridInfoRequest result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public GuildManagerHandler.GetDepotOneGridInfoRequest buildPartial() { GuildManagerHandler.GetDepotOneGridInfoRequest result = new GuildManagerHandler.GetDepotOneGridInfoRequest(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;  result.bagIndex_ = this.bagIndex_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder mergeFrom(Message other) { if (other instanceof GuildManagerHandler.GetDepotOneGridInfoRequest) return mergeFrom((GuildManagerHandler.GetDepotOneGridInfoRequest)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(GuildManagerHandler.GetDepotOneGridInfoRequest other) { if (other == GuildManagerHandler.GetDepotOneGridInfoRequest.getDefaultInstance()) return this;  if (other.hasBagIndex()) setBagIndex(other.getBagIndex());  mergeUnknownFields(other.getUnknownFields()); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { GuildManagerHandler.GetDepotOneGridInfoRequest parsedMessage = null; try { parsedMessage = (GuildManagerHandler.GetDepotOneGridInfoRequest)GuildManagerHandler.GetDepotOneGridInfoRequest.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (GuildManagerHandler.GetDepotOneGridInfoRequest)e.getUnfinishedMessage(); throw e; } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasBagIndex() { return ((this.bitField0_ & 0x1) == 1); } public int getBagIndex() { return this.bagIndex_; } public Builder setBagIndex(int value) { this.bitField0_ |= 0x1; this.bagIndex_ = value; onChanged(); return this; } public Builder clearBagIndex() { this.bitField0_ &= 0xFFFFFFFE; this.bagIndex_ = 0; onChanged(); return this; } } static { defaultInstance.initFields(); }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class GetDepotInfoRequest
/*       */     extends GeneratedMessage
/*       */     implements GetDepotInfoRequestOrBuilder
/*       */   {
/*  6384 */     private static final GetDepotInfoRequest defaultInstance = new GetDepotInfoRequest(true); private final UnknownFieldSet unknownFields; private GetDepotInfoRequest(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private GetDepotInfoRequest(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static GetDepotInfoRequest getDefaultInstance() { return defaultInstance; } public GetDepotInfoRequest getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private GetDepotInfoRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotInfoRequest_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotInfoRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GetDepotInfoRequest.class, Builder.class); } public static Parser<GetDepotInfoRequest> PARSER = (Parser<GetDepotInfoRequest>)new AbstractParser<GetDepotInfoRequest>() { public GuildManagerHandler.GetDepotInfoRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.GetDepotInfoRequest(input, extensionRegistry); } }; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<GetDepotInfoRequest> getParserForType() { return PARSER; } private void initFields() {} public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); getUnknownFields().writeTo(output); } public int getSerializedSize() { int size = this.memoizedSerializedSize; if (size != -1) return size;  size = 0; size += getUnknownFields().getSerializedSize(); this.memoizedSerializedSize = size; return size; } protected Object writeReplace() throws ObjectStreamException { return super.writeReplace(); } public static GetDepotInfoRequest parseFrom(ByteString data) throws InvalidProtocolBufferException { return (GetDepotInfoRequest)PARSER.parseFrom(data); } public static GetDepotInfoRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (GetDepotInfoRequest)PARSER.parseFrom(data, extensionRegistry); } public static GetDepotInfoRequest parseFrom(byte[] data) throws InvalidProtocolBufferException { return (GetDepotInfoRequest)PARSER.parseFrom(data); } public static GetDepotInfoRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (GetDepotInfoRequest)PARSER.parseFrom(data, extensionRegistry); } public static GetDepotInfoRequest parseFrom(InputStream input) throws IOException { return (GetDepotInfoRequest)PARSER.parseFrom(input); } public static GetDepotInfoRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetDepotInfoRequest)PARSER.parseFrom(input, extensionRegistry); } public static GetDepotInfoRequest parseDelimitedFrom(InputStream input) throws IOException { return (GetDepotInfoRequest)PARSER.parseDelimitedFrom(input); } public static GetDepotInfoRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetDepotInfoRequest)PARSER.parseDelimitedFrom(input, extensionRegistry); } public static GetDepotInfoRequest parseFrom(CodedInputStream input) throws IOException { return (GetDepotInfoRequest)PARSER.parseFrom(input); } public static GetDepotInfoRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetDepotInfoRequest)PARSER.parseFrom(input, extensionRegistry); } public static Builder newBuilder() { return Builder.create(); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder(GetDepotInfoRequest prototype) { return newBuilder().mergeFrom(prototype); } public Builder toBuilder() { return newBuilder(this); } protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.GetDepotInfoRequestOrBuilder {
/*  6385 */       public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotInfoRequest_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotInfoRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.GetDepotInfoRequest.class, Builder.class); } private Builder() { maybeForceBuilderInitialization(); } private Builder(GeneratedMessage.BuilderParent parent) { super(parent); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GuildManagerHandler.GetDepotInfoRequest.alwaysUseFieldBuilders); } private static Builder create() { return new Builder(); } public Builder clear() { super.clear(); return this; } public Builder clone() { return create().mergeFrom(buildPartial()); } public Descriptors.Descriptor getDescriptorForType() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotInfoRequest_descriptor; } public GuildManagerHandler.GetDepotInfoRequest getDefaultInstanceForType() { return GuildManagerHandler.GetDepotInfoRequest.getDefaultInstance(); } public GuildManagerHandler.GetDepotInfoRequest build() { GuildManagerHandler.GetDepotInfoRequest result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public GuildManagerHandler.GetDepotInfoRequest buildPartial() { GuildManagerHandler.GetDepotInfoRequest result = new GuildManagerHandler.GetDepotInfoRequest(this); onBuilt(); return result; } public Builder mergeFrom(Message other) { if (other instanceof GuildManagerHandler.GetDepotInfoRequest) return mergeFrom((GuildManagerHandler.GetDepotInfoRequest)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(GuildManagerHandler.GetDepotInfoRequest other) { if (other == GuildManagerHandler.GetDepotInfoRequest.getDefaultInstance()) return this;  mergeUnknownFields(other.getUnknownFields()); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { GuildManagerHandler.GetDepotInfoRequest parsedMessage = null; try { parsedMessage = (GuildManagerHandler.GetDepotInfoRequest)GuildManagerHandler.GetDepotInfoRequest.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (GuildManagerHandler.GetDepotInfoRequest)e.getUnfinishedMessage(); throw e; } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } } static { defaultInstance.initFields(); }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class GetDepotRecordRequest
/*       */     extends GeneratedMessage
/*       */     implements GetDepotRecordRequestOrBuilder
/*       */   {
/*  6821 */     private static final GetDepotRecordRequest defaultInstance = new GetDepotRecordRequest(true); private final UnknownFieldSet unknownFields; private GetDepotRecordRequest(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private GetDepotRecordRequest(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static GetDepotRecordRequest getDefaultInstance() { return defaultInstance; } public GetDepotRecordRequest getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private GetDepotRecordRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.page_ = input.readInt32(); break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotRecordRequest_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotRecordRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GetDepotRecordRequest.class, Builder.class); } public static Parser<GetDepotRecordRequest> PARSER = (Parser<GetDepotRecordRequest>)new AbstractParser<GetDepotRecordRequest>() { public GuildManagerHandler.GetDepotRecordRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.GetDepotRecordRequest(input, extensionRegistry); } }; private int bitField0_; public static final int PAGE_FIELD_NUMBER = 1; private int page_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<GetDepotRecordRequest> getParserForType() { return PARSER; } public boolean hasPage() { return ((this.bitField0_ & 0x1) == 1); } public int getPage() { return this.page_; } private void initFields() { this.page_ = 0; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.page_);  getUnknownFields().writeTo(output); } public int getSerializedSize() { int size = this.memoizedSerializedSize; if (size != -1) return size;  size = 0; if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.page_);  size += getUnknownFields().getSerializedSize(); this.memoizedSerializedSize = size; return size; } protected Object writeReplace() throws ObjectStreamException { return super.writeReplace(); } public static GetDepotRecordRequest parseFrom(ByteString data) throws InvalidProtocolBufferException { return (GetDepotRecordRequest)PARSER.parseFrom(data); } public static GetDepotRecordRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (GetDepotRecordRequest)PARSER.parseFrom(data, extensionRegistry); } public static GetDepotRecordRequest parseFrom(byte[] data) throws InvalidProtocolBufferException { return (GetDepotRecordRequest)PARSER.parseFrom(data); } public static GetDepotRecordRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (GetDepotRecordRequest)PARSER.parseFrom(data, extensionRegistry); } public static GetDepotRecordRequest parseFrom(InputStream input) throws IOException { return (GetDepotRecordRequest)PARSER.parseFrom(input); } public static GetDepotRecordRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetDepotRecordRequest)PARSER.parseFrom(input, extensionRegistry); } public static GetDepotRecordRequest parseDelimitedFrom(InputStream input) throws IOException { return (GetDepotRecordRequest)PARSER.parseDelimitedFrom(input); } public static GetDepotRecordRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetDepotRecordRequest)PARSER.parseDelimitedFrom(input, extensionRegistry); } public static GetDepotRecordRequest parseFrom(CodedInputStream input) throws IOException { return (GetDepotRecordRequest)PARSER.parseFrom(input); } public static GetDepotRecordRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetDepotRecordRequest)PARSER.parseFrom(input, extensionRegistry); } public static Builder newBuilder() { return Builder.create(); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder(GetDepotRecordRequest prototype) { return newBuilder().mergeFrom(prototype); } public Builder toBuilder() { return newBuilder(this); } protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.GetDepotRecordRequestOrBuilder {
/*  6822 */       private int bitField0_; private int page_; public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotRecordRequest_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotRecordRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.GetDepotRecordRequest.class, Builder.class); } private Builder() { maybeForceBuilderInitialization(); } private Builder(GeneratedMessage.BuilderParent parent) { super(parent); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GuildManagerHandler.GetDepotRecordRequest.alwaysUseFieldBuilders); } private static Builder create() { return new Builder(); } public Builder clear() { super.clear(); this.page_ = 0; this.bitField0_ &= 0xFFFFFFFE; return this; } public Builder clone() { return create().mergeFrom(buildPartial()); } public Descriptors.Descriptor getDescriptorForType() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotRecordRequest_descriptor; } public GuildManagerHandler.GetDepotRecordRequest getDefaultInstanceForType() { return GuildManagerHandler.GetDepotRecordRequest.getDefaultInstance(); } public GuildManagerHandler.GetDepotRecordRequest build() { GuildManagerHandler.GetDepotRecordRequest result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public GuildManagerHandler.GetDepotRecordRequest buildPartial() { GuildManagerHandler.GetDepotRecordRequest result = new GuildManagerHandler.GetDepotRecordRequest(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;  result.page_ = this.page_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder mergeFrom(Message other) { if (other instanceof GuildManagerHandler.GetDepotRecordRequest) return mergeFrom((GuildManagerHandler.GetDepotRecordRequest)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(GuildManagerHandler.GetDepotRecordRequest other) { if (other == GuildManagerHandler.GetDepotRecordRequest.getDefaultInstance()) return this;  if (other.hasPage()) setPage(other.getPage());  mergeUnknownFields(other.getUnknownFields()); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { GuildManagerHandler.GetDepotRecordRequest parsedMessage = null; try { parsedMessage = (GuildManagerHandler.GetDepotRecordRequest)GuildManagerHandler.GetDepotRecordRequest.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (GuildManagerHandler.GetDepotRecordRequest)e.getUnfinishedMessage(); throw e; } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasPage() { return ((this.bitField0_ & 0x1) == 1); } public int getPage() { return this.page_; } public Builder setPage(int value) { this.bitField0_ |= 0x1; this.page_ = value; onChanged(); return this; } public Builder clearPage() { this.bitField0_ &= 0xFFFFFFFE; this.page_ = 0; onChanged(); return this; } } static { defaultInstance.initFields(); }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class GetBlessInfoRequest
/*       */     extends GeneratedMessage
/*       */     implements GetBlessInfoRequestOrBuilder
/*       */   {
/*  7142 */     private static final GetBlessInfoRequest defaultInstance = new GetBlessInfoRequest(true); private final UnknownFieldSet unknownFields; private GetBlessInfoRequest(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private GetBlessInfoRequest(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static GetBlessInfoRequest getDefaultInstance() { return defaultInstance; } public GetBlessInfoRequest getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private GetBlessInfoRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GetBlessInfoRequest_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GetBlessInfoRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GetBlessInfoRequest.class, Builder.class); } public static Parser<GetBlessInfoRequest> PARSER = (Parser<GetBlessInfoRequest>)new AbstractParser<GetBlessInfoRequest>() { public GuildManagerHandler.GetBlessInfoRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.GetBlessInfoRequest(input, extensionRegistry); } }; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<GetBlessInfoRequest> getParserForType() { return PARSER; } private void initFields() {} public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); getUnknownFields().writeTo(output); } public int getSerializedSize() { int size = this.memoizedSerializedSize; if (size != -1) return size;  size = 0; size += getUnknownFields().getSerializedSize(); this.memoizedSerializedSize = size; return size; } protected Object writeReplace() throws ObjectStreamException { return super.writeReplace(); } public static GetBlessInfoRequest parseFrom(ByteString data) throws InvalidProtocolBufferException { return (GetBlessInfoRequest)PARSER.parseFrom(data); } public static GetBlessInfoRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (GetBlessInfoRequest)PARSER.parseFrom(data, extensionRegistry); } public static GetBlessInfoRequest parseFrom(byte[] data) throws InvalidProtocolBufferException { return (GetBlessInfoRequest)PARSER.parseFrom(data); } public static GetBlessInfoRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (GetBlessInfoRequest)PARSER.parseFrom(data, extensionRegistry); } public static GetBlessInfoRequest parseFrom(InputStream input) throws IOException { return (GetBlessInfoRequest)PARSER.parseFrom(input); } public static GetBlessInfoRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetBlessInfoRequest)PARSER.parseFrom(input, extensionRegistry); } public static GetBlessInfoRequest parseDelimitedFrom(InputStream input) throws IOException { return (GetBlessInfoRequest)PARSER.parseDelimitedFrom(input); } public static GetBlessInfoRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetBlessInfoRequest)PARSER.parseDelimitedFrom(input, extensionRegistry); } public static GetBlessInfoRequest parseFrom(CodedInputStream input) throws IOException { return (GetBlessInfoRequest)PARSER.parseFrom(input); } public static GetBlessInfoRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetBlessInfoRequest)PARSER.parseFrom(input, extensionRegistry); } public static Builder newBuilder() { return Builder.create(); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder(GetBlessInfoRequest prototype) { return newBuilder().mergeFrom(prototype); } public Builder toBuilder() { return newBuilder(this); } protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.GetBlessInfoRequestOrBuilder {
/*  7143 */       public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GetBlessInfoRequest_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GetBlessInfoRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.GetBlessInfoRequest.class, Builder.class); } private Builder() { maybeForceBuilderInitialization(); } private Builder(GeneratedMessage.BuilderParent parent) { super(parent); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GuildManagerHandler.GetBlessInfoRequest.alwaysUseFieldBuilders); } private static Builder create() { return new Builder(); } public Builder clear() { super.clear(); return this; } public Builder clone() { return create().mergeFrom(buildPartial()); } public Descriptors.Descriptor getDescriptorForType() { return GuildManagerHandler.internal_static_pomelo_guild_GetBlessInfoRequest_descriptor; } public GuildManagerHandler.GetBlessInfoRequest getDefaultInstanceForType() { return GuildManagerHandler.GetBlessInfoRequest.getDefaultInstance(); } public GuildManagerHandler.GetBlessInfoRequest build() { GuildManagerHandler.GetBlessInfoRequest result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public GuildManagerHandler.GetBlessInfoRequest buildPartial() { GuildManagerHandler.GetBlessInfoRequest result = new GuildManagerHandler.GetBlessInfoRequest(this); onBuilt(); return result; } public Builder mergeFrom(Message other) { if (other instanceof GuildManagerHandler.GetBlessInfoRequest) return mergeFrom((GuildManagerHandler.GetBlessInfoRequest)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(GuildManagerHandler.GetBlessInfoRequest other) { if (other == GuildManagerHandler.GetBlessInfoRequest.getDefaultInstance()) return this;  mergeUnknownFields(other.getUnknownFields()); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { GuildManagerHandler.GetBlessInfoRequest parsedMessage = null; try { parsedMessage = (GuildManagerHandler.GetBlessInfoRequest)GuildManagerHandler.GetBlessInfoRequest.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (GuildManagerHandler.GetBlessInfoRequest)e.getUnfinishedMessage(); throw e; } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } } static { defaultInstance.initFields(); }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class GetBlessRecordRequest
/*       */     extends GeneratedMessage
/*       */     implements GetBlessRecordRequestOrBuilder
/*       */   {
/*  7579 */     private static final GetBlessRecordRequest defaultInstance = new GetBlessRecordRequest(true); private final UnknownFieldSet unknownFields; private GetBlessRecordRequest(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private GetBlessRecordRequest(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static GetBlessRecordRequest getDefaultInstance() { return defaultInstance; } public GetBlessRecordRequest getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private GetBlessRecordRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.page_ = input.readInt32(); break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GetBlessRecordRequest_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GetBlessRecordRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GetBlessRecordRequest.class, Builder.class); } public static Parser<GetBlessRecordRequest> PARSER = (Parser<GetBlessRecordRequest>)new AbstractParser<GetBlessRecordRequest>() { public GuildManagerHandler.GetBlessRecordRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.GetBlessRecordRequest(input, extensionRegistry); } }; private int bitField0_; public static final int PAGE_FIELD_NUMBER = 1; private int page_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<GetBlessRecordRequest> getParserForType() { return PARSER; } public boolean hasPage() { return ((this.bitField0_ & 0x1) == 1); } public int getPage() { return this.page_; } private void initFields() { this.page_ = 0; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.page_);  getUnknownFields().writeTo(output); } public int getSerializedSize() { int size = this.memoizedSerializedSize; if (size != -1) return size;  size = 0; if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.page_);  size += getUnknownFields().getSerializedSize(); this.memoizedSerializedSize = size; return size; } protected Object writeReplace() throws ObjectStreamException { return super.writeReplace(); } public static GetBlessRecordRequest parseFrom(ByteString data) throws InvalidProtocolBufferException { return (GetBlessRecordRequest)PARSER.parseFrom(data); } public static GetBlessRecordRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (GetBlessRecordRequest)PARSER.parseFrom(data, extensionRegistry); } public static GetBlessRecordRequest parseFrom(byte[] data) throws InvalidProtocolBufferException { return (GetBlessRecordRequest)PARSER.parseFrom(data); } public static GetBlessRecordRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (GetBlessRecordRequest)PARSER.parseFrom(data, extensionRegistry); } public static GetBlessRecordRequest parseFrom(InputStream input) throws IOException { return (GetBlessRecordRequest)PARSER.parseFrom(input); } public static GetBlessRecordRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetBlessRecordRequest)PARSER.parseFrom(input, extensionRegistry); } public static GetBlessRecordRequest parseDelimitedFrom(InputStream input) throws IOException { return (GetBlessRecordRequest)PARSER.parseDelimitedFrom(input); } public static GetBlessRecordRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetBlessRecordRequest)PARSER.parseDelimitedFrom(input, extensionRegistry); } public static GetBlessRecordRequest parseFrom(CodedInputStream input) throws IOException { return (GetBlessRecordRequest)PARSER.parseFrom(input); } public static GetBlessRecordRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetBlessRecordRequest)PARSER.parseFrom(input, extensionRegistry); } public static Builder newBuilder() { return Builder.create(); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder(GetBlessRecordRequest prototype) { return newBuilder().mergeFrom(prototype); } public Builder toBuilder() { return newBuilder(this); } protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.GetBlessRecordRequestOrBuilder {
/*  7580 */       private int bitField0_; private int page_; public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GetBlessRecordRequest_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GetBlessRecordRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.GetBlessRecordRequest.class, Builder.class); } private Builder() { maybeForceBuilderInitialization(); } private Builder(GeneratedMessage.BuilderParent parent) { super(parent); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GuildManagerHandler.GetBlessRecordRequest.alwaysUseFieldBuilders); } private static Builder create() { return new Builder(); } public Builder clear() { super.clear(); this.page_ = 0; this.bitField0_ &= 0xFFFFFFFE; return this; } public Builder clone() { return create().mergeFrom(buildPartial()); } public Descriptors.Descriptor getDescriptorForType() { return GuildManagerHandler.internal_static_pomelo_guild_GetBlessRecordRequest_descriptor; } public GuildManagerHandler.GetBlessRecordRequest getDefaultInstanceForType() { return GuildManagerHandler.GetBlessRecordRequest.getDefaultInstance(); } public GuildManagerHandler.GetBlessRecordRequest build() { GuildManagerHandler.GetBlessRecordRequest result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public GuildManagerHandler.GetBlessRecordRequest buildPartial() { GuildManagerHandler.GetBlessRecordRequest result = new GuildManagerHandler.GetBlessRecordRequest(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;  result.page_ = this.page_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder mergeFrom(Message other) { if (other instanceof GuildManagerHandler.GetBlessRecordRequest) return mergeFrom((GuildManagerHandler.GetBlessRecordRequest)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(GuildManagerHandler.GetBlessRecordRequest other) { if (other == GuildManagerHandler.GetBlessRecordRequest.getDefaultInstance()) return this;  if (other.hasPage()) setPage(other.getPage());  mergeUnknownFields(other.getUnknownFields()); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { GuildManagerHandler.GetBlessRecordRequest parsedMessage = null; try { parsedMessage = (GuildManagerHandler.GetBlessRecordRequest)GuildManagerHandler.GetBlessRecordRequest.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (GuildManagerHandler.GetBlessRecordRequest)e.getUnfinishedMessage(); throw e; } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasPage() { return ((this.bitField0_ & 0x1) == 1); } public int getPage() { return this.page_; } public Builder setPage(int value) { this.bitField0_ |= 0x1; this.page_ = value; onChanged(); return this; } public Builder clearPage() { this.bitField0_ &= 0xFFFFFFFE; this.page_ = 0; onChanged(); return this; } } static { defaultInstance.initFields(); }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class GetBuildingLevelRequest
/*       */     extends GeneratedMessage
/*       */     implements GetBuildingLevelRequestOrBuilder
/*       */   {
/*  7892 */     private static final GetBuildingLevelRequest defaultInstance = new GetBuildingLevelRequest(true); private final UnknownFieldSet unknownFields; private GetBuildingLevelRequest(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private GetBuildingLevelRequest(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static GetBuildingLevelRequest getDefaultInstance() { return defaultInstance; } public GetBuildingLevelRequest getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private GetBuildingLevelRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GetBuildingLevelRequest_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GetBuildingLevelRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GetBuildingLevelRequest.class, Builder.class); } public static Parser<GetBuildingLevelRequest> PARSER = (Parser<GetBuildingLevelRequest>)new AbstractParser<GetBuildingLevelRequest>() { public GuildManagerHandler.GetBuildingLevelRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.GetBuildingLevelRequest(input, extensionRegistry); } }; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<GetBuildingLevelRequest> getParserForType() { return PARSER; } private void initFields() {} public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); getUnknownFields().writeTo(output); } public int getSerializedSize() { int size = this.memoizedSerializedSize; if (size != -1) return size;  size = 0; size += getUnknownFields().getSerializedSize(); this.memoizedSerializedSize = size; return size; } protected Object writeReplace() throws ObjectStreamException { return super.writeReplace(); } public static GetBuildingLevelRequest parseFrom(ByteString data) throws InvalidProtocolBufferException { return (GetBuildingLevelRequest)PARSER.parseFrom(data); } public static GetBuildingLevelRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (GetBuildingLevelRequest)PARSER.parseFrom(data, extensionRegistry); } public static GetBuildingLevelRequest parseFrom(byte[] data) throws InvalidProtocolBufferException { return (GetBuildingLevelRequest)PARSER.parseFrom(data); } public static GetBuildingLevelRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (GetBuildingLevelRequest)PARSER.parseFrom(data, extensionRegistry); } public static GetBuildingLevelRequest parseFrom(InputStream input) throws IOException { return (GetBuildingLevelRequest)PARSER.parseFrom(input); } public static GetBuildingLevelRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetBuildingLevelRequest)PARSER.parseFrom(input, extensionRegistry); } public static GetBuildingLevelRequest parseDelimitedFrom(InputStream input) throws IOException { return (GetBuildingLevelRequest)PARSER.parseDelimitedFrom(input); } public static GetBuildingLevelRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetBuildingLevelRequest)PARSER.parseDelimitedFrom(input, extensionRegistry); } public static GetBuildingLevelRequest parseFrom(CodedInputStream input) throws IOException { return (GetBuildingLevelRequest)PARSER.parseFrom(input); } public static GetBuildingLevelRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetBuildingLevelRequest)PARSER.parseFrom(input, extensionRegistry); } public static Builder newBuilder() { return Builder.create(); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder(GetBuildingLevelRequest prototype) { return newBuilder().mergeFrom(prototype); } public Builder toBuilder() { return newBuilder(this); } protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.GetBuildingLevelRequestOrBuilder {
/*  7893 */       public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GetBuildingLevelRequest_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GetBuildingLevelRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.GetBuildingLevelRequest.class, Builder.class); } private Builder() { maybeForceBuilderInitialization(); } private Builder(GeneratedMessage.BuilderParent parent) { super(parent); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GuildManagerHandler.GetBuildingLevelRequest.alwaysUseFieldBuilders); } private static Builder create() { return new Builder(); } public Builder clear() { super.clear(); return this; } public Builder clone() { return create().mergeFrom(buildPartial()); } public Descriptors.Descriptor getDescriptorForType() { return GuildManagerHandler.internal_static_pomelo_guild_GetBuildingLevelRequest_descriptor; } public GuildManagerHandler.GetBuildingLevelRequest getDefaultInstanceForType() { return GuildManagerHandler.GetBuildingLevelRequest.getDefaultInstance(); } public GuildManagerHandler.GetBuildingLevelRequest build() { GuildManagerHandler.GetBuildingLevelRequest result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public GuildManagerHandler.GetBuildingLevelRequest buildPartial() { GuildManagerHandler.GetBuildingLevelRequest result = new GuildManagerHandler.GetBuildingLevelRequest(this); onBuilt(); return result; } public Builder mergeFrom(Message other) { if (other instanceof GuildManagerHandler.GetBuildingLevelRequest) return mergeFrom((GuildManagerHandler.GetBuildingLevelRequest)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(GuildManagerHandler.GetBuildingLevelRequest other) { if (other == GuildManagerHandler.GetBuildingLevelRequest.getDefaultInstance()) return this;  mergeUnknownFields(other.getUnknownFields()); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { GuildManagerHandler.GetBuildingLevelRequest parsedMessage = null; try { parsedMessage = (GuildManagerHandler.GetBuildingLevelRequest)GuildManagerHandler.GetBuildingLevelRequest.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (GuildManagerHandler.GetBuildingLevelRequest)e.getUnfinishedMessage(); throw e; } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } } static { defaultInstance.initFields(); }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class BagInfo
/*       */     extends GeneratedMessage
/*       */     implements BagInfoOrBuilder
/*       */   {
/*  9119 */     private static final BagInfo defaultInstance = new BagInfo(true); private final UnknownFieldSet unknownFields; private BagInfo(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private BagInfo(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static BagInfo getDefaultInstance() { return defaultInstance; } public BagInfo getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private BagInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.bagGridCount_ = input.readInt32(); break;case 16: this.bitField0_ |= 0x2; this.bagTotalCount_ = input.readInt32(); break;case 26: if ((mutable_bitField0_ & 0x4) != 4) { this.bagGrids_ = new ArrayList<>(); mutable_bitField0_ |= 0x4; }  this.bagGrids_.add(input.readMessage(ItemOuterClass.Grid.PARSER, extensionRegistry)); break;case 34: if ((mutable_bitField0_ & 0x8) != 8) { this.bagDetails_ = new ArrayList<>(); mutable_bitField0_ |= 0x8; }  this.bagDetails_.add(input.readMessage(ItemOuterClass.ItemDetail.PARSER, extensionRegistry)); break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x4) == 4) this.bagGrids_ = Collections.unmodifiableList(this.bagGrids_);  if ((mutable_bitField0_ & 0x8) == 8) this.bagDetails_ = Collections.unmodifiableList(this.bagDetails_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_BagInfo_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_BagInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(BagInfo.class, Builder.class); } public static Parser<BagInfo> PARSER = (Parser<BagInfo>)new AbstractParser<BagInfo>() { public GuildManagerHandler.BagInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.BagInfo(input, extensionRegistry); } }
/*  9120 */     ; private int bitField0_; public static final int BAGGRIDCOUNT_FIELD_NUMBER = 1; private int bagGridCount_; public static final int BAGTOTALCOUNT_FIELD_NUMBER = 2; private int bagTotalCount_; public static final int BAGGRIDS_FIELD_NUMBER = 3; private List<ItemOuterClass.Grid> bagGrids_; public static final int BAGDETAILS_FIELD_NUMBER = 4; private List<ItemOuterClass.ItemDetail> bagDetails_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<BagInfo> getParserForType() { return PARSER; } public boolean hasBagGridCount() { return ((this.bitField0_ & 0x1) == 1); } public int getBagGridCount() { return this.bagGridCount_; } public boolean hasBagTotalCount() { return ((this.bitField0_ & 0x2) == 2); } public int getBagTotalCount() { return this.bagTotalCount_; } public List<ItemOuterClass.Grid> getBagGridsList() { return this.bagGrids_; } public List<? extends ItemOuterClass.GridOrBuilder> getBagGridsOrBuilderList() { return (List)this.bagGrids_; } static { defaultInstance.initFields(); }
/*       */ 
/*       */ 
/*       */     
/*       */     public int getBagGridsCount() {
/*       */       return this.bagGrids_.size();
/*       */     }
/*       */ 
/*       */     
/*       */     public ItemOuterClass.Grid getBagGrids(int index) {
/*       */       return this.bagGrids_.get(index);
/*       */     }
/*       */ 
/*       */     
/*       */     public ItemOuterClass.GridOrBuilder getBagGridsOrBuilder(int index) {
/*       */       return (ItemOuterClass.GridOrBuilder)this.bagGrids_.get(index);
/*       */     }
/*       */ 
/*       */     
/*       */     public List<ItemOuterClass.ItemDetail> getBagDetailsList() {
/*       */       return this.bagDetails_;
/*       */     }
/*       */ 
/*       */     
/*       */     public List<? extends ItemOuterClass.ItemDetailOrBuilder> getBagDetailsOrBuilderList() {
/*       */       return (List)this.bagDetails_;
/*       */     }
/*       */ 
/*       */     
/*       */     public int getBagDetailsCount() {
/*       */       return this.bagDetails_.size();
/*       */     }
/*       */ 
/*       */     
/*       */     public ItemOuterClass.ItemDetail getBagDetails(int index) {
/*       */       return this.bagDetails_.get(index);
/*       */     }
/*       */ 
/*       */     
/*       */     public ItemOuterClass.ItemDetailOrBuilder getBagDetailsOrBuilder(int index) {
/*       */       return (ItemOuterClass.ItemDetailOrBuilder)this.bagDetails_.get(index);
/*       */     }
/*       */ 
/*       */     
/*       */     private void initFields() {
/*       */       this.bagGridCount_ = 0;
/*       */       this.bagTotalCount_ = 0;
/*       */       this.bagGrids_ = Collections.emptyList();
/*       */       this.bagDetails_ = Collections.emptyList();
/*       */     }
/*       */ 
/*       */     
/*       */     public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1) {
/*       */         return true;
/*       */       }
/*       */       if (isInitialized == 0) {
/*       */         return false;
/*       */       }
/*       */       int i;
/*       */       for (i = 0; i < getBagGridsCount(); i++) {
/*       */         if (!getBagGrids(i).isInitialized()) {
/*       */           this.memoizedIsInitialized = 0;
/*       */           return false;
/*       */         } 
/*       */       } 
/*       */       for (i = 0; i < getBagDetailsCount(); i++) {
/*       */         if (!getBagDetails(i).isInitialized()) {
/*       */           this.memoizedIsInitialized = 0;
/*       */           return false;
/*       */         } 
/*       */       } 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       getSerializedSize();
/*       */       if ((this.bitField0_ & 0x1) == 1) {
/*       */         output.writeInt32(1, this.bagGridCount_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x2) == 2) {
/*       */         output.writeInt32(2, this.bagTotalCount_);
/*       */       }
/*       */       int i;
/*       */       for (i = 0; i < this.bagGrids_.size(); i++) {
/*       */         output.writeMessage(3, (MessageLite)this.bagGrids_.get(i));
/*       */       }
/*       */       for (i = 0; i < this.bagDetails_.size(); i++) {
/*       */         output.writeMessage(4, (MessageLite)this.bagDetails_.get(i));
/*       */       }
/*       */       getUnknownFields().writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/*       */       int size = this.memoizedSerializedSize;
/*       */       if (size != -1) {
/*       */         return size;
/*       */       }
/*       */       size = 0;
/*       */       if ((this.bitField0_ & 0x1) == 1) {
/*       */         size += CodedOutputStream.computeInt32Size(1, this.bagGridCount_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x2) == 2) {
/*       */         size += CodedOutputStream.computeInt32Size(2, this.bagTotalCount_);
/*       */       }
/*       */       int i;
/*       */       for (i = 0; i < this.bagGrids_.size(); i++) {
/*       */         size += CodedOutputStream.computeMessageSize(3, (MessageLite)this.bagGrids_.get(i));
/*       */       }
/*       */       for (i = 0; i < this.bagDetails_.size(); i++) {
/*       */         size += CodedOutputStream.computeMessageSize(4, (MessageLite)this.bagDetails_.get(i));
/*       */       }
/*       */       size += getUnknownFields().getSerializedSize();
/*       */       this.memoizedSerializedSize = size;
/*       */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     protected Object writeReplace() throws ObjectStreamException {
/*       */       return super.writeReplace();
/*       */     }
/*       */ 
/*       */     
/*       */     public static BagInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (BagInfo)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */     
/*       */     public static BagInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (BagInfo)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static BagInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (BagInfo)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */     
/*       */     public static BagInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (BagInfo)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static BagInfo parseFrom(InputStream input) throws IOException {
/*       */       return (BagInfo)PARSER.parseFrom(input);
/*       */     }
/*       */ 
/*       */     
/*       */     public static BagInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (BagInfo)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static BagInfo parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (BagInfo)PARSER.parseDelimitedFrom(input);
/*       */     }
/*       */ 
/*       */     
/*       */     public static BagInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (BagInfo)PARSER.parseDelimitedFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static BagInfo parseFrom(CodedInputStream input) throws IOException {
/*       */       return (BagInfo)PARSER.parseFrom(input);
/*       */     }
/*       */ 
/*       */     
/*       */     public static BagInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (BagInfo)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static Builder newBuilder() {
/*       */       return Builder.create();
/*       */     }
/*       */ 
/*       */     
/*       */     public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     }
/*       */ 
/*       */     
/*       */     public static Builder newBuilder(BagInfo prototype) {
/*       */       return newBuilder().mergeFrom(prototype);
/*       */     }
/*       */ 
/*       */     
/*       */     public Builder toBuilder() {
/*       */       return newBuilder(this);
/*       */     }
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
/*       */       Builder builder = new Builder(parent);
/*       */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessage.Builder<Builder>
/*       */       implements GuildManagerHandler.BagInfoOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private int bagGridCount_;
/*       */       
/*       */       private int bagTotalCount_;
/*       */       
/*       */       private List<ItemOuterClass.Grid> bagGrids_;
/*       */       
/*       */       private RepeatedFieldBuilder<ItemOuterClass.Grid, ItemOuterClass.Grid.Builder, ItemOuterClass.GridOrBuilder> bagGridsBuilder_;
/*       */       
/*       */       private List<ItemOuterClass.ItemDetail> bagDetails_;
/*       */       
/*       */       private RepeatedFieldBuilder<ItemOuterClass.ItemDetail, ItemOuterClass.ItemDetail.Builder, ItemOuterClass.ItemDetailOrBuilder> bagDetailsBuilder_;
/*       */ 
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_BagInfo_descriptor;
/*       */       }
/*       */ 
/*       */       
/*       */       protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_BagInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.BagInfo.class, Builder.class);
/*       */       }
/*       */ 
/*       */       
/*       */       private Builder() {
/*       */         this.bagGrids_ = Collections.emptyList();
/*       */         this.bagDetails_ = Collections.emptyList();
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */       
/*       */       private Builder(GeneratedMessage.BuilderParent parent) {
/*       */         super(parent);
/*       */         this.bagGrids_ = Collections.emptyList();
/*       */         this.bagDetails_ = Collections.emptyList();
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*       */         if (GuildManagerHandler.BagInfo.alwaysUseFieldBuilders) {
/*       */           getBagGridsFieldBuilder();
/*       */           getBagDetailsFieldBuilder();
/*       */         } 
/*       */       }
/*       */ 
/*       */       
/*       */       private static Builder create() {
/*       */         return new Builder();
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clear() {
/*       */         super.clear();
/*       */         this.bagGridCount_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.bagTotalCount_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           this.bagGrids_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFFB;
/*       */         } else {
/*       */           this.bagGridsBuilder_.clear();
/*       */         } 
/*       */         if (this.bagDetailsBuilder_ == null) {
/*       */           this.bagDetails_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFF7;
/*       */         } else {
/*       */           this.bagDetailsBuilder_.clear();
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clone() {
/*       */         return create().mergeFrom(buildPartial());
/*       */       }
/*       */ 
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_BagInfo_descriptor;
/*       */       }
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.BagInfo getDefaultInstanceForType() {
/*       */         return GuildManagerHandler.BagInfo.getDefaultInstance();
/*       */       }
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.BagInfo build() {
/*       */         GuildManagerHandler.BagInfo result = buildPartial();
/*       */         if (!result.isInitialized()) {
/*       */           throw newUninitializedMessageException(result);
/*       */         }
/*       */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.BagInfo buildPartial() {
/*       */         GuildManagerHandler.BagInfo result = new GuildManagerHandler.BagInfo(this);
/*       */         int from_bitField0_ = this.bitField0_;
/*       */         int to_bitField0_ = 0;
/*       */         if ((from_bitField0_ & 0x1) == 1) {
/*       */           to_bitField0_ |= 0x1;
/*       */         }
/*       */         result.bagGridCount_ = this.bagGridCount_;
/*       */         if ((from_bitField0_ & 0x2) == 2) {
/*       */           to_bitField0_ |= 0x2;
/*       */         }
/*       */         result.bagTotalCount_ = this.bagTotalCount_;
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x4) == 4) {
/*       */             this.bagGrids_ = Collections.unmodifiableList(this.bagGrids_);
/*       */             this.bitField0_ &= 0xFFFFFFFB;
/*       */           } 
/*       */           result.bagGrids_ = this.bagGrids_;
/*       */         } else {
/*       */           result.bagGrids_ = this.bagGridsBuilder_.build();
/*       */         } 
/*       */         if (this.bagDetailsBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x8) == 8) {
/*       */             this.bagDetails_ = Collections.unmodifiableList(this.bagDetails_);
/*       */             this.bitField0_ &= 0xFFFFFFF7;
/*       */           } 
/*       */           result.bagDetails_ = this.bagDetails_;
/*       */         } else {
/*       */           result.bagDetails_ = this.bagDetailsBuilder_.build();
/*       */         } 
/*       */         result.bitField0_ = to_bitField0_;
/*       */         onBuilt();
/*       */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*       */         if (other instanceof GuildManagerHandler.BagInfo) {
/*       */           return mergeFrom((GuildManagerHandler.BagInfo)other);
/*       */         }
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(GuildManagerHandler.BagInfo other) {
/*       */         if (other == GuildManagerHandler.BagInfo.getDefaultInstance()) {
/*       */           return this;
/*       */         }
/*       */         if (other.hasBagGridCount()) {
/*       */           setBagGridCount(other.getBagGridCount());
/*       */         }
/*       */         if (other.hasBagTotalCount()) {
/*       */           setBagTotalCount(other.getBagTotalCount());
/*       */         }
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           if (!other.bagGrids_.isEmpty()) {
/*       */             if (this.bagGrids_.isEmpty()) {
/*       */               this.bagGrids_ = other.bagGrids_;
/*       */               this.bitField0_ &= 0xFFFFFFFB;
/*       */             } else {
/*       */               ensureBagGridsIsMutable();
/*       */               this.bagGrids_.addAll(other.bagGrids_);
/*       */             } 
/*       */             onChanged();
/*       */           } 
/*       */         } else if (!other.bagGrids_.isEmpty()) {
/*       */           if (this.bagGridsBuilder_.isEmpty()) {
/*       */             this.bagGridsBuilder_.dispose();
/*       */             this.bagGridsBuilder_ = null;
/*       */             this.bagGrids_ = other.bagGrids_;
/*       */             this.bitField0_ &= 0xFFFFFFFB;
/*       */             this.bagGridsBuilder_ = GuildManagerHandler.BagInfo.alwaysUseFieldBuilders ? getBagGridsFieldBuilder() : null;
/*       */           } else {
/*       */             this.bagGridsBuilder_.addAllMessages(other.bagGrids_);
/*       */           } 
/*       */         } 
/*       */         if (this.bagDetailsBuilder_ == null) {
/*       */           if (!other.bagDetails_.isEmpty()) {
/*       */             if (this.bagDetails_.isEmpty()) {
/*       */               this.bagDetails_ = other.bagDetails_;
/*       */               this.bitField0_ &= 0xFFFFFFF7;
/*       */             } else {
/*       */               ensureBagDetailsIsMutable();
/*       */               this.bagDetails_.addAll(other.bagDetails_);
/*       */             } 
/*       */             onChanged();
/*       */           } 
/*       */         } else if (!other.bagDetails_.isEmpty()) {
/*       */           if (this.bagDetailsBuilder_.isEmpty()) {
/*       */             this.bagDetailsBuilder_.dispose();
/*       */             this.bagDetailsBuilder_ = null;
/*       */             this.bagDetails_ = other.bagDetails_;
/*       */             this.bitField0_ &= 0xFFFFFFF7;
/*       */             this.bagDetailsBuilder_ = GuildManagerHandler.BagInfo.alwaysUseFieldBuilders ? getBagDetailsFieldBuilder() : null;
/*       */           } else {
/*       */             this.bagDetailsBuilder_.addAllMessages(other.bagDetails_);
/*       */           } 
/*       */         } 
/*       */         mergeUnknownFields(other.getUnknownFields());
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final boolean isInitialized() {
/*       */         int i;
/*       */         for (i = 0; i < getBagGridsCount(); i++) {
/*       */           if (!getBagGrids(i).isInitialized()) {
/*       */             return false;
/*       */           }
/*       */         } 
/*       */         for (i = 0; i < getBagDetailsCount(); i++) {
/*       */           if (!getBagDetails(i).isInitialized()) {
/*       */             return false;
/*       */           }
/*       */         } 
/*       */         return true;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         GuildManagerHandler.BagInfo parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (GuildManagerHandler.BagInfo)GuildManagerHandler.BagInfo.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (GuildManagerHandler.BagInfo)e.getUnfinishedMessage();
/*       */           throw e;
/*       */         } finally {
/*       */           if (parsedMessage != null) {
/*       */             mergeFrom(parsedMessage);
/*       */           }
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public boolean hasBagGridCount() {
/*       */         return ((this.bitField0_ & 0x1) == 1);
/*       */       }
/*       */ 
/*       */       
/*       */       public int getBagGridCount() {
/*       */         return this.bagGridCount_;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder setBagGridCount(int value) {
/*       */         this.bitField0_ |= 0x1;
/*       */         this.bagGridCount_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearBagGridCount() {
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.bagGridCount_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public boolean hasBagTotalCount() {
/*       */         return ((this.bitField0_ & 0x2) == 2);
/*       */       }
/*       */ 
/*       */       
/*       */       public int getBagTotalCount() {
/*       */         return this.bagTotalCount_;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder setBagTotalCount(int value) {
/*       */         this.bitField0_ |= 0x2;
/*       */         this.bagTotalCount_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearBagTotalCount() {
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         this.bagTotalCount_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       private void ensureBagGridsIsMutable() {
/*       */         if ((this.bitField0_ & 0x4) != 4) {
/*       */           this.bagGrids_ = new ArrayList<>(this.bagGrids_);
/*       */           this.bitField0_ |= 0x4;
/*       */         } 
/*       */       }
/*       */       
/*       */       public List<ItemOuterClass.Grid> getBagGridsList() {
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           return Collections.unmodifiableList(this.bagGrids_);
/*       */         }
/*       */         return this.bagGridsBuilder_.getMessageList();
/*       */       }
/*       */       
/*       */       public int getBagGridsCount() {
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           return this.bagGrids_.size();
/*       */         }
/*       */         return this.bagGridsBuilder_.getCount();
/*       */       }
/*       */       
/*       */       public ItemOuterClass.Grid getBagGrids(int index) {
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           return this.bagGrids_.get(index);
/*       */         }
/*       */         return (ItemOuterClass.Grid)this.bagGridsBuilder_.getMessage(index);
/*       */       }
/*       */       
/*       */       public Builder setBagGrids(int index, ItemOuterClass.Grid value) {
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           ensureBagGridsIsMutable();
/*       */           this.bagGrids_.set(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.bagGridsBuilder_.setMessage(index, (GeneratedMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setBagGrids(int index, ItemOuterClass.Grid.Builder builderForValue) {
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           ensureBagGridsIsMutable();
/*       */           this.bagGrids_.set(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.bagGridsBuilder_.setMessage(index, (GeneratedMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addBagGrids(ItemOuterClass.Grid value) {
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           ensureBagGridsIsMutable();
/*       */           this.bagGrids_.add(value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.bagGridsBuilder_.addMessage((GeneratedMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addBagGrids(int index, ItemOuterClass.Grid value) {
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           ensureBagGridsIsMutable();
/*       */           this.bagGrids_.add(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.bagGridsBuilder_.addMessage(index, (GeneratedMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addBagGrids(ItemOuterClass.Grid.Builder builderForValue) {
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           ensureBagGridsIsMutable();
/*       */           this.bagGrids_.add(builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.bagGridsBuilder_.addMessage((GeneratedMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addBagGrids(int index, ItemOuterClass.Grid.Builder builderForValue) {
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           ensureBagGridsIsMutable();
/*       */           this.bagGrids_.add(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.bagGridsBuilder_.addMessage(index, (GeneratedMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addAllBagGrids(Iterable<? extends ItemOuterClass.Grid> values) {
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           ensureBagGridsIsMutable();
/*       */           AbstractMessageLite.Builder.addAll(values, this.bagGrids_);
/*       */           onChanged();
/*       */         } else {
/*       */           this.bagGridsBuilder_.addAllMessages(values);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearBagGrids() {
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           this.bagGrids_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFFB;
/*       */           onChanged();
/*       */         } else {
/*       */           this.bagGridsBuilder_.clear();
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder removeBagGrids(int index) {
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           ensureBagGridsIsMutable();
/*       */           this.bagGrids_.remove(index);
/*       */           onChanged();
/*       */         } else {
/*       */           this.bagGridsBuilder_.remove(index);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public ItemOuterClass.Grid.Builder getBagGridsBuilder(int index) {
/*       */         return (ItemOuterClass.Grid.Builder)getBagGridsFieldBuilder().getBuilder(index);
/*       */       }
/*       */       
/*       */       public ItemOuterClass.GridOrBuilder getBagGridsOrBuilder(int index) {
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           return (ItemOuterClass.GridOrBuilder)this.bagGrids_.get(index);
/*       */         }
/*       */         return (ItemOuterClass.GridOrBuilder)this.bagGridsBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */       
/*       */       public List<? extends ItemOuterClass.GridOrBuilder> getBagGridsOrBuilderList() {
/*       */         if (this.bagGridsBuilder_ != null) {
/*       */           return this.bagGridsBuilder_.getMessageOrBuilderList();
/*       */         }
/*       */         return (List)Collections.unmodifiableList(this.bagGrids_);
/*       */       }
/*       */       
/*       */       public ItemOuterClass.Grid.Builder addBagGridsBuilder() {
/*       */         return (ItemOuterClass.Grid.Builder)getBagGridsFieldBuilder().addBuilder((GeneratedMessage)ItemOuterClass.Grid.getDefaultInstance());
/*       */       }
/*       */       
/*       */       public ItemOuterClass.Grid.Builder addBagGridsBuilder(int index) {
/*       */         return (ItemOuterClass.Grid.Builder)getBagGridsFieldBuilder().addBuilder(index, (GeneratedMessage)ItemOuterClass.Grid.getDefaultInstance());
/*       */       }
/*       */       
/*       */       public List<ItemOuterClass.Grid.Builder> getBagGridsBuilderList() {
/*       */         return getBagGridsFieldBuilder().getBuilderList();
/*       */       }
/*       */       
/*       */       private RepeatedFieldBuilder<ItemOuterClass.Grid, ItemOuterClass.Grid.Builder, ItemOuterClass.GridOrBuilder> getBagGridsFieldBuilder() {
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           this.bagGridsBuilder_ = new RepeatedFieldBuilder(this.bagGrids_, ((this.bitField0_ & 0x4) == 4), getParentForChildren(), isClean());
/*       */           this.bagGrids_ = null;
/*       */         } 
/*       */         return this.bagGridsBuilder_;
/*       */       }
/*       */       
/*       */       private void ensureBagDetailsIsMutable() {
/*       */         if ((this.bitField0_ & 0x8) != 8) {
/*       */           this.bagDetails_ = new ArrayList<>(this.bagDetails_);
/*       */           this.bitField0_ |= 0x8;
/*       */         } 
/*       */       }
/*       */       
/*       */       public List<ItemOuterClass.ItemDetail> getBagDetailsList() {
/*       */         if (this.bagDetailsBuilder_ == null) {
/*       */           return Collections.unmodifiableList(this.bagDetails_);
/*       */         }
/*       */         return this.bagDetailsBuilder_.getMessageList();
/*       */       }
/*       */       
/*       */       public int getBagDetailsCount() {
/*       */         if (this.bagDetailsBuilder_ == null) {
/*       */           return this.bagDetails_.size();
/*       */         }
/*       */         return this.bagDetailsBuilder_.getCount();
/*       */       }
/*       */       
/*       */       public ItemOuterClass.ItemDetail getBagDetails(int index) {
/*       */         if (this.bagDetailsBuilder_ == null) {
/*       */           return this.bagDetails_.get(index);
/*       */         }
/*       */         return (ItemOuterClass.ItemDetail)this.bagDetailsBuilder_.getMessage(index);
/*       */       }
/*       */       
/*       */       public Builder setBagDetails(int index, ItemOuterClass.ItemDetail value) {
/*       */         if (this.bagDetailsBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           ensureBagDetailsIsMutable();
/*       */           this.bagDetails_.set(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.bagDetailsBuilder_.setMessage(index, (GeneratedMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setBagDetails(int index, ItemOuterClass.ItemDetail.Builder builderForValue) {
/*       */         if (this.bagDetailsBuilder_ == null) {
/*       */           ensureBagDetailsIsMutable();
/*       */           this.bagDetails_.set(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.bagDetailsBuilder_.setMessage(index, (GeneratedMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addBagDetails(ItemOuterClass.ItemDetail value) {
/*       */         if (this.bagDetailsBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           ensureBagDetailsIsMutable();
/*       */           this.bagDetails_.add(value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.bagDetailsBuilder_.addMessage((GeneratedMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addBagDetails(int index, ItemOuterClass.ItemDetail value) {
/*       */         if (this.bagDetailsBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           ensureBagDetailsIsMutable();
/*       */           this.bagDetails_.add(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.bagDetailsBuilder_.addMessage(index, (GeneratedMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addBagDetails(ItemOuterClass.ItemDetail.Builder builderForValue) {
/*       */         if (this.bagDetailsBuilder_ == null) {
/*       */           ensureBagDetailsIsMutable();
/*       */           this.bagDetails_.add(builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.bagDetailsBuilder_.addMessage((GeneratedMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addBagDetails(int index, ItemOuterClass.ItemDetail.Builder builderForValue) {
/*       */         if (this.bagDetailsBuilder_ == null) {
/*       */           ensureBagDetailsIsMutable();
/*       */           this.bagDetails_.add(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.bagDetailsBuilder_.addMessage(index, (GeneratedMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addAllBagDetails(Iterable<? extends ItemOuterClass.ItemDetail> values) {
/*       */         if (this.bagDetailsBuilder_ == null) {
/*       */           ensureBagDetailsIsMutable();
/*       */           AbstractMessageLite.Builder.addAll(values, this.bagDetails_);
/*       */           onChanged();
/*       */         } else {
/*       */           this.bagDetailsBuilder_.addAllMessages(values);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearBagDetails() {
/*       */         if (this.bagDetailsBuilder_ == null) {
/*       */           this.bagDetails_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFF7;
/*       */           onChanged();
/*       */         } else {
/*       */           this.bagDetailsBuilder_.clear();
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder removeBagDetails(int index) {
/*       */         if (this.bagDetailsBuilder_ == null) {
/*       */           ensureBagDetailsIsMutable();
/*       */           this.bagDetails_.remove(index);
/*       */           onChanged();
/*       */         } else {
/*       */           this.bagDetailsBuilder_.remove(index);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public ItemOuterClass.ItemDetail.Builder getBagDetailsBuilder(int index) {
/*       */         return (ItemOuterClass.ItemDetail.Builder)getBagDetailsFieldBuilder().getBuilder(index);
/*       */       }
/*       */       
/*       */       public ItemOuterClass.ItemDetailOrBuilder getBagDetailsOrBuilder(int index) {
/*       */         if (this.bagDetailsBuilder_ == null) {
/*       */           return (ItemOuterClass.ItemDetailOrBuilder)this.bagDetails_.get(index);
/*       */         }
/*       */         return (ItemOuterClass.ItemDetailOrBuilder)this.bagDetailsBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */       
/*       */       public List<? extends ItemOuterClass.ItemDetailOrBuilder> getBagDetailsOrBuilderList() {
/*       */         if (this.bagDetailsBuilder_ != null) {
/*       */           return this.bagDetailsBuilder_.getMessageOrBuilderList();
/*       */         }
/*       */         return (List)Collections.unmodifiableList(this.bagDetails_);
/*       */       }
/*       */       
/*       */       public ItemOuterClass.ItemDetail.Builder addBagDetailsBuilder() {
/*       */         return (ItemOuterClass.ItemDetail.Builder)getBagDetailsFieldBuilder().addBuilder((GeneratedMessage)ItemOuterClass.ItemDetail.getDefaultInstance());
/*       */       }
/*       */       
/*       */       public ItemOuterClass.ItemDetail.Builder addBagDetailsBuilder(int index) {
/*       */         return (ItemOuterClass.ItemDetail.Builder)getBagDetailsFieldBuilder().addBuilder(index, (GeneratedMessage)ItemOuterClass.ItemDetail.getDefaultInstance());
/*       */       }
/*       */       
/*       */       public List<ItemOuterClass.ItemDetail.Builder> getBagDetailsBuilderList() {
/*       */         return getBagDetailsFieldBuilder().getBuilderList();
/*       */       }
/*       */       
/*       */       private RepeatedFieldBuilder<ItemOuterClass.ItemDetail, ItemOuterClass.ItemDetail.Builder, ItemOuterClass.ItemDetailOrBuilder> getBagDetailsFieldBuilder() {
/*       */         if (this.bagDetailsBuilder_ == null) {
/*       */           this.bagDetailsBuilder_ = new RepeatedFieldBuilder(this.bagDetails_, ((this.bitField0_ & 0x8) == 8), getParentForChildren(), isClean());
/*       */           this.bagDetails_ = null;
/*       */         } 
/*       */         return this.bagDetailsBuilder_;
/*       */       }
/*       */     }
/*       */   }
/*       */   
/*       */   public static final class BagGridsInfo
/*       */     extends GeneratedMessage
/*       */     implements BagGridsInfoOrBuilder
/*       */   {
/*  9966 */     private static final BagGridsInfo defaultInstance = new BagGridsInfo(true); private final UnknownFieldSet unknownFields; private BagGridsInfo(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private BagGridsInfo(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static BagGridsInfo getDefaultInstance() { return defaultInstance; } public BagGridsInfo getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private BagGridsInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.bagGridCount_ = input.readInt32(); break;case 16: this.bitField0_ |= 0x2; this.bagTotalCount_ = input.readInt32(); break;case 26: if ((mutable_bitField0_ & 0x4) != 4) { this.bagGrids_ = new ArrayList<>(); mutable_bitField0_ |= 0x4; }  this.bagGrids_.add(input.readMessage(ItemOuterClass.Grid.PARSER, extensionRegistry)); break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x4) == 4) this.bagGrids_ = Collections.unmodifiableList(this.bagGrids_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_BagGridsInfo_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_BagGridsInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(BagGridsInfo.class, Builder.class); } public static Parser<BagGridsInfo> PARSER = (Parser<BagGridsInfo>)new AbstractParser<BagGridsInfo>() { public GuildManagerHandler.BagGridsInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.BagGridsInfo(input, extensionRegistry); } }
/*  9967 */     ; private int bitField0_; public static final int BAGGRIDCOUNT_FIELD_NUMBER = 1; private int bagGridCount_; public static final int BAGTOTALCOUNT_FIELD_NUMBER = 2; private int bagTotalCount_; public static final int BAGGRIDS_FIELD_NUMBER = 3; private List<ItemOuterClass.Grid> bagGrids_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<BagGridsInfo> getParserForType() { return PARSER; } public boolean hasBagGridCount() { return ((this.bitField0_ & 0x1) == 1); } public int getBagGridCount() { return this.bagGridCount_; } public boolean hasBagTotalCount() { return ((this.bitField0_ & 0x2) == 2); } public int getBagTotalCount() { return this.bagTotalCount_; } static { defaultInstance.initFields(); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public List<ItemOuterClass.Grid> getBagGridsList() {
/*       */       return this.bagGrids_;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public List<? extends ItemOuterClass.GridOrBuilder> getBagGridsOrBuilderList() {
/*       */       return (List)this.bagGrids_;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public int getBagGridsCount() {
/*       */       return this.bagGrids_.size();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public ItemOuterClass.Grid getBagGrids(int index) {
/*       */       return this.bagGrids_.get(index);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public ItemOuterClass.GridOrBuilder getBagGridsOrBuilder(int index) {
/*       */       return (ItemOuterClass.GridOrBuilder)this.bagGrids_.get(index);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private void initFields() {
/*       */       this.bagGridCount_ = 0;
/*       */       this.bagTotalCount_ = 0;
/*       */       this.bagGrids_ = Collections.emptyList();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1) {
/*       */         return true;
/*       */       }
/*       */       if (isInitialized == 0) {
/*       */         return false;
/*       */       }
/*       */       for (int i = 0; i < getBagGridsCount(); i++) {
/*       */         if (!getBagGrids(i).isInitialized()) {
/*       */           this.memoizedIsInitialized = 0;
/*       */           return false;
/*       */         } 
/*       */       } 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       getSerializedSize();
/*       */       if ((this.bitField0_ & 0x1) == 1) {
/*       */         output.writeInt32(1, this.bagGridCount_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x2) == 2) {
/*       */         output.writeInt32(2, this.bagTotalCount_);
/*       */       }
/*       */       for (int i = 0; i < this.bagGrids_.size(); i++) {
/*       */         output.writeMessage(3, (MessageLite)this.bagGrids_.get(i));
/*       */       }
/*       */       getUnknownFields().writeTo(output);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/*       */       int size = this.memoizedSerializedSize;
/*       */       if (size != -1) {
/*       */         return size;
/*       */       }
/*       */       size = 0;
/*       */       if ((this.bitField0_ & 0x1) == 1) {
/*       */         size += CodedOutputStream.computeInt32Size(1, this.bagGridCount_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x2) == 2) {
/*       */         size += CodedOutputStream.computeInt32Size(2, this.bagTotalCount_);
/*       */       }
/*       */       for (int i = 0; i < this.bagGrids_.size(); i++) {
/*       */         size += CodedOutputStream.computeMessageSize(3, (MessageLite)this.bagGrids_.get(i));
/*       */       }
/*       */       size += getUnknownFields().getSerializedSize();
/*       */       this.memoizedSerializedSize = size;
/*       */       return size;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     protected Object writeReplace() throws ObjectStreamException {
/*       */       return super.writeReplace();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static BagGridsInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (BagGridsInfo)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static BagGridsInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (BagGridsInfo)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static BagGridsInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (BagGridsInfo)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static BagGridsInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (BagGridsInfo)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static BagGridsInfo parseFrom(InputStream input) throws IOException {
/*       */       return (BagGridsInfo)PARSER.parseFrom(input);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static BagGridsInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (BagGridsInfo)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static BagGridsInfo parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (BagGridsInfo)PARSER.parseDelimitedFrom(input);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static BagGridsInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (BagGridsInfo)PARSER.parseDelimitedFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static BagGridsInfo parseFrom(CodedInputStream input) throws IOException {
/*       */       return (BagGridsInfo)PARSER.parseFrom(input);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static BagGridsInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (BagGridsInfo)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static Builder newBuilder() {
/*       */       return Builder.create();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static Builder newBuilder(BagGridsInfo prototype) {
/*       */       return newBuilder().mergeFrom(prototype);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public Builder toBuilder() {
/*       */       return newBuilder(this);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
/*       */       Builder builder = new Builder(parent);
/*       */       return builder;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessage.Builder<Builder>
/*       */       implements GuildManagerHandler.BagGridsInfoOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private int bagGridCount_;
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private int bagTotalCount_;
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private List<ItemOuterClass.Grid> bagGrids_;
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilder<ItemOuterClass.Grid, ItemOuterClass.Grid.Builder, ItemOuterClass.GridOrBuilder> bagGridsBuilder_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_BagGridsInfo_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_BagGridsInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.BagGridsInfo.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder() {
/*       */         this.bagGrids_ = Collections.emptyList();
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder(GeneratedMessage.BuilderParent parent) {
/*       */         super(parent);
/*       */         this.bagGrids_ = Collections.emptyList();
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*       */         if (GuildManagerHandler.BagGridsInfo.alwaysUseFieldBuilders) {
/*       */           getBagGridsFieldBuilder();
/*       */         }
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private static Builder create() {
/*       */         return new Builder();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clear() {
/*       */         super.clear();
/*       */         this.bagGridCount_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.bagTotalCount_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           this.bagGrids_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFFB;
/*       */         } else {
/*       */           this.bagGridsBuilder_.clear();
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clone() {
/*       */         return create().mergeFrom(buildPartial());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_BagGridsInfo_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.BagGridsInfo getDefaultInstanceForType() {
/*       */         return GuildManagerHandler.BagGridsInfo.getDefaultInstance();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.BagGridsInfo build() {
/*       */         GuildManagerHandler.BagGridsInfo result = buildPartial();
/*       */         if (!result.isInitialized()) {
/*       */           throw newUninitializedMessageException(result);
/*       */         }
/*       */         return result;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.BagGridsInfo buildPartial() {
/*       */         GuildManagerHandler.BagGridsInfo result = new GuildManagerHandler.BagGridsInfo(this);
/*       */         int from_bitField0_ = this.bitField0_;
/*       */         int to_bitField0_ = 0;
/*       */         if ((from_bitField0_ & 0x1) == 1) {
/*       */           to_bitField0_ |= 0x1;
/*       */         }
/*       */         result.bagGridCount_ = this.bagGridCount_;
/*       */         if ((from_bitField0_ & 0x2) == 2) {
/*       */           to_bitField0_ |= 0x2;
/*       */         }
/*       */         result.bagTotalCount_ = this.bagTotalCount_;
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x4) == 4) {
/*       */             this.bagGrids_ = Collections.unmodifiableList(this.bagGrids_);
/*       */             this.bitField0_ &= 0xFFFFFFFB;
/*       */           } 
/*       */           result.bagGrids_ = this.bagGrids_;
/*       */         } else {
/*       */           result.bagGrids_ = this.bagGridsBuilder_.build();
/*       */         } 
/*       */         result.bitField0_ = to_bitField0_;
/*       */         onBuilt();
/*       */         return result;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*       */         if (other instanceof GuildManagerHandler.BagGridsInfo) {
/*       */           return mergeFrom((GuildManagerHandler.BagGridsInfo)other);
/*       */         }
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(GuildManagerHandler.BagGridsInfo other) {
/*       */         if (other == GuildManagerHandler.BagGridsInfo.getDefaultInstance()) {
/*       */           return this;
/*       */         }
/*       */         if (other.hasBagGridCount()) {
/*       */           setBagGridCount(other.getBagGridCount());
/*       */         }
/*       */         if (other.hasBagTotalCount()) {
/*       */           setBagTotalCount(other.getBagTotalCount());
/*       */         }
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           if (!other.bagGrids_.isEmpty()) {
/*       */             if (this.bagGrids_.isEmpty()) {
/*       */               this.bagGrids_ = other.bagGrids_;
/*       */               this.bitField0_ &= 0xFFFFFFFB;
/*       */             } else {
/*       */               ensureBagGridsIsMutable();
/*       */               this.bagGrids_.addAll(other.bagGrids_);
/*       */             } 
/*       */             onChanged();
/*       */           } 
/*       */         } else if (!other.bagGrids_.isEmpty()) {
/*       */           if (this.bagGridsBuilder_.isEmpty()) {
/*       */             this.bagGridsBuilder_.dispose();
/*       */             this.bagGridsBuilder_ = null;
/*       */             this.bagGrids_ = other.bagGrids_;
/*       */             this.bitField0_ &= 0xFFFFFFFB;
/*       */             this.bagGridsBuilder_ = GuildManagerHandler.BagGridsInfo.alwaysUseFieldBuilders ? getBagGridsFieldBuilder() : null;
/*       */           } else {
/*       */             this.bagGridsBuilder_.addAllMessages(other.bagGrids_);
/*       */           } 
/*       */         } 
/*       */         mergeUnknownFields(other.getUnknownFields());
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public final boolean isInitialized() {
/*       */         for (int i = 0; i < getBagGridsCount(); i++) {
/*       */           if (!getBagGrids(i).isInitialized()) {
/*       */             return false;
/*       */           }
/*       */         } 
/*       */         return true;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         GuildManagerHandler.BagGridsInfo parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (GuildManagerHandler.BagGridsInfo)GuildManagerHandler.BagGridsInfo.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (GuildManagerHandler.BagGridsInfo)e.getUnfinishedMessage();
/*       */           throw e;
/*       */         } finally {
/*       */           if (parsedMessage != null) {
/*       */             mergeFrom(parsedMessage);
/*       */           }
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasBagGridCount() {
/*       */         return ((this.bitField0_ & 0x1) == 1);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getBagGridCount() {
/*       */         return this.bagGridCount_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setBagGridCount(int value) {
/*       */         this.bitField0_ |= 0x1;
/*       */         this.bagGridCount_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearBagGridCount() {
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.bagGridCount_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasBagTotalCount() {
/*       */         return ((this.bitField0_ & 0x2) == 2);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getBagTotalCount() {
/*       */         return this.bagTotalCount_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setBagTotalCount(int value) {
/*       */         this.bitField0_ |= 0x2;
/*       */         this.bagTotalCount_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearBagTotalCount() {
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         this.bagTotalCount_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private void ensureBagGridsIsMutable() {
/*       */         if ((this.bitField0_ & 0x4) != 4) {
/*       */           this.bagGrids_ = new ArrayList<>(this.bagGrids_);
/*       */           this.bitField0_ |= 0x4;
/*       */         } 
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<ItemOuterClass.Grid> getBagGridsList() {
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           return Collections.unmodifiableList(this.bagGrids_);
/*       */         }
/*       */         return this.bagGridsBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getBagGridsCount() {
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           return this.bagGrids_.size();
/*       */         }
/*       */         return this.bagGridsBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ItemOuterClass.Grid getBagGrids(int index) {
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           return this.bagGrids_.get(index);
/*       */         }
/*       */         return (ItemOuterClass.Grid)this.bagGridsBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setBagGrids(int index, ItemOuterClass.Grid value) {
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           ensureBagGridsIsMutable();
/*       */           this.bagGrids_.set(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.bagGridsBuilder_.setMessage(index, (GeneratedMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setBagGrids(int index, ItemOuterClass.Grid.Builder builderForValue) {
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           ensureBagGridsIsMutable();
/*       */           this.bagGrids_.set(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.bagGridsBuilder_.setMessage(index, (GeneratedMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addBagGrids(ItemOuterClass.Grid value) {
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           ensureBagGridsIsMutable();
/*       */           this.bagGrids_.add(value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.bagGridsBuilder_.addMessage((GeneratedMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addBagGrids(int index, ItemOuterClass.Grid value) {
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           ensureBagGridsIsMutable();
/*       */           this.bagGrids_.add(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.bagGridsBuilder_.addMessage(index, (GeneratedMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addBagGrids(ItemOuterClass.Grid.Builder builderForValue) {
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           ensureBagGridsIsMutable();
/*       */           this.bagGrids_.add(builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.bagGridsBuilder_.addMessage((GeneratedMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addBagGrids(int index, ItemOuterClass.Grid.Builder builderForValue) {
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           ensureBagGridsIsMutable();
/*       */           this.bagGrids_.add(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.bagGridsBuilder_.addMessage(index, (GeneratedMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllBagGrids(Iterable<? extends ItemOuterClass.Grid> values) {
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           ensureBagGridsIsMutable();
/*       */           AbstractMessageLite.Builder.addAll(values, this.bagGrids_);
/*       */           onChanged();
/*       */         } else {
/*       */           this.bagGridsBuilder_.addAllMessages(values);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearBagGrids() {
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           this.bagGrids_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFFB;
/*       */           onChanged();
/*       */         } else {
/*       */           this.bagGridsBuilder_.clear();
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeBagGrids(int index) {
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           ensureBagGridsIsMutable();
/*       */           this.bagGrids_.remove(index);
/*       */           onChanged();
/*       */         } else {
/*       */           this.bagGridsBuilder_.remove(index);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ItemOuterClass.Grid.Builder getBagGridsBuilder(int index) {
/*       */         return (ItemOuterClass.Grid.Builder)getBagGridsFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ItemOuterClass.GridOrBuilder getBagGridsOrBuilder(int index) {
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           return (ItemOuterClass.GridOrBuilder)this.bagGrids_.get(index);
/*       */         }
/*       */         return (ItemOuterClass.GridOrBuilder)this.bagGridsBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends ItemOuterClass.GridOrBuilder> getBagGridsOrBuilderList() {
/*       */         if (this.bagGridsBuilder_ != null) {
/*       */           return this.bagGridsBuilder_.getMessageOrBuilderList();
/*       */         }
/*       */         return (List)Collections.unmodifiableList(this.bagGrids_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ItemOuterClass.Grid.Builder addBagGridsBuilder() {
/*       */         return (ItemOuterClass.Grid.Builder)getBagGridsFieldBuilder().addBuilder((GeneratedMessage)ItemOuterClass.Grid.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ItemOuterClass.Grid.Builder addBagGridsBuilder(int index) {
/*       */         return (ItemOuterClass.Grid.Builder)getBagGridsFieldBuilder().addBuilder(index, (GeneratedMessage)ItemOuterClass.Grid.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<ItemOuterClass.Grid.Builder> getBagGridsBuilderList() {
/*       */         return getBagGridsFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilder<ItemOuterClass.Grid, ItemOuterClass.Grid.Builder, ItemOuterClass.GridOrBuilder> getBagGridsFieldBuilder() {
/*       */         if (this.bagGridsBuilder_ == null) {
/*       */           this.bagGridsBuilder_ = new RepeatedFieldBuilder(this.bagGrids_, ((this.bitField0_ & 0x4) == 4), getParentForChildren(), isClean());
/*       */           this.bagGrids_ = null;
/*       */         } 
/*       */         return this.bagGridsBuilder_;
/*       */       }
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class DepotInfo
/*       */     extends GeneratedMessage
/*       */     implements DepotInfoOrBuilder
/*       */   {
/* 10820 */     private static final DepotInfo defaultInstance = new DepotInfo(true); private final UnknownFieldSet unknownFields; private DepotInfo(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private DepotInfo(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static DepotInfo getDefaultInstance() { return defaultInstance; } public DepotInfo getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private DepotInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { GuildManagerHandler.DepotCondition.Builder subBuilder; int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.level_ = input.readInt32(); break;case 18: subBuilder = null; if ((this.bitField0_ & 0x2) == 2)
/* 10821 */                 subBuilder = this.depotCond_.toBuilder();  this.depotCond_ = (GuildManagerHandler.DepotCondition)input.readMessage(GuildManagerHandler.DepotCondition.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.depotCond_); this.depotCond_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x2; break;case 24: this.bitField0_ |= 0x4; this.deleteCount_ = input.readInt32(); break;case 32: this.bitField0_ |= 0x8; this.deleteCountMax_ = input.readInt32(); break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_DepotInfo_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_DepotInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(DepotInfo.class, Builder.class); } public static Parser<DepotInfo> PARSER = (Parser<DepotInfo>)new AbstractParser<DepotInfo>() { public GuildManagerHandler.DepotInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.DepotInfo(input, extensionRegistry); } }; private int bitField0_; public static final int LEVEL_FIELD_NUMBER = 1; private int level_; public static final int DEPOTCOND_FIELD_NUMBER = 2; private GuildManagerHandler.DepotCondition depotCond_; public static final int DELETECOUNT_FIELD_NUMBER = 3; private int deleteCount_; public static final int DELETECOUNTMAX_FIELD_NUMBER = 4; private int deleteCountMax_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<DepotInfo> getParserForType() { return PARSER; } public boolean hasLevel() { return ((this.bitField0_ & 0x1) == 1); } public int getLevel() { return this.level_; } public boolean hasDepotCond() { return ((this.bitField0_ & 0x2) == 2); } static { defaultInstance.initFields(); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public GuildManagerHandler.DepotCondition getDepotCond() {
/*       */       return this.depotCond_;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public GuildManagerHandler.DepotConditionOrBuilder getDepotCondOrBuilder() {
/*       */       return this.depotCond_;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public boolean hasDeleteCount() {
/*       */       return ((this.bitField0_ & 0x4) == 4);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public int getDeleteCount() {
/*       */       return this.deleteCount_;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public boolean hasDeleteCountMax() {
/*       */       return ((this.bitField0_ & 0x8) == 8);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public int getDeleteCountMax() {
/*       */       return this.deleteCountMax_;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private void initFields() {
/*       */       this.level_ = 0;
/*       */       this.depotCond_ = GuildManagerHandler.DepotCondition.getDefaultInstance();
/*       */       this.deleteCount_ = 0;
/*       */       this.deleteCountMax_ = 0;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1) {
/*       */         return true;
/*       */       }
/*       */       if (isInitialized == 0) {
/*       */         return false;
/*       */       }
/*       */       if (!hasLevel()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       if (hasDepotCond() && !getDepotCond().isInitialized()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       getSerializedSize();
/*       */       if ((this.bitField0_ & 0x1) == 1) {
/*       */         output.writeInt32(1, this.level_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x2) == 2) {
/*       */         output.writeMessage(2, (MessageLite)this.depotCond_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x4) == 4) {
/*       */         output.writeInt32(3, this.deleteCount_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x8) == 8) {
/*       */         output.writeInt32(4, this.deleteCountMax_);
/*       */       }
/*       */       getUnknownFields().writeTo(output);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/*       */       int size = this.memoizedSerializedSize;
/*       */       if (size != -1) {
/*       */         return size;
/*       */       }
/*       */       size = 0;
/*       */       if ((this.bitField0_ & 0x1) == 1) {
/*       */         size += CodedOutputStream.computeInt32Size(1, this.level_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x2) == 2) {
/*       */         size += CodedOutputStream.computeMessageSize(2, (MessageLite)this.depotCond_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x4) == 4) {
/*       */         size += CodedOutputStream.computeInt32Size(3, this.deleteCount_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x8) == 8) {
/*       */         size += CodedOutputStream.computeInt32Size(4, this.deleteCountMax_);
/*       */       }
/*       */       size += getUnknownFields().getSerializedSize();
/*       */       this.memoizedSerializedSize = size;
/*       */       return size;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     protected Object writeReplace() throws ObjectStreamException {
/*       */       return super.writeReplace();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static DepotInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (DepotInfo)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static DepotInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (DepotInfo)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static DepotInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (DepotInfo)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static DepotInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (DepotInfo)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static DepotInfo parseFrom(InputStream input) throws IOException {
/*       */       return (DepotInfo)PARSER.parseFrom(input);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static DepotInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (DepotInfo)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static DepotInfo parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (DepotInfo)PARSER.parseDelimitedFrom(input);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static DepotInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (DepotInfo)PARSER.parseDelimitedFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static DepotInfo parseFrom(CodedInputStream input) throws IOException {
/*       */       return (DepotInfo)PARSER.parseFrom(input);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static DepotInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (DepotInfo)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static Builder newBuilder() {
/*       */       return Builder.create();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static Builder newBuilder(DepotInfo prototype) {
/*       */       return newBuilder().mergeFrom(prototype);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public Builder toBuilder() {
/*       */       return newBuilder(this);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
/*       */       Builder builder = new Builder(parent);
/*       */       return builder;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessage.Builder<Builder>
/*       */       implements GuildManagerHandler.DepotInfoOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private int level_;
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private GuildManagerHandler.DepotCondition depotCond_;
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilder<GuildManagerHandler.DepotCondition, GuildManagerHandler.DepotCondition.Builder, GuildManagerHandler.DepotConditionOrBuilder> depotCondBuilder_;
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private int deleteCount_;
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private int deleteCountMax_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_DepotInfo_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_DepotInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.DepotInfo.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder() {
/*       */         this.depotCond_ = GuildManagerHandler.DepotCondition.getDefaultInstance();
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder(GeneratedMessage.BuilderParent parent) {
/*       */         super(parent);
/*       */         this.depotCond_ = GuildManagerHandler.DepotCondition.getDefaultInstance();
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*       */         if (GuildManagerHandler.DepotInfo.alwaysUseFieldBuilders) {
/*       */           getDepotCondFieldBuilder();
/*       */         }
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private static Builder create() {
/*       */         return new Builder();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clear() {
/*       */         super.clear();
/*       */         this.level_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         if (this.depotCondBuilder_ == null) {
/*       */           this.depotCond_ = GuildManagerHandler.DepotCondition.getDefaultInstance();
/*       */         } else {
/*       */           this.depotCondBuilder_.clear();
/*       */         } 
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         this.deleteCount_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFFB;
/*       */         this.deleteCountMax_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFF7;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clone() {
/*       */         return create().mergeFrom(buildPartial());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_DepotInfo_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.DepotInfo getDefaultInstanceForType() {
/*       */         return GuildManagerHandler.DepotInfo.getDefaultInstance();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.DepotInfo build() {
/*       */         GuildManagerHandler.DepotInfo result = buildPartial();
/*       */         if (!result.isInitialized()) {
/*       */           throw newUninitializedMessageException(result);
/*       */         }
/*       */         return result;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.DepotInfo buildPartial() {
/*       */         GuildManagerHandler.DepotInfo result = new GuildManagerHandler.DepotInfo(this);
/*       */         int from_bitField0_ = this.bitField0_;
/*       */         int to_bitField0_ = 0;
/*       */         if ((from_bitField0_ & 0x1) == 1) {
/*       */           to_bitField0_ |= 0x1;
/*       */         }
/*       */         result.level_ = this.level_;
/*       */         if ((from_bitField0_ & 0x2) == 2) {
/*       */           to_bitField0_ |= 0x2;
/*       */         }
/*       */         if (this.depotCondBuilder_ == null) {
/*       */           result.depotCond_ = this.depotCond_;
/*       */         } else {
/*       */           result.depotCond_ = (GuildManagerHandler.DepotCondition)this.depotCondBuilder_.build();
/*       */         } 
/*       */         if ((from_bitField0_ & 0x4) == 4) {
/*       */           to_bitField0_ |= 0x4;
/*       */         }
/*       */         result.deleteCount_ = this.deleteCount_;
/*       */         if ((from_bitField0_ & 0x8) == 8) {
/*       */           to_bitField0_ |= 0x8;
/*       */         }
/*       */         result.deleteCountMax_ = this.deleteCountMax_;
/*       */         result.bitField0_ = to_bitField0_;
/*       */         onBuilt();
/*       */         return result;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*       */         if (other instanceof GuildManagerHandler.DepotInfo) {
/*       */           return mergeFrom((GuildManagerHandler.DepotInfo)other);
/*       */         }
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(GuildManagerHandler.DepotInfo other) {
/*       */         if (other == GuildManagerHandler.DepotInfo.getDefaultInstance()) {
/*       */           return this;
/*       */         }
/*       */         if (other.hasLevel()) {
/*       */           setLevel(other.getLevel());
/*       */         }
/*       */         if (other.hasDepotCond()) {
/*       */           mergeDepotCond(other.getDepotCond());
/*       */         }
/*       */         if (other.hasDeleteCount()) {
/*       */           setDeleteCount(other.getDeleteCount());
/*       */         }
/*       */         if (other.hasDeleteCountMax()) {
/*       */           setDeleteCountMax(other.getDeleteCountMax());
/*       */         }
/*       */         mergeUnknownFields(other.getUnknownFields());
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public final boolean isInitialized() {
/*       */         if (!hasLevel()) {
/*       */           return false;
/*       */         }
/*       */         if (hasDepotCond() && !getDepotCond().isInitialized()) {
/*       */           return false;
/*       */         }
/*       */         return true;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         GuildManagerHandler.DepotInfo parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (GuildManagerHandler.DepotInfo)GuildManagerHandler.DepotInfo.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (GuildManagerHandler.DepotInfo)e.getUnfinishedMessage();
/*       */           throw e;
/*       */         } finally {
/*       */           if (parsedMessage != null) {
/*       */             mergeFrom(parsedMessage);
/*       */           }
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasLevel() {
/*       */         return ((this.bitField0_ & 0x1) == 1);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getLevel() {
/*       */         return this.level_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setLevel(int value) {
/*       */         this.bitField0_ |= 0x1;
/*       */         this.level_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearLevel() {
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.level_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasDepotCond() {
/*       */         return ((this.bitField0_ & 0x2) == 2);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.DepotCondition getDepotCond() {
/*       */         if (this.depotCondBuilder_ == null) {
/*       */           return this.depotCond_;
/*       */         }
/*       */         return (GuildManagerHandler.DepotCondition)this.depotCondBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setDepotCond(GuildManagerHandler.DepotCondition value) {
/*       */         if (this.depotCondBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           this.depotCond_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.depotCondBuilder_.setMessage(value);
/*       */         } 
/*       */         this.bitField0_ |= 0x2;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setDepotCond(GuildManagerHandler.DepotCondition.Builder builderForValue) {
/*       */         if (this.depotCondBuilder_ == null) {
/*       */           this.depotCond_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.depotCondBuilder_.setMessage(builderForValue.build());
/*       */         } 
/*       */         this.bitField0_ |= 0x2;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeDepotCond(GuildManagerHandler.DepotCondition value) {
/*       */         if (this.depotCondBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x2) == 2 && this.depotCond_ != GuildManagerHandler.DepotCondition.getDefaultInstance()) {
/*       */             this.depotCond_ = GuildManagerHandler.DepotCondition.newBuilder(this.depotCond_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.depotCond_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.depotCondBuilder_.mergeFrom(value);
/*       */         } 
/*       */         this.bitField0_ |= 0x2;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearDepotCond() {
/*       */         if (this.depotCondBuilder_ == null) {
/*       */           this.depotCond_ = GuildManagerHandler.DepotCondition.getDefaultInstance();
/*       */           onChanged();
/*       */         } else {
/*       */           this.depotCondBuilder_.clear();
/*       */         } 
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.DepotCondition.Builder getDepotCondBuilder() {
/*       */         this.bitField0_ |= 0x2;
/*       */         onChanged();
/*       */         return (GuildManagerHandler.DepotCondition.Builder)getDepotCondFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.DepotConditionOrBuilder getDepotCondOrBuilder() {
/*       */         if (this.depotCondBuilder_ != null) {
/*       */           return (GuildManagerHandler.DepotConditionOrBuilder)this.depotCondBuilder_.getMessageOrBuilder();
/*       */         }
/*       */         return this.depotCond_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilder<GuildManagerHandler.DepotCondition, GuildManagerHandler.DepotCondition.Builder, GuildManagerHandler.DepotConditionOrBuilder> getDepotCondFieldBuilder() {
/*       */         if (this.depotCondBuilder_ == null) {
/*       */           this.depotCondBuilder_ = new SingleFieldBuilder(getDepotCond(), getParentForChildren(), isClean());
/*       */           this.depotCond_ = null;
/*       */         } 
/*       */         return this.depotCondBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasDeleteCount() {
/*       */         return ((this.bitField0_ & 0x4) == 4);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getDeleteCount() {
/*       */         return this.deleteCount_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setDeleteCount(int value) {
/*       */         this.bitField0_ |= 0x4;
/*       */         this.deleteCount_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearDeleteCount() {
/*       */         this.bitField0_ &= 0xFFFFFFFB;
/*       */         this.deleteCount_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasDeleteCountMax() {
/*       */         return ((this.bitField0_ & 0x8) == 8);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getDeleteCountMax() {
/*       */         return this.deleteCountMax_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setDeleteCountMax(int value) {
/*       */         this.bitField0_ |= 0x8;
/*       */         this.deleteCountMax_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearDeleteCountMax() {
/*       */         this.bitField0_ &= 0xFFFFFFF7;
/*       */         this.deleteCountMax_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class GetDepotAllGridsResponse
/*       */     extends GeneratedMessage
/*       */     implements GetDepotAllGridsResponseOrBuilder
/*       */   {
/* 11591 */     private static final GetDepotAllGridsResponse defaultInstance = new GetDepotAllGridsResponse(true); private final UnknownFieldSet unknownFields; private GetDepotAllGridsResponse(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private GetDepotAllGridsResponse(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static GetDepotAllGridsResponse getDefaultInstance() { return defaultInstance; } public GetDepotAllGridsResponse getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private GetDepotAllGridsResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; GuildManagerHandler.BagGridsInfo.Builder subBuilder; int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.s2CCode_ = input.readInt32(); break;case 18: bs = input.readBytes(); this.bitField0_ |= 0x2; this.s2CMsg_ = bs; break;case 26: subBuilder = null; if ((this.bitField0_ & 0x4) == 4) subBuilder = this.s2CBagInfo_.toBuilder();  this.s2CBagInfo_ = (GuildManagerHandler.BagGridsInfo)input.readMessage(GuildManagerHandler.BagGridsInfo.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.s2CBagInfo_); this.s2CBagInfo_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x4; break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotAllGridsResponse_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotAllGridsResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GetDepotAllGridsResponse.class, Builder.class); } public static Parser<GetDepotAllGridsResponse> PARSER = (Parser<GetDepotAllGridsResponse>)new AbstractParser<GetDepotAllGridsResponse>() { public GuildManagerHandler.GetDepotAllGridsResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.GetDepotAllGridsResponse(input, extensionRegistry); } }
/* 11592 */     ; private int bitField0_; public static final int S2C_CODE_FIELD_NUMBER = 1; private int s2CCode_; public static final int S2C_MSG_FIELD_NUMBER = 2; private Object s2CMsg_; public static final int S2C_BAGINFO_FIELD_NUMBER = 3; private GuildManagerHandler.BagGridsInfo s2CBagInfo_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<GetDepotAllGridsResponse> getParserForType() { return PARSER; } public boolean hasS2CCode() { return ((this.bitField0_ & 0x1) == 1); } public int getS2CCode() { return this.s2CCode_; } public boolean hasS2CMsg() { return ((this.bitField0_ & 0x2) == 2); } public String getS2CMsg() { Object ref = this.s2CMsg_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.s2CMsg_ = s;  return s; } static { defaultInstance.initFields(); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public ByteString getS2CMsgBytes() {
/*       */       Object ref = this.s2CMsg_;
/*       */       if (ref instanceof String) {
/*       */         ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */         this.s2CMsg_ = b;
/*       */         return b;
/*       */       } 
/*       */       return (ByteString)ref;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public boolean hasS2CBagInfo() {
/*       */       return ((this.bitField0_ & 0x4) == 4);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public GuildManagerHandler.BagGridsInfo getS2CBagInfo() {
/*       */       return this.s2CBagInfo_;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public GuildManagerHandler.BagGridsInfoOrBuilder getS2CBagInfoOrBuilder() {
/*       */       return this.s2CBagInfo_;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private void initFields() {
/*       */       this.s2CCode_ = 0;
/*       */       this.s2CMsg_ = "";
/*       */       this.s2CBagInfo_ = GuildManagerHandler.BagGridsInfo.getDefaultInstance();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1) {
/*       */         return true;
/*       */       }
/*       */       if (isInitialized == 0) {
/*       */         return false;
/*       */       }
/*       */       if (!hasS2CCode()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       if (hasS2CBagInfo() && !getS2CBagInfo().isInitialized()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       getSerializedSize();
/*       */       if ((this.bitField0_ & 0x1) == 1) {
/*       */         output.writeInt32(1, this.s2CCode_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x2) == 2) {
/*       */         output.writeBytes(2, getS2CMsgBytes());
/*       */       }
/*       */       if ((this.bitField0_ & 0x4) == 4) {
/*       */         output.writeMessage(3, (MessageLite)this.s2CBagInfo_);
/*       */       }
/*       */       getUnknownFields().writeTo(output);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/*       */       int size = this.memoizedSerializedSize;
/*       */       if (size != -1) {
/*       */         return size;
/*       */       }
/*       */       size = 0;
/*       */       if ((this.bitField0_ & 0x1) == 1) {
/*       */         size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x2) == 2) {
/*       */         size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
/*       */       }
/*       */       if ((this.bitField0_ & 0x4) == 4) {
/*       */         size += CodedOutputStream.computeMessageSize(3, (MessageLite)this.s2CBagInfo_);
/*       */       }
/*       */       size += getUnknownFields().getSerializedSize();
/*       */       this.memoizedSerializedSize = size;
/*       */       return size;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     protected Object writeReplace() throws ObjectStreamException {
/*       */       return super.writeReplace();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotAllGridsResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (GetDepotAllGridsResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotAllGridsResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (GetDepotAllGridsResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotAllGridsResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (GetDepotAllGridsResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotAllGridsResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (GetDepotAllGridsResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotAllGridsResponse parseFrom(InputStream input) throws IOException {
/*       */       return (GetDepotAllGridsResponse)PARSER.parseFrom(input);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotAllGridsResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GetDepotAllGridsResponse)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotAllGridsResponse parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (GetDepotAllGridsResponse)PARSER.parseDelimitedFrom(input);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotAllGridsResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GetDepotAllGridsResponse)PARSER.parseDelimitedFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotAllGridsResponse parseFrom(CodedInputStream input) throws IOException {
/*       */       return (GetDepotAllGridsResponse)PARSER.parseFrom(input);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotAllGridsResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GetDepotAllGridsResponse)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static Builder newBuilder() {
/*       */       return Builder.create();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static Builder newBuilder(GetDepotAllGridsResponse prototype) {
/*       */       return newBuilder().mergeFrom(prototype);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public Builder toBuilder() {
/*       */       return newBuilder(this);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
/*       */       Builder builder = new Builder(parent);
/*       */       return builder;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessage.Builder<Builder>
/*       */       implements GuildManagerHandler.GetDepotAllGridsResponseOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private int s2CCode_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Object s2CMsg_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private GuildManagerHandler.BagGridsInfo s2CBagInfo_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilder<GuildManagerHandler.BagGridsInfo, GuildManagerHandler.BagGridsInfo.Builder, GuildManagerHandler.BagGridsInfoOrBuilder> s2CBagInfoBuilder_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_GetDepotAllGridsResponse_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_GetDepotAllGridsResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.GetDepotAllGridsResponse.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder() {
/*       */         this.s2CMsg_ = "";
/*       */         this.s2CBagInfo_ = GuildManagerHandler.BagGridsInfo.getDefaultInstance();
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder(GeneratedMessage.BuilderParent parent) {
/*       */         super(parent);
/*       */         this.s2CMsg_ = "";
/*       */         this.s2CBagInfo_ = GuildManagerHandler.BagGridsInfo.getDefaultInstance();
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*       */         if (GuildManagerHandler.GetDepotAllGridsResponse.alwaysUseFieldBuilders) {
/*       */           getS2CBagInfoFieldBuilder();
/*       */         }
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private static Builder create() {
/*       */         return new Builder();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clear() {
/*       */         super.clear();
/*       */         this.s2CCode_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.s2CMsg_ = "";
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         if (this.s2CBagInfoBuilder_ == null) {
/*       */           this.s2CBagInfo_ = GuildManagerHandler.BagGridsInfo.getDefaultInstance();
/*       */         } else {
/*       */           this.s2CBagInfoBuilder_.clear();
/*       */         } 
/*       */         this.bitField0_ &= 0xFFFFFFFB;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clone() {
/*       */         return create().mergeFrom(buildPartial());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_GetDepotAllGridsResponse_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.GetDepotAllGridsResponse getDefaultInstanceForType() {
/*       */         return GuildManagerHandler.GetDepotAllGridsResponse.getDefaultInstance();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.GetDepotAllGridsResponse build() {
/*       */         GuildManagerHandler.GetDepotAllGridsResponse result = buildPartial();
/*       */         if (!result.isInitialized()) {
/*       */           throw newUninitializedMessageException(result);
/*       */         }
/*       */         return result;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.GetDepotAllGridsResponse buildPartial() {
/*       */         GuildManagerHandler.GetDepotAllGridsResponse result = new GuildManagerHandler.GetDepotAllGridsResponse(this);
/*       */         int from_bitField0_ = this.bitField0_;
/*       */         int to_bitField0_ = 0;
/*       */         if ((from_bitField0_ & 0x1) == 1) {
/*       */           to_bitField0_ |= 0x1;
/*       */         }
/*       */         result.s2CCode_ = this.s2CCode_;
/*       */         if ((from_bitField0_ & 0x2) == 2) {
/*       */           to_bitField0_ |= 0x2;
/*       */         }
/*       */         result.s2CMsg_ = this.s2CMsg_;
/*       */         if ((from_bitField0_ & 0x4) == 4) {
/*       */           to_bitField0_ |= 0x4;
/*       */         }
/*       */         if (this.s2CBagInfoBuilder_ == null) {
/*       */           result.s2CBagInfo_ = this.s2CBagInfo_;
/*       */         } else {
/*       */           result.s2CBagInfo_ = (GuildManagerHandler.BagGridsInfo)this.s2CBagInfoBuilder_.build();
/*       */         } 
/*       */         result.bitField0_ = to_bitField0_;
/*       */         onBuilt();
/*       */         return result;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*       */         if (other instanceof GuildManagerHandler.GetDepotAllGridsResponse) {
/*       */           return mergeFrom((GuildManagerHandler.GetDepotAllGridsResponse)other);
/*       */         }
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(GuildManagerHandler.GetDepotAllGridsResponse other) {
/*       */         if (other == GuildManagerHandler.GetDepotAllGridsResponse.getDefaultInstance()) {
/*       */           return this;
/*       */         }
/*       */         if (other.hasS2CCode()) {
/*       */           setS2CCode(other.getS2CCode());
/*       */         }
/*       */         if (other.hasS2CMsg()) {
/*       */           this.bitField0_ |= 0x2;
/*       */           this.s2CMsg_ = other.s2CMsg_;
/*       */           onChanged();
/*       */         } 
/*       */         if (other.hasS2CBagInfo()) {
/*       */           mergeS2CBagInfo(other.getS2CBagInfo());
/*       */         }
/*       */         mergeUnknownFields(other.getUnknownFields());
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public final boolean isInitialized() {
/*       */         if (!hasS2CCode()) {
/*       */           return false;
/*       */         }
/*       */         if (hasS2CBagInfo() && !getS2CBagInfo().isInitialized()) {
/*       */           return false;
/*       */         }
/*       */         return true;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         GuildManagerHandler.GetDepotAllGridsResponse parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (GuildManagerHandler.GetDepotAllGridsResponse)GuildManagerHandler.GetDepotAllGridsResponse.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (GuildManagerHandler.GetDepotAllGridsResponse)e.getUnfinishedMessage();
/*       */           throw e;
/*       */         } finally {
/*       */           if (parsedMessage != null) {
/*       */             mergeFrom(parsedMessage);
/*       */           }
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasS2CCode() {
/*       */         return ((this.bitField0_ & 0x1) == 1);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getS2CCode() {
/*       */         return this.s2CCode_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CCode(int value) {
/*       */         this.bitField0_ |= 0x1;
/*       */         this.s2CCode_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearS2CCode() {
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.s2CCode_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasS2CMsg() {
/*       */         return ((this.bitField0_ & 0x2) == 2);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getS2CMsg() {
/*       */         Object ref = this.s2CMsg_;
/*       */         if (!(ref instanceof String)) {
/*       */           ByteString bs = (ByteString)ref;
/*       */           String s = bs.toStringUtf8();
/*       */           if (bs.isValidUtf8()) {
/*       */             this.s2CMsg_ = s;
/*       */           }
/*       */           return s;
/*       */         } 
/*       */         return (String)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getS2CMsgBytes() {
/*       */         Object ref = this.s2CMsg_;
/*       */         if (ref instanceof String) {
/*       */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           this.s2CMsg_ = b;
/*       */           return b;
/*       */         } 
/*       */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CMsg(String value) {
/*       */         if (value == null) {
/*       */           throw new NullPointerException();
/*       */         }
/*       */         this.bitField0_ |= 0x2;
/*       */         this.s2CMsg_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearS2CMsg() {
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         this.s2CMsg_ = GuildManagerHandler.GetDepotAllGridsResponse.getDefaultInstance().getS2CMsg();
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CMsgBytes(ByteString value) {
/*       */         if (value == null) {
/*       */           throw new NullPointerException();
/*       */         }
/*       */         this.bitField0_ |= 0x2;
/*       */         this.s2CMsg_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasS2CBagInfo() {
/*       */         return ((this.bitField0_ & 0x4) == 4);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.BagGridsInfo getS2CBagInfo() {
/*       */         if (this.s2CBagInfoBuilder_ == null) {
/*       */           return this.s2CBagInfo_;
/*       */         }
/*       */         return (GuildManagerHandler.BagGridsInfo)this.s2CBagInfoBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CBagInfo(GuildManagerHandler.BagGridsInfo value) {
/*       */         if (this.s2CBagInfoBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           this.s2CBagInfo_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CBagInfoBuilder_.setMessage(value);
/*       */         } 
/*       */         this.bitField0_ |= 0x4;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CBagInfo(GuildManagerHandler.BagGridsInfo.Builder builderForValue) {
/*       */         if (this.s2CBagInfoBuilder_ == null) {
/*       */           this.s2CBagInfo_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CBagInfoBuilder_.setMessage(builderForValue.build());
/*       */         } 
/*       */         this.bitField0_ |= 0x4;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeS2CBagInfo(GuildManagerHandler.BagGridsInfo value) {
/*       */         if (this.s2CBagInfoBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x4) == 4 && this.s2CBagInfo_ != GuildManagerHandler.BagGridsInfo.getDefaultInstance()) {
/*       */             this.s2CBagInfo_ = GuildManagerHandler.BagGridsInfo.newBuilder(this.s2CBagInfo_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.s2CBagInfo_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CBagInfoBuilder_.mergeFrom(value);
/*       */         } 
/*       */         this.bitField0_ |= 0x4;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearS2CBagInfo() {
/*       */         if (this.s2CBagInfoBuilder_ == null) {
/*       */           this.s2CBagInfo_ = GuildManagerHandler.BagGridsInfo.getDefaultInstance();
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CBagInfoBuilder_.clear();
/*       */         } 
/*       */         this.bitField0_ &= 0xFFFFFFFB;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.BagGridsInfo.Builder getS2CBagInfoBuilder() {
/*       */         this.bitField0_ |= 0x4;
/*       */         onChanged();
/*       */         return (GuildManagerHandler.BagGridsInfo.Builder)getS2CBagInfoFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.BagGridsInfoOrBuilder getS2CBagInfoOrBuilder() {
/*       */         if (this.s2CBagInfoBuilder_ != null) {
/*       */           return (GuildManagerHandler.BagGridsInfoOrBuilder)this.s2CBagInfoBuilder_.getMessageOrBuilder();
/*       */         }
/*       */         return this.s2CBagInfo_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilder<GuildManagerHandler.BagGridsInfo, GuildManagerHandler.BagGridsInfo.Builder, GuildManagerHandler.BagGridsInfoOrBuilder> getS2CBagInfoFieldBuilder() {
/*       */         if (this.s2CBagInfoBuilder_ == null) {
/*       */           this.s2CBagInfoBuilder_ = new SingleFieldBuilder(getS2CBagInfo(), getParentForChildren(), isClean());
/*       */           this.s2CBagInfo_ = null;
/*       */         } 
/*       */         return this.s2CBagInfoBuilder_;
/*       */       }
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class GetDepotAllDetailsResponse
/*       */     extends GeneratedMessage
/*       */     implements GetDepotAllDetailsResponseOrBuilder
/*       */   {
/* 12533 */     private static final GetDepotAllDetailsResponse defaultInstance = new GetDepotAllDetailsResponse(true); private final UnknownFieldSet unknownFields; private GetDepotAllDetailsResponse(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private GetDepotAllDetailsResponse(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static GetDepotAllDetailsResponse getDefaultInstance() { return defaultInstance; } public GetDepotAllDetailsResponse getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private GetDepotAllDetailsResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.s2CCode_ = input.readInt32(); break;case 18: bs = input.readBytes(); this.bitField0_ |= 0x2; this.s2CMsg_ = bs; break;case 26: if ((mutable_bitField0_ & 0x4) != 4) { this.s2CBagDetails_ = new ArrayList<>(); mutable_bitField0_ |= 0x4; }  this.s2CBagDetails_.add(input.readMessage(ItemOuterClass.ItemDetail.PARSER, extensionRegistry)); break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x4) == 4) this.s2CBagDetails_ = Collections.unmodifiableList(this.s2CBagDetails_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotAllDetailsResponse_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotAllDetailsResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GetDepotAllDetailsResponse.class, Builder.class); } public static Parser<GetDepotAllDetailsResponse> PARSER = (Parser<GetDepotAllDetailsResponse>)new AbstractParser<GetDepotAllDetailsResponse>() { public GuildManagerHandler.GetDepotAllDetailsResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.GetDepotAllDetailsResponse(input, extensionRegistry); } }
/* 12534 */     ; private int bitField0_; public static final int S2C_CODE_FIELD_NUMBER = 1; private int s2CCode_; public static final int S2C_MSG_FIELD_NUMBER = 2; private Object s2CMsg_; public static final int S2C_BAGDETAILS_FIELD_NUMBER = 3; private List<ItemOuterClass.ItemDetail> s2CBagDetails_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<GetDepotAllDetailsResponse> getParserForType() { return PARSER; } public boolean hasS2CCode() { return ((this.bitField0_ & 0x1) == 1); } public int getS2CCode() { return this.s2CCode_; } public boolean hasS2CMsg() { return ((this.bitField0_ & 0x2) == 2); } public String getS2CMsg() { Object ref = this.s2CMsg_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.s2CMsg_ = s;  return s; } public ByteString getS2CMsgBytes() { Object ref = this.s2CMsg_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.s2CMsg_ = b; return b; }  return (ByteString)ref; } static { defaultInstance.initFields(); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public List<ItemOuterClass.ItemDetail> getS2CBagDetailsList() {
/*       */       return this.s2CBagDetails_;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public List<? extends ItemOuterClass.ItemDetailOrBuilder> getS2CBagDetailsOrBuilderList() {
/*       */       return (List)this.s2CBagDetails_;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public int getS2CBagDetailsCount() {
/*       */       return this.s2CBagDetails_.size();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public ItemOuterClass.ItemDetail getS2CBagDetails(int index) {
/*       */       return this.s2CBagDetails_.get(index);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public ItemOuterClass.ItemDetailOrBuilder getS2CBagDetailsOrBuilder(int index) {
/*       */       return (ItemOuterClass.ItemDetailOrBuilder)this.s2CBagDetails_.get(index);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private void initFields() {
/*       */       this.s2CCode_ = 0;
/*       */       this.s2CMsg_ = "";
/*       */       this.s2CBagDetails_ = Collections.emptyList();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1) {
/*       */         return true;
/*       */       }
/*       */       if (isInitialized == 0) {
/*       */         return false;
/*       */       }
/*       */       if (!hasS2CCode()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       for (int i = 0; i < getS2CBagDetailsCount(); i++) {
/*       */         if (!getS2CBagDetails(i).isInitialized()) {
/*       */           this.memoizedIsInitialized = 0;
/*       */           return false;
/*       */         } 
/*       */       } 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       getSerializedSize();
/*       */       if ((this.bitField0_ & 0x1) == 1) {
/*       */         output.writeInt32(1, this.s2CCode_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x2) == 2) {
/*       */         output.writeBytes(2, getS2CMsgBytes());
/*       */       }
/*       */       for (int i = 0; i < this.s2CBagDetails_.size(); i++) {
/*       */         output.writeMessage(3, (MessageLite)this.s2CBagDetails_.get(i));
/*       */       }
/*       */       getUnknownFields().writeTo(output);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/*       */       int size = this.memoizedSerializedSize;
/*       */       if (size != -1) {
/*       */         return size;
/*       */       }
/*       */       size = 0;
/*       */       if ((this.bitField0_ & 0x1) == 1) {
/*       */         size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x2) == 2) {
/*       */         size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
/*       */       }
/*       */       for (int i = 0; i < this.s2CBagDetails_.size(); i++) {
/*       */         size += CodedOutputStream.computeMessageSize(3, (MessageLite)this.s2CBagDetails_.get(i));
/*       */       }
/*       */       size += getUnknownFields().getSerializedSize();
/*       */       this.memoizedSerializedSize = size;
/*       */       return size;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     protected Object writeReplace() throws ObjectStreamException {
/*       */       return super.writeReplace();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotAllDetailsResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (GetDepotAllDetailsResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotAllDetailsResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (GetDepotAllDetailsResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotAllDetailsResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (GetDepotAllDetailsResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotAllDetailsResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (GetDepotAllDetailsResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotAllDetailsResponse parseFrom(InputStream input) throws IOException {
/*       */       return (GetDepotAllDetailsResponse)PARSER.parseFrom(input);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotAllDetailsResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GetDepotAllDetailsResponse)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotAllDetailsResponse parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (GetDepotAllDetailsResponse)PARSER.parseDelimitedFrom(input);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotAllDetailsResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GetDepotAllDetailsResponse)PARSER.parseDelimitedFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotAllDetailsResponse parseFrom(CodedInputStream input) throws IOException {
/*       */       return (GetDepotAllDetailsResponse)PARSER.parseFrom(input);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotAllDetailsResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GetDepotAllDetailsResponse)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static Builder newBuilder() {
/*       */       return Builder.create();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static Builder newBuilder(GetDepotAllDetailsResponse prototype) {
/*       */       return newBuilder().mergeFrom(prototype);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public Builder toBuilder() {
/*       */       return newBuilder(this);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
/*       */       Builder builder = new Builder(parent);
/*       */       return builder;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessage.Builder<Builder>
/*       */       implements GuildManagerHandler.GetDepotAllDetailsResponseOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private int s2CCode_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Object s2CMsg_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private List<ItemOuterClass.ItemDetail> s2CBagDetails_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilder<ItemOuterClass.ItemDetail, ItemOuterClass.ItemDetail.Builder, ItemOuterClass.ItemDetailOrBuilder> s2CBagDetailsBuilder_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_GetDepotAllDetailsResponse_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_GetDepotAllDetailsResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.GetDepotAllDetailsResponse.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder() {
/*       */         this.s2CMsg_ = "";
/*       */         this.s2CBagDetails_ = Collections.emptyList();
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder(GeneratedMessage.BuilderParent parent) {
/*       */         super(parent);
/*       */         this.s2CMsg_ = "";
/*       */         this.s2CBagDetails_ = Collections.emptyList();
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*       */         if (GuildManagerHandler.GetDepotAllDetailsResponse.alwaysUseFieldBuilders) {
/*       */           getS2CBagDetailsFieldBuilder();
/*       */         }
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private static Builder create() {
/*       */         return new Builder();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clear() {
/*       */         super.clear();
/*       */         this.s2CCode_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.s2CMsg_ = "";
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         if (this.s2CBagDetailsBuilder_ == null) {
/*       */           this.s2CBagDetails_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFFB;
/*       */         } else {
/*       */           this.s2CBagDetailsBuilder_.clear();
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clone() {
/*       */         return create().mergeFrom(buildPartial());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_GetDepotAllDetailsResponse_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.GetDepotAllDetailsResponse getDefaultInstanceForType() {
/*       */         return GuildManagerHandler.GetDepotAllDetailsResponse.getDefaultInstance();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.GetDepotAllDetailsResponse build() {
/*       */         GuildManagerHandler.GetDepotAllDetailsResponse result = buildPartial();
/*       */         if (!result.isInitialized()) {
/*       */           throw newUninitializedMessageException(result);
/*       */         }
/*       */         return result;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.GetDepotAllDetailsResponse buildPartial() {
/*       */         GuildManagerHandler.GetDepotAllDetailsResponse result = new GuildManagerHandler.GetDepotAllDetailsResponse(this);
/*       */         int from_bitField0_ = this.bitField0_;
/*       */         int to_bitField0_ = 0;
/*       */         if ((from_bitField0_ & 0x1) == 1) {
/*       */           to_bitField0_ |= 0x1;
/*       */         }
/*       */         result.s2CCode_ = this.s2CCode_;
/*       */         if ((from_bitField0_ & 0x2) == 2) {
/*       */           to_bitField0_ |= 0x2;
/*       */         }
/*       */         result.s2CMsg_ = this.s2CMsg_;
/*       */         if (this.s2CBagDetailsBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x4) == 4) {
/*       */             this.s2CBagDetails_ = Collections.unmodifiableList(this.s2CBagDetails_);
/*       */             this.bitField0_ &= 0xFFFFFFFB;
/*       */           } 
/*       */           result.s2CBagDetails_ = this.s2CBagDetails_;
/*       */         } else {
/*       */           result.s2CBagDetails_ = this.s2CBagDetailsBuilder_.build();
/*       */         } 
/*       */         result.bitField0_ = to_bitField0_;
/*       */         onBuilt();
/*       */         return result;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*       */         if (other instanceof GuildManagerHandler.GetDepotAllDetailsResponse) {
/*       */           return mergeFrom((GuildManagerHandler.GetDepotAllDetailsResponse)other);
/*       */         }
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(GuildManagerHandler.GetDepotAllDetailsResponse other) {
/*       */         if (other == GuildManagerHandler.GetDepotAllDetailsResponse.getDefaultInstance()) {
/*       */           return this;
/*       */         }
/*       */         if (other.hasS2CCode()) {
/*       */           setS2CCode(other.getS2CCode());
/*       */         }
/*       */         if (other.hasS2CMsg()) {
/*       */           this.bitField0_ |= 0x2;
/*       */           this.s2CMsg_ = other.s2CMsg_;
/*       */           onChanged();
/*       */         } 
/*       */         if (this.s2CBagDetailsBuilder_ == null) {
/*       */           if (!other.s2CBagDetails_.isEmpty()) {
/*       */             if (this.s2CBagDetails_.isEmpty()) {
/*       */               this.s2CBagDetails_ = other.s2CBagDetails_;
/*       */               this.bitField0_ &= 0xFFFFFFFB;
/*       */             } else {
/*       */               ensureS2CBagDetailsIsMutable();
/*       */               this.s2CBagDetails_.addAll(other.s2CBagDetails_);
/*       */             } 
/*       */             onChanged();
/*       */           } 
/*       */         } else if (!other.s2CBagDetails_.isEmpty()) {
/*       */           if (this.s2CBagDetailsBuilder_.isEmpty()) {
/*       */             this.s2CBagDetailsBuilder_.dispose();
/*       */             this.s2CBagDetailsBuilder_ = null;
/*       */             this.s2CBagDetails_ = other.s2CBagDetails_;
/*       */             this.bitField0_ &= 0xFFFFFFFB;
/*       */             this.s2CBagDetailsBuilder_ = GuildManagerHandler.GetDepotAllDetailsResponse.alwaysUseFieldBuilders ? getS2CBagDetailsFieldBuilder() : null;
/*       */           } else {
/*       */             this.s2CBagDetailsBuilder_.addAllMessages(other.s2CBagDetails_);
/*       */           } 
/*       */         } 
/*       */         mergeUnknownFields(other.getUnknownFields());
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public final boolean isInitialized() {
/*       */         if (!hasS2CCode()) {
/*       */           return false;
/*       */         }
/*       */         for (int i = 0; i < getS2CBagDetailsCount(); i++) {
/*       */           if (!getS2CBagDetails(i).isInitialized()) {
/*       */             return false;
/*       */           }
/*       */         } 
/*       */         return true;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         GuildManagerHandler.GetDepotAllDetailsResponse parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (GuildManagerHandler.GetDepotAllDetailsResponse)GuildManagerHandler.GetDepotAllDetailsResponse.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (GuildManagerHandler.GetDepotAllDetailsResponse)e.getUnfinishedMessage();
/*       */           throw e;
/*       */         } finally {
/*       */           if (parsedMessage != null) {
/*       */             mergeFrom(parsedMessage);
/*       */           }
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasS2CCode() {
/*       */         return ((this.bitField0_ & 0x1) == 1);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getS2CCode() {
/*       */         return this.s2CCode_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CCode(int value) {
/*       */         this.bitField0_ |= 0x1;
/*       */         this.s2CCode_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearS2CCode() {
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.s2CCode_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasS2CMsg() {
/*       */         return ((this.bitField0_ & 0x2) == 2);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getS2CMsg() {
/*       */         Object ref = this.s2CMsg_;
/*       */         if (!(ref instanceof String)) {
/*       */           ByteString bs = (ByteString)ref;
/*       */           String s = bs.toStringUtf8();
/*       */           if (bs.isValidUtf8()) {
/*       */             this.s2CMsg_ = s;
/*       */           }
/*       */           return s;
/*       */         } 
/*       */         return (String)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getS2CMsgBytes() {
/*       */         Object ref = this.s2CMsg_;
/*       */         if (ref instanceof String) {
/*       */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           this.s2CMsg_ = b;
/*       */           return b;
/*       */         } 
/*       */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CMsg(String value) {
/*       */         if (value == null) {
/*       */           throw new NullPointerException();
/*       */         }
/*       */         this.bitField0_ |= 0x2;
/*       */         this.s2CMsg_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearS2CMsg() {
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         this.s2CMsg_ = GuildManagerHandler.GetDepotAllDetailsResponse.getDefaultInstance().getS2CMsg();
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CMsgBytes(ByteString value) {
/*       */         if (value == null) {
/*       */           throw new NullPointerException();
/*       */         }
/*       */         this.bitField0_ |= 0x2;
/*       */         this.s2CMsg_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private void ensureS2CBagDetailsIsMutable() {
/*       */         if ((this.bitField0_ & 0x4) != 4) {
/*       */           this.s2CBagDetails_ = new ArrayList<>(this.s2CBagDetails_);
/*       */           this.bitField0_ |= 0x4;
/*       */         } 
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<ItemOuterClass.ItemDetail> getS2CBagDetailsList() {
/*       */         if (this.s2CBagDetailsBuilder_ == null) {
/*       */           return Collections.unmodifiableList(this.s2CBagDetails_);
/*       */         }
/*       */         return this.s2CBagDetailsBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getS2CBagDetailsCount() {
/*       */         if (this.s2CBagDetailsBuilder_ == null) {
/*       */           return this.s2CBagDetails_.size();
/*       */         }
/*       */         return this.s2CBagDetailsBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ItemOuterClass.ItemDetail getS2CBagDetails(int index) {
/*       */         if (this.s2CBagDetailsBuilder_ == null) {
/*       */           return this.s2CBagDetails_.get(index);
/*       */         }
/*       */         return (ItemOuterClass.ItemDetail)this.s2CBagDetailsBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CBagDetails(int index, ItemOuterClass.ItemDetail value) {
/*       */         if (this.s2CBagDetailsBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           ensureS2CBagDetailsIsMutable();
/*       */           this.s2CBagDetails_.set(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CBagDetailsBuilder_.setMessage(index, (GeneratedMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CBagDetails(int index, ItemOuterClass.ItemDetail.Builder builderForValue) {
/*       */         if (this.s2CBagDetailsBuilder_ == null) {
/*       */           ensureS2CBagDetailsIsMutable();
/*       */           this.s2CBagDetails_.set(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CBagDetailsBuilder_.setMessage(index, (GeneratedMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addS2CBagDetails(ItemOuterClass.ItemDetail value) {
/*       */         if (this.s2CBagDetailsBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           ensureS2CBagDetailsIsMutable();
/*       */           this.s2CBagDetails_.add(value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CBagDetailsBuilder_.addMessage((GeneratedMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addS2CBagDetails(int index, ItemOuterClass.ItemDetail value) {
/*       */         if (this.s2CBagDetailsBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           ensureS2CBagDetailsIsMutable();
/*       */           this.s2CBagDetails_.add(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CBagDetailsBuilder_.addMessage(index, (GeneratedMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addS2CBagDetails(ItemOuterClass.ItemDetail.Builder builderForValue) {
/*       */         if (this.s2CBagDetailsBuilder_ == null) {
/*       */           ensureS2CBagDetailsIsMutable();
/*       */           this.s2CBagDetails_.add(builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CBagDetailsBuilder_.addMessage((GeneratedMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addS2CBagDetails(int index, ItemOuterClass.ItemDetail.Builder builderForValue) {
/*       */         if (this.s2CBagDetailsBuilder_ == null) {
/*       */           ensureS2CBagDetailsIsMutable();
/*       */           this.s2CBagDetails_.add(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CBagDetailsBuilder_.addMessage(index, (GeneratedMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllS2CBagDetails(Iterable<? extends ItemOuterClass.ItemDetail> values) {
/*       */         if (this.s2CBagDetailsBuilder_ == null) {
/*       */           ensureS2CBagDetailsIsMutable();
/*       */           AbstractMessageLite.Builder.addAll(values, this.s2CBagDetails_);
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CBagDetailsBuilder_.addAllMessages(values);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearS2CBagDetails() {
/*       */         if (this.s2CBagDetailsBuilder_ == null) {
/*       */           this.s2CBagDetails_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFFB;
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CBagDetailsBuilder_.clear();
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeS2CBagDetails(int index) {
/*       */         if (this.s2CBagDetailsBuilder_ == null) {
/*       */           ensureS2CBagDetailsIsMutable();
/*       */           this.s2CBagDetails_.remove(index);
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CBagDetailsBuilder_.remove(index);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ItemOuterClass.ItemDetail.Builder getS2CBagDetailsBuilder(int index) {
/*       */         return (ItemOuterClass.ItemDetail.Builder)getS2CBagDetailsFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ItemOuterClass.ItemDetailOrBuilder getS2CBagDetailsOrBuilder(int index) {
/*       */         if (this.s2CBagDetailsBuilder_ == null) {
/*       */           return (ItemOuterClass.ItemDetailOrBuilder)this.s2CBagDetails_.get(index);
/*       */         }
/*       */         return (ItemOuterClass.ItemDetailOrBuilder)this.s2CBagDetailsBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends ItemOuterClass.ItemDetailOrBuilder> getS2CBagDetailsOrBuilderList() {
/*       */         if (this.s2CBagDetailsBuilder_ != null) {
/*       */           return this.s2CBagDetailsBuilder_.getMessageOrBuilderList();
/*       */         }
/*       */         return (List)Collections.unmodifiableList(this.s2CBagDetails_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ItemOuterClass.ItemDetail.Builder addS2CBagDetailsBuilder() {
/*       */         return (ItemOuterClass.ItemDetail.Builder)getS2CBagDetailsFieldBuilder().addBuilder((GeneratedMessage)ItemOuterClass.ItemDetail.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ItemOuterClass.ItemDetail.Builder addS2CBagDetailsBuilder(int index) {
/*       */         return (ItemOuterClass.ItemDetail.Builder)getS2CBagDetailsFieldBuilder().addBuilder(index, (GeneratedMessage)ItemOuterClass.ItemDetail.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<ItemOuterClass.ItemDetail.Builder> getS2CBagDetailsBuilderList() {
/*       */         return getS2CBagDetailsFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilder<ItemOuterClass.ItemDetail, ItemOuterClass.ItemDetail.Builder, ItemOuterClass.ItemDetailOrBuilder> getS2CBagDetailsFieldBuilder() {
/*       */         if (this.s2CBagDetailsBuilder_ == null) {
/*       */           this.s2CBagDetailsBuilder_ = new RepeatedFieldBuilder(this.s2CBagDetails_, ((this.bitField0_ & 0x4) == 4), getParentForChildren(), isClean());
/*       */           this.s2CBagDetails_ = null;
/*       */         } 
/*       */         return this.s2CBagDetailsBuilder_;
/*       */       }
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class GetDepotOneGridInfoResponse
/*       */     extends GeneratedMessage
/*       */     implements GetDepotOneGridInfoResponseOrBuilder
/*       */   {
/* 13505 */     private static final GetDepotOneGridInfoResponse defaultInstance = new GetDepotOneGridInfoResponse(true); private final UnknownFieldSet unknownFields; private GetDepotOneGridInfoResponse(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private GetDepotOneGridInfoResponse(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static GetDepotOneGridInfoResponse getDefaultInstance() { return defaultInstance; } public GetDepotOneGridInfoResponse getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private GetDepotOneGridInfoResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; ItemOuterClass.Grid.Builder builder; ItemOuterClass.ItemDetail.Builder subBuilder; int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.s2CCode_ = input.readInt32(); break;case 18: bs = input.readBytes(); this.bitField0_ |= 0x2; this.s2CMsg_ = bs; break;case 26: builder = null; if ((this.bitField0_ & 0x4) == 4) builder = this.s2CBagGrid_.toBuilder();  this.s2CBagGrid_ = (ItemOuterClass.Grid)input.readMessage(ItemOuterClass.Grid.PARSER, extensionRegistry); if (builder != null) { builder.mergeFrom(this.s2CBagGrid_); this.s2CBagGrid_ = builder.buildPartial(); }  this.bitField0_ |= 0x4; break;case 34: subBuilder = null; if ((this.bitField0_ & 0x8) == 8) subBuilder = this.s2CBagDetail_.toBuilder();  this.s2CBagDetail_ = (ItemOuterClass.ItemDetail)input.readMessage(ItemOuterClass.ItemDetail.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.s2CBagDetail_); this.s2CBagDetail_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x8; break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotOneGridInfoResponse_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotOneGridInfoResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GetDepotOneGridInfoResponse.class, Builder.class); } public static Parser<GetDepotOneGridInfoResponse> PARSER = (Parser<GetDepotOneGridInfoResponse>)new AbstractParser<GetDepotOneGridInfoResponse>() { public GuildManagerHandler.GetDepotOneGridInfoResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.GetDepotOneGridInfoResponse(input, extensionRegistry); } }
/* 13506 */     ; private int bitField0_; public static final int S2C_CODE_FIELD_NUMBER = 1; private int s2CCode_; public static final int S2C_MSG_FIELD_NUMBER = 2; private Object s2CMsg_; public static final int S2C_BAGGRID_FIELD_NUMBER = 3; private ItemOuterClass.Grid s2CBagGrid_; public static final int S2C_BAGDETAIL_FIELD_NUMBER = 4; private ItemOuterClass.ItemDetail s2CBagDetail_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<GetDepotOneGridInfoResponse> getParserForType() { return PARSER; } public boolean hasS2CCode() { return ((this.bitField0_ & 0x1) == 1); } public int getS2CCode() { return this.s2CCode_; } public boolean hasS2CMsg() { return ((this.bitField0_ & 0x2) == 2); } public String getS2CMsg() { Object ref = this.s2CMsg_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.s2CMsg_ = s;  return s; } static { defaultInstance.initFields(); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public ByteString getS2CMsgBytes() {
/*       */       Object ref = this.s2CMsg_;
/*       */       if (ref instanceof String) {
/*       */         ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */         this.s2CMsg_ = b;
/*       */         return b;
/*       */       } 
/*       */       return (ByteString)ref;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public boolean hasS2CBagGrid() {
/*       */       return ((this.bitField0_ & 0x4) == 4);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public ItemOuterClass.Grid getS2CBagGrid() {
/*       */       return this.s2CBagGrid_;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public ItemOuterClass.GridOrBuilder getS2CBagGridOrBuilder() {
/*       */       return (ItemOuterClass.GridOrBuilder)this.s2CBagGrid_;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public boolean hasS2CBagDetail() {
/*       */       return ((this.bitField0_ & 0x8) == 8);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public ItemOuterClass.ItemDetail getS2CBagDetail() {
/*       */       return this.s2CBagDetail_;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public ItemOuterClass.ItemDetailOrBuilder getS2CBagDetailOrBuilder() {
/*       */       return (ItemOuterClass.ItemDetailOrBuilder)this.s2CBagDetail_;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private void initFields() {
/*       */       this.s2CCode_ = 0;
/*       */       this.s2CMsg_ = "";
/*       */       this.s2CBagGrid_ = ItemOuterClass.Grid.getDefaultInstance();
/*       */       this.s2CBagDetail_ = ItemOuterClass.ItemDetail.getDefaultInstance();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1) {
/*       */         return true;
/*       */       }
/*       */       if (isInitialized == 0) {
/*       */         return false;
/*       */       }
/*       */       if (!hasS2CCode()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       if (hasS2CBagGrid() && !getS2CBagGrid().isInitialized()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       if (hasS2CBagDetail() && !getS2CBagDetail().isInitialized()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       getSerializedSize();
/*       */       if ((this.bitField0_ & 0x1) == 1) {
/*       */         output.writeInt32(1, this.s2CCode_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x2) == 2) {
/*       */         output.writeBytes(2, getS2CMsgBytes());
/*       */       }
/*       */       if ((this.bitField0_ & 0x4) == 4) {
/*       */         output.writeMessage(3, (MessageLite)this.s2CBagGrid_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x8) == 8) {
/*       */         output.writeMessage(4, (MessageLite)this.s2CBagDetail_);
/*       */       }
/*       */       getUnknownFields().writeTo(output);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/*       */       int size = this.memoizedSerializedSize;
/*       */       if (size != -1) {
/*       */         return size;
/*       */       }
/*       */       size = 0;
/*       */       if ((this.bitField0_ & 0x1) == 1) {
/*       */         size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x2) == 2) {
/*       */         size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
/*       */       }
/*       */       if ((this.bitField0_ & 0x4) == 4) {
/*       */         size += CodedOutputStream.computeMessageSize(3, (MessageLite)this.s2CBagGrid_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x8) == 8) {
/*       */         size += CodedOutputStream.computeMessageSize(4, (MessageLite)this.s2CBagDetail_);
/*       */       }
/*       */       size += getUnknownFields().getSerializedSize();
/*       */       this.memoizedSerializedSize = size;
/*       */       return size;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     protected Object writeReplace() throws ObjectStreamException {
/*       */       return super.writeReplace();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotOneGridInfoResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (GetDepotOneGridInfoResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotOneGridInfoResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (GetDepotOneGridInfoResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotOneGridInfoResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (GetDepotOneGridInfoResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotOneGridInfoResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (GetDepotOneGridInfoResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotOneGridInfoResponse parseFrom(InputStream input) throws IOException {
/*       */       return (GetDepotOneGridInfoResponse)PARSER.parseFrom(input);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotOneGridInfoResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GetDepotOneGridInfoResponse)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotOneGridInfoResponse parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (GetDepotOneGridInfoResponse)PARSER.parseDelimitedFrom(input);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotOneGridInfoResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GetDepotOneGridInfoResponse)PARSER.parseDelimitedFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotOneGridInfoResponse parseFrom(CodedInputStream input) throws IOException {
/*       */       return (GetDepotOneGridInfoResponse)PARSER.parseFrom(input);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotOneGridInfoResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GetDepotOneGridInfoResponse)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static Builder newBuilder() {
/*       */       return Builder.create();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static Builder newBuilder(GetDepotOneGridInfoResponse prototype) {
/*       */       return newBuilder().mergeFrom(prototype);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public Builder toBuilder() {
/*       */       return newBuilder(this);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
/*       */       Builder builder = new Builder(parent);
/*       */       return builder;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessage.Builder<Builder>
/*       */       implements GuildManagerHandler.GetDepotOneGridInfoResponseOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private int s2CCode_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Object s2CMsg_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private ItemOuterClass.Grid s2CBagGrid_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilder<ItemOuterClass.Grid, ItemOuterClass.Grid.Builder, ItemOuterClass.GridOrBuilder> s2CBagGridBuilder_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private ItemOuterClass.ItemDetail s2CBagDetail_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilder<ItemOuterClass.ItemDetail, ItemOuterClass.ItemDetail.Builder, ItemOuterClass.ItemDetailOrBuilder> s2CBagDetailBuilder_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_GetDepotOneGridInfoResponse_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_GetDepotOneGridInfoResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.GetDepotOneGridInfoResponse.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder() {
/*       */         this.s2CMsg_ = "";
/*       */         this.s2CBagGrid_ = ItemOuterClass.Grid.getDefaultInstance();
/*       */         this.s2CBagDetail_ = ItemOuterClass.ItemDetail.getDefaultInstance();
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder(GeneratedMessage.BuilderParent parent) {
/*       */         super(parent);
/*       */         this.s2CMsg_ = "";
/*       */         this.s2CBagGrid_ = ItemOuterClass.Grid.getDefaultInstance();
/*       */         this.s2CBagDetail_ = ItemOuterClass.ItemDetail.getDefaultInstance();
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*       */         if (GuildManagerHandler.GetDepotOneGridInfoResponse.alwaysUseFieldBuilders) {
/*       */           getS2CBagGridFieldBuilder();
/*       */           getS2CBagDetailFieldBuilder();
/*       */         } 
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private static Builder create() {
/*       */         return new Builder();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clear() {
/*       */         super.clear();
/*       */         this.s2CCode_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.s2CMsg_ = "";
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         if (this.s2CBagGridBuilder_ == null) {
/*       */           this.s2CBagGrid_ = ItemOuterClass.Grid.getDefaultInstance();
/*       */         } else {
/*       */           this.s2CBagGridBuilder_.clear();
/*       */         } 
/*       */         this.bitField0_ &= 0xFFFFFFFB;
/*       */         if (this.s2CBagDetailBuilder_ == null) {
/*       */           this.s2CBagDetail_ = ItemOuterClass.ItemDetail.getDefaultInstance();
/*       */         } else {
/*       */           this.s2CBagDetailBuilder_.clear();
/*       */         } 
/*       */         this.bitField0_ &= 0xFFFFFFF7;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clone() {
/*       */         return create().mergeFrom(buildPartial());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_GetDepotOneGridInfoResponse_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.GetDepotOneGridInfoResponse getDefaultInstanceForType() {
/*       */         return GuildManagerHandler.GetDepotOneGridInfoResponse.getDefaultInstance();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.GetDepotOneGridInfoResponse build() {
/*       */         GuildManagerHandler.GetDepotOneGridInfoResponse result = buildPartial();
/*       */         if (!result.isInitialized()) {
/*       */           throw newUninitializedMessageException(result);
/*       */         }
/*       */         return result;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.GetDepotOneGridInfoResponse buildPartial() {
/*       */         GuildManagerHandler.GetDepotOneGridInfoResponse result = new GuildManagerHandler.GetDepotOneGridInfoResponse(this);
/*       */         int from_bitField0_ = this.bitField0_;
/*       */         int to_bitField0_ = 0;
/*       */         if ((from_bitField0_ & 0x1) == 1) {
/*       */           to_bitField0_ |= 0x1;
/*       */         }
/*       */         result.s2CCode_ = this.s2CCode_;
/*       */         if ((from_bitField0_ & 0x2) == 2) {
/*       */           to_bitField0_ |= 0x2;
/*       */         }
/*       */         result.s2CMsg_ = this.s2CMsg_;
/*       */         if ((from_bitField0_ & 0x4) == 4) {
/*       */           to_bitField0_ |= 0x4;
/*       */         }
/*       */         if (this.s2CBagGridBuilder_ == null) {
/*       */           result.s2CBagGrid_ = this.s2CBagGrid_;
/*       */         } else {
/*       */           result.s2CBagGrid_ = (ItemOuterClass.Grid)this.s2CBagGridBuilder_.build();
/*       */         } 
/*       */         if ((from_bitField0_ & 0x8) == 8) {
/*       */           to_bitField0_ |= 0x8;
/*       */         }
/*       */         if (this.s2CBagDetailBuilder_ == null) {
/*       */           result.s2CBagDetail_ = this.s2CBagDetail_;
/*       */         } else {
/*       */           result.s2CBagDetail_ = (ItemOuterClass.ItemDetail)this.s2CBagDetailBuilder_.build();
/*       */         } 
/*       */         result.bitField0_ = to_bitField0_;
/*       */         onBuilt();
/*       */         return result;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*       */         if (other instanceof GuildManagerHandler.GetDepotOneGridInfoResponse) {
/*       */           return mergeFrom((GuildManagerHandler.GetDepotOneGridInfoResponse)other);
/*       */         }
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(GuildManagerHandler.GetDepotOneGridInfoResponse other) {
/*       */         if (other == GuildManagerHandler.GetDepotOneGridInfoResponse.getDefaultInstance()) {
/*       */           return this;
/*       */         }
/*       */         if (other.hasS2CCode()) {
/*       */           setS2CCode(other.getS2CCode());
/*       */         }
/*       */         if (other.hasS2CMsg()) {
/*       */           this.bitField0_ |= 0x2;
/*       */           this.s2CMsg_ = other.s2CMsg_;
/*       */           onChanged();
/*       */         } 
/*       */         if (other.hasS2CBagGrid()) {
/*       */           mergeS2CBagGrid(other.getS2CBagGrid());
/*       */         }
/*       */         if (other.hasS2CBagDetail()) {
/*       */           mergeS2CBagDetail(other.getS2CBagDetail());
/*       */         }
/*       */         mergeUnknownFields(other.getUnknownFields());
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public final boolean isInitialized() {
/*       */         if (!hasS2CCode()) {
/*       */           return false;
/*       */         }
/*       */         if (hasS2CBagGrid() && !getS2CBagGrid().isInitialized()) {
/*       */           return false;
/*       */         }
/*       */         if (hasS2CBagDetail() && !getS2CBagDetail().isInitialized()) {
/*       */           return false;
/*       */         }
/*       */         return true;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         GuildManagerHandler.GetDepotOneGridInfoResponse parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (GuildManagerHandler.GetDepotOneGridInfoResponse)GuildManagerHandler.GetDepotOneGridInfoResponse.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (GuildManagerHandler.GetDepotOneGridInfoResponse)e.getUnfinishedMessage();
/*       */           throw e;
/*       */         } finally {
/*       */           if (parsedMessage != null) {
/*       */             mergeFrom(parsedMessage);
/*       */           }
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasS2CCode() {
/*       */         return ((this.bitField0_ & 0x1) == 1);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getS2CCode() {
/*       */         return this.s2CCode_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CCode(int value) {
/*       */         this.bitField0_ |= 0x1;
/*       */         this.s2CCode_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearS2CCode() {
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.s2CCode_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasS2CMsg() {
/*       */         return ((this.bitField0_ & 0x2) == 2);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getS2CMsg() {
/*       */         Object ref = this.s2CMsg_;
/*       */         if (!(ref instanceof String)) {
/*       */           ByteString bs = (ByteString)ref;
/*       */           String s = bs.toStringUtf8();
/*       */           if (bs.isValidUtf8()) {
/*       */             this.s2CMsg_ = s;
/*       */           }
/*       */           return s;
/*       */         } 
/*       */         return (String)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getS2CMsgBytes() {
/*       */         Object ref = this.s2CMsg_;
/*       */         if (ref instanceof String) {
/*       */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           this.s2CMsg_ = b;
/*       */           return b;
/*       */         } 
/*       */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CMsg(String value) {
/*       */         if (value == null) {
/*       */           throw new NullPointerException();
/*       */         }
/*       */         this.bitField0_ |= 0x2;
/*       */         this.s2CMsg_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearS2CMsg() {
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         this.s2CMsg_ = GuildManagerHandler.GetDepotOneGridInfoResponse.getDefaultInstance().getS2CMsg();
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CMsgBytes(ByteString value) {
/*       */         if (value == null) {
/*       */           throw new NullPointerException();
/*       */         }
/*       */         this.bitField0_ |= 0x2;
/*       */         this.s2CMsg_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasS2CBagGrid() {
/*       */         return ((this.bitField0_ & 0x4) == 4);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ItemOuterClass.Grid getS2CBagGrid() {
/*       */         if (this.s2CBagGridBuilder_ == null) {
/*       */           return this.s2CBagGrid_;
/*       */         }
/*       */         return (ItemOuterClass.Grid)this.s2CBagGridBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CBagGrid(ItemOuterClass.Grid value) {
/*       */         if (this.s2CBagGridBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           this.s2CBagGrid_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CBagGridBuilder_.setMessage((GeneratedMessage)value);
/*       */         } 
/*       */         this.bitField0_ |= 0x4;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CBagGrid(ItemOuterClass.Grid.Builder builderForValue) {
/*       */         if (this.s2CBagGridBuilder_ == null) {
/*       */           this.s2CBagGrid_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CBagGridBuilder_.setMessage((GeneratedMessage)builderForValue.build());
/*       */         } 
/*       */         this.bitField0_ |= 0x4;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeS2CBagGrid(ItemOuterClass.Grid value) {
/*       */         if (this.s2CBagGridBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x4) == 4 && this.s2CBagGrid_ != ItemOuterClass.Grid.getDefaultInstance()) {
/*       */             this.s2CBagGrid_ = ItemOuterClass.Grid.newBuilder(this.s2CBagGrid_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.s2CBagGrid_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CBagGridBuilder_.mergeFrom((GeneratedMessage)value);
/*       */         } 
/*       */         this.bitField0_ |= 0x4;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearS2CBagGrid() {
/*       */         if (this.s2CBagGridBuilder_ == null) {
/*       */           this.s2CBagGrid_ = ItemOuterClass.Grid.getDefaultInstance();
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CBagGridBuilder_.clear();
/*       */         } 
/*       */         this.bitField0_ &= 0xFFFFFFFB;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ItemOuterClass.Grid.Builder getS2CBagGridBuilder() {
/*       */         this.bitField0_ |= 0x4;
/*       */         onChanged();
/*       */         return (ItemOuterClass.Grid.Builder)getS2CBagGridFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ItemOuterClass.GridOrBuilder getS2CBagGridOrBuilder() {
/*       */         if (this.s2CBagGridBuilder_ != null) {
/*       */           return (ItemOuterClass.GridOrBuilder)this.s2CBagGridBuilder_.getMessageOrBuilder();
/*       */         }
/*       */         return (ItemOuterClass.GridOrBuilder)this.s2CBagGrid_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilder<ItemOuterClass.Grid, ItemOuterClass.Grid.Builder, ItemOuterClass.GridOrBuilder> getS2CBagGridFieldBuilder() {
/*       */         if (this.s2CBagGridBuilder_ == null) {
/*       */           this.s2CBagGridBuilder_ = new SingleFieldBuilder((GeneratedMessage)getS2CBagGrid(), getParentForChildren(), isClean());
/*       */           this.s2CBagGrid_ = null;
/*       */         } 
/*       */         return this.s2CBagGridBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasS2CBagDetail() {
/*       */         return ((this.bitField0_ & 0x8) == 8);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ItemOuterClass.ItemDetail getS2CBagDetail() {
/*       */         if (this.s2CBagDetailBuilder_ == null) {
/*       */           return this.s2CBagDetail_;
/*       */         }
/*       */         return (ItemOuterClass.ItemDetail)this.s2CBagDetailBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CBagDetail(ItemOuterClass.ItemDetail value) {
/*       */         if (this.s2CBagDetailBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           this.s2CBagDetail_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CBagDetailBuilder_.setMessage((GeneratedMessage)value);
/*       */         } 
/*       */         this.bitField0_ |= 0x8;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CBagDetail(ItemOuterClass.ItemDetail.Builder builderForValue) {
/*       */         if (this.s2CBagDetailBuilder_ == null) {
/*       */           this.s2CBagDetail_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CBagDetailBuilder_.setMessage((GeneratedMessage)builderForValue.build());
/*       */         } 
/*       */         this.bitField0_ |= 0x8;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeS2CBagDetail(ItemOuterClass.ItemDetail value) {
/*       */         if (this.s2CBagDetailBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x8) == 8 && this.s2CBagDetail_ != ItemOuterClass.ItemDetail.getDefaultInstance()) {
/*       */             this.s2CBagDetail_ = ItemOuterClass.ItemDetail.newBuilder(this.s2CBagDetail_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.s2CBagDetail_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CBagDetailBuilder_.mergeFrom((GeneratedMessage)value);
/*       */         } 
/*       */         this.bitField0_ |= 0x8;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearS2CBagDetail() {
/*       */         if (this.s2CBagDetailBuilder_ == null) {
/*       */           this.s2CBagDetail_ = ItemOuterClass.ItemDetail.getDefaultInstance();
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CBagDetailBuilder_.clear();
/*       */         } 
/*       */         this.bitField0_ &= 0xFFFFFFF7;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ItemOuterClass.ItemDetail.Builder getS2CBagDetailBuilder() {
/*       */         this.bitField0_ |= 0x8;
/*       */         onChanged();
/*       */         return (ItemOuterClass.ItemDetail.Builder)getS2CBagDetailFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ItemOuterClass.ItemDetailOrBuilder getS2CBagDetailOrBuilder() {
/*       */         if (this.s2CBagDetailBuilder_ != null) {
/*       */           return (ItemOuterClass.ItemDetailOrBuilder)this.s2CBagDetailBuilder_.getMessageOrBuilder();
/*       */         }
/*       */         return (ItemOuterClass.ItemDetailOrBuilder)this.s2CBagDetail_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilder<ItemOuterClass.ItemDetail, ItemOuterClass.ItemDetail.Builder, ItemOuterClass.ItemDetailOrBuilder> getS2CBagDetailFieldBuilder() {
/*       */         if (this.s2CBagDetailBuilder_ == null) {
/*       */           this.s2CBagDetailBuilder_ = new SingleFieldBuilder((GeneratedMessage)getS2CBagDetail(), getParentForChildren(), isClean());
/*       */           this.s2CBagDetail_ = null;
/*       */         } 
/*       */         return this.s2CBagDetailBuilder_;
/*       */       }
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class GetDepotInfoResponse
/*       */     extends GeneratedMessage
/*       */     implements GetDepotInfoResponseOrBuilder
/*       */   {
/* 14477 */     private static final GetDepotInfoResponse defaultInstance = new GetDepotInfoResponse(true); private final UnknownFieldSet unknownFields; private GetDepotInfoResponse(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private GetDepotInfoResponse(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static GetDepotInfoResponse getDefaultInstance() { return defaultInstance; } public GetDepotInfoResponse getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private GetDepotInfoResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; GuildManagerHandler.DepotInfo.Builder builder; GuildManagerHandler.BagInfo.Builder subBuilder; int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.s2CCode_ = input.readInt32(); break;case 18: bs = input.readBytes(); this.bitField0_ |= 0x2; this.s2CMsg_ = bs; break;case 26: builder = null; if ((this.bitField0_ & 0x4) == 4) builder = this.s2CDepotInfo_.toBuilder();  this.s2CDepotInfo_ = (GuildManagerHandler.DepotInfo)input.readMessage(GuildManagerHandler.DepotInfo.PARSER, extensionRegistry); if (builder != null) { builder.mergeFrom(this.s2CDepotInfo_); this.s2CDepotInfo_ = builder.buildPartial(); }  this.bitField0_ |= 0x4; break;case 34: subBuilder = null; if ((this.bitField0_ & 0x8) == 8) subBuilder = this.s2CDepotBag_.toBuilder();  this.s2CDepotBag_ = (GuildManagerHandler.BagInfo)input.readMessage(GuildManagerHandler.BagInfo.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.s2CDepotBag_); this.s2CDepotBag_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x8; break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotInfoResponse_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotInfoResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GetDepotInfoResponse.class, Builder.class); } public static Parser<GetDepotInfoResponse> PARSER = (Parser<GetDepotInfoResponse>)new AbstractParser<GetDepotInfoResponse>() { public GuildManagerHandler.GetDepotInfoResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.GetDepotInfoResponse(input, extensionRegistry); } }
/* 14478 */     ; private int bitField0_; public static final int S2C_CODE_FIELD_NUMBER = 1; private int s2CCode_; public static final int S2C_MSG_FIELD_NUMBER = 2; private Object s2CMsg_; public static final int S2C_DEPOTINFO_FIELD_NUMBER = 3; private GuildManagerHandler.DepotInfo s2CDepotInfo_; public static final int S2C_DEPOTBAG_FIELD_NUMBER = 4; private GuildManagerHandler.BagInfo s2CDepotBag_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<GetDepotInfoResponse> getParserForType() { return PARSER; } public boolean hasS2CCode() { return ((this.bitField0_ & 0x1) == 1); } public int getS2CCode() { return this.s2CCode_; } public boolean hasS2CMsg() { return ((this.bitField0_ & 0x2) == 2); } public String getS2CMsg() { Object ref = this.s2CMsg_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.s2CMsg_ = s;  return s; } static { defaultInstance.initFields(); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public ByteString getS2CMsgBytes() {
/*       */       Object ref = this.s2CMsg_;
/*       */       if (ref instanceof String) {
/*       */         ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */         this.s2CMsg_ = b;
/*       */         return b;
/*       */       } 
/*       */       return (ByteString)ref;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public boolean hasS2CDepotInfo() {
/*       */       return ((this.bitField0_ & 0x4) == 4);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public GuildManagerHandler.DepotInfo getS2CDepotInfo() {
/*       */       return this.s2CDepotInfo_;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public GuildManagerHandler.DepotInfoOrBuilder getS2CDepotInfoOrBuilder() {
/*       */       return this.s2CDepotInfo_;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public boolean hasS2CDepotBag() {
/*       */       return ((this.bitField0_ & 0x8) == 8);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public GuildManagerHandler.BagInfo getS2CDepotBag() {
/*       */       return this.s2CDepotBag_;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public GuildManagerHandler.BagInfoOrBuilder getS2CDepotBagOrBuilder() {
/*       */       return this.s2CDepotBag_;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private void initFields() {
/*       */       this.s2CCode_ = 0;
/*       */       this.s2CMsg_ = "";
/*       */       this.s2CDepotInfo_ = GuildManagerHandler.DepotInfo.getDefaultInstance();
/*       */       this.s2CDepotBag_ = GuildManagerHandler.BagInfo.getDefaultInstance();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1) {
/*       */         return true;
/*       */       }
/*       */       if (isInitialized == 0) {
/*       */         return false;
/*       */       }
/*       */       if (!hasS2CCode()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       if (hasS2CDepotInfo() && !getS2CDepotInfo().isInitialized()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       if (hasS2CDepotBag() && !getS2CDepotBag().isInitialized()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       getSerializedSize();
/*       */       if ((this.bitField0_ & 0x1) == 1) {
/*       */         output.writeInt32(1, this.s2CCode_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x2) == 2) {
/*       */         output.writeBytes(2, getS2CMsgBytes());
/*       */       }
/*       */       if ((this.bitField0_ & 0x4) == 4) {
/*       */         output.writeMessage(3, (MessageLite)this.s2CDepotInfo_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x8) == 8) {
/*       */         output.writeMessage(4, (MessageLite)this.s2CDepotBag_);
/*       */       }
/*       */       getUnknownFields().writeTo(output);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/*       */       int size = this.memoizedSerializedSize;
/*       */       if (size != -1) {
/*       */         return size;
/*       */       }
/*       */       size = 0;
/*       */       if ((this.bitField0_ & 0x1) == 1) {
/*       */         size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x2) == 2) {
/*       */         size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
/*       */       }
/*       */       if ((this.bitField0_ & 0x4) == 4) {
/*       */         size += CodedOutputStream.computeMessageSize(3, (MessageLite)this.s2CDepotInfo_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x8) == 8) {
/*       */         size += CodedOutputStream.computeMessageSize(4, (MessageLite)this.s2CDepotBag_);
/*       */       }
/*       */       size += getUnknownFields().getSerializedSize();
/*       */       this.memoizedSerializedSize = size;
/*       */       return size;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     protected Object writeReplace() throws ObjectStreamException {
/*       */       return super.writeReplace();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotInfoResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (GetDepotInfoResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotInfoResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (GetDepotInfoResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotInfoResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (GetDepotInfoResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotInfoResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (GetDepotInfoResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotInfoResponse parseFrom(InputStream input) throws IOException {
/*       */       return (GetDepotInfoResponse)PARSER.parseFrom(input);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotInfoResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GetDepotInfoResponse)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotInfoResponse parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (GetDepotInfoResponse)PARSER.parseDelimitedFrom(input);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotInfoResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GetDepotInfoResponse)PARSER.parseDelimitedFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotInfoResponse parseFrom(CodedInputStream input) throws IOException {
/*       */       return (GetDepotInfoResponse)PARSER.parseFrom(input);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotInfoResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GetDepotInfoResponse)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static Builder newBuilder() {
/*       */       return Builder.create();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static Builder newBuilder(GetDepotInfoResponse prototype) {
/*       */       return newBuilder().mergeFrom(prototype);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public Builder toBuilder() {
/*       */       return newBuilder(this);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
/*       */       Builder builder = new Builder(parent);
/*       */       return builder;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessage.Builder<Builder>
/*       */       implements GuildManagerHandler.GetDepotInfoResponseOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private int s2CCode_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Object s2CMsg_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private GuildManagerHandler.DepotInfo s2CDepotInfo_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilder<GuildManagerHandler.DepotInfo, GuildManagerHandler.DepotInfo.Builder, GuildManagerHandler.DepotInfoOrBuilder> s2CDepotInfoBuilder_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private GuildManagerHandler.BagInfo s2CDepotBag_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilder<GuildManagerHandler.BagInfo, GuildManagerHandler.BagInfo.Builder, GuildManagerHandler.BagInfoOrBuilder> s2CDepotBagBuilder_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_GetDepotInfoResponse_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_GetDepotInfoResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.GetDepotInfoResponse.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder() {
/*       */         this.s2CMsg_ = "";
/*       */         this.s2CDepotInfo_ = GuildManagerHandler.DepotInfo.getDefaultInstance();
/*       */         this.s2CDepotBag_ = GuildManagerHandler.BagInfo.getDefaultInstance();
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder(GeneratedMessage.BuilderParent parent) {
/*       */         super(parent);
/*       */         this.s2CMsg_ = "";
/*       */         this.s2CDepotInfo_ = GuildManagerHandler.DepotInfo.getDefaultInstance();
/*       */         this.s2CDepotBag_ = GuildManagerHandler.BagInfo.getDefaultInstance();
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*       */         if (GuildManagerHandler.GetDepotInfoResponse.alwaysUseFieldBuilders) {
/*       */           getS2CDepotInfoFieldBuilder();
/*       */           getS2CDepotBagFieldBuilder();
/*       */         } 
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private static Builder create() {
/*       */         return new Builder();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clear() {
/*       */         super.clear();
/*       */         this.s2CCode_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.s2CMsg_ = "";
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         if (this.s2CDepotInfoBuilder_ == null) {
/*       */           this.s2CDepotInfo_ = GuildManagerHandler.DepotInfo.getDefaultInstance();
/*       */         } else {
/*       */           this.s2CDepotInfoBuilder_.clear();
/*       */         } 
/*       */         this.bitField0_ &= 0xFFFFFFFB;
/*       */         if (this.s2CDepotBagBuilder_ == null) {
/*       */           this.s2CDepotBag_ = GuildManagerHandler.BagInfo.getDefaultInstance();
/*       */         } else {
/*       */           this.s2CDepotBagBuilder_.clear();
/*       */         } 
/*       */         this.bitField0_ &= 0xFFFFFFF7;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clone() {
/*       */         return create().mergeFrom(buildPartial());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_GetDepotInfoResponse_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.GetDepotInfoResponse getDefaultInstanceForType() {
/*       */         return GuildManagerHandler.GetDepotInfoResponse.getDefaultInstance();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.GetDepotInfoResponse build() {
/*       */         GuildManagerHandler.GetDepotInfoResponse result = buildPartial();
/*       */         if (!result.isInitialized()) {
/*       */           throw newUninitializedMessageException(result);
/*       */         }
/*       */         return result;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.GetDepotInfoResponse buildPartial() {
/*       */         GuildManagerHandler.GetDepotInfoResponse result = new GuildManagerHandler.GetDepotInfoResponse(this);
/*       */         int from_bitField0_ = this.bitField0_;
/*       */         int to_bitField0_ = 0;
/*       */         if ((from_bitField0_ & 0x1) == 1) {
/*       */           to_bitField0_ |= 0x1;
/*       */         }
/*       */         result.s2CCode_ = this.s2CCode_;
/*       */         if ((from_bitField0_ & 0x2) == 2) {
/*       */           to_bitField0_ |= 0x2;
/*       */         }
/*       */         result.s2CMsg_ = this.s2CMsg_;
/*       */         if ((from_bitField0_ & 0x4) == 4) {
/*       */           to_bitField0_ |= 0x4;
/*       */         }
/*       */         if (this.s2CDepotInfoBuilder_ == null) {
/*       */           result.s2CDepotInfo_ = this.s2CDepotInfo_;
/*       */         } else {
/*       */           result.s2CDepotInfo_ = (GuildManagerHandler.DepotInfo)this.s2CDepotInfoBuilder_.build();
/*       */         } 
/*       */         if ((from_bitField0_ & 0x8) == 8) {
/*       */           to_bitField0_ |= 0x8;
/*       */         }
/*       */         if (this.s2CDepotBagBuilder_ == null) {
/*       */           result.s2CDepotBag_ = this.s2CDepotBag_;
/*       */         } else {
/*       */           result.s2CDepotBag_ = (GuildManagerHandler.BagInfo)this.s2CDepotBagBuilder_.build();
/*       */         } 
/*       */         result.bitField0_ = to_bitField0_;
/*       */         onBuilt();
/*       */         return result;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*       */         if (other instanceof GuildManagerHandler.GetDepotInfoResponse) {
/*       */           return mergeFrom((GuildManagerHandler.GetDepotInfoResponse)other);
/*       */         }
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(GuildManagerHandler.GetDepotInfoResponse other) {
/*       */         if (other == GuildManagerHandler.GetDepotInfoResponse.getDefaultInstance()) {
/*       */           return this;
/*       */         }
/*       */         if (other.hasS2CCode()) {
/*       */           setS2CCode(other.getS2CCode());
/*       */         }
/*       */         if (other.hasS2CMsg()) {
/*       */           this.bitField0_ |= 0x2;
/*       */           this.s2CMsg_ = other.s2CMsg_;
/*       */           onChanged();
/*       */         } 
/*       */         if (other.hasS2CDepotInfo()) {
/*       */           mergeS2CDepotInfo(other.getS2CDepotInfo());
/*       */         }
/*       */         if (other.hasS2CDepotBag()) {
/*       */           mergeS2CDepotBag(other.getS2CDepotBag());
/*       */         }
/*       */         mergeUnknownFields(other.getUnknownFields());
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public final boolean isInitialized() {
/*       */         if (!hasS2CCode()) {
/*       */           return false;
/*       */         }
/*       */         if (hasS2CDepotInfo() && !getS2CDepotInfo().isInitialized()) {
/*       */           return false;
/*       */         }
/*       */         if (hasS2CDepotBag() && !getS2CDepotBag().isInitialized()) {
/*       */           return false;
/*       */         }
/*       */         return true;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         GuildManagerHandler.GetDepotInfoResponse parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (GuildManagerHandler.GetDepotInfoResponse)GuildManagerHandler.GetDepotInfoResponse.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (GuildManagerHandler.GetDepotInfoResponse)e.getUnfinishedMessage();
/*       */           throw e;
/*       */         } finally {
/*       */           if (parsedMessage != null) {
/*       */             mergeFrom(parsedMessage);
/*       */           }
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasS2CCode() {
/*       */         return ((this.bitField0_ & 0x1) == 1);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getS2CCode() {
/*       */         return this.s2CCode_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CCode(int value) {
/*       */         this.bitField0_ |= 0x1;
/*       */         this.s2CCode_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearS2CCode() {
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.s2CCode_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasS2CMsg() {
/*       */         return ((this.bitField0_ & 0x2) == 2);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getS2CMsg() {
/*       */         Object ref = this.s2CMsg_;
/*       */         if (!(ref instanceof String)) {
/*       */           ByteString bs = (ByteString)ref;
/*       */           String s = bs.toStringUtf8();
/*       */           if (bs.isValidUtf8()) {
/*       */             this.s2CMsg_ = s;
/*       */           }
/*       */           return s;
/*       */         } 
/*       */         return (String)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getS2CMsgBytes() {
/*       */         Object ref = this.s2CMsg_;
/*       */         if (ref instanceof String) {
/*       */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           this.s2CMsg_ = b;
/*       */           return b;
/*       */         } 
/*       */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CMsg(String value) {
/*       */         if (value == null) {
/*       */           throw new NullPointerException();
/*       */         }
/*       */         this.bitField0_ |= 0x2;
/*       */         this.s2CMsg_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearS2CMsg() {
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         this.s2CMsg_ = GuildManagerHandler.GetDepotInfoResponse.getDefaultInstance().getS2CMsg();
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CMsgBytes(ByteString value) {
/*       */         if (value == null) {
/*       */           throw new NullPointerException();
/*       */         }
/*       */         this.bitField0_ |= 0x2;
/*       */         this.s2CMsg_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasS2CDepotInfo() {
/*       */         return ((this.bitField0_ & 0x4) == 4);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.DepotInfo getS2CDepotInfo() {
/*       */         if (this.s2CDepotInfoBuilder_ == null) {
/*       */           return this.s2CDepotInfo_;
/*       */         }
/*       */         return (GuildManagerHandler.DepotInfo)this.s2CDepotInfoBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CDepotInfo(GuildManagerHandler.DepotInfo value) {
/*       */         if (this.s2CDepotInfoBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           this.s2CDepotInfo_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CDepotInfoBuilder_.setMessage(value);
/*       */         } 
/*       */         this.bitField0_ |= 0x4;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CDepotInfo(GuildManagerHandler.DepotInfo.Builder builderForValue) {
/*       */         if (this.s2CDepotInfoBuilder_ == null) {
/*       */           this.s2CDepotInfo_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CDepotInfoBuilder_.setMessage(builderForValue.build());
/*       */         } 
/*       */         this.bitField0_ |= 0x4;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeS2CDepotInfo(GuildManagerHandler.DepotInfo value) {
/*       */         if (this.s2CDepotInfoBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x4) == 4 && this.s2CDepotInfo_ != GuildManagerHandler.DepotInfo.getDefaultInstance()) {
/*       */             this.s2CDepotInfo_ = GuildManagerHandler.DepotInfo.newBuilder(this.s2CDepotInfo_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.s2CDepotInfo_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CDepotInfoBuilder_.mergeFrom(value);
/*       */         } 
/*       */         this.bitField0_ |= 0x4;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearS2CDepotInfo() {
/*       */         if (this.s2CDepotInfoBuilder_ == null) {
/*       */           this.s2CDepotInfo_ = GuildManagerHandler.DepotInfo.getDefaultInstance();
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CDepotInfoBuilder_.clear();
/*       */         } 
/*       */         this.bitField0_ &= 0xFFFFFFFB;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.DepotInfo.Builder getS2CDepotInfoBuilder() {
/*       */         this.bitField0_ |= 0x4;
/*       */         onChanged();
/*       */         return (GuildManagerHandler.DepotInfo.Builder)getS2CDepotInfoFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.DepotInfoOrBuilder getS2CDepotInfoOrBuilder() {
/*       */         if (this.s2CDepotInfoBuilder_ != null) {
/*       */           return (GuildManagerHandler.DepotInfoOrBuilder)this.s2CDepotInfoBuilder_.getMessageOrBuilder();
/*       */         }
/*       */         return this.s2CDepotInfo_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilder<GuildManagerHandler.DepotInfo, GuildManagerHandler.DepotInfo.Builder, GuildManagerHandler.DepotInfoOrBuilder> getS2CDepotInfoFieldBuilder() {
/*       */         if (this.s2CDepotInfoBuilder_ == null) {
/*       */           this.s2CDepotInfoBuilder_ = new SingleFieldBuilder(getS2CDepotInfo(), getParentForChildren(), isClean());
/*       */           this.s2CDepotInfo_ = null;
/*       */         } 
/*       */         return this.s2CDepotInfoBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasS2CDepotBag() {
/*       */         return ((this.bitField0_ & 0x8) == 8);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.BagInfo getS2CDepotBag() {
/*       */         if (this.s2CDepotBagBuilder_ == null) {
/*       */           return this.s2CDepotBag_;
/*       */         }
/*       */         return (GuildManagerHandler.BagInfo)this.s2CDepotBagBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CDepotBag(GuildManagerHandler.BagInfo value) {
/*       */         if (this.s2CDepotBagBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           this.s2CDepotBag_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CDepotBagBuilder_.setMessage(value);
/*       */         } 
/*       */         this.bitField0_ |= 0x8;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CDepotBag(GuildManagerHandler.BagInfo.Builder builderForValue) {
/*       */         if (this.s2CDepotBagBuilder_ == null) {
/*       */           this.s2CDepotBag_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CDepotBagBuilder_.setMessage(builderForValue.build());
/*       */         } 
/*       */         this.bitField0_ |= 0x8;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeS2CDepotBag(GuildManagerHandler.BagInfo value) {
/*       */         if (this.s2CDepotBagBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x8) == 8 && this.s2CDepotBag_ != GuildManagerHandler.BagInfo.getDefaultInstance()) {
/*       */             this.s2CDepotBag_ = GuildManagerHandler.BagInfo.newBuilder(this.s2CDepotBag_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.s2CDepotBag_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CDepotBagBuilder_.mergeFrom(value);
/*       */         } 
/*       */         this.bitField0_ |= 0x8;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearS2CDepotBag() {
/*       */         if (this.s2CDepotBagBuilder_ == null) {
/*       */           this.s2CDepotBag_ = GuildManagerHandler.BagInfo.getDefaultInstance();
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CDepotBagBuilder_.clear();
/*       */         } 
/*       */         this.bitField0_ &= 0xFFFFFFF7;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.BagInfo.Builder getS2CDepotBagBuilder() {
/*       */         this.bitField0_ |= 0x8;
/*       */         onChanged();
/*       */         return (GuildManagerHandler.BagInfo.Builder)getS2CDepotBagFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.BagInfoOrBuilder getS2CDepotBagOrBuilder() {
/*       */         if (this.s2CDepotBagBuilder_ != null) {
/*       */           return (GuildManagerHandler.BagInfoOrBuilder)this.s2CDepotBagBuilder_.getMessageOrBuilder();
/*       */         }
/*       */         return this.s2CDepotBag_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilder<GuildManagerHandler.BagInfo, GuildManagerHandler.BagInfo.Builder, GuildManagerHandler.BagInfoOrBuilder> getS2CDepotBagFieldBuilder() {
/*       */         if (this.s2CDepotBagBuilder_ == null) {
/*       */           this.s2CDepotBagBuilder_ = new SingleFieldBuilder(getS2CDepotBag(), getParentForChildren(), isClean());
/*       */           this.s2CDepotBag_ = null;
/*       */         } 
/*       */         return this.s2CDepotBagBuilder_;
/*       */       }
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class GetDepotRecordResponse
/*       */     extends GeneratedMessage
/*       */     implements GetDepotRecordResponseOrBuilder
/*       */   {
/* 15477 */     private static final GetDepotRecordResponse defaultInstance = new GetDepotRecordResponse(true); private final UnknownFieldSet unknownFields; private GetDepotRecordResponse(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private GetDepotRecordResponse(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static GetDepotRecordResponse getDefaultInstance() { return defaultInstance; } public GetDepotRecordResponse getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private GetDepotRecordResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.s2CCode_ = input.readInt32(); break;case 18: bs = input.readBytes(); this.bitField0_ |= 0x2; this.s2CMsg_ = bs; break;case 26: if ((mutable_bitField0_ & 0x4) != 4) { this.s2CRecordList_ = new ArrayList<>(); mutable_bitField0_ |= 0x4; }  this.s2CRecordList_.add(input.readMessage(GuildManagerHandler.RecordInfo.PARSER, extensionRegistry)); break;case 32: this.bitField0_ |= 0x4; this.s2CPage_ = input.readInt32(); break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x4) == 4) this.s2CRecordList_ = Collections.unmodifiableList(this.s2CRecordList_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotRecordResponse_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GetDepotRecordResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GetDepotRecordResponse.class, Builder.class); } public static Parser<GetDepotRecordResponse> PARSER = (Parser<GetDepotRecordResponse>)new AbstractParser<GetDepotRecordResponse>() { public GuildManagerHandler.GetDepotRecordResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.GetDepotRecordResponse(input, extensionRegistry); } }
/* 15478 */     ; private int bitField0_; public static final int S2C_CODE_FIELD_NUMBER = 1; private int s2CCode_; public static final int S2C_MSG_FIELD_NUMBER = 2; private Object s2CMsg_; public static final int S2C_RECORDLIST_FIELD_NUMBER = 3; private List<GuildManagerHandler.RecordInfo> s2CRecordList_; public static final int S2C_PAGE_FIELD_NUMBER = 4; private int s2CPage_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<GetDepotRecordResponse> getParserForType() { return PARSER; } public boolean hasS2CCode() { return ((this.bitField0_ & 0x1) == 1); } public int getS2CCode() { return this.s2CCode_; } public boolean hasS2CMsg() { return ((this.bitField0_ & 0x2) == 2); } public String getS2CMsg() { Object ref = this.s2CMsg_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.s2CMsg_ = s;  return s; } public ByteString getS2CMsgBytes() { Object ref = this.s2CMsg_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.s2CMsg_ = b; return b; }  return (ByteString)ref; } static { defaultInstance.initFields(); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public List<GuildManagerHandler.RecordInfo> getS2CRecordListList() {
/*       */       return this.s2CRecordList_;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public List<? extends GuildManagerHandler.RecordInfoOrBuilder> getS2CRecordListOrBuilderList() {
/*       */       return (List)this.s2CRecordList_;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public int getS2CRecordListCount() {
/*       */       return this.s2CRecordList_.size();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public GuildManagerHandler.RecordInfo getS2CRecordList(int index) {
/*       */       return this.s2CRecordList_.get(index);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public GuildManagerHandler.RecordInfoOrBuilder getS2CRecordListOrBuilder(int index) {
/*       */       return this.s2CRecordList_.get(index);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public boolean hasS2CPage() {
/*       */       return ((this.bitField0_ & 0x4) == 4);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public int getS2CPage() {
/*       */       return this.s2CPage_;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private void initFields() {
/*       */       this.s2CCode_ = 0;
/*       */       this.s2CMsg_ = "";
/*       */       this.s2CRecordList_ = Collections.emptyList();
/*       */       this.s2CPage_ = 0;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1) {
/*       */         return true;
/*       */       }
/*       */       if (isInitialized == 0) {
/*       */         return false;
/*       */       }
/*       */       if (!hasS2CCode()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       getSerializedSize();
/*       */       if ((this.bitField0_ & 0x1) == 1) {
/*       */         output.writeInt32(1, this.s2CCode_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x2) == 2) {
/*       */         output.writeBytes(2, getS2CMsgBytes());
/*       */       }
/*       */       for (int i = 0; i < this.s2CRecordList_.size(); i++) {
/*       */         output.writeMessage(3, (MessageLite)this.s2CRecordList_.get(i));
/*       */       }
/*       */       if ((this.bitField0_ & 0x4) == 4) {
/*       */         output.writeInt32(4, this.s2CPage_);
/*       */       }
/*       */       getUnknownFields().writeTo(output);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/*       */       int size = this.memoizedSerializedSize;
/*       */       if (size != -1) {
/*       */         return size;
/*       */       }
/*       */       size = 0;
/*       */       if ((this.bitField0_ & 0x1) == 1) {
/*       */         size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x2) == 2) {
/*       */         size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
/*       */       }
/*       */       for (int i = 0; i < this.s2CRecordList_.size(); i++) {
/*       */         size += CodedOutputStream.computeMessageSize(3, (MessageLite)this.s2CRecordList_.get(i));
/*       */       }
/*       */       if ((this.bitField0_ & 0x4) == 4) {
/*       */         size += CodedOutputStream.computeInt32Size(4, this.s2CPage_);
/*       */       }
/*       */       size += getUnknownFields().getSerializedSize();
/*       */       this.memoizedSerializedSize = size;
/*       */       return size;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     protected Object writeReplace() throws ObjectStreamException {
/*       */       return super.writeReplace();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotRecordResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (GetDepotRecordResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotRecordResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (GetDepotRecordResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotRecordResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (GetDepotRecordResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotRecordResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (GetDepotRecordResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotRecordResponse parseFrom(InputStream input) throws IOException {
/*       */       return (GetDepotRecordResponse)PARSER.parseFrom(input);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotRecordResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GetDepotRecordResponse)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotRecordResponse parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (GetDepotRecordResponse)PARSER.parseDelimitedFrom(input);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotRecordResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GetDepotRecordResponse)PARSER.parseDelimitedFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotRecordResponse parseFrom(CodedInputStream input) throws IOException {
/*       */       return (GetDepotRecordResponse)PARSER.parseFrom(input);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetDepotRecordResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GetDepotRecordResponse)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static Builder newBuilder() {
/*       */       return Builder.create();
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static Builder newBuilder(GetDepotRecordResponse prototype) {
/*       */       return newBuilder().mergeFrom(prototype);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public Builder toBuilder() {
/*       */       return newBuilder(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
/*       */       Builder builder = new Builder(parent);
/*       */       return builder;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessage.Builder<Builder>
/*       */       implements GuildManagerHandler.GetDepotRecordResponseOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */ 
/*       */       
/*       */       private int s2CCode_;
/*       */ 
/*       */       
/*       */       private Object s2CMsg_;
/*       */ 
/*       */       
/*       */       private List<GuildManagerHandler.RecordInfo> s2CRecordList_;
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilder<GuildManagerHandler.RecordInfo, GuildManagerHandler.RecordInfo.Builder, GuildManagerHandler.RecordInfoOrBuilder> s2CRecordListBuilder_;
/*       */ 
/*       */       
/*       */       private int s2CPage_;
/*       */ 
/*       */ 
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_GetDepotRecordResponse_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_GetDepotRecordResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.GetDepotRecordResponse.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder() {
/*       */         this.s2CMsg_ = "";
/*       */         this.s2CRecordList_ = Collections.emptyList();
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder(GeneratedMessage.BuilderParent parent) {
/*       */         super(parent);
/*       */         this.s2CMsg_ = "";
/*       */         this.s2CRecordList_ = Collections.emptyList();
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*       */         if (GuildManagerHandler.GetDepotRecordResponse.alwaysUseFieldBuilders) {
/*       */           getS2CRecordListFieldBuilder();
/*       */         }
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       private static Builder create() {
/*       */         return new Builder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clear() {
/*       */         super.clear();
/*       */         this.s2CCode_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.s2CMsg_ = "";
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           this.s2CRecordList_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFFB;
/*       */         } else {
/*       */           this.s2CRecordListBuilder_.clear();
/*       */         } 
/*       */         this.s2CPage_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFF7;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clone() {
/*       */         return create().mergeFrom(buildPartial());
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_GetDepotRecordResponse_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.GetDepotRecordResponse getDefaultInstanceForType() {
/*       */         return GuildManagerHandler.GetDepotRecordResponse.getDefaultInstance();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.GetDepotRecordResponse build() {
/*       */         GuildManagerHandler.GetDepotRecordResponse result = buildPartial();
/*       */         if (!result.isInitialized()) {
/*       */           throw newUninitializedMessageException(result);
/*       */         }
/*       */         return result;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.GetDepotRecordResponse buildPartial() {
/*       */         GuildManagerHandler.GetDepotRecordResponse result = new GuildManagerHandler.GetDepotRecordResponse(this);
/*       */         int from_bitField0_ = this.bitField0_;
/*       */         int to_bitField0_ = 0;
/*       */         if ((from_bitField0_ & 0x1) == 1) {
/*       */           to_bitField0_ |= 0x1;
/*       */         }
/*       */         result.s2CCode_ = this.s2CCode_;
/*       */         if ((from_bitField0_ & 0x2) == 2) {
/*       */           to_bitField0_ |= 0x2;
/*       */         }
/*       */         result.s2CMsg_ = this.s2CMsg_;
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x4) == 4) {
/*       */             this.s2CRecordList_ = Collections.unmodifiableList(this.s2CRecordList_);
/*       */             this.bitField0_ &= 0xFFFFFFFB;
/*       */           } 
/*       */           result.s2CRecordList_ = this.s2CRecordList_;
/*       */         } else {
/*       */           result.s2CRecordList_ = this.s2CRecordListBuilder_.build();
/*       */         } 
/*       */         if ((from_bitField0_ & 0x8) == 8) {
/*       */           to_bitField0_ |= 0x4;
/*       */         }
/*       */         result.s2CPage_ = this.s2CPage_;
/*       */         result.bitField0_ = to_bitField0_;
/*       */         onBuilt();
/*       */         return result;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*       */         if (other instanceof GuildManagerHandler.GetDepotRecordResponse) {
/*       */           return mergeFrom((GuildManagerHandler.GetDepotRecordResponse)other);
/*       */         }
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(GuildManagerHandler.GetDepotRecordResponse other) {
/*       */         if (other == GuildManagerHandler.GetDepotRecordResponse.getDefaultInstance()) {
/*       */           return this;
/*       */         }
/*       */         if (other.hasS2CCode()) {
/*       */           setS2CCode(other.getS2CCode());
/*       */         }
/*       */         if (other.hasS2CMsg()) {
/*       */           this.bitField0_ |= 0x2;
/*       */           this.s2CMsg_ = other.s2CMsg_;
/*       */           onChanged();
/*       */         } 
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           if (!other.s2CRecordList_.isEmpty()) {
/*       */             if (this.s2CRecordList_.isEmpty()) {
/*       */               this.s2CRecordList_ = other.s2CRecordList_;
/*       */               this.bitField0_ &= 0xFFFFFFFB;
/*       */             } else {
/*       */               ensureS2CRecordListIsMutable();
/*       */               this.s2CRecordList_.addAll(other.s2CRecordList_);
/*       */             } 
/*       */             onChanged();
/*       */           } 
/*       */         } else if (!other.s2CRecordList_.isEmpty()) {
/*       */           if (this.s2CRecordListBuilder_.isEmpty()) {
/*       */             this.s2CRecordListBuilder_.dispose();
/*       */             this.s2CRecordListBuilder_ = null;
/*       */             this.s2CRecordList_ = other.s2CRecordList_;
/*       */             this.bitField0_ &= 0xFFFFFFFB;
/*       */             this.s2CRecordListBuilder_ = GuildManagerHandler.GetDepotRecordResponse.alwaysUseFieldBuilders ? getS2CRecordListFieldBuilder() : null;
/*       */           } else {
/*       */             this.s2CRecordListBuilder_.addAllMessages(other.s2CRecordList_);
/*       */           } 
/*       */         } 
/*       */         if (other.hasS2CPage()) {
/*       */           setS2CPage(other.getS2CPage());
/*       */         }
/*       */         mergeUnknownFields(other.getUnknownFields());
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final boolean isInitialized() {
/*       */         if (!hasS2CCode()) {
/*       */           return false;
/*       */         }
/*       */         return true;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         GuildManagerHandler.GetDepotRecordResponse parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (GuildManagerHandler.GetDepotRecordResponse)GuildManagerHandler.GetDepotRecordResponse.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (GuildManagerHandler.GetDepotRecordResponse)e.getUnfinishedMessage();
/*       */           throw e;
/*       */         } finally {
/*       */           if (parsedMessage != null) {
/*       */             mergeFrom(parsedMessage);
/*       */           }
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasS2CCode() {
/*       */         return ((this.bitField0_ & 0x1) == 1);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public int getS2CCode() {
/*       */         return this.s2CCode_;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CCode(int value) {
/*       */         this.bitField0_ |= 0x1;
/*       */         this.s2CCode_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearS2CCode() {
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.s2CCode_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasS2CMsg() {
/*       */         return ((this.bitField0_ & 0x2) == 2);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public String getS2CMsg() {
/*       */         Object ref = this.s2CMsg_;
/*       */         if (!(ref instanceof String)) {
/*       */           ByteString bs = (ByteString)ref;
/*       */           String s = bs.toStringUtf8();
/*       */           if (bs.isValidUtf8()) {
/*       */             this.s2CMsg_ = s;
/*       */           }
/*       */           return s;
/*       */         } 
/*       */         return (String)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getS2CMsgBytes() {
/*       */         Object ref = this.s2CMsg_;
/*       */         if (ref instanceof String) {
/*       */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           this.s2CMsg_ = b;
/*       */           return b;
/*       */         } 
/*       */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CMsg(String value) {
/*       */         if (value == null) {
/*       */           throw new NullPointerException();
/*       */         }
/*       */         this.bitField0_ |= 0x2;
/*       */         this.s2CMsg_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearS2CMsg() {
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         this.s2CMsg_ = GuildManagerHandler.GetDepotRecordResponse.getDefaultInstance().getS2CMsg();
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CMsgBytes(ByteString value) {
/*       */         if (value == null) {
/*       */           throw new NullPointerException();
/*       */         }
/*       */         this.bitField0_ |= 0x2;
/*       */         this.s2CMsg_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       private void ensureS2CRecordListIsMutable() {
/*       */         if ((this.bitField0_ & 0x4) != 4) {
/*       */           this.s2CRecordList_ = new ArrayList<>(this.s2CRecordList_);
/*       */           this.bitField0_ |= 0x4;
/*       */         } 
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public List<GuildManagerHandler.RecordInfo> getS2CRecordListList() {
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           return Collections.unmodifiableList(this.s2CRecordList_);
/*       */         }
/*       */         return this.s2CRecordListBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public int getS2CRecordListCount() {
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           return this.s2CRecordList_.size();
/*       */         }
/*       */         return this.s2CRecordListBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.RecordInfo getS2CRecordList(int index) {
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           return this.s2CRecordList_.get(index);
/*       */         }
/*       */         return (GuildManagerHandler.RecordInfo)this.s2CRecordListBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CRecordList(int index, GuildManagerHandler.RecordInfo value) {
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           ensureS2CRecordListIsMutable();
/*       */           this.s2CRecordList_.set(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CRecordListBuilder_.setMessage(index, value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CRecordList(int index, GuildManagerHandler.RecordInfo.Builder builderForValue) {
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           ensureS2CRecordListIsMutable();
/*       */           this.s2CRecordList_.set(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CRecordListBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addS2CRecordList(GuildManagerHandler.RecordInfo value) {
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           ensureS2CRecordListIsMutable();
/*       */           this.s2CRecordList_.add(value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CRecordListBuilder_.addMessage(value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addS2CRecordList(int index, GuildManagerHandler.RecordInfo value) {
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           ensureS2CRecordListIsMutable();
/*       */           this.s2CRecordList_.add(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CRecordListBuilder_.addMessage(index, value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addS2CRecordList(GuildManagerHandler.RecordInfo.Builder builderForValue) {
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           ensureS2CRecordListIsMutable();
/*       */           this.s2CRecordList_.add(builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CRecordListBuilder_.addMessage(builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addS2CRecordList(int index, GuildManagerHandler.RecordInfo.Builder builderForValue) {
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           ensureS2CRecordListIsMutable();
/*       */           this.s2CRecordList_.add(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CRecordListBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllS2CRecordList(Iterable<? extends GuildManagerHandler.RecordInfo> values) {
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           ensureS2CRecordListIsMutable();
/*       */           AbstractMessageLite.Builder.addAll(values, this.s2CRecordList_);
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CRecordListBuilder_.addAllMessages(values);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearS2CRecordList() {
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           this.s2CRecordList_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFFB;
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CRecordListBuilder_.clear();
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeS2CRecordList(int index) {
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           ensureS2CRecordListIsMutable();
/*       */           this.s2CRecordList_.remove(index);
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CRecordListBuilder_.remove(index);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.RecordInfo.Builder getS2CRecordListBuilder(int index) {
/*       */         return (GuildManagerHandler.RecordInfo.Builder)getS2CRecordListFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.RecordInfoOrBuilder getS2CRecordListOrBuilder(int index) {
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           return this.s2CRecordList_.get(index);
/*       */         }
/*       */         return (GuildManagerHandler.RecordInfoOrBuilder)this.s2CRecordListBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends GuildManagerHandler.RecordInfoOrBuilder> getS2CRecordListOrBuilderList() {
/*       */         if (this.s2CRecordListBuilder_ != null) {
/*       */           return this.s2CRecordListBuilder_.getMessageOrBuilderList();
/*       */         }
/*       */         return Collections.unmodifiableList((List)this.s2CRecordList_);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.RecordInfo.Builder addS2CRecordListBuilder() {
/*       */         return (GuildManagerHandler.RecordInfo.Builder)getS2CRecordListFieldBuilder().addBuilder(GuildManagerHandler.RecordInfo.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.RecordInfo.Builder addS2CRecordListBuilder(int index) {
/*       */         return (GuildManagerHandler.RecordInfo.Builder)getS2CRecordListFieldBuilder().addBuilder(index, GuildManagerHandler.RecordInfo.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public List<GuildManagerHandler.RecordInfo.Builder> getS2CRecordListBuilderList() {
/*       */         return getS2CRecordListFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilder<GuildManagerHandler.RecordInfo, GuildManagerHandler.RecordInfo.Builder, GuildManagerHandler.RecordInfoOrBuilder> getS2CRecordListFieldBuilder() {
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           this.s2CRecordListBuilder_ = new RepeatedFieldBuilder(this.s2CRecordList_, ((this.bitField0_ & 0x4) == 4), getParentForChildren(), isClean());
/*       */           this.s2CRecordList_ = null;
/*       */         } 
/*       */         return this.s2CRecordListBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasS2CPage() {
/*       */         return ((this.bitField0_ & 0x8) == 8);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public int getS2CPage() {
/*       */         return this.s2CPage_;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CPage(int value) {
/*       */         this.bitField0_ |= 0x8;
/*       */         this.s2CPage_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearS2CPage() {
/*       */         this.bitField0_ &= 0xFFFFFFF7;
/*       */         this.s2CPage_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class BlessItem
/*       */     extends GeneratedMessage
/*       */     implements BlessItemOrBuilder
/*       */   {
/* 16285 */     private static final BlessItem defaultInstance = new BlessItem(true); private final UnknownFieldSet unknownFields; private BlessItem(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private BlessItem(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static BlessItem getDefaultInstance() { return defaultInstance; } public BlessItem getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private BlessItem(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ItemOuterClass.MiniItem.Builder subBuilder; int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.id_ = input.readInt32(); break;case 18: subBuilder = null; if ((this.bitField0_ & 0x2) == 2) subBuilder = this.item_.toBuilder();  this.item_ = (ItemOuterClass.MiniItem)input.readMessage(ItemOuterClass.MiniItem.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.item_); this.item_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x2; break;case 24: this.bitField0_ |= 0x4; this.finishNum_ = input.readInt32(); break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_BlessItem_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_BlessItem_fieldAccessorTable.ensureFieldAccessorsInitialized(BlessItem.class, Builder.class); } public static Parser<BlessItem> PARSER = (Parser<BlessItem>)new AbstractParser<BlessItem>() { public GuildManagerHandler.BlessItem parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.BlessItem(input, extensionRegistry); } }; private int bitField0_; public static final int ID_FIELD_NUMBER = 1; private int id_; public static final int ITEM_FIELD_NUMBER = 2; private ItemOuterClass.MiniItem item_; public static final int FINISHNUM_FIELD_NUMBER = 3; private int finishNum_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<BlessItem> getParserForType() { return PARSER; } public boolean hasId() { return ((this.bitField0_ & 0x1) == 1); } public int getId() { return this.id_; } public boolean hasItem() { return ((this.bitField0_ & 0x2) == 2); } public ItemOuterClass.MiniItem getItem() { return this.item_; } public ItemOuterClass.MiniItemOrBuilder getItemOrBuilder() { return (ItemOuterClass.MiniItemOrBuilder)this.item_; } public boolean hasFinishNum() { return ((this.bitField0_ & 0x4) == 4); } public int getFinishNum() { return this.finishNum_; } private void initFields() { this.id_ = 0; this.item_ = ItemOuterClass.MiniItem.getDefaultInstance(); this.finishNum_ = 0; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  if (hasItem() && !getItem().isInitialized()) { this.memoizedIsInitialized = 0; return false; }  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.id_);  if ((this.bitField0_ & 0x2) == 2) output.writeMessage(2, (MessageLite)this.item_);  if ((this.bitField0_ & 0x4) == 4) output.writeInt32(3, this.finishNum_);  getUnknownFields().writeTo(output); } public int getSerializedSize() { int size = this.memoizedSerializedSize; if (size != -1) return size;  size = 0; if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.id_);  if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeMessageSize(2, (MessageLite)this.item_);  if ((this.bitField0_ & 0x4) == 4) size += CodedOutputStream.computeInt32Size(3, this.finishNum_);  size += getUnknownFields().getSerializedSize(); this.memoizedSerializedSize = size; return size; } protected Object writeReplace() throws ObjectStreamException { return super.writeReplace(); } public static BlessItem parseFrom(ByteString data) throws InvalidProtocolBufferException { return (BlessItem)PARSER.parseFrom(data); } public static BlessItem parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (BlessItem)PARSER.parseFrom(data, extensionRegistry); } public static BlessItem parseFrom(byte[] data) throws InvalidProtocolBufferException { return (BlessItem)PARSER.parseFrom(data); } public static BlessItem parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (BlessItem)PARSER.parseFrom(data, extensionRegistry); } public static BlessItem parseFrom(InputStream input) throws IOException { return (BlessItem)PARSER.parseFrom(input); } public static BlessItem parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (BlessItem)PARSER.parseFrom(input, extensionRegistry); } public static BlessItem parseDelimitedFrom(InputStream input) throws IOException { return (BlessItem)PARSER.parseDelimitedFrom(input); } public static BlessItem parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (BlessItem)PARSER.parseDelimitedFrom(input, extensionRegistry); } public static BlessItem parseFrom(CodedInputStream input) throws IOException { return (BlessItem)PARSER.parseFrom(input); } public static BlessItem parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (BlessItem)PARSER.parseFrom(input, extensionRegistry); } public static Builder newBuilder() { return Builder.create(); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder(BlessItem prototype) { return newBuilder().mergeFrom(prototype); } public Builder toBuilder() { return newBuilder(this); } protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.BlessItemOrBuilder {
/* 16286 */       private int bitField0_; private int id_; private ItemOuterClass.MiniItem item_; private SingleFieldBuilder<ItemOuterClass.MiniItem, ItemOuterClass.MiniItem.Builder, ItemOuterClass.MiniItemOrBuilder> itemBuilder_; private int finishNum_; public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_BlessItem_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_BlessItem_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.BlessItem.class, Builder.class); } private Builder() { this.item_ = ItemOuterClass.MiniItem.getDefaultInstance(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessage.BuilderParent parent) { super(parent); this.item_ = ItemOuterClass.MiniItem.getDefaultInstance(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GuildManagerHandler.BlessItem.alwaysUseFieldBuilders) getItemFieldBuilder();  } private static Builder create() { return new Builder(); } public Builder clear() { super.clear(); this.id_ = 0; this.bitField0_ &= 0xFFFFFFFE; if (this.itemBuilder_ == null) { this.item_ = ItemOuterClass.MiniItem.getDefaultInstance(); } else { this.itemBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFFFD; this.finishNum_ = 0; this.bitField0_ &= 0xFFFFFFFB; return this; } public Builder clone() { return create().mergeFrom(buildPartial()); } public Descriptors.Descriptor getDescriptorForType() { return GuildManagerHandler.internal_static_pomelo_guild_BlessItem_descriptor; } public GuildManagerHandler.BlessItem getDefaultInstanceForType() { return GuildManagerHandler.BlessItem.getDefaultInstance(); } public GuildManagerHandler.BlessItem build() { GuildManagerHandler.BlessItem result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public GuildManagerHandler.BlessItem buildPartial() { GuildManagerHandler.BlessItem result = new GuildManagerHandler.BlessItem(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;  result.id_ = this.id_; if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;  if (this.itemBuilder_ == null) { result.item_ = this.item_; } else { result.item_ = (ItemOuterClass.MiniItem)this.itemBuilder_.build(); }  if ((from_bitField0_ & 0x4) == 4) to_bitField0_ |= 0x4;  result.finishNum_ = this.finishNum_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder mergeFrom(Message other) { if (other instanceof GuildManagerHandler.BlessItem) return mergeFrom((GuildManagerHandler.BlessItem)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(GuildManagerHandler.BlessItem other) { if (other == GuildManagerHandler.BlessItem.getDefaultInstance()) return this;  if (other.hasId()) setId(other.getId());  if (other.hasItem()) mergeItem(other.getItem());  if (other.hasFinishNum()) setFinishNum(other.getFinishNum());  mergeUnknownFields(other.getUnknownFields()); return this; } public final boolean isInitialized() { if (hasItem() && !getItem().isInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { GuildManagerHandler.BlessItem parsedMessage = null; try { parsedMessage = (GuildManagerHandler.BlessItem)GuildManagerHandler.BlessItem.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (GuildManagerHandler.BlessItem)e.getUnfinishedMessage(); throw e; } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasId() { return ((this.bitField0_ & 0x1) == 1); } public int getId() { return this.id_; } public Builder setId(int value) { this.bitField0_ |= 0x1; this.id_ = value; onChanged(); return this; } public Builder clearId() { this.bitField0_ &= 0xFFFFFFFE; this.id_ = 0; onChanged(); return this; } public boolean hasItem() { return ((this.bitField0_ & 0x2) == 2); } public ItemOuterClass.MiniItem getItem() { if (this.itemBuilder_ == null) return this.item_;  return (ItemOuterClass.MiniItem)this.itemBuilder_.getMessage(); } public Builder setItem(ItemOuterClass.MiniItem value) { if (this.itemBuilder_ == null) { if (value == null) throw new NullPointerException();  this.item_ = value; onChanged(); } else { this.itemBuilder_.setMessage((GeneratedMessage)value); }  this.bitField0_ |= 0x2; return this; } public Builder setItem(ItemOuterClass.MiniItem.Builder builderForValue) { if (this.itemBuilder_ == null) { this.item_ = builderForValue.build(); onChanged(); } else { this.itemBuilder_.setMessage((GeneratedMessage)builderForValue.build()); }  this.bitField0_ |= 0x2; return this; } public Builder mergeItem(ItemOuterClass.MiniItem value) { if (this.itemBuilder_ == null) { if ((this.bitField0_ & 0x2) == 2 && this.item_ != ItemOuterClass.MiniItem.getDefaultInstance()) { this.item_ = ItemOuterClass.MiniItem.newBuilder(this.item_).mergeFrom(value).buildPartial(); } else { this.item_ = value; }  onChanged(); } else { this.itemBuilder_.mergeFrom((GeneratedMessage)value); }  this.bitField0_ |= 0x2; return this; } public Builder clearItem() { if (this.itemBuilder_ == null) { this.item_ = ItemOuterClass.MiniItem.getDefaultInstance(); onChanged(); } else { this.itemBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFFFD; return this; } public ItemOuterClass.MiniItem.Builder getItemBuilder() { this.bitField0_ |= 0x2; onChanged(); return (ItemOuterClass.MiniItem.Builder)getItemFieldBuilder().getBuilder(); } public ItemOuterClass.MiniItemOrBuilder getItemOrBuilder() { if (this.itemBuilder_ != null) return (ItemOuterClass.MiniItemOrBuilder)this.itemBuilder_.getMessageOrBuilder();  return (ItemOuterClass.MiniItemOrBuilder)this.item_; } private SingleFieldBuilder<ItemOuterClass.MiniItem, ItemOuterClass.MiniItem.Builder, ItemOuterClass.MiniItemOrBuilder> getItemFieldBuilder() { if (this.itemBuilder_ == null) { this.itemBuilder_ = new SingleFieldBuilder((GeneratedMessage)getItem(), getParentForChildren(), isClean()); this.item_ = null; }  return this.itemBuilder_; } public boolean hasFinishNum() { return ((this.bitField0_ & 0x4) == 4); } public int getFinishNum() { return this.finishNum_; } public Builder setFinishNum(int value) { this.bitField0_ |= 0x4; this.finishNum_ = value; onChanged(); return this; } public Builder clearFinishNum() { this.bitField0_ &= 0xFFFFFFFB; this.finishNum_ = 0; onChanged(); return this; } } static { defaultInstance.initFields(); }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class GuildBlessInfo
/*       */     extends GeneratedMessage
/*       */     implements GuildBlessInfoOrBuilder
/*       */   {
/* 17735 */     private static final GuildBlessInfo defaultInstance = new GuildBlessInfo(true); private final UnknownFieldSet unknownFields; private GuildBlessInfo(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private GuildBlessInfo(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static GuildBlessInfo getDefaultInstance() { return defaultInstance; } public GuildBlessInfo getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private GuildBlessInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int length, limit, tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.level_ = input.readInt32(); break;case 16: this.bitField0_ |= 0x2; this.blessValue_ = input.readInt32(); break;case 24: this.bitField0_ |= 0x4; this.blessValueMax_ = input.readInt32(); break;case 32: if ((mutable_bitField0_ & 0x8) != 8) { this.finishState_ = new ArrayList<>(); mutable_bitField0_ |= 0x8; }  this.finishState_.add(Integer.valueOf(input.readInt32())); break;case 34: length = input.readRawVarint32(); limit = input.pushLimit(length); if ((mutable_bitField0_ & 0x8) != 8 && input.getBytesUntilLimit() > 0) { this.finishState_ = new ArrayList<>(); mutable_bitField0_ |= 0x8; }  while (input.getBytesUntilLimit() > 0) this.finishState_.add(Integer.valueOf(input.readInt32()));  input.popLimit(limit); break;case 42: if ((mutable_bitField0_ & 0x10) != 16) { this.itemList_ = new ArrayList<>(); mutable_bitField0_ |= 0x10; }  this.itemList_.add(input.readMessage(GuildManagerHandler.BlessItem.PARSER, extensionRegistry)); break;case 48: this.bitField0_ |= 0x8; this.blessCountMax_ = input.readInt32(); break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x8) == 8) this.finishState_ = Collections.unmodifiableList(this.finishState_);  if ((mutable_bitField0_ & 0x10) == 16) this.itemList_ = Collections.unmodifiableList(this.itemList_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GuildBlessInfo_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GuildBlessInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildBlessInfo.class, Builder.class); } public static Parser<GuildBlessInfo> PARSER = (Parser<GuildBlessInfo>)new AbstractParser<GuildBlessInfo>() { public GuildManagerHandler.GuildBlessInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.GuildBlessInfo(input, extensionRegistry); } }
/* 17736 */     ; private int bitField0_; public static final int LEVEL_FIELD_NUMBER = 1; private int level_; public static final int BLESSVALUE_FIELD_NUMBER = 2; private int blessValue_; public static final int BLESSVALUEMAX_FIELD_NUMBER = 3; private int blessValueMax_; public static final int FINISHSTATE_FIELD_NUMBER = 4; private List<Integer> finishState_; public static final int ITEMLIST_FIELD_NUMBER = 5; private List<GuildManagerHandler.BlessItem> itemList_; public static final int BLESSCOUNTMAX_FIELD_NUMBER = 6; private int blessCountMax_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<GuildBlessInfo> getParserForType() { return PARSER; } public boolean hasLevel() { return ((this.bitField0_ & 0x1) == 1); } public int getLevel() { return this.level_; } public boolean hasBlessValue() { return ((this.bitField0_ & 0x2) == 2); } public int getBlessValue() { return this.blessValue_; } public boolean hasBlessValueMax() { return ((this.bitField0_ & 0x4) == 4); } static { defaultInstance.initFields(); }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public int getBlessValueMax() {
/*       */       return this.blessValueMax_;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public List<Integer> getFinishStateList() {
/*       */       return this.finishState_;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public int getFinishStateCount() {
/*       */       return this.finishState_.size();
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public int getFinishState(int index) {
/*       */       return ((Integer)this.finishState_.get(index)).intValue();
/*       */     }
/*       */ 
/*       */     
/*       */     public List<GuildManagerHandler.BlessItem> getItemListList() {
/*       */       return this.itemList_;
/*       */     }
/*       */ 
/*       */     
/*       */     public List<? extends GuildManagerHandler.BlessItemOrBuilder> getItemListOrBuilderList() {
/*       */       return (List)this.itemList_;
/*       */     }
/*       */ 
/*       */     
/*       */     public int getItemListCount() {
/*       */       return this.itemList_.size();
/*       */     }
/*       */ 
/*       */     
/*       */     public GuildManagerHandler.BlessItem getItemList(int index) {
/*       */       return this.itemList_.get(index);
/*       */     }
/*       */ 
/*       */     
/*       */     public GuildManagerHandler.BlessItemOrBuilder getItemListOrBuilder(int index) {
/*       */       return this.itemList_.get(index);
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean hasBlessCountMax() {
/*       */       return ((this.bitField0_ & 0x8) == 8);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getBlessCountMax() {
/*       */       return this.blessCountMax_;
/*       */     }
/*       */ 
/*       */     
/*       */     private void initFields() {
/*       */       this.level_ = 0;
/*       */       this.blessValue_ = 0;
/*       */       this.blessValueMax_ = 0;
/*       */       this.finishState_ = Collections.emptyList();
/*       */       this.itemList_ = Collections.emptyList();
/*       */       this.blessCountMax_ = 0;
/*       */     }
/*       */ 
/*       */     
/*       */     public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1) {
/*       */         return true;
/*       */       }
/*       */       if (isInitialized == 0) {
/*       */         return false;
/*       */       }
/*       */       for (int i = 0; i < getItemListCount(); i++) {
/*       */         if (!getItemList(i).isInitialized()) {
/*       */           this.memoizedIsInitialized = 0;
/*       */           return false;
/*       */         } 
/*       */       } 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       getSerializedSize();
/*       */       if ((this.bitField0_ & 0x1) == 1) {
/*       */         output.writeInt32(1, this.level_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x2) == 2) {
/*       */         output.writeInt32(2, this.blessValue_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x4) == 4) {
/*       */         output.writeInt32(3, this.blessValueMax_);
/*       */       }
/*       */       int i;
/*       */       for (i = 0; i < this.finishState_.size(); i++) {
/*       */         output.writeInt32(4, ((Integer)this.finishState_.get(i)).intValue());
/*       */       }
/*       */       for (i = 0; i < this.itemList_.size(); i++) {
/*       */         output.writeMessage(5, (MessageLite)this.itemList_.get(i));
/*       */       }
/*       */       if ((this.bitField0_ & 0x8) == 8) {
/*       */         output.writeInt32(6, this.blessCountMax_);
/*       */       }
/*       */       getUnknownFields().writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/*       */       int size = this.memoizedSerializedSize;
/*       */       if (size != -1) {
/*       */         return size;
/*       */       }
/*       */       size = 0;
/*       */       if ((this.bitField0_ & 0x1) == 1) {
/*       */         size += CodedOutputStream.computeInt32Size(1, this.level_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x2) == 2) {
/*       */         size += CodedOutputStream.computeInt32Size(2, this.blessValue_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x4) == 4) {
/*       */         size += CodedOutputStream.computeInt32Size(3, this.blessValueMax_);
/*       */       }
/*       */       int dataSize = 0;
/*       */       for (int j = 0; j < this.finishState_.size(); j++) {
/*       */         dataSize += CodedOutputStream.computeInt32SizeNoTag(((Integer)this.finishState_.get(j)).intValue());
/*       */       }
/*       */       size += dataSize;
/*       */       size += 1 * getFinishStateList().size();
/*       */       for (int i = 0; i < this.itemList_.size(); i++) {
/*       */         size += CodedOutputStream.computeMessageSize(5, (MessageLite)this.itemList_.get(i));
/*       */       }
/*       */       if ((this.bitField0_ & 0x8) == 8) {
/*       */         size += CodedOutputStream.computeInt32Size(6, this.blessCountMax_);
/*       */       }
/*       */       size += getUnknownFields().getSerializedSize();
/*       */       this.memoizedSerializedSize = size;
/*       */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     protected Object writeReplace() throws ObjectStreamException {
/*       */       return super.writeReplace();
/*       */     }
/*       */ 
/*       */     
/*       */     public static GuildBlessInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (GuildBlessInfo)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */     
/*       */     public static GuildBlessInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (GuildBlessInfo)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static GuildBlessInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (GuildBlessInfo)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */     
/*       */     public static GuildBlessInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (GuildBlessInfo)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static GuildBlessInfo parseFrom(InputStream input) throws IOException {
/*       */       return (GuildBlessInfo)PARSER.parseFrom(input);
/*       */     }
/*       */ 
/*       */     
/*       */     public static GuildBlessInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GuildBlessInfo)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static GuildBlessInfo parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (GuildBlessInfo)PARSER.parseDelimitedFrom(input);
/*       */     }
/*       */ 
/*       */     
/*       */     public static GuildBlessInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GuildBlessInfo)PARSER.parseDelimitedFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static GuildBlessInfo parseFrom(CodedInputStream input) throws IOException {
/*       */       return (GuildBlessInfo)PARSER.parseFrom(input);
/*       */     }
/*       */ 
/*       */     
/*       */     public static GuildBlessInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GuildBlessInfo)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static Builder newBuilder() {
/*       */       return Builder.create();
/*       */     }
/*       */ 
/*       */     
/*       */     public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     }
/*       */ 
/*       */     
/*       */     public static Builder newBuilder(GuildBlessInfo prototype) {
/*       */       return newBuilder().mergeFrom(prototype);
/*       */     }
/*       */ 
/*       */     
/*       */     public Builder toBuilder() {
/*       */       return newBuilder(this);
/*       */     }
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
/*       */       Builder builder = new Builder(parent);
/*       */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessage.Builder<Builder>
/*       */       implements GuildManagerHandler.GuildBlessInfoOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private int level_;
/*       */       
/*       */       private int blessValue_;
/*       */       
/*       */       private int blessValueMax_;
/*       */       
/*       */       private List<Integer> finishState_;
/*       */       
/*       */       private List<GuildManagerHandler.BlessItem> itemList_;
/*       */       
/*       */       private RepeatedFieldBuilder<GuildManagerHandler.BlessItem, GuildManagerHandler.BlessItem.Builder, GuildManagerHandler.BlessItemOrBuilder> itemListBuilder_;
/*       */       
/*       */       private int blessCountMax_;
/*       */ 
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_GuildBlessInfo_descriptor;
/*       */       }
/*       */ 
/*       */       
/*       */       protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_GuildBlessInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.GuildBlessInfo.class, Builder.class);
/*       */       }
/*       */ 
/*       */       
/*       */       private Builder() {
/*       */         this.finishState_ = Collections.emptyList();
/*       */         this.itemList_ = Collections.emptyList();
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */       
/*       */       private Builder(GeneratedMessage.BuilderParent parent) {
/*       */         super(parent);
/*       */         this.finishState_ = Collections.emptyList();
/*       */         this.itemList_ = Collections.emptyList();
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*       */         if (GuildManagerHandler.GuildBlessInfo.alwaysUseFieldBuilders) {
/*       */           getItemListFieldBuilder();
/*       */         }
/*       */       }
/*       */ 
/*       */       
/*       */       private static Builder create() {
/*       */         return new Builder();
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clear() {
/*       */         super.clear();
/*       */         this.level_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.blessValue_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         this.blessValueMax_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFFB;
/*       */         this.finishState_ = Collections.emptyList();
/*       */         this.bitField0_ &= 0xFFFFFFF7;
/*       */         if (this.itemListBuilder_ == null) {
/*       */           this.itemList_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFEF;
/*       */         } else {
/*       */           this.itemListBuilder_.clear();
/*       */         } 
/*       */         this.blessCountMax_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFDF;
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clone() {
/*       */         return create().mergeFrom(buildPartial());
/*       */       }
/*       */ 
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_GuildBlessInfo_descriptor;
/*       */       }
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.GuildBlessInfo getDefaultInstanceForType() {
/*       */         return GuildManagerHandler.GuildBlessInfo.getDefaultInstance();
/*       */       }
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.GuildBlessInfo build() {
/*       */         GuildManagerHandler.GuildBlessInfo result = buildPartial();
/*       */         if (!result.isInitialized()) {
/*       */           throw newUninitializedMessageException(result);
/*       */         }
/*       */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.GuildBlessInfo buildPartial() {
/*       */         GuildManagerHandler.GuildBlessInfo result = new GuildManagerHandler.GuildBlessInfo(this);
/*       */         int from_bitField0_ = this.bitField0_;
/*       */         int to_bitField0_ = 0;
/*       */         if ((from_bitField0_ & 0x1) == 1) {
/*       */           to_bitField0_ |= 0x1;
/*       */         }
/*       */         result.level_ = this.level_;
/*       */         if ((from_bitField0_ & 0x2) == 2) {
/*       */           to_bitField0_ |= 0x2;
/*       */         }
/*       */         result.blessValue_ = this.blessValue_;
/*       */         if ((from_bitField0_ & 0x4) == 4) {
/*       */           to_bitField0_ |= 0x4;
/*       */         }
/*       */         result.blessValueMax_ = this.blessValueMax_;
/*       */         if ((this.bitField0_ & 0x8) == 8) {
/*       */           this.finishState_ = Collections.unmodifiableList(this.finishState_);
/*       */           this.bitField0_ &= 0xFFFFFFF7;
/*       */         } 
/*       */         result.finishState_ = this.finishState_;
/*       */         if (this.itemListBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x10) == 16) {
/*       */             this.itemList_ = Collections.unmodifiableList(this.itemList_);
/*       */             this.bitField0_ &= 0xFFFFFFEF;
/*       */           } 
/*       */           result.itemList_ = this.itemList_;
/*       */         } else {
/*       */           result.itemList_ = this.itemListBuilder_.build();
/*       */         } 
/*       */         if ((from_bitField0_ & 0x20) == 32) {
/*       */           to_bitField0_ |= 0x8;
/*       */         }
/*       */         result.blessCountMax_ = this.blessCountMax_;
/*       */         result.bitField0_ = to_bitField0_;
/*       */         onBuilt();
/*       */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*       */         if (other instanceof GuildManagerHandler.GuildBlessInfo) {
/*       */           return mergeFrom((GuildManagerHandler.GuildBlessInfo)other);
/*       */         }
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(GuildManagerHandler.GuildBlessInfo other) {
/*       */         if (other == GuildManagerHandler.GuildBlessInfo.getDefaultInstance()) {
/*       */           return this;
/*       */         }
/*       */         if (other.hasLevel()) {
/*       */           setLevel(other.getLevel());
/*       */         }
/*       */         if (other.hasBlessValue()) {
/*       */           setBlessValue(other.getBlessValue());
/*       */         }
/*       */         if (other.hasBlessValueMax()) {
/*       */           setBlessValueMax(other.getBlessValueMax());
/*       */         }
/*       */         if (!other.finishState_.isEmpty()) {
/*       */           if (this.finishState_.isEmpty()) {
/*       */             this.finishState_ = other.finishState_;
/*       */             this.bitField0_ &= 0xFFFFFFF7;
/*       */           } else {
/*       */             ensureFinishStateIsMutable();
/*       */             this.finishState_.addAll(other.finishState_);
/*       */           } 
/*       */           onChanged();
/*       */         } 
/*       */         if (this.itemListBuilder_ == null) {
/*       */           if (!other.itemList_.isEmpty()) {
/*       */             if (this.itemList_.isEmpty()) {
/*       */               this.itemList_ = other.itemList_;
/*       */               this.bitField0_ &= 0xFFFFFFEF;
/*       */             } else {
/*       */               ensureItemListIsMutable();
/*       */               this.itemList_.addAll(other.itemList_);
/*       */             } 
/*       */             onChanged();
/*       */           } 
/*       */         } else if (!other.itemList_.isEmpty()) {
/*       */           if (this.itemListBuilder_.isEmpty()) {
/*       */             this.itemListBuilder_.dispose();
/*       */             this.itemListBuilder_ = null;
/*       */             this.itemList_ = other.itemList_;
/*       */             this.bitField0_ &= 0xFFFFFFEF;
/*       */             this.itemListBuilder_ = GuildManagerHandler.GuildBlessInfo.alwaysUseFieldBuilders ? getItemListFieldBuilder() : null;
/*       */           } else {
/*       */             this.itemListBuilder_.addAllMessages(other.itemList_);
/*       */           } 
/*       */         } 
/*       */         if (other.hasBlessCountMax()) {
/*       */           setBlessCountMax(other.getBlessCountMax());
/*       */         }
/*       */         mergeUnknownFields(other.getUnknownFields());
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final boolean isInitialized() {
/*       */         for (int i = 0; i < getItemListCount(); i++) {
/*       */           if (!getItemList(i).isInitialized()) {
/*       */             return false;
/*       */           }
/*       */         } 
/*       */         return true;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         GuildManagerHandler.GuildBlessInfo parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (GuildManagerHandler.GuildBlessInfo)GuildManagerHandler.GuildBlessInfo.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (GuildManagerHandler.GuildBlessInfo)e.getUnfinishedMessage();
/*       */           throw e;
/*       */         } finally {
/*       */           if (parsedMessage != null) {
/*       */             mergeFrom(parsedMessage);
/*       */           }
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public boolean hasLevel() {
/*       */         return ((this.bitField0_ & 0x1) == 1);
/*       */       }
/*       */ 
/*       */       
/*       */       public int getLevel() {
/*       */         return this.level_;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder setLevel(int value) {
/*       */         this.bitField0_ |= 0x1;
/*       */         this.level_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearLevel() {
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.level_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public boolean hasBlessValue() {
/*       */         return ((this.bitField0_ & 0x2) == 2);
/*       */       }
/*       */ 
/*       */       
/*       */       public int getBlessValue() {
/*       */         return this.blessValue_;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder setBlessValue(int value) {
/*       */         this.bitField0_ |= 0x2;
/*       */         this.blessValue_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearBlessValue() {
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         this.blessValue_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public boolean hasBlessValueMax() {
/*       */         return ((this.bitField0_ & 0x4) == 4);
/*       */       }
/*       */ 
/*       */       
/*       */       public int getBlessValueMax() {
/*       */         return this.blessValueMax_;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder setBlessValueMax(int value) {
/*       */         this.bitField0_ |= 0x4;
/*       */         this.blessValueMax_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearBlessValueMax() {
/*       */         this.bitField0_ &= 0xFFFFFFFB;
/*       */         this.blessValueMax_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       private void ensureFinishStateIsMutable() {
/*       */         if ((this.bitField0_ & 0x8) != 8) {
/*       */           this.finishState_ = new ArrayList<>(this.finishState_);
/*       */           this.bitField0_ |= 0x8;
/*       */         } 
/*       */       }
/*       */ 
/*       */       
/*       */       public List<Integer> getFinishStateList() {
/*       */         return Collections.unmodifiableList(this.finishState_);
/*       */       }
/*       */ 
/*       */       
/*       */       public int getFinishStateCount() {
/*       */         return this.finishState_.size();
/*       */       }
/*       */ 
/*       */       
/*       */       public int getFinishState(int index) {
/*       */         return ((Integer)this.finishState_.get(index)).intValue();
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder setFinishState(int index, int value) {
/*       */         ensureFinishStateIsMutable();
/*       */         this.finishState_.set(index, Integer.valueOf(value));
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder addFinishState(int value) {
/*       */         ensureFinishStateIsMutable();
/*       */         this.finishState_.add(Integer.valueOf(value));
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder addAllFinishState(Iterable<? extends Integer> values) {
/*       */         ensureFinishStateIsMutable();
/*       */         AbstractMessageLite.Builder.addAll(values, this.finishState_);
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearFinishState() {
/*       */         this.finishState_ = Collections.emptyList();
/*       */         this.bitField0_ &= 0xFFFFFFF7;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       private void ensureItemListIsMutable() {
/*       */         if ((this.bitField0_ & 0x10) != 16) {
/*       */           this.itemList_ = new ArrayList<>(this.itemList_);
/*       */           this.bitField0_ |= 0x10;
/*       */         } 
/*       */       }
/*       */ 
/*       */       
/*       */       public List<GuildManagerHandler.BlessItem> getItemListList() {
/*       */         if (this.itemListBuilder_ == null) {
/*       */           return Collections.unmodifiableList(this.itemList_);
/*       */         }
/*       */         return this.itemListBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */       
/*       */       public int getItemListCount() {
/*       */         if (this.itemListBuilder_ == null) {
/*       */           return this.itemList_.size();
/*       */         }
/*       */         return this.itemListBuilder_.getCount();
/*       */       }
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.BlessItem getItemList(int index) {
/*       */         if (this.itemListBuilder_ == null) {
/*       */           return this.itemList_.get(index);
/*       */         }
/*       */         return (GuildManagerHandler.BlessItem)this.itemListBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder setItemList(int index, GuildManagerHandler.BlessItem value) {
/*       */         if (this.itemListBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           ensureItemListIsMutable();
/*       */           this.itemList_.set(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.itemListBuilder_.setMessage(index, value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder setItemList(int index, GuildManagerHandler.BlessItem.Builder builderForValue) {
/*       */         if (this.itemListBuilder_ == null) {
/*       */           ensureItemListIsMutable();
/*       */           this.itemList_.set(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.itemListBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder addItemList(GuildManagerHandler.BlessItem value) {
/*       */         if (this.itemListBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           ensureItemListIsMutable();
/*       */           this.itemList_.add(value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.itemListBuilder_.addMessage(value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder addItemList(int index, GuildManagerHandler.BlessItem value) {
/*       */         if (this.itemListBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           ensureItemListIsMutable();
/*       */           this.itemList_.add(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.itemListBuilder_.addMessage(index, value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder addItemList(GuildManagerHandler.BlessItem.Builder builderForValue) {
/*       */         if (this.itemListBuilder_ == null) {
/*       */           ensureItemListIsMutable();
/*       */           this.itemList_.add(builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.itemListBuilder_.addMessage(builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder addItemList(int index, GuildManagerHandler.BlessItem.Builder builderForValue) {
/*       */         if (this.itemListBuilder_ == null) {
/*       */           ensureItemListIsMutable();
/*       */           this.itemList_.add(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.itemListBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder addAllItemList(Iterable<? extends GuildManagerHandler.BlessItem> values) {
/*       */         if (this.itemListBuilder_ == null) {
/*       */           ensureItemListIsMutable();
/*       */           AbstractMessageLite.Builder.addAll(values, this.itemList_);
/*       */           onChanged();
/*       */         } else {
/*       */           this.itemListBuilder_.addAllMessages(values);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearItemList() {
/*       */         if (this.itemListBuilder_ == null) {
/*       */           this.itemList_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFEF;
/*       */           onChanged();
/*       */         } else {
/*       */           this.itemListBuilder_.clear();
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder removeItemList(int index) {
/*       */         if (this.itemListBuilder_ == null) {
/*       */           ensureItemListIsMutable();
/*       */           this.itemList_.remove(index);
/*       */           onChanged();
/*       */         } else {
/*       */           this.itemListBuilder_.remove(index);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.BlessItem.Builder getItemListBuilder(int index) {
/*       */         return (GuildManagerHandler.BlessItem.Builder)getItemListFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.BlessItemOrBuilder getItemListOrBuilder(int index) {
/*       */         if (this.itemListBuilder_ == null) {
/*       */           return this.itemList_.get(index);
/*       */         }
/*       */         return (GuildManagerHandler.BlessItemOrBuilder)this.itemListBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */       
/*       */       public List<? extends GuildManagerHandler.BlessItemOrBuilder> getItemListOrBuilderList() {
/*       */         if (this.itemListBuilder_ != null) {
/*       */           return this.itemListBuilder_.getMessageOrBuilderList();
/*       */         }
/*       */         return Collections.unmodifiableList((List)this.itemList_);
/*       */       }
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.BlessItem.Builder addItemListBuilder() {
/*       */         return (GuildManagerHandler.BlessItem.Builder)getItemListFieldBuilder().addBuilder(GuildManagerHandler.BlessItem.getDefaultInstance());
/*       */       }
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.BlessItem.Builder addItemListBuilder(int index) {
/*       */         return (GuildManagerHandler.BlessItem.Builder)getItemListFieldBuilder().addBuilder(index, GuildManagerHandler.BlessItem.getDefaultInstance());
/*       */       }
/*       */ 
/*       */       
/*       */       public List<GuildManagerHandler.BlessItem.Builder> getItemListBuilderList() {
/*       */         return getItemListFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilder<GuildManagerHandler.BlessItem, GuildManagerHandler.BlessItem.Builder, GuildManagerHandler.BlessItemOrBuilder> getItemListFieldBuilder() {
/*       */         if (this.itemListBuilder_ == null) {
/*       */           this.itemListBuilder_ = new RepeatedFieldBuilder(this.itemList_, ((this.bitField0_ & 0x10) == 16), getParentForChildren(), isClean());
/*       */           this.itemList_ = null;
/*       */         } 
/*       */         return this.itemListBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public boolean hasBlessCountMax() {
/*       */         return ((this.bitField0_ & 0x20) == 32);
/*       */       }
/*       */ 
/*       */       
/*       */       public int getBlessCountMax() {
/*       */         return this.blessCountMax_;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder setBlessCountMax(int value) {
/*       */         this.bitField0_ |= 0x20;
/*       */         this.blessCountMax_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearBlessCountMax() {
/*       */         this.bitField0_ &= 0xFFFFFFDF;
/*       */         this.blessCountMax_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */     }
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class GetBlessInfoResponse
/*       */     extends GeneratedMessage
/*       */     implements GetBlessInfoResponseOrBuilder
/*       */   {
/* 18558 */     private static final GetBlessInfoResponse defaultInstance = new GetBlessInfoResponse(true); private final UnknownFieldSet unknownFields; private GetBlessInfoResponse(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private GetBlessInfoResponse(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static GetBlessInfoResponse getDefaultInstance() { return defaultInstance; } public GetBlessInfoResponse getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private GetBlessInfoResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; GuildManagerHandler.GuildBlessInfo.Builder subBuilder; int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.s2CCode_ = input.readInt32(); break;case 18: bs = input.readBytes(); this.bitField0_ |= 0x2; this.s2CMsg_ = bs; break;case 34: subBuilder = null; if ((this.bitField0_ & 0x4) == 4) subBuilder = this.s2CBlessInfo_.toBuilder();  this.s2CBlessInfo_ = (GuildManagerHandler.GuildBlessInfo)input.readMessage(GuildManagerHandler.GuildBlessInfo.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.s2CBlessInfo_); this.s2CBlessInfo_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x4; break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GetBlessInfoResponse_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GetBlessInfoResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GetBlessInfoResponse.class, Builder.class); } public static Parser<GetBlessInfoResponse> PARSER = (Parser<GetBlessInfoResponse>)new AbstractParser<GetBlessInfoResponse>() { public GuildManagerHandler.GetBlessInfoResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.GetBlessInfoResponse(input, extensionRegistry); } }
/* 18559 */     ; private int bitField0_; public static final int S2C_CODE_FIELD_NUMBER = 1; private int s2CCode_; public static final int S2C_MSG_FIELD_NUMBER = 2; private Object s2CMsg_; public static final int S2C_BLESSINFO_FIELD_NUMBER = 4; private GuildManagerHandler.GuildBlessInfo s2CBlessInfo_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<GetBlessInfoResponse> getParserForType() { return PARSER; } public boolean hasS2CCode() { return ((this.bitField0_ & 0x1) == 1); } public int getS2CCode() { return this.s2CCode_; } public boolean hasS2CMsg() { return ((this.bitField0_ & 0x2) == 2); } public String getS2CMsg() { Object ref = this.s2CMsg_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.s2CMsg_ = s;  return s; } static { defaultInstance.initFields(); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public ByteString getS2CMsgBytes() {
/*       */       Object ref = this.s2CMsg_;
/*       */       if (ref instanceof String) {
/*       */         ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */         this.s2CMsg_ = b;
/*       */         return b;
/*       */       } 
/*       */       return (ByteString)ref;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public boolean hasS2CBlessInfo() {
/*       */       return ((this.bitField0_ & 0x4) == 4);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public GuildManagerHandler.GuildBlessInfo getS2CBlessInfo() {
/*       */       return this.s2CBlessInfo_;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public GuildManagerHandler.GuildBlessInfoOrBuilder getS2CBlessInfoOrBuilder() {
/*       */       return this.s2CBlessInfo_;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private void initFields() {
/*       */       this.s2CCode_ = 0;
/*       */       this.s2CMsg_ = "";
/*       */       this.s2CBlessInfo_ = GuildManagerHandler.GuildBlessInfo.getDefaultInstance();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1) {
/*       */         return true;
/*       */       }
/*       */       if (isInitialized == 0) {
/*       */         return false;
/*       */       }
/*       */       if (!hasS2CCode()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       if (hasS2CBlessInfo() && !getS2CBlessInfo().isInitialized()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       getSerializedSize();
/*       */       if ((this.bitField0_ & 0x1) == 1) {
/*       */         output.writeInt32(1, this.s2CCode_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x2) == 2) {
/*       */         output.writeBytes(2, getS2CMsgBytes());
/*       */       }
/*       */       if ((this.bitField0_ & 0x4) == 4) {
/*       */         output.writeMessage(4, (MessageLite)this.s2CBlessInfo_);
/*       */       }
/*       */       getUnknownFields().writeTo(output);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/*       */       int size = this.memoizedSerializedSize;
/*       */       if (size != -1) {
/*       */         return size;
/*       */       }
/*       */       size = 0;
/*       */       if ((this.bitField0_ & 0x1) == 1) {
/*       */         size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x2) == 2) {
/*       */         size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
/*       */       }
/*       */       if ((this.bitField0_ & 0x4) == 4) {
/*       */         size += CodedOutputStream.computeMessageSize(4, (MessageLite)this.s2CBlessInfo_);
/*       */       }
/*       */       size += getUnknownFields().getSerializedSize();
/*       */       this.memoizedSerializedSize = size;
/*       */       return size;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     protected Object writeReplace() throws ObjectStreamException {
/*       */       return super.writeReplace();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetBlessInfoResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (GetBlessInfoResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetBlessInfoResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (GetBlessInfoResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetBlessInfoResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (GetBlessInfoResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetBlessInfoResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (GetBlessInfoResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetBlessInfoResponse parseFrom(InputStream input) throws IOException {
/*       */       return (GetBlessInfoResponse)PARSER.parseFrom(input);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetBlessInfoResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GetBlessInfoResponse)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetBlessInfoResponse parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (GetBlessInfoResponse)PARSER.parseDelimitedFrom(input);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetBlessInfoResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GetBlessInfoResponse)PARSER.parseDelimitedFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetBlessInfoResponse parseFrom(CodedInputStream input) throws IOException {
/*       */       return (GetBlessInfoResponse)PARSER.parseFrom(input);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static GetBlessInfoResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GetBlessInfoResponse)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static Builder newBuilder() {
/*       */       return Builder.create();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static Builder newBuilder(GetBlessInfoResponse prototype) {
/*       */       return newBuilder().mergeFrom(prototype);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public Builder toBuilder() {
/*       */       return newBuilder(this);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
/*       */       Builder builder = new Builder(parent);
/*       */       return builder;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessage.Builder<Builder>
/*       */       implements GuildManagerHandler.GetBlessInfoResponseOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private int s2CCode_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Object s2CMsg_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private GuildManagerHandler.GuildBlessInfo s2CBlessInfo_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilder<GuildManagerHandler.GuildBlessInfo, GuildManagerHandler.GuildBlessInfo.Builder, GuildManagerHandler.GuildBlessInfoOrBuilder> s2CBlessInfoBuilder_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_GetBlessInfoResponse_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_GetBlessInfoResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.GetBlessInfoResponse.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder() {
/*       */         this.s2CMsg_ = "";
/*       */         this.s2CBlessInfo_ = GuildManagerHandler.GuildBlessInfo.getDefaultInstance();
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder(GeneratedMessage.BuilderParent parent) {
/*       */         super(parent);
/*       */         this.s2CMsg_ = "";
/*       */         this.s2CBlessInfo_ = GuildManagerHandler.GuildBlessInfo.getDefaultInstance();
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*       */         if (GuildManagerHandler.GetBlessInfoResponse.alwaysUseFieldBuilders) {
/*       */           getS2CBlessInfoFieldBuilder();
/*       */         }
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private static Builder create() {
/*       */         return new Builder();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clear() {
/*       */         super.clear();
/*       */         this.s2CCode_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.s2CMsg_ = "";
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         if (this.s2CBlessInfoBuilder_ == null) {
/*       */           this.s2CBlessInfo_ = GuildManagerHandler.GuildBlessInfo.getDefaultInstance();
/*       */         } else {
/*       */           this.s2CBlessInfoBuilder_.clear();
/*       */         } 
/*       */         this.bitField0_ &= 0xFFFFFFFB;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clone() {
/*       */         return create().mergeFrom(buildPartial());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_GetBlessInfoResponse_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.GetBlessInfoResponse getDefaultInstanceForType() {
/*       */         return GuildManagerHandler.GetBlessInfoResponse.getDefaultInstance();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.GetBlessInfoResponse build() {
/*       */         GuildManagerHandler.GetBlessInfoResponse result = buildPartial();
/*       */         if (!result.isInitialized()) {
/*       */           throw newUninitializedMessageException(result);
/*       */         }
/*       */         return result;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.GetBlessInfoResponse buildPartial() {
/*       */         GuildManagerHandler.GetBlessInfoResponse result = new GuildManagerHandler.GetBlessInfoResponse(this);
/*       */         int from_bitField0_ = this.bitField0_;
/*       */         int to_bitField0_ = 0;
/*       */         if ((from_bitField0_ & 0x1) == 1) {
/*       */           to_bitField0_ |= 0x1;
/*       */         }
/*       */         result.s2CCode_ = this.s2CCode_;
/*       */         if ((from_bitField0_ & 0x2) == 2) {
/*       */           to_bitField0_ |= 0x2;
/*       */         }
/*       */         result.s2CMsg_ = this.s2CMsg_;
/*       */         if ((from_bitField0_ & 0x4) == 4) {
/*       */           to_bitField0_ |= 0x4;
/*       */         }
/*       */         if (this.s2CBlessInfoBuilder_ == null) {
/*       */           result.s2CBlessInfo_ = this.s2CBlessInfo_;
/*       */         } else {
/*       */           result.s2CBlessInfo_ = (GuildManagerHandler.GuildBlessInfo)this.s2CBlessInfoBuilder_.build();
/*       */         } 
/*       */         result.bitField0_ = to_bitField0_;
/*       */         onBuilt();
/*       */         return result;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*       */         if (other instanceof GuildManagerHandler.GetBlessInfoResponse) {
/*       */           return mergeFrom((GuildManagerHandler.GetBlessInfoResponse)other);
/*       */         }
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(GuildManagerHandler.GetBlessInfoResponse other) {
/*       */         if (other == GuildManagerHandler.GetBlessInfoResponse.getDefaultInstance()) {
/*       */           return this;
/*       */         }
/*       */         if (other.hasS2CCode()) {
/*       */           setS2CCode(other.getS2CCode());
/*       */         }
/*       */         if (other.hasS2CMsg()) {
/*       */           this.bitField0_ |= 0x2;
/*       */           this.s2CMsg_ = other.s2CMsg_;
/*       */           onChanged();
/*       */         } 
/*       */         if (other.hasS2CBlessInfo()) {
/*       */           mergeS2CBlessInfo(other.getS2CBlessInfo());
/*       */         }
/*       */         mergeUnknownFields(other.getUnknownFields());
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public final boolean isInitialized() {
/*       */         if (!hasS2CCode()) {
/*       */           return false;
/*       */         }
/*       */         if (hasS2CBlessInfo() && !getS2CBlessInfo().isInitialized()) {
/*       */           return false;
/*       */         }
/*       */         return true;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         GuildManagerHandler.GetBlessInfoResponse parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (GuildManagerHandler.GetBlessInfoResponse)GuildManagerHandler.GetBlessInfoResponse.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (GuildManagerHandler.GetBlessInfoResponse)e.getUnfinishedMessage();
/*       */           throw e;
/*       */         } finally {
/*       */           if (parsedMessage != null) {
/*       */             mergeFrom(parsedMessage);
/*       */           }
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasS2CCode() {
/*       */         return ((this.bitField0_ & 0x1) == 1);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getS2CCode() {
/*       */         return this.s2CCode_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CCode(int value) {
/*       */         this.bitField0_ |= 0x1;
/*       */         this.s2CCode_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearS2CCode() {
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.s2CCode_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasS2CMsg() {
/*       */         return ((this.bitField0_ & 0x2) == 2);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getS2CMsg() {
/*       */         Object ref = this.s2CMsg_;
/*       */         if (!(ref instanceof String)) {
/*       */           ByteString bs = (ByteString)ref;
/*       */           String s = bs.toStringUtf8();
/*       */           if (bs.isValidUtf8()) {
/*       */             this.s2CMsg_ = s;
/*       */           }
/*       */           return s;
/*       */         } 
/*       */         return (String)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getS2CMsgBytes() {
/*       */         Object ref = this.s2CMsg_;
/*       */         if (ref instanceof String) {
/*       */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           this.s2CMsg_ = b;
/*       */           return b;
/*       */         } 
/*       */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CMsg(String value) {
/*       */         if (value == null) {
/*       */           throw new NullPointerException();
/*       */         }
/*       */         this.bitField0_ |= 0x2;
/*       */         this.s2CMsg_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearS2CMsg() {
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         this.s2CMsg_ = GuildManagerHandler.GetBlessInfoResponse.getDefaultInstance().getS2CMsg();
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CMsgBytes(ByteString value) {
/*       */         if (value == null) {
/*       */           throw new NullPointerException();
/*       */         }
/*       */         this.bitField0_ |= 0x2;
/*       */         this.s2CMsg_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasS2CBlessInfo() {
/*       */         return ((this.bitField0_ & 0x4) == 4);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.GuildBlessInfo getS2CBlessInfo() {
/*       */         if (this.s2CBlessInfoBuilder_ == null) {
/*       */           return this.s2CBlessInfo_;
/*       */         }
/*       */         return (GuildManagerHandler.GuildBlessInfo)this.s2CBlessInfoBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CBlessInfo(GuildManagerHandler.GuildBlessInfo value) {
/*       */         if (this.s2CBlessInfoBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           this.s2CBlessInfo_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CBlessInfoBuilder_.setMessage(value);
/*       */         } 
/*       */         this.bitField0_ |= 0x4;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setS2CBlessInfo(GuildManagerHandler.GuildBlessInfo.Builder builderForValue) {
/*       */         if (this.s2CBlessInfoBuilder_ == null) {
/*       */           this.s2CBlessInfo_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CBlessInfoBuilder_.setMessage(builderForValue.build());
/*       */         } 
/*       */         this.bitField0_ |= 0x4;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeS2CBlessInfo(GuildManagerHandler.GuildBlessInfo value) {
/*       */         if (this.s2CBlessInfoBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x4) == 4 && this.s2CBlessInfo_ != GuildManagerHandler.GuildBlessInfo.getDefaultInstance()) {
/*       */             this.s2CBlessInfo_ = GuildManagerHandler.GuildBlessInfo.newBuilder(this.s2CBlessInfo_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.s2CBlessInfo_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CBlessInfoBuilder_.mergeFrom(value);
/*       */         } 
/*       */         this.bitField0_ |= 0x4;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearS2CBlessInfo() {
/*       */         if (this.s2CBlessInfoBuilder_ == null) {
/*       */           this.s2CBlessInfo_ = GuildManagerHandler.GuildBlessInfo.getDefaultInstance();
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CBlessInfoBuilder_.clear();
/*       */         } 
/*       */         this.bitField0_ &= 0xFFFFFFFB;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.GuildBlessInfo.Builder getS2CBlessInfoBuilder() {
/*       */         this.bitField0_ |= 0x4;
/*       */         onChanged();
/*       */         return (GuildManagerHandler.GuildBlessInfo.Builder)getS2CBlessInfoFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.GuildBlessInfoOrBuilder getS2CBlessInfoOrBuilder() {
/*       */         if (this.s2CBlessInfoBuilder_ != null) {
/*       */           return (GuildManagerHandler.GuildBlessInfoOrBuilder)this.s2CBlessInfoBuilder_.getMessageOrBuilder();
/*       */         }
/*       */         return this.s2CBlessInfo_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilder<GuildManagerHandler.GuildBlessInfo, GuildManagerHandler.GuildBlessInfo.Builder, GuildManagerHandler.GuildBlessInfoOrBuilder> getS2CBlessInfoFieldBuilder() {
/*       */         if (this.s2CBlessInfoBuilder_ == null) {
/*       */           this.s2CBlessInfoBuilder_ = new SingleFieldBuilder(getS2CBlessInfo(), getParentForChildren(), isClean());
/*       */           this.s2CBlessInfo_ = null;
/*       */         } 
/*       */         return this.s2CBlessInfoBuilder_;
/*       */       }
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class GetBlessRecordResponse
/*       */     extends GeneratedMessage
/*       */     implements GetBlessRecordResponseOrBuilder
/*       */   {
/* 19558 */     private static final GetBlessRecordResponse defaultInstance = new GetBlessRecordResponse(true); private final UnknownFieldSet unknownFields; private GetBlessRecordResponse(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private GetBlessRecordResponse(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static GetBlessRecordResponse getDefaultInstance() { return defaultInstance; } public GetBlessRecordResponse getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private GetBlessRecordResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.s2CCode_ = input.readInt32(); break;case 18: bs = input.readBytes(); this.bitField0_ |= 0x2; this.s2CMsg_ = bs; break;case 26: if ((mutable_bitField0_ & 0x4) != 4) { this.s2CRecordList_ = new ArrayList<>(); mutable_bitField0_ |= 0x4; }  this.s2CRecordList_.add(input.readMessage(GuildManagerHandler.RecordInfo.PARSER, extensionRegistry)); break;case 32: this.bitField0_ |= 0x4; this.s2CPage_ = input.readInt32(); break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x4) == 4) this.s2CRecordList_ = Collections.unmodifiableList(this.s2CRecordList_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GetBlessRecordResponse_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GetBlessRecordResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GetBlessRecordResponse.class, Builder.class); } public static Parser<GetBlessRecordResponse> PARSER = (Parser<GetBlessRecordResponse>)new AbstractParser<GetBlessRecordResponse>() { public GuildManagerHandler.GetBlessRecordResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.GetBlessRecordResponse(input, extensionRegistry); } }
/* 19559 */     ; private int bitField0_; public static final int S2C_CODE_FIELD_NUMBER = 1; private int s2CCode_; public static final int S2C_MSG_FIELD_NUMBER = 2; private Object s2CMsg_; public static final int S2C_RECORDLIST_FIELD_NUMBER = 3; private List<GuildManagerHandler.RecordInfo> s2CRecordList_; public static final int S2C_PAGE_FIELD_NUMBER = 4; private int s2CPage_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<GetBlessRecordResponse> getParserForType() { return PARSER; } public boolean hasS2CCode() { return ((this.bitField0_ & 0x1) == 1); } public int getS2CCode() { return this.s2CCode_; } public boolean hasS2CMsg() { return ((this.bitField0_ & 0x2) == 2); } public String getS2CMsg() { Object ref = this.s2CMsg_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.s2CMsg_ = s;  return s; } public ByteString getS2CMsgBytes() { Object ref = this.s2CMsg_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.s2CMsg_ = b; return b; }  return (ByteString)ref; } static { defaultInstance.initFields(); }
/*       */ 
/*       */ 
/*       */     
/*       */     public List<GuildManagerHandler.RecordInfo> getS2CRecordListList() {
/*       */       return this.s2CRecordList_;
/*       */     }
/*       */ 
/*       */     
/*       */     public List<? extends GuildManagerHandler.RecordInfoOrBuilder> getS2CRecordListOrBuilderList() {
/*       */       return (List)this.s2CRecordList_;
/*       */     }
/*       */ 
/*       */     
/*       */     public int getS2CRecordListCount() {
/*       */       return this.s2CRecordList_.size();
/*       */     }
/*       */ 
/*       */     
/*       */     public GuildManagerHandler.RecordInfo getS2CRecordList(int index) {
/*       */       return this.s2CRecordList_.get(index);
/*       */     }
/*       */ 
/*       */     
/*       */     public GuildManagerHandler.RecordInfoOrBuilder getS2CRecordListOrBuilder(int index) {
/*       */       return this.s2CRecordList_.get(index);
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean hasS2CPage() {
/*       */       return ((this.bitField0_ & 0x4) == 4);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getS2CPage() {
/*       */       return this.s2CPage_;
/*       */     }
/*       */ 
/*       */     
/*       */     private void initFields() {
/*       */       this.s2CCode_ = 0;
/*       */       this.s2CMsg_ = "";
/*       */       this.s2CRecordList_ = Collections.emptyList();
/*       */       this.s2CPage_ = 0;
/*       */     }
/*       */ 
/*       */     
/*       */     public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1) {
/*       */         return true;
/*       */       }
/*       */       if (isInitialized == 0) {
/*       */         return false;
/*       */       }
/*       */       if (!hasS2CCode()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       getSerializedSize();
/*       */       if ((this.bitField0_ & 0x1) == 1) {
/*       */         output.writeInt32(1, this.s2CCode_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x2) == 2) {
/*       */         output.writeBytes(2, getS2CMsgBytes());
/*       */       }
/*       */       for (int i = 0; i < this.s2CRecordList_.size(); i++) {
/*       */         output.writeMessage(3, (MessageLite)this.s2CRecordList_.get(i));
/*       */       }
/*       */       if ((this.bitField0_ & 0x4) == 4) {
/*       */         output.writeInt32(4, this.s2CPage_);
/*       */       }
/*       */       getUnknownFields().writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/*       */       int size = this.memoizedSerializedSize;
/*       */       if (size != -1) {
/*       */         return size;
/*       */       }
/*       */       size = 0;
/*       */       if ((this.bitField0_ & 0x1) == 1) {
/*       */         size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x2) == 2) {
/*       */         size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());
/*       */       }
/*       */       for (int i = 0; i < this.s2CRecordList_.size(); i++) {
/*       */         size += CodedOutputStream.computeMessageSize(3, (MessageLite)this.s2CRecordList_.get(i));
/*       */       }
/*       */       if ((this.bitField0_ & 0x4) == 4) {
/*       */         size += CodedOutputStream.computeInt32Size(4, this.s2CPage_);
/*       */       }
/*       */       size += getUnknownFields().getSerializedSize();
/*       */       this.memoizedSerializedSize = size;
/*       */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     protected Object writeReplace() throws ObjectStreamException {
/*       */       return super.writeReplace();
/*       */     }
/*       */ 
/*       */     
/*       */     public static GetBlessRecordResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (GetBlessRecordResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */     
/*       */     public static GetBlessRecordResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (GetBlessRecordResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static GetBlessRecordResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (GetBlessRecordResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */     
/*       */     public static GetBlessRecordResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (GetBlessRecordResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static GetBlessRecordResponse parseFrom(InputStream input) throws IOException {
/*       */       return (GetBlessRecordResponse)PARSER.parseFrom(input);
/*       */     }
/*       */ 
/*       */     
/*       */     public static GetBlessRecordResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GetBlessRecordResponse)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static GetBlessRecordResponse parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (GetBlessRecordResponse)PARSER.parseDelimitedFrom(input);
/*       */     }
/*       */ 
/*       */     
/*       */     public static GetBlessRecordResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GetBlessRecordResponse)PARSER.parseDelimitedFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static GetBlessRecordResponse parseFrom(CodedInputStream input) throws IOException {
/*       */       return (GetBlessRecordResponse)PARSER.parseFrom(input);
/*       */     }
/*       */ 
/*       */     
/*       */     public static GetBlessRecordResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GetBlessRecordResponse)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static Builder newBuilder() {
/*       */       return Builder.create();
/*       */     }
/*       */ 
/*       */     
/*       */     public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     }
/*       */ 
/*       */     
/*       */     public static Builder newBuilder(GetBlessRecordResponse prototype) {
/*       */       return newBuilder().mergeFrom(prototype);
/*       */     }
/*       */ 
/*       */     
/*       */     public Builder toBuilder() {
/*       */       return newBuilder(this);
/*       */     }
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
/*       */       Builder builder = new Builder(parent);
/*       */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessage.Builder<Builder>
/*       */       implements GuildManagerHandler.GetBlessRecordResponseOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private int s2CCode_;
/*       */       
/*       */       private Object s2CMsg_;
/*       */       
/*       */       private List<GuildManagerHandler.RecordInfo> s2CRecordList_;
/*       */       private RepeatedFieldBuilder<GuildManagerHandler.RecordInfo, GuildManagerHandler.RecordInfo.Builder, GuildManagerHandler.RecordInfoOrBuilder> s2CRecordListBuilder_;
/*       */       private int s2CPage_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_GetBlessRecordResponse_descriptor;
/*       */       }
/*       */       
/*       */       protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_GetBlessRecordResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.GetBlessRecordResponse.class, Builder.class);
/*       */       }
/*       */       
/*       */       private Builder() {
/*       */         this.s2CMsg_ = "";
/*       */         this.s2CRecordList_ = Collections.emptyList();
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private Builder(GeneratedMessage.BuilderParent parent) {
/*       */         super(parent);
/*       */         this.s2CMsg_ = "";
/*       */         this.s2CRecordList_ = Collections.emptyList();
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*       */         if (GuildManagerHandler.GetBlessRecordResponse.alwaysUseFieldBuilders) {
/*       */           getS2CRecordListFieldBuilder();
/*       */         }
/*       */       }
/*       */       
/*       */       private static Builder create() {
/*       */         return new Builder();
/*       */       }
/*       */       
/*       */       public Builder clear() {
/*       */         super.clear();
/*       */         this.s2CCode_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.s2CMsg_ = "";
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           this.s2CRecordList_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFFB;
/*       */         } else {
/*       */           this.s2CRecordListBuilder_.clear();
/*       */         } 
/*       */         this.s2CPage_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFF7;
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clone() {
/*       */         return create().mergeFrom(buildPartial());
/*       */       }
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_GetBlessRecordResponse_descriptor;
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.GetBlessRecordResponse getDefaultInstanceForType() {
/*       */         return GuildManagerHandler.GetBlessRecordResponse.getDefaultInstance();
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.GetBlessRecordResponse build() {
/*       */         GuildManagerHandler.GetBlessRecordResponse result = buildPartial();
/*       */         if (!result.isInitialized()) {
/*       */           throw newUninitializedMessageException(result);
/*       */         }
/*       */         return result;
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.GetBlessRecordResponse buildPartial() {
/*       */         GuildManagerHandler.GetBlessRecordResponse result = new GuildManagerHandler.GetBlessRecordResponse(this);
/*       */         int from_bitField0_ = this.bitField0_;
/*       */         int to_bitField0_ = 0;
/*       */         if ((from_bitField0_ & 0x1) == 1) {
/*       */           to_bitField0_ |= 0x1;
/*       */         }
/*       */         result.s2CCode_ = this.s2CCode_;
/*       */         if ((from_bitField0_ & 0x2) == 2) {
/*       */           to_bitField0_ |= 0x2;
/*       */         }
/*       */         result.s2CMsg_ = this.s2CMsg_;
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x4) == 4) {
/*       */             this.s2CRecordList_ = Collections.unmodifiableList(this.s2CRecordList_);
/*       */             this.bitField0_ &= 0xFFFFFFFB;
/*       */           } 
/*       */           result.s2CRecordList_ = this.s2CRecordList_;
/*       */         } else {
/*       */           result.s2CRecordList_ = this.s2CRecordListBuilder_.build();
/*       */         } 
/*       */         if ((from_bitField0_ & 0x8) == 8) {
/*       */           to_bitField0_ |= 0x4;
/*       */         }
/*       */         result.s2CPage_ = this.s2CPage_;
/*       */         result.bitField0_ = to_bitField0_;
/*       */         onBuilt();
/*       */         return result;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*       */         if (other instanceof GuildManagerHandler.GetBlessRecordResponse) {
/*       */           return mergeFrom((GuildManagerHandler.GetBlessRecordResponse)other);
/*       */         }
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(GuildManagerHandler.GetBlessRecordResponse other) {
/*       */         if (other == GuildManagerHandler.GetBlessRecordResponse.getDefaultInstance()) {
/*       */           return this;
/*       */         }
/*       */         if (other.hasS2CCode()) {
/*       */           setS2CCode(other.getS2CCode());
/*       */         }
/*       */         if (other.hasS2CMsg()) {
/*       */           this.bitField0_ |= 0x2;
/*       */           this.s2CMsg_ = other.s2CMsg_;
/*       */           onChanged();
/*       */         } 
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           if (!other.s2CRecordList_.isEmpty()) {
/*       */             if (this.s2CRecordList_.isEmpty()) {
/*       */               this.s2CRecordList_ = other.s2CRecordList_;
/*       */               this.bitField0_ &= 0xFFFFFFFB;
/*       */             } else {
/*       */               ensureS2CRecordListIsMutable();
/*       */               this.s2CRecordList_.addAll(other.s2CRecordList_);
/*       */             } 
/*       */             onChanged();
/*       */           } 
/*       */         } else if (!other.s2CRecordList_.isEmpty()) {
/*       */           if (this.s2CRecordListBuilder_.isEmpty()) {
/*       */             this.s2CRecordListBuilder_.dispose();
/*       */             this.s2CRecordListBuilder_ = null;
/*       */             this.s2CRecordList_ = other.s2CRecordList_;
/*       */             this.bitField0_ &= 0xFFFFFFFB;
/*       */             this.s2CRecordListBuilder_ = GuildManagerHandler.GetBlessRecordResponse.alwaysUseFieldBuilders ? getS2CRecordListFieldBuilder() : null;
/*       */           } else {
/*       */             this.s2CRecordListBuilder_.addAllMessages(other.s2CRecordList_);
/*       */           } 
/*       */         } 
/*       */         if (other.hasS2CPage()) {
/*       */           setS2CPage(other.getS2CPage());
/*       */         }
/*       */         mergeUnknownFields(other.getUnknownFields());
/*       */         return this;
/*       */       }
/*       */       
/*       */       public final boolean isInitialized() {
/*       */         if (!hasS2CCode()) {
/*       */           return false;
/*       */         }
/*       */         return true;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         GuildManagerHandler.GetBlessRecordResponse parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (GuildManagerHandler.GetBlessRecordResponse)GuildManagerHandler.GetBlessRecordResponse.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (GuildManagerHandler.GetBlessRecordResponse)e.getUnfinishedMessage();
/*       */           throw e;
/*       */         } finally {
/*       */           if (parsedMessage != null) {
/*       */             mergeFrom(parsedMessage);
/*       */           }
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public boolean hasS2CCode() {
/*       */         return ((this.bitField0_ & 0x1) == 1);
/*       */       }
/*       */       
/*       */       public int getS2CCode() {
/*       */         return this.s2CCode_;
/*       */       }
/*       */       
/*       */       public Builder setS2CCode(int value) {
/*       */         this.bitField0_ |= 0x1;
/*       */         this.s2CCode_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearS2CCode() {
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.s2CCode_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public boolean hasS2CMsg() {
/*       */         return ((this.bitField0_ & 0x2) == 2);
/*       */       }
/*       */       
/*       */       public String getS2CMsg() {
/*       */         Object ref = this.s2CMsg_;
/*       */         if (!(ref instanceof String)) {
/*       */           ByteString bs = (ByteString)ref;
/*       */           String s = bs.toStringUtf8();
/*       */           if (bs.isValidUtf8()) {
/*       */             this.s2CMsg_ = s;
/*       */           }
/*       */           return s;
/*       */         } 
/*       */         return (String)ref;
/*       */       }
/*       */       
/*       */       public ByteString getS2CMsgBytes() {
/*       */         Object ref = this.s2CMsg_;
/*       */         if (ref instanceof String) {
/*       */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           this.s2CMsg_ = b;
/*       */           return b;
/*       */         } 
/*       */         return (ByteString)ref;
/*       */       }
/*       */       
/*       */       public Builder setS2CMsg(String value) {
/*       */         if (value == null) {
/*       */           throw new NullPointerException();
/*       */         }
/*       */         this.bitField0_ |= 0x2;
/*       */         this.s2CMsg_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearS2CMsg() {
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         this.s2CMsg_ = GuildManagerHandler.GetBlessRecordResponse.getDefaultInstance().getS2CMsg();
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setS2CMsgBytes(ByteString value) {
/*       */         if (value == null) {
/*       */           throw new NullPointerException();
/*       */         }
/*       */         this.bitField0_ |= 0x2;
/*       */         this.s2CMsg_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       private void ensureS2CRecordListIsMutable() {
/*       */         if ((this.bitField0_ & 0x4) != 4) {
/*       */           this.s2CRecordList_ = new ArrayList<>(this.s2CRecordList_);
/*       */           this.bitField0_ |= 0x4;
/*       */         } 
/*       */       }
/*       */       
/*       */       public List<GuildManagerHandler.RecordInfo> getS2CRecordListList() {
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           return Collections.unmodifiableList(this.s2CRecordList_);
/*       */         }
/*       */         return this.s2CRecordListBuilder_.getMessageList();
/*       */       }
/*       */       
/*       */       public int getS2CRecordListCount() {
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           return this.s2CRecordList_.size();
/*       */         }
/*       */         return this.s2CRecordListBuilder_.getCount();
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.RecordInfo getS2CRecordList(int index) {
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           return this.s2CRecordList_.get(index);
/*       */         }
/*       */         return (GuildManagerHandler.RecordInfo)this.s2CRecordListBuilder_.getMessage(index);
/*       */       }
/*       */       
/*       */       public Builder setS2CRecordList(int index, GuildManagerHandler.RecordInfo value) {
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           ensureS2CRecordListIsMutable();
/*       */           this.s2CRecordList_.set(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CRecordListBuilder_.setMessage(index, value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setS2CRecordList(int index, GuildManagerHandler.RecordInfo.Builder builderForValue) {
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           ensureS2CRecordListIsMutable();
/*       */           this.s2CRecordList_.set(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CRecordListBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addS2CRecordList(GuildManagerHandler.RecordInfo value) {
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           ensureS2CRecordListIsMutable();
/*       */           this.s2CRecordList_.add(value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CRecordListBuilder_.addMessage(value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addS2CRecordList(int index, GuildManagerHandler.RecordInfo value) {
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           ensureS2CRecordListIsMutable();
/*       */           this.s2CRecordList_.add(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CRecordListBuilder_.addMessage(index, value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addS2CRecordList(GuildManagerHandler.RecordInfo.Builder builderForValue) {
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           ensureS2CRecordListIsMutable();
/*       */           this.s2CRecordList_.add(builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CRecordListBuilder_.addMessage(builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addS2CRecordList(int index, GuildManagerHandler.RecordInfo.Builder builderForValue) {
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           ensureS2CRecordListIsMutable();
/*       */           this.s2CRecordList_.add(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CRecordListBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addAllS2CRecordList(Iterable<? extends GuildManagerHandler.RecordInfo> values) {
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           ensureS2CRecordListIsMutable();
/*       */           AbstractMessageLite.Builder.addAll(values, this.s2CRecordList_);
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CRecordListBuilder_.addAllMessages(values);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearS2CRecordList() {
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           this.s2CRecordList_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFFB;
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CRecordListBuilder_.clear();
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder removeS2CRecordList(int index) {
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           ensureS2CRecordListIsMutable();
/*       */           this.s2CRecordList_.remove(index);
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CRecordListBuilder_.remove(index);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.RecordInfo.Builder getS2CRecordListBuilder(int index) {
/*       */         return (GuildManagerHandler.RecordInfo.Builder)getS2CRecordListFieldBuilder().getBuilder(index);
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.RecordInfoOrBuilder getS2CRecordListOrBuilder(int index) {
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           return this.s2CRecordList_.get(index);
/*       */         }
/*       */         return (GuildManagerHandler.RecordInfoOrBuilder)this.s2CRecordListBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */       
/*       */       public List<? extends GuildManagerHandler.RecordInfoOrBuilder> getS2CRecordListOrBuilderList() {
/*       */         if (this.s2CRecordListBuilder_ != null) {
/*       */           return this.s2CRecordListBuilder_.getMessageOrBuilderList();
/*       */         }
/*       */         return Collections.unmodifiableList((List)this.s2CRecordList_);
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.RecordInfo.Builder addS2CRecordListBuilder() {
/*       */         return (GuildManagerHandler.RecordInfo.Builder)getS2CRecordListFieldBuilder().addBuilder(GuildManagerHandler.RecordInfo.getDefaultInstance());
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.RecordInfo.Builder addS2CRecordListBuilder(int index) {
/*       */         return (GuildManagerHandler.RecordInfo.Builder)getS2CRecordListFieldBuilder().addBuilder(index, GuildManagerHandler.RecordInfo.getDefaultInstance());
/*       */       }
/*       */       
/*       */       public List<GuildManagerHandler.RecordInfo.Builder> getS2CRecordListBuilderList() {
/*       */         return getS2CRecordListFieldBuilder().getBuilderList();
/*       */       }
/*       */       
/*       */       private RepeatedFieldBuilder<GuildManagerHandler.RecordInfo, GuildManagerHandler.RecordInfo.Builder, GuildManagerHandler.RecordInfoOrBuilder> getS2CRecordListFieldBuilder() {
/*       */         if (this.s2CRecordListBuilder_ == null) {
/*       */           this.s2CRecordListBuilder_ = new RepeatedFieldBuilder(this.s2CRecordList_, ((this.bitField0_ & 0x4) == 4), getParentForChildren(), isClean());
/*       */           this.s2CRecordList_ = null;
/*       */         } 
/*       */         return this.s2CRecordListBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasS2CPage() {
/*       */         return ((this.bitField0_ & 0x8) == 8);
/*       */       }
/*       */       
/*       */       public int getS2CPage() {
/*       */         return this.s2CPage_;
/*       */       }
/*       */       
/*       */       public Builder setS2CPage(int value) {
/*       */         this.bitField0_ |= 0x8;
/*       */         this.s2CPage_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearS2CPage() {
/*       */         this.bitField0_ &= 0xFFFFFFF7;
/*       */         this.s2CPage_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */     }
/*       */   }
/*       */   
/*       */   public static final class BuildingLevel
/*       */     extends GeneratedMessage
/*       */     implements BuildingLevelOrBuilder
/*       */   {
/* 20207 */     private static final BuildingLevel defaultInstance = new BuildingLevel(true); private final UnknownFieldSet unknownFields; private BuildingLevel(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private BuildingLevel(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static BuildingLevel getDefaultInstance() { return defaultInstance; } public BuildingLevel getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private BuildingLevel(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.depotLevel_ = input.readInt32(); break;case 16: this.bitField0_ |= 0x2; this.blessLevel_ = input.readInt32(); break;case 24: this.bitField0_ |= 0x4; this.techLevel_ = input.readInt32(); break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_BuildingLevel_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_BuildingLevel_fieldAccessorTable.ensureFieldAccessorsInitialized(BuildingLevel.class, Builder.class); } public static Parser<BuildingLevel> PARSER = (Parser<BuildingLevel>)new AbstractParser<BuildingLevel>() { public GuildManagerHandler.BuildingLevel parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.BuildingLevel(input, extensionRegistry); } }; private int bitField0_; public static final int DEPOTLEVEL_FIELD_NUMBER = 1; private int depotLevel_; public static final int BLESSLEVEL_FIELD_NUMBER = 2; private int blessLevel_; public static final int TECHLEVEL_FIELD_NUMBER = 3; private int techLevel_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<BuildingLevel> getParserForType() { return PARSER; } public boolean hasDepotLevel() { return ((this.bitField0_ & 0x1) == 1); } public int getDepotLevel() { return this.depotLevel_; } public boolean hasBlessLevel() { return ((this.bitField0_ & 0x2) == 2); } public int getBlessLevel() { return this.blessLevel_; } public boolean hasTechLevel() { return ((this.bitField0_ & 0x4) == 4); } public int getTechLevel() { return this.techLevel_; } private void initFields() { this.depotLevel_ = 0; this.blessLevel_ = 0; this.techLevel_ = 0; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.depotLevel_);  if ((this.bitField0_ & 0x2) == 2) output.writeInt32(2, this.blessLevel_);  if ((this.bitField0_ & 0x4) == 4) output.writeInt32(3, this.techLevel_);  getUnknownFields().writeTo(output); } public int getSerializedSize() { int size = this.memoizedSerializedSize; if (size != -1) return size;  size = 0; if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.depotLevel_);  if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeInt32Size(2, this.blessLevel_);  if ((this.bitField0_ & 0x4) == 4) size += CodedOutputStream.computeInt32Size(3, this.techLevel_);  size += getUnknownFields().getSerializedSize(); this.memoizedSerializedSize = size; return size; } protected Object writeReplace() throws ObjectStreamException { return super.writeReplace(); } public static BuildingLevel parseFrom(ByteString data) throws InvalidProtocolBufferException { return (BuildingLevel)PARSER.parseFrom(data); } public static BuildingLevel parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (BuildingLevel)PARSER.parseFrom(data, extensionRegistry); } public static BuildingLevel parseFrom(byte[] data) throws InvalidProtocolBufferException { return (BuildingLevel)PARSER.parseFrom(data); } public static BuildingLevel parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (BuildingLevel)PARSER.parseFrom(data, extensionRegistry); } public static BuildingLevel parseFrom(InputStream input) throws IOException { return (BuildingLevel)PARSER.parseFrom(input); } public static BuildingLevel parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (BuildingLevel)PARSER.parseFrom(input, extensionRegistry); } public static BuildingLevel parseDelimitedFrom(InputStream input) throws IOException { return (BuildingLevel)PARSER.parseDelimitedFrom(input); } public static BuildingLevel parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (BuildingLevel)PARSER.parseDelimitedFrom(input, extensionRegistry); } public static BuildingLevel parseFrom(CodedInputStream input) throws IOException { return (BuildingLevel)PARSER.parseFrom(input); } public static BuildingLevel parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (BuildingLevel)PARSER.parseFrom(input, extensionRegistry); } public static Builder newBuilder() { return Builder.create(); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder(BuildingLevel prototype) { return newBuilder().mergeFrom(prototype); } public Builder toBuilder() { return newBuilder(this); } protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.BuildingLevelOrBuilder {
/* 20208 */       private int bitField0_; private int depotLevel_; private int blessLevel_; private int techLevel_; public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_BuildingLevel_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_BuildingLevel_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.BuildingLevel.class, Builder.class); } private Builder() { maybeForceBuilderInitialization(); } private Builder(GeneratedMessage.BuilderParent parent) { super(parent); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GuildManagerHandler.BuildingLevel.alwaysUseFieldBuilders); } private static Builder create() { return new Builder(); } public Builder clear() { super.clear(); this.depotLevel_ = 0; this.bitField0_ &= 0xFFFFFFFE; this.blessLevel_ = 0; this.bitField0_ &= 0xFFFFFFFD; this.techLevel_ = 0; this.bitField0_ &= 0xFFFFFFFB; return this; } public Builder clone() { return create().mergeFrom(buildPartial()); } public Descriptors.Descriptor getDescriptorForType() { return GuildManagerHandler.internal_static_pomelo_guild_BuildingLevel_descriptor; } public GuildManagerHandler.BuildingLevel getDefaultInstanceForType() { return GuildManagerHandler.BuildingLevel.getDefaultInstance(); } public GuildManagerHandler.BuildingLevel build() { GuildManagerHandler.BuildingLevel result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public GuildManagerHandler.BuildingLevel buildPartial() { GuildManagerHandler.BuildingLevel result = new GuildManagerHandler.BuildingLevel(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;  result.depotLevel_ = this.depotLevel_; if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;  result.blessLevel_ = this.blessLevel_; if ((from_bitField0_ & 0x4) == 4) to_bitField0_ |= 0x4;  result.techLevel_ = this.techLevel_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder mergeFrom(Message other) { if (other instanceof GuildManagerHandler.BuildingLevel) return mergeFrom((GuildManagerHandler.BuildingLevel)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(GuildManagerHandler.BuildingLevel other) { if (other == GuildManagerHandler.BuildingLevel.getDefaultInstance()) return this;  if (other.hasDepotLevel()) setDepotLevel(other.getDepotLevel());  if (other.hasBlessLevel()) setBlessLevel(other.getBlessLevel());  if (other.hasTechLevel()) setTechLevel(other.getTechLevel());  mergeUnknownFields(other.getUnknownFields()); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { GuildManagerHandler.BuildingLevel parsedMessage = null; try { parsedMessage = (GuildManagerHandler.BuildingLevel)GuildManagerHandler.BuildingLevel.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (GuildManagerHandler.BuildingLevel)e.getUnfinishedMessage(); throw e; } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasDepotLevel() { return ((this.bitField0_ & 0x1) == 1); } public int getDepotLevel() { return this.depotLevel_; } public Builder setDepotLevel(int value) { this.bitField0_ |= 0x1; this.depotLevel_ = value; onChanged(); return this; } public Builder clearDepotLevel() { this.bitField0_ &= 0xFFFFFFFE; this.depotLevel_ = 0; onChanged(); return this; } public boolean hasBlessLevel() { return ((this.bitField0_ & 0x2) == 2); } public int getBlessLevel() { return this.blessLevel_; } public Builder setBlessLevel(int value) { this.bitField0_ |= 0x2; this.blessLevel_ = value; onChanged(); return this; } public Builder clearBlessLevel() { this.bitField0_ &= 0xFFFFFFFD; this.blessLevel_ = 0; onChanged(); return this; } public boolean hasTechLevel() { return ((this.bitField0_ & 0x4) == 4); } public int getTechLevel() { return this.techLevel_; } public Builder setTechLevel(int value) { this.bitField0_ |= 0x4; this.techLevel_ = value; onChanged(); return this; } public Builder clearTechLevel() { this.bitField0_ &= 0xFFFFFFFB; this.techLevel_ = 0; onChanged(); return this; } } static { defaultInstance.initFields(); }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class GetBuildingLevelResponse
/*       */     extends GeneratedMessage
/*       */     implements GetBuildingLevelResponseOrBuilder
/*       */   {
/* 21018 */     private static final GetBuildingLevelResponse defaultInstance = new GetBuildingLevelResponse(true); private final UnknownFieldSet unknownFields; private GetBuildingLevelResponse(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private GetBuildingLevelResponse(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static GetBuildingLevelResponse getDefaultInstance() { return defaultInstance; } public GetBuildingLevelResponse getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private GetBuildingLevelResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; GuildManagerHandler.BuildingLevel.Builder subBuilder; int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.s2CCode_ = input.readInt32(); break;case 18: bs = input.readBytes(); this.bitField0_ |= 0x2; this.s2CMsg_ = bs; break;case 26: subBuilder = null; if ((this.bitField0_ & 0x4) == 4) subBuilder = this.s2CLevelInfo_.toBuilder();  this.s2CLevelInfo_ = (GuildManagerHandler.BuildingLevel)input.readMessage(GuildManagerHandler.BuildingLevel.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.s2CLevelInfo_); this.s2CLevelInfo_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x4; break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GetBuildingLevelResponse_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GetBuildingLevelResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GetBuildingLevelResponse.class, Builder.class); } public static Parser<GetBuildingLevelResponse> PARSER = (Parser<GetBuildingLevelResponse>)new AbstractParser<GetBuildingLevelResponse>() { public GuildManagerHandler.GetBuildingLevelResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.GetBuildingLevelResponse(input, extensionRegistry); } }; private int bitField0_; public static final int S2C_CODE_FIELD_NUMBER = 1; private int s2CCode_; public static final int S2C_MSG_FIELD_NUMBER = 2; private Object s2CMsg_; public static final int S2C_LEVELINFO_FIELD_NUMBER = 3; private GuildManagerHandler.BuildingLevel s2CLevelInfo_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<GetBuildingLevelResponse> getParserForType() { return PARSER; } public boolean hasS2CCode() { return ((this.bitField0_ & 0x1) == 1); } public int getS2CCode() { return this.s2CCode_; } public boolean hasS2CMsg() { return ((this.bitField0_ & 0x2) == 2); } public String getS2CMsg() { Object ref = this.s2CMsg_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.s2CMsg_ = s;  return s; } public ByteString getS2CMsgBytes() { Object ref = this.s2CMsg_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.s2CMsg_ = b; return b; }  return (ByteString)ref; } public boolean hasS2CLevelInfo() { return ((this.bitField0_ & 0x4) == 4); } public GuildManagerHandler.BuildingLevel getS2CLevelInfo() { return this.s2CLevelInfo_; } public GuildManagerHandler.BuildingLevelOrBuilder getS2CLevelInfoOrBuilder() { return this.s2CLevelInfo_; } private void initFields() { this.s2CCode_ = 0; this.s2CMsg_ = ""; this.s2CLevelInfo_ = GuildManagerHandler.BuildingLevel.getDefaultInstance(); } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  if (!hasS2CCode()) { this.memoizedIsInitialized = 0; return false; }  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);  if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());  if ((this.bitField0_ & 0x4) == 4) output.writeMessage(3, (MessageLite)this.s2CLevelInfo_);  getUnknownFields().writeTo(output); } public int getSerializedSize() { int size = this.memoizedSerializedSize; if (size != -1) return size;  size = 0; if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);  if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());  if ((this.bitField0_ & 0x4) == 4) size += CodedOutputStream.computeMessageSize(3, (MessageLite)this.s2CLevelInfo_);  size += getUnknownFields().getSerializedSize(); this.memoizedSerializedSize = size; return size; } protected Object writeReplace() throws ObjectStreamException { return super.writeReplace(); } public static GetBuildingLevelResponse parseFrom(ByteString data) throws InvalidProtocolBufferException { return (GetBuildingLevelResponse)PARSER.parseFrom(data); } public static GetBuildingLevelResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (GetBuildingLevelResponse)PARSER.parseFrom(data, extensionRegistry); } public static GetBuildingLevelResponse parseFrom(byte[] data) throws InvalidProtocolBufferException { return (GetBuildingLevelResponse)PARSER.parseFrom(data); } public static GetBuildingLevelResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (GetBuildingLevelResponse)PARSER.parseFrom(data, extensionRegistry); } public static GetBuildingLevelResponse parseFrom(InputStream input) throws IOException { return (GetBuildingLevelResponse)PARSER.parseFrom(input); } public static GetBuildingLevelResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetBuildingLevelResponse)PARSER.parseFrom(input, extensionRegistry); } public static GetBuildingLevelResponse parseDelimitedFrom(InputStream input) throws IOException { return (GetBuildingLevelResponse)PARSER.parseDelimitedFrom(input); } public static GetBuildingLevelResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetBuildingLevelResponse)PARSER.parseDelimitedFrom(input, extensionRegistry); } public static GetBuildingLevelResponse parseFrom(CodedInputStream input) throws IOException { return (GetBuildingLevelResponse)PARSER.parseFrom(input); } public static GetBuildingLevelResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetBuildingLevelResponse)PARSER.parseFrom(input, extensionRegistry); } public static Builder newBuilder() { return Builder.create(); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder(GetBuildingLevelResponse prototype) { return newBuilder().mergeFrom(prototype); } public Builder toBuilder() { return newBuilder(this); } protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.GetBuildingLevelResponseOrBuilder {
/* 21019 */       private int bitField0_; private int s2CCode_; private Object s2CMsg_; private GuildManagerHandler.BuildingLevel s2CLevelInfo_; private SingleFieldBuilder<GuildManagerHandler.BuildingLevel, GuildManagerHandler.BuildingLevel.Builder, GuildManagerHandler.BuildingLevelOrBuilder> s2CLevelInfoBuilder_; public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GetBuildingLevelResponse_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GetBuildingLevelResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.GetBuildingLevelResponse.class, Builder.class); } private Builder() { this.s2CMsg_ = ""; this.s2CLevelInfo_ = GuildManagerHandler.BuildingLevel.getDefaultInstance(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessage.BuilderParent parent) { super(parent); this.s2CMsg_ = ""; this.s2CLevelInfo_ = GuildManagerHandler.BuildingLevel.getDefaultInstance(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GuildManagerHandler.GetBuildingLevelResponse.alwaysUseFieldBuilders) getS2CLevelInfoFieldBuilder();  } private static Builder create() { return new Builder(); } public Builder clear() { super.clear(); this.s2CCode_ = 0; this.bitField0_ &= 0xFFFFFFFE; this.s2CMsg_ = ""; this.bitField0_ &= 0xFFFFFFFD; if (this.s2CLevelInfoBuilder_ == null) { this.s2CLevelInfo_ = GuildManagerHandler.BuildingLevel.getDefaultInstance(); } else { this.s2CLevelInfoBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFFFB; return this; } public Builder clone() { return create().mergeFrom(buildPartial()); } public Descriptors.Descriptor getDescriptorForType() { return GuildManagerHandler.internal_static_pomelo_guild_GetBuildingLevelResponse_descriptor; } public GuildManagerHandler.GetBuildingLevelResponse getDefaultInstanceForType() { return GuildManagerHandler.GetBuildingLevelResponse.getDefaultInstance(); } public GuildManagerHandler.GetBuildingLevelResponse build() { GuildManagerHandler.GetBuildingLevelResponse result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public GuildManagerHandler.GetBuildingLevelResponse buildPartial() { GuildManagerHandler.GetBuildingLevelResponse result = new GuildManagerHandler.GetBuildingLevelResponse(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;  result.s2CCode_ = this.s2CCode_; if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;  result.s2CMsg_ = this.s2CMsg_; if ((from_bitField0_ & 0x4) == 4) to_bitField0_ |= 0x4;  if (this.s2CLevelInfoBuilder_ == null) { result.s2CLevelInfo_ = this.s2CLevelInfo_; } else { result.s2CLevelInfo_ = (GuildManagerHandler.BuildingLevel)this.s2CLevelInfoBuilder_.build(); }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder mergeFrom(Message other) { if (other instanceof GuildManagerHandler.GetBuildingLevelResponse) return mergeFrom((GuildManagerHandler.GetBuildingLevelResponse)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(GuildManagerHandler.GetBuildingLevelResponse other) { if (other == GuildManagerHandler.GetBuildingLevelResponse.getDefaultInstance()) return this;  if (other.hasS2CCode()) setS2CCode(other.getS2CCode());  if (other.hasS2CMsg()) { this.bitField0_ |= 0x2; this.s2CMsg_ = other.s2CMsg_; onChanged(); }  if (other.hasS2CLevelInfo()) mergeS2CLevelInfo(other.getS2CLevelInfo());  mergeUnknownFields(other.getUnknownFields()); return this; } public final boolean isInitialized() { if (!hasS2CCode()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { GuildManagerHandler.GetBuildingLevelResponse parsedMessage = null; try { parsedMessage = (GuildManagerHandler.GetBuildingLevelResponse)GuildManagerHandler.GetBuildingLevelResponse.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (GuildManagerHandler.GetBuildingLevelResponse)e.getUnfinishedMessage(); throw e; } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasS2CCode() { return ((this.bitField0_ & 0x1) == 1); } public int getS2CCode() { return this.s2CCode_; } public Builder setS2CCode(int value) { this.bitField0_ |= 0x1; this.s2CCode_ = value; onChanged(); return this; } public Builder clearS2CCode() { this.bitField0_ &= 0xFFFFFFFE; this.s2CCode_ = 0; onChanged(); return this; } public boolean hasS2CMsg() { return ((this.bitField0_ & 0x2) == 2); } public String getS2CMsg() { Object ref = this.s2CMsg_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.s2CMsg_ = s;  return s; }  return (String)ref; } public ByteString getS2CMsgBytes() { Object ref = this.s2CMsg_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.s2CMsg_ = b; return b; }  return (ByteString)ref; } public Builder setS2CMsg(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.s2CMsg_ = value; onChanged(); return this; } public Builder clearS2CMsg() { this.bitField0_ &= 0xFFFFFFFD; this.s2CMsg_ = GuildManagerHandler.GetBuildingLevelResponse.getDefaultInstance().getS2CMsg(); onChanged(); return this; } public Builder setS2CMsgBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.s2CMsg_ = value; onChanged(); return this; } public boolean hasS2CLevelInfo() { return ((this.bitField0_ & 0x4) == 4); } public GuildManagerHandler.BuildingLevel getS2CLevelInfo() { if (this.s2CLevelInfoBuilder_ == null) return this.s2CLevelInfo_;  return (GuildManagerHandler.BuildingLevel)this.s2CLevelInfoBuilder_.getMessage(); } public Builder setS2CLevelInfo(GuildManagerHandler.BuildingLevel value) { if (this.s2CLevelInfoBuilder_ == null) { if (value == null) throw new NullPointerException();  this.s2CLevelInfo_ = value; onChanged(); } else { this.s2CLevelInfoBuilder_.setMessage(value); }  this.bitField0_ |= 0x4; return this; } public Builder setS2CLevelInfo(GuildManagerHandler.BuildingLevel.Builder builderForValue) { if (this.s2CLevelInfoBuilder_ == null) { this.s2CLevelInfo_ = builderForValue.build(); onChanged(); } else { this.s2CLevelInfoBuilder_.setMessage(builderForValue.build()); }  this.bitField0_ |= 0x4; return this; } public Builder mergeS2CLevelInfo(GuildManagerHandler.BuildingLevel value) { if (this.s2CLevelInfoBuilder_ == null) { if ((this.bitField0_ & 0x4) == 4 && this.s2CLevelInfo_ != GuildManagerHandler.BuildingLevel.getDefaultInstance()) { this.s2CLevelInfo_ = GuildManagerHandler.BuildingLevel.newBuilder(this.s2CLevelInfo_).mergeFrom(value).buildPartial(); } else { this.s2CLevelInfo_ = value; }  onChanged(); } else { this.s2CLevelInfoBuilder_.mergeFrom(value); }  this.bitField0_ |= 0x4; return this; } public Builder clearS2CLevelInfo() { if (this.s2CLevelInfoBuilder_ == null) { this.s2CLevelInfo_ = GuildManagerHandler.BuildingLevel.getDefaultInstance(); onChanged(); } else { this.s2CLevelInfoBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFFFB; return this; } public GuildManagerHandler.BuildingLevel.Builder getS2CLevelInfoBuilder() { this.bitField0_ |= 0x4; onChanged(); return (GuildManagerHandler.BuildingLevel.Builder)getS2CLevelInfoFieldBuilder().getBuilder(); } public GuildManagerHandler.BuildingLevelOrBuilder getS2CLevelInfoOrBuilder() { if (this.s2CLevelInfoBuilder_ != null) return (GuildManagerHandler.BuildingLevelOrBuilder)this.s2CLevelInfoBuilder_.getMessageOrBuilder();  return this.s2CLevelInfo_; } private SingleFieldBuilder<GuildManagerHandler.BuildingLevel, GuildManagerHandler.BuildingLevel.Builder, GuildManagerHandler.BuildingLevelOrBuilder> getS2CLevelInfoFieldBuilder() { if (this.s2CLevelInfoBuilder_ == null) { this.s2CLevelInfoBuilder_ = new SingleFieldBuilder(getS2CLevelInfo(), getParentForChildren(), isClean()); this.s2CLevelInfo_ = null; }  return this.s2CLevelInfoBuilder_; } } static { defaultInstance.initFields(); }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class OpenGuildDungeonRequest
/*       */     extends GeneratedMessage
/*       */     implements OpenGuildDungeonRequestOrBuilder
/*       */   {
/* 21331 */     private static final OpenGuildDungeonRequest defaultInstance = new OpenGuildDungeonRequest(true); private final UnknownFieldSet unknownFields; private OpenGuildDungeonRequest(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private OpenGuildDungeonRequest(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static OpenGuildDungeonRequest getDefaultInstance() { return defaultInstance; } public OpenGuildDungeonRequest getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private OpenGuildDungeonRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_OpenGuildDungeonRequest_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_OpenGuildDungeonRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(OpenGuildDungeonRequest.class, Builder.class); } public static Parser<OpenGuildDungeonRequest> PARSER = (Parser<OpenGuildDungeonRequest>)new AbstractParser<OpenGuildDungeonRequest>() { public GuildManagerHandler.OpenGuildDungeonRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.OpenGuildDungeonRequest(input, extensionRegistry); } }; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<OpenGuildDungeonRequest> getParserForType() { return PARSER; } private void initFields() {} public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); getUnknownFields().writeTo(output); } public int getSerializedSize() { int size = this.memoizedSerializedSize; if (size != -1) return size;  size = 0; size += getUnknownFields().getSerializedSize(); this.memoizedSerializedSize = size; return size; } protected Object writeReplace() throws ObjectStreamException { return super.writeReplace(); } public static OpenGuildDungeonRequest parseFrom(ByteString data) throws InvalidProtocolBufferException { return (OpenGuildDungeonRequest)PARSER.parseFrom(data); } public static OpenGuildDungeonRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (OpenGuildDungeonRequest)PARSER.parseFrom(data, extensionRegistry); } public static OpenGuildDungeonRequest parseFrom(byte[] data) throws InvalidProtocolBufferException { return (OpenGuildDungeonRequest)PARSER.parseFrom(data); } public static OpenGuildDungeonRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (OpenGuildDungeonRequest)PARSER.parseFrom(data, extensionRegistry); } public static OpenGuildDungeonRequest parseFrom(InputStream input) throws IOException { return (OpenGuildDungeonRequest)PARSER.parseFrom(input); } public static OpenGuildDungeonRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (OpenGuildDungeonRequest)PARSER.parseFrom(input, extensionRegistry); } public static OpenGuildDungeonRequest parseDelimitedFrom(InputStream input) throws IOException { return (OpenGuildDungeonRequest)PARSER.parseDelimitedFrom(input); } public static OpenGuildDungeonRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (OpenGuildDungeonRequest)PARSER.parseDelimitedFrom(input, extensionRegistry); } public static OpenGuildDungeonRequest parseFrom(CodedInputStream input) throws IOException { return (OpenGuildDungeonRequest)PARSER.parseFrom(input); } public static OpenGuildDungeonRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (OpenGuildDungeonRequest)PARSER.parseFrom(input, extensionRegistry); } public static Builder newBuilder() { return Builder.create(); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder(OpenGuildDungeonRequest prototype) { return newBuilder().mergeFrom(prototype); } public Builder toBuilder() { return newBuilder(this); } protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.OpenGuildDungeonRequestOrBuilder {
/* 21332 */       public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_OpenGuildDungeonRequest_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_OpenGuildDungeonRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.OpenGuildDungeonRequest.class, Builder.class); } private Builder() { maybeForceBuilderInitialization(); } private Builder(GeneratedMessage.BuilderParent parent) { super(parent); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GuildManagerHandler.OpenGuildDungeonRequest.alwaysUseFieldBuilders); } private static Builder create() { return new Builder(); } public Builder clear() { super.clear(); return this; } public Builder clone() { return create().mergeFrom(buildPartial()); } public Descriptors.Descriptor getDescriptorForType() { return GuildManagerHandler.internal_static_pomelo_guild_OpenGuildDungeonRequest_descriptor; } public GuildManagerHandler.OpenGuildDungeonRequest getDefaultInstanceForType() { return GuildManagerHandler.OpenGuildDungeonRequest.getDefaultInstance(); } public GuildManagerHandler.OpenGuildDungeonRequest build() { GuildManagerHandler.OpenGuildDungeonRequest result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public GuildManagerHandler.OpenGuildDungeonRequest buildPartial() { GuildManagerHandler.OpenGuildDungeonRequest result = new GuildManagerHandler.OpenGuildDungeonRequest(this); onBuilt(); return result; } public Builder mergeFrom(Message other) { if (other instanceof GuildManagerHandler.OpenGuildDungeonRequest) return mergeFrom((GuildManagerHandler.OpenGuildDungeonRequest)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(GuildManagerHandler.OpenGuildDungeonRequest other) { if (other == GuildManagerHandler.OpenGuildDungeonRequest.getDefaultInstance()) return this;  mergeUnknownFields(other.getUnknownFields()); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { GuildManagerHandler.OpenGuildDungeonRequest parsedMessage = null; try { parsedMessage = (GuildManagerHandler.OpenGuildDungeonRequest)GuildManagerHandler.OpenGuildDungeonRequest.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (GuildManagerHandler.OpenGuildDungeonRequest)e.getUnfinishedMessage(); throw e; } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } } static { defaultInstance.initFields(); }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class OpenGuildDungeonResponse
/*       */     extends GeneratedMessage
/*       */     implements OpenGuildDungeonResponseOrBuilder
/*       */   {
/* 21971 */     private static final OpenGuildDungeonResponse defaultInstance = new OpenGuildDungeonResponse(true); private final UnknownFieldSet unknownFields; private OpenGuildDungeonResponse(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private OpenGuildDungeonResponse(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static OpenGuildDungeonResponse getDefaultInstance() { return defaultInstance; } public OpenGuildDungeonResponse getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private OpenGuildDungeonResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.s2CCode_ = input.readInt32(); break;case 18: bs = input.readBytes(); this.bitField0_ |= 0x2; this.s2CMsg_ = bs; break;case 24: this.bitField0_ |= 0x4; this.s2CWaitTime_ = input.readInt32(); break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_OpenGuildDungeonResponse_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_OpenGuildDungeonResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(OpenGuildDungeonResponse.class, Builder.class); } public static Parser<OpenGuildDungeonResponse> PARSER = (Parser<OpenGuildDungeonResponse>)new AbstractParser<OpenGuildDungeonResponse>() { public GuildManagerHandler.OpenGuildDungeonResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.OpenGuildDungeonResponse(input, extensionRegistry); } }; private int bitField0_; public static final int S2C_CODE_FIELD_NUMBER = 1; private int s2CCode_; public static final int S2C_MSG_FIELD_NUMBER = 2; private Object s2CMsg_; public static final int S2C_WAITTIME_FIELD_NUMBER = 3; private int s2CWaitTime_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<OpenGuildDungeonResponse> getParserForType() { return PARSER; } public boolean hasS2CCode() { return ((this.bitField0_ & 0x1) == 1); } public int getS2CCode() { return this.s2CCode_; } public boolean hasS2CMsg() { return ((this.bitField0_ & 0x2) == 2); } public String getS2CMsg() { Object ref = this.s2CMsg_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.s2CMsg_ = s;  return s; } public ByteString getS2CMsgBytes() { Object ref = this.s2CMsg_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.s2CMsg_ = b; return b; }  return (ByteString)ref; } public boolean hasS2CWaitTime() { return ((this.bitField0_ & 0x4) == 4); } public int getS2CWaitTime() { return this.s2CWaitTime_; } private void initFields() { this.s2CCode_ = 0; this.s2CMsg_ = ""; this.s2CWaitTime_ = 0; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  if (!hasS2CCode()) { this.memoizedIsInitialized = 0; return false; }  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CCode_);  if ((this.bitField0_ & 0x2) == 2) output.writeBytes(2, getS2CMsgBytes());  if ((this.bitField0_ & 0x4) == 4) output.writeInt32(3, this.s2CWaitTime_);  getUnknownFields().writeTo(output); } public int getSerializedSize() { int size = this.memoizedSerializedSize; if (size != -1) return size;  size = 0; if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);  if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());  if ((this.bitField0_ & 0x4) == 4) size += CodedOutputStream.computeInt32Size(3, this.s2CWaitTime_);  size += getUnknownFields().getSerializedSize(); this.memoizedSerializedSize = size; return size; } protected Object writeReplace() throws ObjectStreamException { return super.writeReplace(); } public static OpenGuildDungeonResponse parseFrom(ByteString data) throws InvalidProtocolBufferException { return (OpenGuildDungeonResponse)PARSER.parseFrom(data); } public static OpenGuildDungeonResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (OpenGuildDungeonResponse)PARSER.parseFrom(data, extensionRegistry); } public static OpenGuildDungeonResponse parseFrom(byte[] data) throws InvalidProtocolBufferException { return (OpenGuildDungeonResponse)PARSER.parseFrom(data); } public static OpenGuildDungeonResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (OpenGuildDungeonResponse)PARSER.parseFrom(data, extensionRegistry); } public static OpenGuildDungeonResponse parseFrom(InputStream input) throws IOException { return (OpenGuildDungeonResponse)PARSER.parseFrom(input); } public static OpenGuildDungeonResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (OpenGuildDungeonResponse)PARSER.parseFrom(input, extensionRegistry); } public static OpenGuildDungeonResponse parseDelimitedFrom(InputStream input) throws IOException { return (OpenGuildDungeonResponse)PARSER.parseDelimitedFrom(input); } public static OpenGuildDungeonResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (OpenGuildDungeonResponse)PARSER.parseDelimitedFrom(input, extensionRegistry); } public static OpenGuildDungeonResponse parseFrom(CodedInputStream input) throws IOException { return (OpenGuildDungeonResponse)PARSER.parseFrom(input); } public static OpenGuildDungeonResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (OpenGuildDungeonResponse)PARSER.parseFrom(input, extensionRegistry); } public static Builder newBuilder() { return Builder.create(); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder(OpenGuildDungeonResponse prototype) { return newBuilder().mergeFrom(prototype); } public Builder toBuilder() { return newBuilder(this); } protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.OpenGuildDungeonResponseOrBuilder {
/* 21972 */       private int bitField0_; private int s2CCode_; private Object s2CMsg_; private int s2CWaitTime_; public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_OpenGuildDungeonResponse_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_OpenGuildDungeonResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.OpenGuildDungeonResponse.class, Builder.class); } private Builder() { this.s2CMsg_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessage.BuilderParent parent) { super(parent); this.s2CMsg_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GuildManagerHandler.OpenGuildDungeonResponse.alwaysUseFieldBuilders); } private static Builder create() { return new Builder(); } public Builder clear() { super.clear(); this.s2CCode_ = 0; this.bitField0_ &= 0xFFFFFFFE; this.s2CMsg_ = ""; this.bitField0_ &= 0xFFFFFFFD; this.s2CWaitTime_ = 0; this.bitField0_ &= 0xFFFFFFFB; return this; } public Builder clone() { return create().mergeFrom(buildPartial()); } public Descriptors.Descriptor getDescriptorForType() { return GuildManagerHandler.internal_static_pomelo_guild_OpenGuildDungeonResponse_descriptor; } public GuildManagerHandler.OpenGuildDungeonResponse getDefaultInstanceForType() { return GuildManagerHandler.OpenGuildDungeonResponse.getDefaultInstance(); } public GuildManagerHandler.OpenGuildDungeonResponse build() { GuildManagerHandler.OpenGuildDungeonResponse result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public GuildManagerHandler.OpenGuildDungeonResponse buildPartial() { GuildManagerHandler.OpenGuildDungeonResponse result = new GuildManagerHandler.OpenGuildDungeonResponse(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;  result.s2CCode_ = this.s2CCode_; if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;  result.s2CMsg_ = this.s2CMsg_; if ((from_bitField0_ & 0x4) == 4) to_bitField0_ |= 0x4;  result.s2CWaitTime_ = this.s2CWaitTime_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder mergeFrom(Message other) { if (other instanceof GuildManagerHandler.OpenGuildDungeonResponse) return mergeFrom((GuildManagerHandler.OpenGuildDungeonResponse)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(GuildManagerHandler.OpenGuildDungeonResponse other) { if (other == GuildManagerHandler.OpenGuildDungeonResponse.getDefaultInstance()) return this;  if (other.hasS2CCode()) setS2CCode(other.getS2CCode());  if (other.hasS2CMsg()) { this.bitField0_ |= 0x2; this.s2CMsg_ = other.s2CMsg_; onChanged(); }  if (other.hasS2CWaitTime()) setS2CWaitTime(other.getS2CWaitTime());  mergeUnknownFields(other.getUnknownFields()); return this; } public final boolean isInitialized() { if (!hasS2CCode()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { GuildManagerHandler.OpenGuildDungeonResponse parsedMessage = null; try { parsedMessage = (GuildManagerHandler.OpenGuildDungeonResponse)GuildManagerHandler.OpenGuildDungeonResponse.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (GuildManagerHandler.OpenGuildDungeonResponse)e.getUnfinishedMessage(); throw e; } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasS2CCode() { return ((this.bitField0_ & 0x1) == 1); } public int getS2CCode() { return this.s2CCode_; } public Builder setS2CCode(int value) { this.bitField0_ |= 0x1; this.s2CCode_ = value; onChanged(); return this; } public Builder clearS2CCode() { this.bitField0_ &= 0xFFFFFFFE; this.s2CCode_ = 0; onChanged(); return this; } public boolean hasS2CMsg() { return ((this.bitField0_ & 0x2) == 2); } public String getS2CMsg() { Object ref = this.s2CMsg_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.s2CMsg_ = s;  return s; }  return (String)ref; } public ByteString getS2CMsgBytes() { Object ref = this.s2CMsg_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.s2CMsg_ = b; return b; }  return (ByteString)ref; } public Builder setS2CMsg(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.s2CMsg_ = value; onChanged(); return this; } public Builder clearS2CMsg() { this.bitField0_ &= 0xFFFFFFFD; this.s2CMsg_ = GuildManagerHandler.OpenGuildDungeonResponse.getDefaultInstance().getS2CMsg(); onChanged(); return this; } public Builder setS2CMsgBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.s2CMsg_ = value; onChanged(); return this; } public boolean hasS2CWaitTime() { return ((this.bitField0_ & 0x4) == 4); } public int getS2CWaitTime() { return this.s2CWaitTime_; } public Builder setS2CWaitTime(int value) { this.bitField0_ |= 0x4; this.s2CWaitTime_ = value; onChanged(); return this; } public Builder clearS2CWaitTime() { this.bitField0_ &= 0xFFFFFFFB; this.s2CWaitTime_ = 0; onChanged(); return this; } } static { defaultInstance.initFields(); }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class GuildDungeonListRequest
/*       */     extends GeneratedMessage
/*       */     implements GuildDungeonListRequestOrBuilder
/*       */   {
/* 22284 */     private static final GuildDungeonListRequest defaultInstance = new GuildDungeonListRequest(true); private final UnknownFieldSet unknownFields; private GuildDungeonListRequest(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private GuildDungeonListRequest(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static GuildDungeonListRequest getDefaultInstance() { return defaultInstance; } public GuildDungeonListRequest getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private GuildDungeonListRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GuildDungeonListRequest_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GuildDungeonListRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildDungeonListRequest.class, Builder.class); } public static Parser<GuildDungeonListRequest> PARSER = (Parser<GuildDungeonListRequest>)new AbstractParser<GuildDungeonListRequest>() { public GuildManagerHandler.GuildDungeonListRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.GuildDungeonListRequest(input, extensionRegistry); } }; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<GuildDungeonListRequest> getParserForType() { return PARSER; } private void initFields() {} public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); getUnknownFields().writeTo(output); } public int getSerializedSize() { int size = this.memoizedSerializedSize; if (size != -1) return size;  size = 0; size += getUnknownFields().getSerializedSize(); this.memoizedSerializedSize = size; return size; } protected Object writeReplace() throws ObjectStreamException { return super.writeReplace(); } public static GuildDungeonListRequest parseFrom(ByteString data) throws InvalidProtocolBufferException { return (GuildDungeonListRequest)PARSER.parseFrom(data); } public static GuildDungeonListRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (GuildDungeonListRequest)PARSER.parseFrom(data, extensionRegistry); } public static GuildDungeonListRequest parseFrom(byte[] data) throws InvalidProtocolBufferException { return (GuildDungeonListRequest)PARSER.parseFrom(data); } public static GuildDungeonListRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (GuildDungeonListRequest)PARSER.parseFrom(data, extensionRegistry); } public static GuildDungeonListRequest parseFrom(InputStream input) throws IOException { return (GuildDungeonListRequest)PARSER.parseFrom(input); } public static GuildDungeonListRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GuildDungeonListRequest)PARSER.parseFrom(input, extensionRegistry); } public static GuildDungeonListRequest parseDelimitedFrom(InputStream input) throws IOException { return (GuildDungeonListRequest)PARSER.parseDelimitedFrom(input); } public static GuildDungeonListRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GuildDungeonListRequest)PARSER.parseDelimitedFrom(input, extensionRegistry); } public static GuildDungeonListRequest parseFrom(CodedInputStream input) throws IOException { return (GuildDungeonListRequest)PARSER.parseFrom(input); } public static GuildDungeonListRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GuildDungeonListRequest)PARSER.parseFrom(input, extensionRegistry); } public static Builder newBuilder() { return Builder.create(); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder(GuildDungeonListRequest prototype) { return newBuilder().mergeFrom(prototype); } public Builder toBuilder() { return newBuilder(this); } protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.GuildDungeonListRequestOrBuilder {
/* 22285 */       public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GuildDungeonListRequest_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GuildDungeonListRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.GuildDungeonListRequest.class, Builder.class); } private Builder() { maybeForceBuilderInitialization(); } private Builder(GeneratedMessage.BuilderParent parent) { super(parent); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GuildManagerHandler.GuildDungeonListRequest.alwaysUseFieldBuilders); } private static Builder create() { return new Builder(); } public Builder clear() { super.clear(); return this; } public Builder clone() { return create().mergeFrom(buildPartial()); } public Descriptors.Descriptor getDescriptorForType() { return GuildManagerHandler.internal_static_pomelo_guild_GuildDungeonListRequest_descriptor; } public GuildManagerHandler.GuildDungeonListRequest getDefaultInstanceForType() { return GuildManagerHandler.GuildDungeonListRequest.getDefaultInstance(); } public GuildManagerHandler.GuildDungeonListRequest build() { GuildManagerHandler.GuildDungeonListRequest result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public GuildManagerHandler.GuildDungeonListRequest buildPartial() { GuildManagerHandler.GuildDungeonListRequest result = new GuildManagerHandler.GuildDungeonListRequest(this); onBuilt(); return result; } public Builder mergeFrom(Message other) { if (other instanceof GuildManagerHandler.GuildDungeonListRequest) return mergeFrom((GuildManagerHandler.GuildDungeonListRequest)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(GuildManagerHandler.GuildDungeonListRequest other) { if (other == GuildManagerHandler.GuildDungeonListRequest.getDefaultInstance()) return this;  mergeUnknownFields(other.getUnknownFields()); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { GuildManagerHandler.GuildDungeonListRequest parsedMessage = null; try { parsedMessage = (GuildManagerHandler.GuildDungeonListRequest)GuildManagerHandler.GuildDungeonListRequest.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (GuildManagerHandler.GuildDungeonListRequest)e.getUnfinishedMessage(); throw e; } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } } static { defaultInstance.initFields(); }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class DungeonInfo
/*       */     extends GeneratedMessage
/*       */     implements DungeonInfoOrBuilder
/*       */   {
/* 23046 */     private static final DungeonInfo defaultInstance = new DungeonInfo(true); private final UnknownFieldSet unknownFields; private DungeonInfo(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private DungeonInfo(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static DungeonInfo getDefaultInstance() { return defaultInstance; } public DungeonInfo getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private DungeonInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { PlayerOuterClass.PlayerBasic.Builder subBuilder; int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.dungeonId_ = input.readInt32(); break;case 18: subBuilder = null; if ((this.bitField0_ & 0x2) == 2) subBuilder = this.killedPlayerInfo_.toBuilder();  this.killedPlayerInfo_ = (PlayerOuterClass.PlayerBasic)input.readMessage(PlayerOuterClass.PlayerBasic.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.killedPlayerInfo_); this.killedPlayerInfo_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x2; break;case 24: this.bitField0_ |= 0x4; this.currPlayerNum_ = input.readInt32(); break;case 32: this.bitField0_ |= 0x8; this.totalPlayerNum_ = input.readInt32(); break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_DungeonInfo_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_DungeonInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(DungeonInfo.class, Builder.class); } public static Parser<DungeonInfo> PARSER = (Parser<DungeonInfo>)new AbstractParser<DungeonInfo>() { public GuildManagerHandler.DungeonInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.DungeonInfo(input, extensionRegistry); } }; private int bitField0_; public static final int DUNGEONID_FIELD_NUMBER = 1; private int dungeonId_; public static final int KILLEDPLAYERINFO_FIELD_NUMBER = 2; private PlayerOuterClass.PlayerBasic killedPlayerInfo_; public static final int CURRPLAYERNUM_FIELD_NUMBER = 3; private int currPlayerNum_; public static final int TOTALPLAYERNUM_FIELD_NUMBER = 4; private int totalPlayerNum_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<DungeonInfo> getParserForType() { return PARSER; } public boolean hasDungeonId() { return ((this.bitField0_ & 0x1) == 1); } public int getDungeonId() { return this.dungeonId_; } public boolean hasKilledPlayerInfo() { return ((this.bitField0_ & 0x2) == 2); } public PlayerOuterClass.PlayerBasic getKilledPlayerInfo() { return this.killedPlayerInfo_; } public PlayerOuterClass.PlayerBasicOrBuilder getKilledPlayerInfoOrBuilder() { return (PlayerOuterClass.PlayerBasicOrBuilder)this.killedPlayerInfo_; } public boolean hasCurrPlayerNum() { return ((this.bitField0_ & 0x4) == 4); } public int getCurrPlayerNum() { return this.currPlayerNum_; } public boolean hasTotalPlayerNum() { return ((this.bitField0_ & 0x8) == 8); } public int getTotalPlayerNum() { return this.totalPlayerNum_; } private void initFields() { this.dungeonId_ = 0; this.killedPlayerInfo_ = PlayerOuterClass.PlayerBasic.getDefaultInstance(); this.currPlayerNum_ = 0; this.totalPlayerNum_ = 0; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  if (!hasDungeonId()) { this.memoizedIsInitialized = 0; return false; }  if (hasKilledPlayerInfo() && !getKilledPlayerInfo().isInitialized()) { this.memoizedIsInitialized = 0; return false; }  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.dungeonId_);  if ((this.bitField0_ & 0x2) == 2) output.writeMessage(2, (MessageLite)this.killedPlayerInfo_);  if ((this.bitField0_ & 0x4) == 4) output.writeInt32(3, this.currPlayerNum_);  if ((this.bitField0_ & 0x8) == 8) output.writeInt32(4, this.totalPlayerNum_);  getUnknownFields().writeTo(output); } public int getSerializedSize() { int size = this.memoizedSerializedSize; if (size != -1) return size;  size = 0; if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.dungeonId_);  if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeMessageSize(2, (MessageLite)this.killedPlayerInfo_);  if ((this.bitField0_ & 0x4) == 4) size += CodedOutputStream.computeInt32Size(3, this.currPlayerNum_);  if ((this.bitField0_ & 0x8) == 8) size += CodedOutputStream.computeInt32Size(4, this.totalPlayerNum_);  size += getUnknownFields().getSerializedSize(); this.memoizedSerializedSize = size; return size; } protected Object writeReplace() throws ObjectStreamException { return super.writeReplace(); } public static DungeonInfo parseFrom(ByteString data) throws InvalidProtocolBufferException { return (DungeonInfo)PARSER.parseFrom(data); } public static DungeonInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (DungeonInfo)PARSER.parseFrom(data, extensionRegistry); } public static DungeonInfo parseFrom(byte[] data) throws InvalidProtocolBufferException { return (DungeonInfo)PARSER.parseFrom(data); } public static DungeonInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (DungeonInfo)PARSER.parseFrom(data, extensionRegistry); } public static DungeonInfo parseFrom(InputStream input) throws IOException { return (DungeonInfo)PARSER.parseFrom(input); } public static DungeonInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (DungeonInfo)PARSER.parseFrom(input, extensionRegistry); } public static DungeonInfo parseDelimitedFrom(InputStream input) throws IOException { return (DungeonInfo)PARSER.parseDelimitedFrom(input); } public static DungeonInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (DungeonInfo)PARSER.parseDelimitedFrom(input, extensionRegistry); } public static DungeonInfo parseFrom(CodedInputStream input) throws IOException { return (DungeonInfo)PARSER.parseFrom(input); } public static DungeonInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (DungeonInfo)PARSER.parseFrom(input, extensionRegistry); } public static Builder newBuilder() { return Builder.create(); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder(DungeonInfo prototype) { return newBuilder().mergeFrom(prototype); } public Builder toBuilder() { return newBuilder(this); } protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.DungeonInfoOrBuilder {
/* 23047 */       private int bitField0_; private int dungeonId_; private PlayerOuterClass.PlayerBasic killedPlayerInfo_; private SingleFieldBuilder<PlayerOuterClass.PlayerBasic, PlayerOuterClass.PlayerBasic.Builder, PlayerOuterClass.PlayerBasicOrBuilder> killedPlayerInfoBuilder_; private int currPlayerNum_; private int totalPlayerNum_; public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_DungeonInfo_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_DungeonInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.DungeonInfo.class, Builder.class); } private Builder() { this.killedPlayerInfo_ = PlayerOuterClass.PlayerBasic.getDefaultInstance(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessage.BuilderParent parent) { super(parent); this.killedPlayerInfo_ = PlayerOuterClass.PlayerBasic.getDefaultInstance(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GuildManagerHandler.DungeonInfo.alwaysUseFieldBuilders) getKilledPlayerInfoFieldBuilder();  } private static Builder create() { return new Builder(); } public Builder clear() { super.clear(); this.dungeonId_ = 0; this.bitField0_ &= 0xFFFFFFFE; if (this.killedPlayerInfoBuilder_ == null) { this.killedPlayerInfo_ = PlayerOuterClass.PlayerBasic.getDefaultInstance(); } else { this.killedPlayerInfoBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFFFD; this.currPlayerNum_ = 0; this.bitField0_ &= 0xFFFFFFFB; this.totalPlayerNum_ = 0; this.bitField0_ &= 0xFFFFFFF7; return this; } public Builder clone() { return create().mergeFrom(buildPartial()); } public Descriptors.Descriptor getDescriptorForType() { return GuildManagerHandler.internal_static_pomelo_guild_DungeonInfo_descriptor; } public GuildManagerHandler.DungeonInfo getDefaultInstanceForType() { return GuildManagerHandler.DungeonInfo.getDefaultInstance(); } public GuildManagerHandler.DungeonInfo build() { GuildManagerHandler.DungeonInfo result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public GuildManagerHandler.DungeonInfo buildPartial() { GuildManagerHandler.DungeonInfo result = new GuildManagerHandler.DungeonInfo(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;  result.dungeonId_ = this.dungeonId_; if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;  if (this.killedPlayerInfoBuilder_ == null) { result.killedPlayerInfo_ = this.killedPlayerInfo_; } else { result.killedPlayerInfo_ = (PlayerOuterClass.PlayerBasic)this.killedPlayerInfoBuilder_.build(); }  if ((from_bitField0_ & 0x4) == 4) to_bitField0_ |= 0x4;  result.currPlayerNum_ = this.currPlayerNum_; if ((from_bitField0_ & 0x8) == 8) to_bitField0_ |= 0x8;  result.totalPlayerNum_ = this.totalPlayerNum_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder mergeFrom(Message other) { if (other instanceof GuildManagerHandler.DungeonInfo) return mergeFrom((GuildManagerHandler.DungeonInfo)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(GuildManagerHandler.DungeonInfo other) { if (other == GuildManagerHandler.DungeonInfo.getDefaultInstance()) return this;  if (other.hasDungeonId()) setDungeonId(other.getDungeonId());  if (other.hasKilledPlayerInfo()) mergeKilledPlayerInfo(other.getKilledPlayerInfo());  if (other.hasCurrPlayerNum()) setCurrPlayerNum(other.getCurrPlayerNum());  if (other.hasTotalPlayerNum()) setTotalPlayerNum(other.getTotalPlayerNum());  mergeUnknownFields(other.getUnknownFields()); return this; } public final boolean isInitialized() { if (!hasDungeonId()) return false;  if (hasKilledPlayerInfo() && !getKilledPlayerInfo().isInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { GuildManagerHandler.DungeonInfo parsedMessage = null; try { parsedMessage = (GuildManagerHandler.DungeonInfo)GuildManagerHandler.DungeonInfo.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (GuildManagerHandler.DungeonInfo)e.getUnfinishedMessage(); throw e; } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasDungeonId() { return ((this.bitField0_ & 0x1) == 1); } public int getDungeonId() { return this.dungeonId_; } public Builder setDungeonId(int value) { this.bitField0_ |= 0x1; this.dungeonId_ = value; onChanged(); return this; } public Builder clearDungeonId() { this.bitField0_ &= 0xFFFFFFFE; this.dungeonId_ = 0; onChanged(); return this; } public boolean hasKilledPlayerInfo() { return ((this.bitField0_ & 0x2) == 2); } public PlayerOuterClass.PlayerBasic getKilledPlayerInfo() { if (this.killedPlayerInfoBuilder_ == null) return this.killedPlayerInfo_;  return (PlayerOuterClass.PlayerBasic)this.killedPlayerInfoBuilder_.getMessage(); } public Builder setKilledPlayerInfo(PlayerOuterClass.PlayerBasic value) { if (this.killedPlayerInfoBuilder_ == null) { if (value == null) throw new NullPointerException();  this.killedPlayerInfo_ = value; onChanged(); } else { this.killedPlayerInfoBuilder_.setMessage((GeneratedMessage)value); }  this.bitField0_ |= 0x2; return this; } public Builder setKilledPlayerInfo(PlayerOuterClass.PlayerBasic.Builder builderForValue) { if (this.killedPlayerInfoBuilder_ == null) { this.killedPlayerInfo_ = builderForValue.build(); onChanged(); } else { this.killedPlayerInfoBuilder_.setMessage((GeneratedMessage)builderForValue.build()); }  this.bitField0_ |= 0x2; return this; } public Builder mergeKilledPlayerInfo(PlayerOuterClass.PlayerBasic value) { if (this.killedPlayerInfoBuilder_ == null) { if ((this.bitField0_ & 0x2) == 2 && this.killedPlayerInfo_ != PlayerOuterClass.PlayerBasic.getDefaultInstance()) { this.killedPlayerInfo_ = PlayerOuterClass.PlayerBasic.newBuilder(this.killedPlayerInfo_).mergeFrom(value).buildPartial(); } else { this.killedPlayerInfo_ = value; }  onChanged(); } else { this.killedPlayerInfoBuilder_.mergeFrom((GeneratedMessage)value); }  this.bitField0_ |= 0x2; return this; } public Builder clearKilledPlayerInfo() { if (this.killedPlayerInfoBuilder_ == null) { this.killedPlayerInfo_ = PlayerOuterClass.PlayerBasic.getDefaultInstance(); onChanged(); } else { this.killedPlayerInfoBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFFFD; return this; } public PlayerOuterClass.PlayerBasic.Builder getKilledPlayerInfoBuilder() { this.bitField0_ |= 0x2; onChanged(); return (PlayerOuterClass.PlayerBasic.Builder)getKilledPlayerInfoFieldBuilder().getBuilder(); } public PlayerOuterClass.PlayerBasicOrBuilder getKilledPlayerInfoOrBuilder() { if (this.killedPlayerInfoBuilder_ != null) return (PlayerOuterClass.PlayerBasicOrBuilder)this.killedPlayerInfoBuilder_.getMessageOrBuilder();  return (PlayerOuterClass.PlayerBasicOrBuilder)this.killedPlayerInfo_; } private SingleFieldBuilder<PlayerOuterClass.PlayerBasic, PlayerOuterClass.PlayerBasic.Builder, PlayerOuterClass.PlayerBasicOrBuilder> getKilledPlayerInfoFieldBuilder() { if (this.killedPlayerInfoBuilder_ == null) { this.killedPlayerInfoBuilder_ = new SingleFieldBuilder((GeneratedMessage)getKilledPlayerInfo(), getParentForChildren(), isClean()); this.killedPlayerInfo_ = null; }  return this.killedPlayerInfoBuilder_; } public boolean hasCurrPlayerNum() { return ((this.bitField0_ & 0x4) == 4); } public int getCurrPlayerNum() { return this.currPlayerNum_; } public Builder setCurrPlayerNum(int value) { this.bitField0_ |= 0x4; this.currPlayerNum_ = value; onChanged(); return this; } public Builder clearCurrPlayerNum() { this.bitField0_ &= 0xFFFFFFFB; this.currPlayerNum_ = 0; onChanged(); return this; } public boolean hasTotalPlayerNum() { return ((this.bitField0_ & 0x8) == 8); } public int getTotalPlayerNum() { return this.totalPlayerNum_; } public Builder setTotalPlayerNum(int value) { this.bitField0_ |= 0x8; this.totalPlayerNum_ = value; onChanged(); return this; } public Builder clearTotalPlayerNum() { this.bitField0_ &= 0xFFFFFFF7; this.totalPlayerNum_ = 0; onChanged(); return this; } } static { defaultInstance.initFields(); }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class DungeonList
/*       */     extends GeneratedMessage
/*       */     implements DungeonListOrBuilder
/*       */   {
/* 24327 */     private static final DungeonList defaultInstance = new DungeonList(true); private final UnknownFieldSet unknownFields; private DungeonList(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private DungeonList(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static DungeonList getDefaultInstance() { return defaultInstance; } public DungeonList getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private DungeonList(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.currDungeonCount_ = input.readInt32(); break;case 16: this.bitField0_ |= 0x2; this.maxDungeonCount_ = input.readInt32(); break;case 24: this.bitField0_ |= 0x4; this.state_ = input.readInt32(); break;case 32: this.bitField0_ |= 0x8; this.time_ = input.readInt32(); break;case 40: this.bitField0_ |= 0x10; this.openTime_ = input.readInt32(); break;case 50: if ((mutable_bitField0_ & 0x20) != 32) { this.dungeonList_ = new ArrayList<>(); mutable_bitField0_ |= 0x20; }  this.dungeonList_.add(input.readMessage(GuildManagerHandler.DungeonInfo.PARSER, extensionRegistry)); break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x20) == 32) this.dungeonList_ = Collections.unmodifiableList(this.dungeonList_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_DungeonList_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_DungeonList_fieldAccessorTable.ensureFieldAccessorsInitialized(DungeonList.class, Builder.class); } public static Parser<DungeonList> PARSER = (Parser<DungeonList>)new AbstractParser<DungeonList>() { public GuildManagerHandler.DungeonList parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.DungeonList(input, extensionRegistry); } }
/* 24328 */     ; private int bitField0_; public static final int CURRDUNGEONCOUNT_FIELD_NUMBER = 1; private int currDungeonCount_; public static final int MAXDUNGEONCOUNT_FIELD_NUMBER = 2; private int maxDungeonCount_; public static final int STATE_FIELD_NUMBER = 3; private int state_; public static final int TIME_FIELD_NUMBER = 4; private int time_; public static final int OPENTIME_FIELD_NUMBER = 5; private int openTime_; public static final int DUNGEONLIST_FIELD_NUMBER = 6; private List<GuildManagerHandler.DungeonInfo> dungeonList_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<DungeonList> getParserForType() { return PARSER; } public boolean hasCurrDungeonCount() { return ((this.bitField0_ & 0x1) == 1); } public int getCurrDungeonCount() { return this.currDungeonCount_; } public boolean hasMaxDungeonCount() { return ((this.bitField0_ & 0x2) == 2); } public int getMaxDungeonCount() { return this.maxDungeonCount_; } static { defaultInstance.initFields(); }
/*       */ 
/*       */ 
/*       */     
/*       */     public boolean hasState() {
/*       */       return ((this.bitField0_ & 0x4) == 4);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getState() {
/*       */       return this.state_;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean hasTime() {
/*       */       return ((this.bitField0_ & 0x8) == 8);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getTime() {
/*       */       return this.time_;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean hasOpenTime() {
/*       */       return ((this.bitField0_ & 0x10) == 16);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getOpenTime() {
/*       */       return this.openTime_;
/*       */     }
/*       */ 
/*       */     
/*       */     public List<GuildManagerHandler.DungeonInfo> getDungeonListList() {
/*       */       return this.dungeonList_;
/*       */     }
/*       */ 
/*       */     
/*       */     public List<? extends GuildManagerHandler.DungeonInfoOrBuilder> getDungeonListOrBuilderList() {
/*       */       return (List)this.dungeonList_;
/*       */     }
/*       */ 
/*       */     
/*       */     public int getDungeonListCount() {
/*       */       return this.dungeonList_.size();
/*       */     }
/*       */ 
/*       */     
/*       */     public GuildManagerHandler.DungeonInfo getDungeonList(int index) {
/*       */       return this.dungeonList_.get(index);
/*       */     }
/*       */ 
/*       */     
/*       */     public GuildManagerHandler.DungeonInfoOrBuilder getDungeonListOrBuilder(int index) {
/*       */       return this.dungeonList_.get(index);
/*       */     }
/*       */ 
/*       */     
/*       */     private void initFields() {
/*       */       this.currDungeonCount_ = 0;
/*       */       this.maxDungeonCount_ = 0;
/*       */       this.state_ = 0;
/*       */       this.time_ = 0;
/*       */       this.openTime_ = 0;
/*       */       this.dungeonList_ = Collections.emptyList();
/*       */     }
/*       */ 
/*       */     
/*       */     public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1) {
/*       */         return true;
/*       */       }
/*       */       if (isInitialized == 0) {
/*       */         return false;
/*       */       }
/*       */       if (!hasCurrDungeonCount()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       if (!hasMaxDungeonCount()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       if (!hasState()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       if (!hasTime()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       if (!hasOpenTime()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       for (int i = 0; i < getDungeonListCount(); i++) {
/*       */         if (!getDungeonList(i).isInitialized()) {
/*       */           this.memoizedIsInitialized = 0;
/*       */           return false;
/*       */         } 
/*       */       } 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       getSerializedSize();
/*       */       if ((this.bitField0_ & 0x1) == 1) {
/*       */         output.writeInt32(1, this.currDungeonCount_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x2) == 2) {
/*       */         output.writeInt32(2, this.maxDungeonCount_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x4) == 4) {
/*       */         output.writeInt32(3, this.state_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x8) == 8) {
/*       */         output.writeInt32(4, this.time_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x10) == 16) {
/*       */         output.writeInt32(5, this.openTime_);
/*       */       }
/*       */       for (int i = 0; i < this.dungeonList_.size(); i++) {
/*       */         output.writeMessage(6, (MessageLite)this.dungeonList_.get(i));
/*       */       }
/*       */       getUnknownFields().writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/*       */       int size = this.memoizedSerializedSize;
/*       */       if (size != -1) {
/*       */         return size;
/*       */       }
/*       */       size = 0;
/*       */       if ((this.bitField0_ & 0x1) == 1) {
/*       */         size += CodedOutputStream.computeInt32Size(1, this.currDungeonCount_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x2) == 2) {
/*       */         size += CodedOutputStream.computeInt32Size(2, this.maxDungeonCount_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x4) == 4) {
/*       */         size += CodedOutputStream.computeInt32Size(3, this.state_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x8) == 8) {
/*       */         size += CodedOutputStream.computeInt32Size(4, this.time_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x10) == 16) {
/*       */         size += CodedOutputStream.computeInt32Size(5, this.openTime_);
/*       */       }
/*       */       for (int i = 0; i < this.dungeonList_.size(); i++) {
/*       */         size += CodedOutputStream.computeMessageSize(6, (MessageLite)this.dungeonList_.get(i));
/*       */       }
/*       */       size += getUnknownFields().getSerializedSize();
/*       */       this.memoizedSerializedSize = size;
/*       */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     protected Object writeReplace() throws ObjectStreamException {
/*       */       return super.writeReplace();
/*       */     }
/*       */ 
/*       */     
/*       */     public static DungeonList parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (DungeonList)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */     
/*       */     public static DungeonList parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (DungeonList)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static DungeonList parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (DungeonList)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */     
/*       */     public static DungeonList parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (DungeonList)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static DungeonList parseFrom(InputStream input) throws IOException {
/*       */       return (DungeonList)PARSER.parseFrom(input);
/*       */     }
/*       */ 
/*       */     
/*       */     public static DungeonList parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (DungeonList)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static DungeonList parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (DungeonList)PARSER.parseDelimitedFrom(input);
/*       */     }
/*       */ 
/*       */     
/*       */     public static DungeonList parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (DungeonList)PARSER.parseDelimitedFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static DungeonList parseFrom(CodedInputStream input) throws IOException {
/*       */       return (DungeonList)PARSER.parseFrom(input);
/*       */     }
/*       */ 
/*       */     
/*       */     public static DungeonList parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (DungeonList)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static Builder newBuilder() {
/*       */       return Builder.create();
/*       */     }
/*       */ 
/*       */     
/*       */     public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     }
/*       */ 
/*       */     
/*       */     public static Builder newBuilder(DungeonList prototype) {
/*       */       return newBuilder().mergeFrom(prototype);
/*       */     }
/*       */ 
/*       */     
/*       */     public Builder toBuilder() {
/*       */       return newBuilder(this);
/*       */     }
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
/*       */       Builder builder = new Builder(parent);
/*       */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessage.Builder<Builder>
/*       */       implements GuildManagerHandler.DungeonListOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private int currDungeonCount_;
/*       */       
/*       */       private int maxDungeonCount_;
/*       */       
/*       */       private int state_;
/*       */       
/*       */       private int time_;
/*       */       
/*       */       private int openTime_;
/*       */       
/*       */       private List<GuildManagerHandler.DungeonInfo> dungeonList_;
/*       */       
/*       */       private RepeatedFieldBuilder<GuildManagerHandler.DungeonInfo, GuildManagerHandler.DungeonInfo.Builder, GuildManagerHandler.DungeonInfoOrBuilder> dungeonListBuilder_;
/*       */ 
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_DungeonList_descriptor;
/*       */       }
/*       */ 
/*       */       
/*       */       protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_DungeonList_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.DungeonList.class, Builder.class);
/*       */       }
/*       */ 
/*       */       
/*       */       private Builder() {
/*       */         this.dungeonList_ = Collections.emptyList();
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */       
/*       */       private Builder(GeneratedMessage.BuilderParent parent) {
/*       */         super(parent);
/*       */         this.dungeonList_ = Collections.emptyList();
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*       */         if (GuildManagerHandler.DungeonList.alwaysUseFieldBuilders) {
/*       */           getDungeonListFieldBuilder();
/*       */         }
/*       */       }
/*       */ 
/*       */       
/*       */       private static Builder create() {
/*       */         return new Builder();
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clear() {
/*       */         super.clear();
/*       */         this.currDungeonCount_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.maxDungeonCount_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         this.state_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFFB;
/*       */         this.time_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFF7;
/*       */         this.openTime_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFEF;
/*       */         if (this.dungeonListBuilder_ == null) {
/*       */           this.dungeonList_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFDF;
/*       */         } else {
/*       */           this.dungeonListBuilder_.clear();
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clone() {
/*       */         return create().mergeFrom(buildPartial());
/*       */       }
/*       */ 
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_DungeonList_descriptor;
/*       */       }
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.DungeonList getDefaultInstanceForType() {
/*       */         return GuildManagerHandler.DungeonList.getDefaultInstance();
/*       */       }
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.DungeonList build() {
/*       */         GuildManagerHandler.DungeonList result = buildPartial();
/*       */         if (!result.isInitialized()) {
/*       */           throw newUninitializedMessageException(result);
/*       */         }
/*       */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.DungeonList buildPartial() {
/*       */         GuildManagerHandler.DungeonList result = new GuildManagerHandler.DungeonList(this);
/*       */         int from_bitField0_ = this.bitField0_;
/*       */         int to_bitField0_ = 0;
/*       */         if ((from_bitField0_ & 0x1) == 1) {
/*       */           to_bitField0_ |= 0x1;
/*       */         }
/*       */         result.currDungeonCount_ = this.currDungeonCount_;
/*       */         if ((from_bitField0_ & 0x2) == 2) {
/*       */           to_bitField0_ |= 0x2;
/*       */         }
/*       */         result.maxDungeonCount_ = this.maxDungeonCount_;
/*       */         if ((from_bitField0_ & 0x4) == 4) {
/*       */           to_bitField0_ |= 0x4;
/*       */         }
/*       */         result.state_ = this.state_;
/*       */         if ((from_bitField0_ & 0x8) == 8) {
/*       */           to_bitField0_ |= 0x8;
/*       */         }
/*       */         result.time_ = this.time_;
/*       */         if ((from_bitField0_ & 0x10) == 16) {
/*       */           to_bitField0_ |= 0x10;
/*       */         }
/*       */         result.openTime_ = this.openTime_;
/*       */         if (this.dungeonListBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x20) == 32) {
/*       */             this.dungeonList_ = Collections.unmodifiableList(this.dungeonList_);
/*       */             this.bitField0_ &= 0xFFFFFFDF;
/*       */           } 
/*       */           result.dungeonList_ = this.dungeonList_;
/*       */         } else {
/*       */           result.dungeonList_ = this.dungeonListBuilder_.build();
/*       */         } 
/*       */         result.bitField0_ = to_bitField0_;
/*       */         onBuilt();
/*       */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*       */         if (other instanceof GuildManagerHandler.DungeonList) {
/*       */           return mergeFrom((GuildManagerHandler.DungeonList)other);
/*       */         }
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(GuildManagerHandler.DungeonList other) {
/*       */         if (other == GuildManagerHandler.DungeonList.getDefaultInstance()) {
/*       */           return this;
/*       */         }
/*       */         if (other.hasCurrDungeonCount()) {
/*       */           setCurrDungeonCount(other.getCurrDungeonCount());
/*       */         }
/*       */         if (other.hasMaxDungeonCount()) {
/*       */           setMaxDungeonCount(other.getMaxDungeonCount());
/*       */         }
/*       */         if (other.hasState()) {
/*       */           setState(other.getState());
/*       */         }
/*       */         if (other.hasTime()) {
/*       */           setTime(other.getTime());
/*       */         }
/*       */         if (other.hasOpenTime()) {
/*       */           setOpenTime(other.getOpenTime());
/*       */         }
/*       */         if (this.dungeonListBuilder_ == null) {
/*       */           if (!other.dungeonList_.isEmpty()) {
/*       */             if (this.dungeonList_.isEmpty()) {
/*       */               this.dungeonList_ = other.dungeonList_;
/*       */               this.bitField0_ &= 0xFFFFFFDF;
/*       */             } else {
/*       */               ensureDungeonListIsMutable();
/*       */               this.dungeonList_.addAll(other.dungeonList_);
/*       */             } 
/*       */             onChanged();
/*       */           } 
/*       */         } else if (!other.dungeonList_.isEmpty()) {
/*       */           if (this.dungeonListBuilder_.isEmpty()) {
/*       */             this.dungeonListBuilder_.dispose();
/*       */             this.dungeonListBuilder_ = null;
/*       */             this.dungeonList_ = other.dungeonList_;
/*       */             this.bitField0_ &= 0xFFFFFFDF;
/*       */             this.dungeonListBuilder_ = GuildManagerHandler.DungeonList.alwaysUseFieldBuilders ? getDungeonListFieldBuilder() : null;
/*       */           } else {
/*       */             this.dungeonListBuilder_.addAllMessages(other.dungeonList_);
/*       */           } 
/*       */         } 
/*       */         mergeUnknownFields(other.getUnknownFields());
/*       */         return this;
/*       */       }
/*       */       
/*       */       public final boolean isInitialized() {
/*       */         if (!hasCurrDungeonCount()) {
/*       */           return false;
/*       */         }
/*       */         if (!hasMaxDungeonCount()) {
/*       */           return false;
/*       */         }
/*       */         if (!hasState()) {
/*       */           return false;
/*       */         }
/*       */         if (!hasTime()) {
/*       */           return false;
/*       */         }
/*       */         if (!hasOpenTime()) {
/*       */           return false;
/*       */         }
/*       */         for (int i = 0; i < getDungeonListCount(); i++) {
/*       */           if (!getDungeonList(i).isInitialized()) {
/*       */             return false;
/*       */           }
/*       */         } 
/*       */         return true;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         GuildManagerHandler.DungeonList parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (GuildManagerHandler.DungeonList)GuildManagerHandler.DungeonList.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (GuildManagerHandler.DungeonList)e.getUnfinishedMessage();
/*       */           throw e;
/*       */         } finally {
/*       */           if (parsedMessage != null) {
/*       */             mergeFrom(parsedMessage);
/*       */           }
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public boolean hasCurrDungeonCount() {
/*       */         return ((this.bitField0_ & 0x1) == 1);
/*       */       }
/*       */       
/*       */       public int getCurrDungeonCount() {
/*       */         return this.currDungeonCount_;
/*       */       }
/*       */       
/*       */       public Builder setCurrDungeonCount(int value) {
/*       */         this.bitField0_ |= 0x1;
/*       */         this.currDungeonCount_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearCurrDungeonCount() {
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.currDungeonCount_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public boolean hasMaxDungeonCount() {
/*       */         return ((this.bitField0_ & 0x2) == 2);
/*       */       }
/*       */       
/*       */       public int getMaxDungeonCount() {
/*       */         return this.maxDungeonCount_;
/*       */       }
/*       */       
/*       */       public Builder setMaxDungeonCount(int value) {
/*       */         this.bitField0_ |= 0x2;
/*       */         this.maxDungeonCount_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearMaxDungeonCount() {
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         this.maxDungeonCount_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public boolean hasState() {
/*       */         return ((this.bitField0_ & 0x4) == 4);
/*       */       }
/*       */       
/*       */       public int getState() {
/*       */         return this.state_;
/*       */       }
/*       */       
/*       */       public Builder setState(int value) {
/*       */         this.bitField0_ |= 0x4;
/*       */         this.state_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearState() {
/*       */         this.bitField0_ &= 0xFFFFFFFB;
/*       */         this.state_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public boolean hasTime() {
/*       */         return ((this.bitField0_ & 0x8) == 8);
/*       */       }
/*       */       
/*       */       public int getTime() {
/*       */         return this.time_;
/*       */       }
/*       */       
/*       */       public Builder setTime(int value) {
/*       */         this.bitField0_ |= 0x8;
/*       */         this.time_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearTime() {
/*       */         this.bitField0_ &= 0xFFFFFFF7;
/*       */         this.time_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public boolean hasOpenTime() {
/*       */         return ((this.bitField0_ & 0x10) == 16);
/*       */       }
/*       */       
/*       */       public int getOpenTime() {
/*       */         return this.openTime_;
/*       */       }
/*       */       
/*       */       public Builder setOpenTime(int value) {
/*       */         this.bitField0_ |= 0x10;
/*       */         this.openTime_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearOpenTime() {
/*       */         this.bitField0_ &= 0xFFFFFFEF;
/*       */         this.openTime_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       private void ensureDungeonListIsMutable() {
/*       */         if ((this.bitField0_ & 0x20) != 32) {
/*       */           this.dungeonList_ = new ArrayList<>(this.dungeonList_);
/*       */           this.bitField0_ |= 0x20;
/*       */         } 
/*       */       }
/*       */       
/*       */       public List<GuildManagerHandler.DungeonInfo> getDungeonListList() {
/*       */         if (this.dungeonListBuilder_ == null) {
/*       */           return Collections.unmodifiableList(this.dungeonList_);
/*       */         }
/*       */         return this.dungeonListBuilder_.getMessageList();
/*       */       }
/*       */       
/*       */       public int getDungeonListCount() {
/*       */         if (this.dungeonListBuilder_ == null) {
/*       */           return this.dungeonList_.size();
/*       */         }
/*       */         return this.dungeonListBuilder_.getCount();
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.DungeonInfo getDungeonList(int index) {
/*       */         if (this.dungeonListBuilder_ == null) {
/*       */           return this.dungeonList_.get(index);
/*       */         }
/*       */         return (GuildManagerHandler.DungeonInfo)this.dungeonListBuilder_.getMessage(index);
/*       */       }
/*       */       
/*       */       public Builder setDungeonList(int index, GuildManagerHandler.DungeonInfo value) {
/*       */         if (this.dungeonListBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           ensureDungeonListIsMutable();
/*       */           this.dungeonList_.set(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.dungeonListBuilder_.setMessage(index, value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setDungeonList(int index, GuildManagerHandler.DungeonInfo.Builder builderForValue) {
/*       */         if (this.dungeonListBuilder_ == null) {
/*       */           ensureDungeonListIsMutable();
/*       */           this.dungeonList_.set(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.dungeonListBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addDungeonList(GuildManagerHandler.DungeonInfo value) {
/*       */         if (this.dungeonListBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           ensureDungeonListIsMutable();
/*       */           this.dungeonList_.add(value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.dungeonListBuilder_.addMessage(value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addDungeonList(int index, GuildManagerHandler.DungeonInfo value) {
/*       */         if (this.dungeonListBuilder_ == null) {
/*       */           if (value == null) {
/*       */             throw new NullPointerException();
/*       */           }
/*       */           ensureDungeonListIsMutable();
/*       */           this.dungeonList_.add(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.dungeonListBuilder_.addMessage(index, value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addDungeonList(GuildManagerHandler.DungeonInfo.Builder builderForValue) {
/*       */         if (this.dungeonListBuilder_ == null) {
/*       */           ensureDungeonListIsMutable();
/*       */           this.dungeonList_.add(builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.dungeonListBuilder_.addMessage(builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addDungeonList(int index, GuildManagerHandler.DungeonInfo.Builder builderForValue) {
/*       */         if (this.dungeonListBuilder_ == null) {
/*       */           ensureDungeonListIsMutable();
/*       */           this.dungeonList_.add(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.dungeonListBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addAllDungeonList(Iterable<? extends GuildManagerHandler.DungeonInfo> values) {
/*       */         if (this.dungeonListBuilder_ == null) {
/*       */           ensureDungeonListIsMutable();
/*       */           AbstractMessageLite.Builder.addAll(values, this.dungeonList_);
/*       */           onChanged();
/*       */         } else {
/*       */           this.dungeonListBuilder_.addAllMessages(values);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearDungeonList() {
/*       */         if (this.dungeonListBuilder_ == null) {
/*       */           this.dungeonList_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFDF;
/*       */           onChanged();
/*       */         } else {
/*       */           this.dungeonListBuilder_.clear();
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder removeDungeonList(int index) {
/*       */         if (this.dungeonListBuilder_ == null) {
/*       */           ensureDungeonListIsMutable();
/*       */           this.dungeonList_.remove(index);
/*       */           onChanged();
/*       */         } else {
/*       */           this.dungeonListBuilder_.remove(index);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.DungeonInfo.Builder getDungeonListBuilder(int index) {
/*       */         return (GuildManagerHandler.DungeonInfo.Builder)getDungeonListFieldBuilder().getBuilder(index);
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.DungeonInfoOrBuilder getDungeonListOrBuilder(int index) {
/*       */         if (this.dungeonListBuilder_ == null) {
/*       */           return this.dungeonList_.get(index);
/*       */         }
/*       */         return (GuildManagerHandler.DungeonInfoOrBuilder)this.dungeonListBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */       
/*       */       public List<? extends GuildManagerHandler.DungeonInfoOrBuilder> getDungeonListOrBuilderList() {
/*       */         if (this.dungeonListBuilder_ != null) {
/*       */           return this.dungeonListBuilder_.getMessageOrBuilderList();
/*       */         }
/*       */         return Collections.unmodifiableList((List)this.dungeonList_);
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.DungeonInfo.Builder addDungeonListBuilder() {
/*       */         return (GuildManagerHandler.DungeonInfo.Builder)getDungeonListFieldBuilder().addBuilder(GuildManagerHandler.DungeonInfo.getDefaultInstance());
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.DungeonInfo.Builder addDungeonListBuilder(int index) {
/*       */         return (GuildManagerHandler.DungeonInfo.Builder)getDungeonListFieldBuilder().addBuilder(index, GuildManagerHandler.DungeonInfo.getDefaultInstance());
/*       */       }
/*       */       
/*       */       public List<GuildManagerHandler.DungeonInfo.Builder> getDungeonListBuilderList() {
/*       */         return getDungeonListFieldBuilder().getBuilderList();
/*       */       }
/*       */       
/*       */       private RepeatedFieldBuilder<GuildManagerHandler.DungeonInfo, GuildManagerHandler.DungeonInfo.Builder, GuildManagerHandler.DungeonInfoOrBuilder> getDungeonListFieldBuilder() {
/*       */         if (this.dungeonListBuilder_ == null) {
/*       */           this.dungeonListBuilder_ = new RepeatedFieldBuilder(this.dungeonList_, ((this.bitField0_ & 0x20) == 32), getParentForChildren(), isClean());
/*       */           this.dungeonList_ = null;
/*       */         } 
/*       */         return this.dungeonListBuilder_;
/*       */       }
/*       */     }
/*       */   }
/*       */   
/*       */   public static final class GuildDungeonListResponse
/*       */     extends GeneratedMessage
/*       */     implements GuildDungeonListResponseOrBuilder
/*       */   {
/* 25094 */     private static final GuildDungeonListResponse defaultInstance = new GuildDungeonListResponse(true); private final UnknownFieldSet unknownFields; private GuildDungeonListResponse(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private GuildDungeonListResponse(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static GuildDungeonListResponse getDefaultInstance() { return defaultInstance; } public GuildDungeonListResponse getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private GuildDungeonListResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; GuildManagerHandler.DungeonList.Builder subBuilder; int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.s2CCode_ = input.readInt32(); break;case 18: bs = input.readBytes(); this.bitField0_ |= 0x2; this.s2CMsg_ = bs; break;case 26: subBuilder = null; if ((this.bitField0_ & 0x4) == 4) subBuilder = this.s2CList_.toBuilder();  this.s2CList_ = (GuildManagerHandler.DungeonList)input.readMessage(GuildManagerHandler.DungeonList.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.s2CList_); this.s2CList_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x4; break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GuildDungeonListResponse_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GuildDungeonListResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildDungeonListResponse.class, Builder.class); } public static Parser<GuildDungeonListResponse> PARSER = (Parser<GuildDungeonListResponse>)new AbstractParser<GuildDungeonListResponse>() { public GuildManagerHandler.GuildDungeonListResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.GuildDungeonListResponse(input, extensionRegistry); } }
/* 25095 */     ; private int bitField0_; public static final int S2C_CODE_FIELD_NUMBER = 1; private int s2CCode_; public static final int S2C_MSG_FIELD_NUMBER = 2; private Object s2CMsg_; public static final int S2C_LIST_FIELD_NUMBER = 3; private GuildManagerHandler.DungeonList s2CList_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<GuildDungeonListResponse> getParserForType() { return PARSER; } public boolean hasS2CCode() { return ((this.bitField0_ & 0x1) == 1); } public int getS2CCode() { return this.s2CCode_; } public boolean hasS2CMsg() { return ((this.bitField0_ & 0x2) == 2); } public String getS2CMsg() { Object ref = this.s2CMsg_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.s2CMsg_ = s;  return s; } static { defaultInstance.initFields(); }
/*       */     
/*       */     public ByteString getS2CMsgBytes() {
/*       */       Object ref = this.s2CMsg_;
/*       */       if (ref instanceof String) {
/*       */         ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */         this.s2CMsg_ = b;
/*       */         return b;
/*       */       } 
/*       */       return (ByteString)ref;
/*       */     }
/*       */     
/*       */     public boolean hasS2CList() {
/*       */       return ((this.bitField0_ & 0x4) == 4);
/*       */     }
/*       */     
/*       */     public GuildManagerHandler.DungeonList getS2CList() {
/*       */       return this.s2CList_;
/*       */     }
/*       */     
/*       */     public GuildManagerHandler.DungeonListOrBuilder getS2CListOrBuilder() {
/*       */       return this.s2CList_;
/*       */     }
/*       */     
/*       */     private void initFields() {
/*       */       this.s2CCode_ = 0;
/*       */       this.s2CMsg_ = "";
/*       */       this.s2CList_ = GuildManagerHandler.DungeonList.getDefaultInstance();
/*       */     }
/*       */     
/*       */     public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1)
/*       */         return true; 
/*       */       if (isInitialized == 0)
/*       */         return false; 
/*       */       if (!hasS2CCode()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       if (!hasS2CList()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       if (!getS2CList().isInitialized()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     }
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       getSerializedSize();
/*       */       if ((this.bitField0_ & 0x1) == 1)
/*       */         output.writeInt32(1, this.s2CCode_); 
/*       */       if ((this.bitField0_ & 0x2) == 2)
/*       */         output.writeBytes(2, getS2CMsgBytes()); 
/*       */       if ((this.bitField0_ & 0x4) == 4)
/*       */         output.writeMessage(3, (MessageLite)this.s2CList_); 
/*       */       getUnknownFields().writeTo(output);
/*       */     }
/*       */     
/*       */     public int getSerializedSize() {
/*       */       int size = this.memoizedSerializedSize;
/*       */       if (size != -1)
/*       */         return size; 
/*       */       size = 0;
/*       */       if ((this.bitField0_ & 0x1) == 1)
/*       */         size += CodedOutputStream.computeInt32Size(1, this.s2CCode_); 
/*       */       if ((this.bitField0_ & 0x2) == 2)
/*       */         size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes()); 
/*       */       if ((this.bitField0_ & 0x4) == 4)
/*       */         size += CodedOutputStream.computeMessageSize(3, (MessageLite)this.s2CList_); 
/*       */       size += getUnknownFields().getSerializedSize();
/*       */       this.memoizedSerializedSize = size;
/*       */       return size;
/*       */     }
/*       */     
/*       */     protected Object writeReplace() throws ObjectStreamException {
/*       */       return super.writeReplace();
/*       */     }
/*       */     
/*       */     public static GuildDungeonListResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (GuildDungeonListResponse)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static GuildDungeonListResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (GuildDungeonListResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static GuildDungeonListResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (GuildDungeonListResponse)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static GuildDungeonListResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (GuildDungeonListResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static GuildDungeonListResponse parseFrom(InputStream input) throws IOException {
/*       */       return (GuildDungeonListResponse)PARSER.parseFrom(input);
/*       */     }
/*       */     
/*       */     public static GuildDungeonListResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GuildDungeonListResponse)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static GuildDungeonListResponse parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (GuildDungeonListResponse)PARSER.parseDelimitedFrom(input);
/*       */     }
/*       */     
/*       */     public static GuildDungeonListResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GuildDungeonListResponse)PARSER.parseDelimitedFrom(input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static GuildDungeonListResponse parseFrom(CodedInputStream input) throws IOException {
/*       */       return (GuildDungeonListResponse)PARSER.parseFrom(input);
/*       */     }
/*       */     
/*       */     public static GuildDungeonListResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GuildDungeonListResponse)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Builder newBuilder() {
/*       */       return Builder.create();
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder(GuildDungeonListResponse prototype) {
/*       */       return newBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*       */       return newBuilder(this);
/*       */     }
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
/*       */       Builder builder = new Builder(parent);
/*       */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.GuildDungeonListResponseOrBuilder { private int bitField0_;
/*       */       private int s2CCode_;
/*       */       private Object s2CMsg_;
/*       */       private GuildManagerHandler.DungeonList s2CList_;
/*       */       private SingleFieldBuilder<GuildManagerHandler.DungeonList, GuildManagerHandler.DungeonList.Builder, GuildManagerHandler.DungeonListOrBuilder> s2CListBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_GuildDungeonListResponse_descriptor;
/*       */       }
/*       */       
/*       */       protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_GuildDungeonListResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.GuildDungeonListResponse.class, Builder.class);
/*       */       }
/*       */       
/*       */       private Builder() {
/*       */         this.s2CMsg_ = "";
/*       */         this.s2CList_ = GuildManagerHandler.DungeonList.getDefaultInstance();
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private Builder(GeneratedMessage.BuilderParent parent) {
/*       */         super(parent);
/*       */         this.s2CMsg_ = "";
/*       */         this.s2CList_ = GuildManagerHandler.DungeonList.getDefaultInstance();
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*       */         if (GuildManagerHandler.GuildDungeonListResponse.alwaysUseFieldBuilders)
/*       */           getS2CListFieldBuilder(); 
/*       */       }
/*       */       
/*       */       private static Builder create() {
/*       */         return new Builder();
/*       */       }
/*       */       
/*       */       public Builder clear() {
/*       */         super.clear();
/*       */         this.s2CCode_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.s2CMsg_ = "";
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         if (this.s2CListBuilder_ == null) {
/*       */           this.s2CList_ = GuildManagerHandler.DungeonList.getDefaultInstance();
/*       */         } else {
/*       */           this.s2CListBuilder_.clear();
/*       */         } 
/*       */         this.bitField0_ &= 0xFFFFFFFB;
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clone() {
/*       */         return create().mergeFrom(buildPartial());
/*       */       }
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_GuildDungeonListResponse_descriptor;
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.GuildDungeonListResponse getDefaultInstanceForType() {
/*       */         return GuildManagerHandler.GuildDungeonListResponse.getDefaultInstance();
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.GuildDungeonListResponse build() {
/*       */         GuildManagerHandler.GuildDungeonListResponse result = buildPartial();
/*       */         if (!result.isInitialized())
/*       */           throw newUninitializedMessageException(result); 
/*       */         return result;
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.GuildDungeonListResponse buildPartial() {
/*       */         GuildManagerHandler.GuildDungeonListResponse result = new GuildManagerHandler.GuildDungeonListResponse(this);
/*       */         int from_bitField0_ = this.bitField0_;
/*       */         int to_bitField0_ = 0;
/*       */         if ((from_bitField0_ & 0x1) == 1)
/*       */           to_bitField0_ |= 0x1; 
/*       */         result.s2CCode_ = this.s2CCode_;
/*       */         if ((from_bitField0_ & 0x2) == 2)
/*       */           to_bitField0_ |= 0x2; 
/*       */         result.s2CMsg_ = this.s2CMsg_;
/*       */         if ((from_bitField0_ & 0x4) == 4)
/*       */           to_bitField0_ |= 0x4; 
/*       */         if (this.s2CListBuilder_ == null) {
/*       */           result.s2CList_ = this.s2CList_;
/*       */         } else {
/*       */           result.s2CList_ = (GuildManagerHandler.DungeonList)this.s2CListBuilder_.build();
/*       */         } 
/*       */         result.bitField0_ = to_bitField0_;
/*       */         onBuilt();
/*       */         return result;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*       */         if (other instanceof GuildManagerHandler.GuildDungeonListResponse)
/*       */           return mergeFrom((GuildManagerHandler.GuildDungeonListResponse)other); 
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(GuildManagerHandler.GuildDungeonListResponse other) {
/*       */         if (other == GuildManagerHandler.GuildDungeonListResponse.getDefaultInstance())
/*       */           return this; 
/*       */         if (other.hasS2CCode())
/*       */           setS2CCode(other.getS2CCode()); 
/*       */         if (other.hasS2CMsg()) {
/*       */           this.bitField0_ |= 0x2;
/*       */           this.s2CMsg_ = other.s2CMsg_;
/*       */           onChanged();
/*       */         } 
/*       */         if (other.hasS2CList())
/*       */           mergeS2CList(other.getS2CList()); 
/*       */         mergeUnknownFields(other.getUnknownFields());
/*       */         return this;
/*       */       }
/*       */       
/*       */       public final boolean isInitialized() {
/*       */         if (!hasS2CCode())
/*       */           return false; 
/*       */         if (!hasS2CList())
/*       */           return false; 
/*       */         if (!getS2CList().isInitialized())
/*       */           return false; 
/*       */         return true;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         GuildManagerHandler.GuildDungeonListResponse parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (GuildManagerHandler.GuildDungeonListResponse)GuildManagerHandler.GuildDungeonListResponse.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (GuildManagerHandler.GuildDungeonListResponse)e.getUnfinishedMessage();
/*       */           throw e;
/*       */         } finally {
/*       */           if (parsedMessage != null)
/*       */             mergeFrom(parsedMessage); 
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public boolean hasS2CCode() {
/*       */         return ((this.bitField0_ & 0x1) == 1);
/*       */       }
/*       */       
/*       */       public int getS2CCode() {
/*       */         return this.s2CCode_;
/*       */       }
/*       */       
/*       */       public Builder setS2CCode(int value) {
/*       */         this.bitField0_ |= 0x1;
/*       */         this.s2CCode_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearS2CCode() {
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.s2CCode_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public boolean hasS2CMsg() {
/*       */         return ((this.bitField0_ & 0x2) == 2);
/*       */       }
/*       */       
/*       */       public String getS2CMsg() {
/*       */         Object ref = this.s2CMsg_;
/*       */         if (!(ref instanceof String)) {
/*       */           ByteString bs = (ByteString)ref;
/*       */           String s = bs.toStringUtf8();
/*       */           if (bs.isValidUtf8())
/*       */             this.s2CMsg_ = s; 
/*       */           return s;
/*       */         } 
/*       */         return (String)ref;
/*       */       }
/*       */       
/*       */       public ByteString getS2CMsgBytes() {
/*       */         Object ref = this.s2CMsg_;
/*       */         if (ref instanceof String) {
/*       */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           this.s2CMsg_ = b;
/*       */           return b;
/*       */         } 
/*       */         return (ByteString)ref;
/*       */       }
/*       */       
/*       */       public Builder setS2CMsg(String value) {
/*       */         if (value == null)
/*       */           throw new NullPointerException(); 
/*       */         this.bitField0_ |= 0x2;
/*       */         this.s2CMsg_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearS2CMsg() {
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         this.s2CMsg_ = GuildManagerHandler.GuildDungeonListResponse.getDefaultInstance().getS2CMsg();
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setS2CMsgBytes(ByteString value) {
/*       */         if (value == null)
/*       */           throw new NullPointerException(); 
/*       */         this.bitField0_ |= 0x2;
/*       */         this.s2CMsg_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public boolean hasS2CList() {
/*       */         return ((this.bitField0_ & 0x4) == 4);
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.DungeonList getS2CList() {
/*       */         if (this.s2CListBuilder_ == null)
/*       */           return this.s2CList_; 
/*       */         return (GuildManagerHandler.DungeonList)this.s2CListBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setS2CList(GuildManagerHandler.DungeonList value) {
/*       */         if (this.s2CListBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.s2CList_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CListBuilder_.setMessage(value);
/*       */         } 
/*       */         this.bitField0_ |= 0x4;
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setS2CList(GuildManagerHandler.DungeonList.Builder builderForValue) {
/*       */         if (this.s2CListBuilder_ == null) {
/*       */           this.s2CList_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CListBuilder_.setMessage(builderForValue.build());
/*       */         } 
/*       */         this.bitField0_ |= 0x4;
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeS2CList(GuildManagerHandler.DungeonList value) {
/*       */         if (this.s2CListBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x4) == 4 && this.s2CList_ != GuildManagerHandler.DungeonList.getDefaultInstance()) {
/*       */             this.s2CList_ = GuildManagerHandler.DungeonList.newBuilder(this.s2CList_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.s2CList_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CListBuilder_.mergeFrom(value);
/*       */         } 
/*       */         this.bitField0_ |= 0x4;
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearS2CList() {
/*       */         if (this.s2CListBuilder_ == null) {
/*       */           this.s2CList_ = GuildManagerHandler.DungeonList.getDefaultInstance();
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CListBuilder_.clear();
/*       */         } 
/*       */         this.bitField0_ &= 0xFFFFFFFB;
/*       */         return this;
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.DungeonList.Builder getS2CListBuilder() {
/*       */         this.bitField0_ |= 0x4;
/*       */         onChanged();
/*       */         return (GuildManagerHandler.DungeonList.Builder)getS2CListFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public GuildManagerHandler.DungeonListOrBuilder getS2CListOrBuilder() {
/*       */         if (this.s2CListBuilder_ != null)
/*       */           return (GuildManagerHandler.DungeonListOrBuilder)this.s2CListBuilder_.getMessageOrBuilder(); 
/*       */         return this.s2CList_;
/*       */       }
/*       */       
/*       */       private SingleFieldBuilder<GuildManagerHandler.DungeonList, GuildManagerHandler.DungeonList.Builder, GuildManagerHandler.DungeonListOrBuilder> getS2CListFieldBuilder() {
/*       */         if (this.s2CListBuilder_ == null) {
/*       */           this.s2CListBuilder_ = new SingleFieldBuilder(getS2CList(), getParentForChildren(), isClean());
/*       */           this.s2CList_ = null;
/*       */         } 
/*       */         return this.s2CListBuilder_;
/*       */       } } }
/*       */   
/* 25531 */   public static final class DungeonRankRequest extends GeneratedMessage implements DungeonRankRequestOrBuilder { private static final DungeonRankRequest defaultInstance = new DungeonRankRequest(true); private final UnknownFieldSet unknownFields; private DungeonRankRequest(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private DungeonRankRequest(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static DungeonRankRequest getDefaultInstance() { return defaultInstance; } public DungeonRankRequest getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private DungeonRankRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.s2CType_ = input.readInt32(); break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_DungeonRankRequest_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_DungeonRankRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(DungeonRankRequest.class, Builder.class); } public static Parser<DungeonRankRequest> PARSER = (Parser<DungeonRankRequest>)new AbstractParser<DungeonRankRequest>() { public GuildManagerHandler.DungeonRankRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.DungeonRankRequest(input, extensionRegistry); } }; private int bitField0_; public static final int S2C_TYPE_FIELD_NUMBER = 1; private int s2CType_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<DungeonRankRequest> getParserForType() { return PARSER; } public boolean hasS2CType() { return ((this.bitField0_ & 0x1) == 1); } public int getS2CType() { return this.s2CType_; } private void initFields() { this.s2CType_ = 0; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  if (!hasS2CType()) { this.memoizedIsInitialized = 0; return false; }  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CType_);  getUnknownFields().writeTo(output); } public int getSerializedSize() { int size = this.memoizedSerializedSize; if (size != -1) return size;  size = 0; if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CType_);  size += getUnknownFields().getSerializedSize(); this.memoizedSerializedSize = size; return size; } protected Object writeReplace() throws ObjectStreamException { return super.writeReplace(); } public static DungeonRankRequest parseFrom(ByteString data) throws InvalidProtocolBufferException { return (DungeonRankRequest)PARSER.parseFrom(data); } public static DungeonRankRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (DungeonRankRequest)PARSER.parseFrom(data, extensionRegistry); } public static DungeonRankRequest parseFrom(byte[] data) throws InvalidProtocolBufferException { return (DungeonRankRequest)PARSER.parseFrom(data); } public static DungeonRankRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (DungeonRankRequest)PARSER.parseFrom(data, extensionRegistry); } public static DungeonRankRequest parseFrom(InputStream input) throws IOException { return (DungeonRankRequest)PARSER.parseFrom(input); } public static DungeonRankRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (DungeonRankRequest)PARSER.parseFrom(input, extensionRegistry); } public static DungeonRankRequest parseDelimitedFrom(InputStream input) throws IOException { return (DungeonRankRequest)PARSER.parseDelimitedFrom(input); } public static DungeonRankRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (DungeonRankRequest)PARSER.parseDelimitedFrom(input, extensionRegistry); } public static DungeonRankRequest parseFrom(CodedInputStream input) throws IOException { return (DungeonRankRequest)PARSER.parseFrom(input); } public static DungeonRankRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (DungeonRankRequest)PARSER.parseFrom(input, extensionRegistry); } public static Builder newBuilder() { return Builder.create(); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder(DungeonRankRequest prototype) { return newBuilder().mergeFrom(prototype); } public Builder toBuilder() { return newBuilder(this); } protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.DungeonRankRequestOrBuilder {
/* 25532 */       private int bitField0_; private int s2CType_; public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_DungeonRankRequest_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_DungeonRankRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.DungeonRankRequest.class, Builder.class); } private Builder() { maybeForceBuilderInitialization(); } private Builder(GeneratedMessage.BuilderParent parent) { super(parent); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GuildManagerHandler.DungeonRankRequest.alwaysUseFieldBuilders); } private static Builder create() { return new Builder(); } public Builder clear() { super.clear(); this.s2CType_ = 0; this.bitField0_ &= 0xFFFFFFFE; return this; } public Builder clone() { return create().mergeFrom(buildPartial()); } public Descriptors.Descriptor getDescriptorForType() { return GuildManagerHandler.internal_static_pomelo_guild_DungeonRankRequest_descriptor; } public GuildManagerHandler.DungeonRankRequest getDefaultInstanceForType() { return GuildManagerHandler.DungeonRankRequest.getDefaultInstance(); } public GuildManagerHandler.DungeonRankRequest build() { GuildManagerHandler.DungeonRankRequest result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public GuildManagerHandler.DungeonRankRequest buildPartial() { GuildManagerHandler.DungeonRankRequest result = new GuildManagerHandler.DungeonRankRequest(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;  result.s2CType_ = this.s2CType_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder mergeFrom(Message other) { if (other instanceof GuildManagerHandler.DungeonRankRequest) return mergeFrom((GuildManagerHandler.DungeonRankRequest)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(GuildManagerHandler.DungeonRankRequest other) { if (other == GuildManagerHandler.DungeonRankRequest.getDefaultInstance()) return this;  if (other.hasS2CType()) setS2CType(other.getS2CType());  mergeUnknownFields(other.getUnknownFields()); return this; } public final boolean isInitialized() { if (!hasS2CType()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { GuildManagerHandler.DungeonRankRequest parsedMessage = null; try { parsedMessage = (GuildManagerHandler.DungeonRankRequest)GuildManagerHandler.DungeonRankRequest.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (GuildManagerHandler.DungeonRankRequest)e.getUnfinishedMessage(); throw e; } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasS2CType() { return ((this.bitField0_ & 0x1) == 1); } public int getS2CType() { return this.s2CType_; } public Builder setS2CType(int value) { this.bitField0_ |= 0x1; this.s2CType_ = value; onChanged(); return this; } public Builder clearS2CType() { this.bitField0_ &= 0xFFFFFFFE; this.s2CType_ = 0; onChanged(); return this; } } static { defaultInstance.initFields(); }
/*       */      }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class RankInfo
/*       */     extends GeneratedMessage
/*       */     implements RankInfoOrBuilder
/*       */   {
/* 26524 */     private static final RankInfo defaultInstance = new RankInfo(true); private final UnknownFieldSet unknownFields; private RankInfo(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private RankInfo(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static RankInfo getDefaultInstance() { return defaultInstance; } public RankInfo getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private RankInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 10: bs = input.readBytes(); this.bitField0_ |= 0x1; this.playerId_ = bs; break;case 18: bs = input.readBytes(); this.bitField0_ |= 0x2; this.playerName_ = bs; break;case 24: this.bitField0_ |= 0x4; this.playerPro_ = input.readInt32(); break;case 32: this.bitField0_ |= 0x8; this.level_ = input.readInt32(); break;case 40: this.bitField0_ |= 0x10; this.upGradeLevel_ = input.readInt32(); break;case 48: this.bitField0_ |= 0x20; this.value_ = input.readInt32(); break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_RankInfo_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_RankInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(RankInfo.class, Builder.class); } public static Parser<RankInfo> PARSER = (Parser<RankInfo>)new AbstractParser<RankInfo>() { public GuildManagerHandler.RankInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.RankInfo(input, extensionRegistry); } }
/* 26525 */     ; private int bitField0_; public static final int PLAYERID_FIELD_NUMBER = 1; private Object playerId_; public static final int PLAYERNAME_FIELD_NUMBER = 2; private Object playerName_; public static final int PLAYERPRO_FIELD_NUMBER = 3; private int playerPro_; public static final int LEVEL_FIELD_NUMBER = 4; private int level_; public static final int UPGRADELEVEL_FIELD_NUMBER = 5; private int upGradeLevel_; public static final int VALUE_FIELD_NUMBER = 6; private int value_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<RankInfo> getParserForType() { return PARSER; } public boolean hasPlayerId() { return ((this.bitField0_ & 0x1) == 1); } public String getPlayerId() { Object ref = this.playerId_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.playerId_ = s;  return s; } public ByteString getPlayerIdBytes() { Object ref = this.playerId_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.playerId_ = b; return b; }  return (ByteString)ref; } public boolean hasPlayerName() { return ((this.bitField0_ & 0x2) == 2); } static { defaultInstance.initFields(); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public String getPlayerName() {
/*       */       Object ref = this.playerName_;
/*       */       if (ref instanceof String) {
/*       */         return (String)ref;
/*       */       }
/*       */       ByteString bs = (ByteString)ref;
/*       */       String s = bs.toStringUtf8();
/*       */       if (bs.isValidUtf8()) {
/*       */         this.playerName_ = s;
/*       */       }
/*       */       return s;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public ByteString getPlayerNameBytes() {
/*       */       Object ref = this.playerName_;
/*       */       if (ref instanceof String) {
/*       */         ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */         this.playerName_ = b;
/*       */         return b;
/*       */       } 
/*       */       return (ByteString)ref;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public boolean hasPlayerPro() {
/*       */       return ((this.bitField0_ & 0x4) == 4);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public int getPlayerPro() {
/*       */       return this.playerPro_;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public boolean hasLevel() {
/*       */       return ((this.bitField0_ & 0x8) == 8);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public int getLevel() {
/*       */       return this.level_;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public boolean hasUpGradeLevel() {
/*       */       return ((this.bitField0_ & 0x10) == 16);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public int getUpGradeLevel() {
/*       */       return this.upGradeLevel_;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public boolean hasValue() {
/*       */       return ((this.bitField0_ & 0x20) == 32);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public int getValue() {
/*       */       return this.value_;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private void initFields() {
/*       */       this.playerId_ = "";
/*       */       this.playerName_ = "";
/*       */       this.playerPro_ = 0;
/*       */       this.level_ = 0;
/*       */       this.upGradeLevel_ = 0;
/*       */       this.value_ = 0;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1) {
/*       */         return true;
/*       */       }
/*       */       if (isInitialized == 0) {
/*       */         return false;
/*       */       }
/*       */       if (!hasPlayerId()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       if (!hasPlayerName()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       if (!hasPlayerPro()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       if (!hasLevel()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       if (!hasUpGradeLevel()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       if (!hasValue()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       getSerializedSize();
/*       */       if ((this.bitField0_ & 0x1) == 1) {
/*       */         output.writeBytes(1, getPlayerIdBytes());
/*       */       }
/*       */       if ((this.bitField0_ & 0x2) == 2) {
/*       */         output.writeBytes(2, getPlayerNameBytes());
/*       */       }
/*       */       if ((this.bitField0_ & 0x4) == 4) {
/*       */         output.writeInt32(3, this.playerPro_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x8) == 8) {
/*       */         output.writeInt32(4, this.level_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x10) == 16) {
/*       */         output.writeInt32(5, this.upGradeLevel_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x20) == 32) {
/*       */         output.writeInt32(6, this.value_);
/*       */       }
/*       */       getUnknownFields().writeTo(output);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/*       */       int size = this.memoizedSerializedSize;
/*       */       if (size != -1) {
/*       */         return size;
/*       */       }
/*       */       size = 0;
/*       */       if ((this.bitField0_ & 0x1) == 1) {
/*       */         size += CodedOutputStream.computeBytesSize(1, getPlayerIdBytes());
/*       */       }
/*       */       if ((this.bitField0_ & 0x2) == 2) {
/*       */         size += CodedOutputStream.computeBytesSize(2, getPlayerNameBytes());
/*       */       }
/*       */       if ((this.bitField0_ & 0x4) == 4) {
/*       */         size += CodedOutputStream.computeInt32Size(3, this.playerPro_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x8) == 8) {
/*       */         size += CodedOutputStream.computeInt32Size(4, this.level_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x10) == 16) {
/*       */         size += CodedOutputStream.computeInt32Size(5, this.upGradeLevel_);
/*       */       }
/*       */       if ((this.bitField0_ & 0x20) == 32) {
/*       */         size += CodedOutputStream.computeInt32Size(6, this.value_);
/*       */       }
/*       */       size += getUnknownFields().getSerializedSize();
/*       */       this.memoizedSerializedSize = size;
/*       */       return size;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     protected Object writeReplace() throws ObjectStreamException {
/*       */       return super.writeReplace();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static RankInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (RankInfo)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static RankInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (RankInfo)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static RankInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (RankInfo)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static RankInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (RankInfo)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static RankInfo parseFrom(InputStream input) throws IOException {
/*       */       return (RankInfo)PARSER.parseFrom(input);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static RankInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (RankInfo)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static RankInfo parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (RankInfo)PARSER.parseDelimitedFrom(input);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static RankInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (RankInfo)PARSER.parseDelimitedFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static RankInfo parseFrom(CodedInputStream input) throws IOException {
/*       */       return (RankInfo)PARSER.parseFrom(input);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static RankInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (RankInfo)PARSER.parseFrom(input, extensionRegistry);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static Builder newBuilder() {
/*       */       return Builder.create();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static Builder newBuilder(RankInfo prototype) {
/*       */       return newBuilder().mergeFrom(prototype);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public Builder toBuilder() {
/*       */       return newBuilder(this);
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
/*       */       Builder builder = new Builder(parent);
/*       */       return builder;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessage.Builder<Builder>
/*       */       implements GuildManagerHandler.RankInfoOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Object playerId_;
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Object playerName_;
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private int playerPro_;
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private int level_;
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private int upGradeLevel_;
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private int value_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_RankInfo_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_RankInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.RankInfo.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder() {
/*       */         this.playerId_ = "";
/*       */         this.playerName_ = "";
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder(GeneratedMessage.BuilderParent parent) {
/*       */         super(parent);
/*       */         this.playerId_ = "";
/*       */         this.playerName_ = "";
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*       */         if (GuildManagerHandler.RankInfo.alwaysUseFieldBuilders);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private static Builder create() {
/*       */         return new Builder();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clear() {
/*       */         super.clear();
/*       */         this.playerId_ = "";
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.playerName_ = "";
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         this.playerPro_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFFB;
/*       */         this.level_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFF7;
/*       */         this.upGradeLevel_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFEF;
/*       */         this.value_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFDF;
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clone() {
/*       */         return create().mergeFrom(buildPartial());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_RankInfo_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.RankInfo getDefaultInstanceForType() {
/*       */         return GuildManagerHandler.RankInfo.getDefaultInstance();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.RankInfo build() {
/*       */         GuildManagerHandler.RankInfo result = buildPartial();
/*       */         if (!result.isInitialized()) {
/*       */           throw newUninitializedMessageException(result);
/*       */         }
/*       */         return result;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public GuildManagerHandler.RankInfo buildPartial() {
/*       */         GuildManagerHandler.RankInfo result = new GuildManagerHandler.RankInfo(this);
/*       */         int from_bitField0_ = this.bitField0_;
/*       */         int to_bitField0_ = 0;
/*       */         if ((from_bitField0_ & 0x1) == 1) {
/*       */           to_bitField0_ |= 0x1;
/*       */         }
/*       */         result.playerId_ = this.playerId_;
/*       */         if ((from_bitField0_ & 0x2) == 2) {
/*       */           to_bitField0_ |= 0x2;
/*       */         }
/*       */         result.playerName_ = this.playerName_;
/*       */         if ((from_bitField0_ & 0x4) == 4) {
/*       */           to_bitField0_ |= 0x4;
/*       */         }
/*       */         result.playerPro_ = this.playerPro_;
/*       */         if ((from_bitField0_ & 0x8) == 8) {
/*       */           to_bitField0_ |= 0x8;
/*       */         }
/*       */         result.level_ = this.level_;
/*       */         if ((from_bitField0_ & 0x10) == 16) {
/*       */           to_bitField0_ |= 0x10;
/*       */         }
/*       */         result.upGradeLevel_ = this.upGradeLevel_;
/*       */         if ((from_bitField0_ & 0x20) == 32) {
/*       */           to_bitField0_ |= 0x20;
/*       */         }
/*       */         result.value_ = this.value_;
/*       */         result.bitField0_ = to_bitField0_;
/*       */         onBuilt();
/*       */         return result;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*       */         if (other instanceof GuildManagerHandler.RankInfo) {
/*       */           return mergeFrom((GuildManagerHandler.RankInfo)other);
/*       */         }
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(GuildManagerHandler.RankInfo other) {
/*       */         if (other == GuildManagerHandler.RankInfo.getDefaultInstance()) {
/*       */           return this;
/*       */         }
/*       */         if (other.hasPlayerId()) {
/*       */           this.bitField0_ |= 0x1;
/*       */           this.playerId_ = other.playerId_;
/*       */           onChanged();
/*       */         } 
/*       */         if (other.hasPlayerName()) {
/*       */           this.bitField0_ |= 0x2;
/*       */           this.playerName_ = other.playerName_;
/*       */           onChanged();
/*       */         } 
/*       */         if (other.hasPlayerPro()) {
/*       */           setPlayerPro(other.getPlayerPro());
/*       */         }
/*       */         if (other.hasLevel()) {
/*       */           setLevel(other.getLevel());
/*       */         }
/*       */         if (other.hasUpGradeLevel()) {
/*       */           setUpGradeLevel(other.getUpGradeLevel());
/*       */         }
/*       */         if (other.hasValue()) {
/*       */           setValue(other.getValue());
/*       */         }
/*       */         mergeUnknownFields(other.getUnknownFields());
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public final boolean isInitialized() {
/*       */         if (!hasPlayerId()) {
/*       */           return false;
/*       */         }
/*       */         if (!hasPlayerName()) {
/*       */           return false;
/*       */         }
/*       */         if (!hasPlayerPro()) {
/*       */           return false;
/*       */         }
/*       */         if (!hasLevel()) {
/*       */           return false;
/*       */         }
/*       */         if (!hasUpGradeLevel()) {
/*       */           return false;
/*       */         }
/*       */         if (!hasValue()) {
/*       */           return false;
/*       */         }
/*       */         return true;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         GuildManagerHandler.RankInfo parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (GuildManagerHandler.RankInfo)GuildManagerHandler.RankInfo.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (GuildManagerHandler.RankInfo)e.getUnfinishedMessage();
/*       */           throw e;
/*       */         } finally {
/*       */           if (parsedMessage != null) {
/*       */             mergeFrom(parsedMessage);
/*       */           }
/*       */         } 
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasPlayerId() {
/*       */         return ((this.bitField0_ & 0x1) == 1);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getPlayerId() {
/*       */         Object ref = this.playerId_;
/*       */         if (!(ref instanceof String)) {
/*       */           ByteString bs = (ByteString)ref;
/*       */           String s = bs.toStringUtf8();
/*       */           if (bs.isValidUtf8()) {
/*       */             this.playerId_ = s;
/*       */           }
/*       */           return s;
/*       */         } 
/*       */         return (String)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getPlayerIdBytes() {
/*       */         Object ref = this.playerId_;
/*       */         if (ref instanceof String) {
/*       */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           this.playerId_ = b;
/*       */           return b;
/*       */         } 
/*       */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setPlayerId(String value) {
/*       */         if (value == null) {
/*       */           throw new NullPointerException();
/*       */         }
/*       */         this.bitField0_ |= 0x1;
/*       */         this.playerId_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearPlayerId() {
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.playerId_ = GuildManagerHandler.RankInfo.getDefaultInstance().getPlayerId();
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setPlayerIdBytes(ByteString value) {
/*       */         if (value == null) {
/*       */           throw new NullPointerException();
/*       */         }
/*       */         this.bitField0_ |= 0x1;
/*       */         this.playerId_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasPlayerName() {
/*       */         return ((this.bitField0_ & 0x2) == 2);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getPlayerName() {
/*       */         Object ref = this.playerName_;
/*       */         if (!(ref instanceof String)) {
/*       */           ByteString bs = (ByteString)ref;
/*       */           String s = bs.toStringUtf8();
/*       */           if (bs.isValidUtf8()) {
/*       */             this.playerName_ = s;
/*       */           }
/*       */           return s;
/*       */         } 
/*       */         return (String)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getPlayerNameBytes() {
/*       */         Object ref = this.playerName_;
/*       */         if (ref instanceof String) {
/*       */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           this.playerName_ = b;
/*       */           return b;
/*       */         } 
/*       */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setPlayerName(String value) {
/*       */         if (value == null) {
/*       */           throw new NullPointerException();
/*       */         }
/*       */         this.bitField0_ |= 0x2;
/*       */         this.playerName_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearPlayerName() {
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         this.playerName_ = GuildManagerHandler.RankInfo.getDefaultInstance().getPlayerName();
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setPlayerNameBytes(ByteString value) {
/*       */         if (value == null) {
/*       */           throw new NullPointerException();
/*       */         }
/*       */         this.bitField0_ |= 0x2;
/*       */         this.playerName_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasPlayerPro() {
/*       */         return ((this.bitField0_ & 0x4) == 4);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getPlayerPro() {
/*       */         return this.playerPro_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setPlayerPro(int value) {
/*       */         this.bitField0_ |= 0x4;
/*       */         this.playerPro_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearPlayerPro() {
/*       */         this.bitField0_ &= 0xFFFFFFFB;
/*       */         this.playerPro_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasLevel() {
/*       */         return ((this.bitField0_ & 0x8) == 8);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getLevel() {
/*       */         return this.level_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setLevel(int value) {
/*       */         this.bitField0_ |= 0x8;
/*       */         this.level_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearLevel() {
/*       */         this.bitField0_ &= 0xFFFFFFF7;
/*       */         this.level_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasUpGradeLevel() {
/*       */         return ((this.bitField0_ & 0x10) == 16);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getUpGradeLevel() {
/*       */         return this.upGradeLevel_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUpGradeLevel(int value) {
/*       */         this.bitField0_ |= 0x10;
/*       */         this.upGradeLevel_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearUpGradeLevel() {
/*       */         this.bitField0_ &= 0xFFFFFFEF;
/*       */         this.upGradeLevel_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasValue() {
/*       */         return ((this.bitField0_ & 0x20) == 32);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getValue() {
/*       */         return this.value_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setValue(int value) {
/*       */         this.bitField0_ |= 0x20;
/*       */         this.value_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearValue() {
/*       */         this.bitField0_ &= 0xFFFFFFDF;
/*       */         this.value_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class DungeonRankResponse
/*       */     extends GeneratedMessage
/*       */     implements DungeonRankResponseOrBuilder
/*       */   {
/* 27458 */     private static final DungeonRankResponse defaultInstance = new DungeonRankResponse(true); private final UnknownFieldSet unknownFields; private DungeonRankResponse(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private DungeonRankResponse(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static DungeonRankResponse getDefaultInstance() { return defaultInstance; } public DungeonRankResponse getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private DungeonRankResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.s2CCode_ = input.readInt32(); break;case 18: bs = input.readBytes(); this.bitField0_ |= 0x2; this.s2CMsg_ = bs; break;case 26: if ((mutable_bitField0_ & 0x4) != 4) { this.s2CData_ = new ArrayList<>(); mutable_bitField0_ |= 0x4; }  this.s2CData_.add(input.readMessage(GuildManagerHandler.RankInfo.PARSER, extensionRegistry)); break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x4) == 4) this.s2CData_ = Collections.unmodifiableList(this.s2CData_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_DungeonRankResponse_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_DungeonRankResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(DungeonRankResponse.class, Builder.class); } public static Parser<DungeonRankResponse> PARSER = (Parser<DungeonRankResponse>)new AbstractParser<DungeonRankResponse>() { public GuildManagerHandler.DungeonRankResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.DungeonRankResponse(input, extensionRegistry); } }
/* 27459 */     ; private int bitField0_; public static final int S2C_CODE_FIELD_NUMBER = 1; private int s2CCode_; public static final int S2C_MSG_FIELD_NUMBER = 2; private Object s2CMsg_; public static final int S2C_DATA_FIELD_NUMBER = 3; private List<GuildManagerHandler.RankInfo> s2CData_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<DungeonRankResponse> getParserForType() { return PARSER; } public boolean hasS2CCode() { return ((this.bitField0_ & 0x1) == 1); } public int getS2CCode() { return this.s2CCode_; } public boolean hasS2CMsg() { return ((this.bitField0_ & 0x2) == 2); } public String getS2CMsg() { Object ref = this.s2CMsg_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.s2CMsg_ = s;  return s; } public ByteString getS2CMsgBytes() { Object ref = this.s2CMsg_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.s2CMsg_ = b; return b; }  return (ByteString)ref; } static { defaultInstance.initFields(); } public List<GuildManagerHandler.RankInfo> getS2CDataList() { return this.s2CData_; }
/*       */     public List<? extends GuildManagerHandler.RankInfoOrBuilder> getS2CDataOrBuilderList() { return (List)this.s2CData_; }
/*       */     public int getS2CDataCount() { return this.s2CData_.size(); }
/*       */     public GuildManagerHandler.RankInfo getS2CData(int index) { return this.s2CData_.get(index); }
/*       */     public GuildManagerHandler.RankInfoOrBuilder getS2CDataOrBuilder(int index) { return this.s2CData_.get(index); }
/*       */     private void initFields() { this.s2CCode_ = 0; this.s2CMsg_ = ""; this.s2CData_ = Collections.emptyList(); }
/*       */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1)
/*       */         return true;  if (isInitialized == 0)
/*       */         return false;  if (!hasS2CCode()) {
/*       */         this.memoizedIsInitialized = 0; return false;
/*       */       }  for (int i = 0; i < getS2CDataCount(); i++) {
/*       */         if (!getS2CData(i).isInitialized()) {
/*       */           this.memoizedIsInitialized = 0; return false;
/*       */         } 
/*       */       } 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true; }
/*       */     public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize();
/*       */       if ((this.bitField0_ & 0x1) == 1)
/*       */         output.writeInt32(1, this.s2CCode_); 
/*       */       if ((this.bitField0_ & 0x2) == 2)
/*       */         output.writeBytes(2, getS2CMsgBytes()); 
/*       */       for (int i = 0; i < this.s2CData_.size(); i++)
/*       */         output.writeMessage(3, (MessageLite)this.s2CData_.get(i)); 
/*       */       getUnknownFields().writeTo(output); }
/*       */     public int getSerializedSize() { int size = this.memoizedSerializedSize;
/*       */       if (size != -1)
/*       */         return size; 
/*       */       size = 0;
/*       */       if ((this.bitField0_ & 0x1) == 1)
/*       */         size += CodedOutputStream.computeInt32Size(1, this.s2CCode_); 
/*       */       if ((this.bitField0_ & 0x2) == 2)
/*       */         size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes()); 
/*       */       for (int i = 0; i < this.s2CData_.size(); i++)
/*       */         size += CodedOutputStream.computeMessageSize(3, (MessageLite)this.s2CData_.get(i)); 
/*       */       size += getUnknownFields().getSerializedSize();
/*       */       this.memoizedSerializedSize = size;
/*       */       return size; }
/*       */     protected Object writeReplace() throws ObjectStreamException { return super.writeReplace(); }
/*       */     public static DungeonRankResponse parseFrom(ByteString data) throws InvalidProtocolBufferException { return (DungeonRankResponse)PARSER.parseFrom(data); }
/*       */     public static DungeonRankResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (DungeonRankResponse)PARSER.parseFrom(data, extensionRegistry); }
/*       */     public static DungeonRankResponse parseFrom(byte[] data) throws InvalidProtocolBufferException { return (DungeonRankResponse)PARSER.parseFrom(data); }
/*       */     public static DungeonRankResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (DungeonRankResponse)PARSER.parseFrom(data, extensionRegistry); }
/*       */     public static DungeonRankResponse parseFrom(InputStream input) throws IOException { return (DungeonRankResponse)PARSER.parseFrom(input); }
/*       */     public static DungeonRankResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (DungeonRankResponse)PARSER.parseFrom(input, extensionRegistry); }
/*       */     public static DungeonRankResponse parseDelimitedFrom(InputStream input) throws IOException { return (DungeonRankResponse)PARSER.parseDelimitedFrom(input); }
/*       */     public static DungeonRankResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (DungeonRankResponse)PARSER.parseDelimitedFrom(input, extensionRegistry); }
/*       */     public static DungeonRankResponse parseFrom(CodedInputStream input) throws IOException { return (DungeonRankResponse)PARSER.parseFrom(input); }
/*       */     public static DungeonRankResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (DungeonRankResponse)PARSER.parseFrom(input, extensionRegistry); }
/*       */     public static Builder newBuilder() { return Builder.create(); }
/*       */     public Builder newBuilderForType() { return newBuilder(); }
/*       */     public static Builder newBuilder(DungeonRankResponse prototype) { return newBuilder().mergeFrom(prototype); }
/*       */     public Builder toBuilder() { return newBuilder(this); }
/*       */     protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) { Builder builder = new Builder(parent);
/*       */       return builder; }
/*       */     public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.DungeonRankResponseOrBuilder { private int bitField0_; private int s2CCode_; private Object s2CMsg_; private List<GuildManagerHandler.RankInfo> s2CData_; private RepeatedFieldBuilder<GuildManagerHandler.RankInfo, GuildManagerHandler.RankInfo.Builder, GuildManagerHandler.RankInfoOrBuilder> s2CDataBuilder_;
/*       */       public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_DungeonRankResponse_descriptor; }
/*       */       protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_DungeonRankResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.DungeonRankResponse.class, Builder.class); }
/*       */       private Builder() { this.s2CMsg_ = "";
/*       */         this.s2CData_ = Collections.emptyList();
/*       */         maybeForceBuilderInitialization(); }
/*       */       private Builder(GeneratedMessage.BuilderParent parent) { super(parent);
/*       */         this.s2CMsg_ = "";
/*       */         this.s2CData_ = Collections.emptyList();
/*       */         maybeForceBuilderInitialization(); }
/*       */       private void maybeForceBuilderInitialization() { if (GuildManagerHandler.DungeonRankResponse.alwaysUseFieldBuilders)
/*       */           getS2CDataFieldBuilder();  }
/*       */       private static Builder create() { return new Builder(); }
/*       */       public Builder clear() { super.clear();
/*       */         this.s2CCode_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.s2CMsg_ = "";
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         if (this.s2CDataBuilder_ == null) {
/*       */           this.s2CData_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFFB;
/*       */         } else {
/*       */           this.s2CDataBuilder_.clear();
/*       */         } 
/*       */         return this; }
/*       */       public Builder clone() { return create().mergeFrom(buildPartial()); }
/*       */       public Descriptors.Descriptor getDescriptorForType() { return GuildManagerHandler.internal_static_pomelo_guild_DungeonRankResponse_descriptor; }
/*       */       public GuildManagerHandler.DungeonRankResponse getDefaultInstanceForType() { return GuildManagerHandler.DungeonRankResponse.getDefaultInstance(); }
/*       */       public GuildManagerHandler.DungeonRankResponse build() { GuildManagerHandler.DungeonRankResponse result = buildPartial();
/*       */         if (!result.isInitialized())
/*       */           throw newUninitializedMessageException(result); 
/*       */         return result; }
/*       */       public GuildManagerHandler.DungeonRankResponse buildPartial() { GuildManagerHandler.DungeonRankResponse result = new GuildManagerHandler.DungeonRankResponse(this);
/*       */         int from_bitField0_ = this.bitField0_;
/*       */         int to_bitField0_ = 0;
/*       */         if ((from_bitField0_ & 0x1) == 1)
/*       */           to_bitField0_ |= 0x1; 
/*       */         result.s2CCode_ = this.s2CCode_;
/*       */         if ((from_bitField0_ & 0x2) == 2)
/*       */           to_bitField0_ |= 0x2; 
/*       */         result.s2CMsg_ = this.s2CMsg_;
/*       */         if (this.s2CDataBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x4) == 4) {
/*       */             this.s2CData_ = Collections.unmodifiableList(this.s2CData_);
/*       */             this.bitField0_ &= 0xFFFFFFFB;
/*       */           } 
/*       */           result.s2CData_ = this.s2CData_;
/*       */         } else {
/*       */           result.s2CData_ = this.s2CDataBuilder_.build();
/*       */         } 
/*       */         result.bitField0_ = to_bitField0_;
/*       */         onBuilt();
/*       */         return result; }
/*       */       public Builder mergeFrom(Message other) { if (other instanceof GuildManagerHandler.DungeonRankResponse)
/*       */           return mergeFrom((GuildManagerHandler.DungeonRankResponse)other); 
/*       */         super.mergeFrom(other);
/*       */         return this; }
/*       */       public Builder mergeFrom(GuildManagerHandler.DungeonRankResponse other) { if (other == GuildManagerHandler.DungeonRankResponse.getDefaultInstance())
/*       */           return this; 
/*       */         if (other.hasS2CCode())
/*       */           setS2CCode(other.getS2CCode()); 
/*       */         if (other.hasS2CMsg()) {
/*       */           this.bitField0_ |= 0x2;
/*       */           this.s2CMsg_ = other.s2CMsg_;
/*       */           onChanged();
/*       */         } 
/*       */         if (this.s2CDataBuilder_ == null) {
/*       */           if (!other.s2CData_.isEmpty()) {
/*       */             if (this.s2CData_.isEmpty()) {
/*       */               this.s2CData_ = other.s2CData_;
/*       */               this.bitField0_ &= 0xFFFFFFFB;
/*       */             } else {
/*       */               ensureS2CDataIsMutable();
/*       */               this.s2CData_.addAll(other.s2CData_);
/*       */             } 
/*       */             onChanged();
/*       */           } 
/*       */         } else if (!other.s2CData_.isEmpty()) {
/*       */           if (this.s2CDataBuilder_.isEmpty()) {
/*       */             this.s2CDataBuilder_.dispose();
/*       */             this.s2CDataBuilder_ = null;
/*       */             this.s2CData_ = other.s2CData_;
/*       */             this.bitField0_ &= 0xFFFFFFFB;
/*       */             this.s2CDataBuilder_ = GuildManagerHandler.DungeonRankResponse.alwaysUseFieldBuilders ? getS2CDataFieldBuilder() : null;
/*       */           } else {
/*       */             this.s2CDataBuilder_.addAllMessages(other.s2CData_);
/*       */           } 
/*       */         } 
/*       */         mergeUnknownFields(other.getUnknownFields());
/*       */         return this; }
/*       */       public final boolean isInitialized() { if (!hasS2CCode())
/*       */           return false; 
/*       */         for (int i = 0; i < getS2CDataCount(); i++) {
/*       */           if (!getS2CData(i).isInitialized())
/*       */             return false; 
/*       */         } 
/*       */         return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { GuildManagerHandler.DungeonRankResponse parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (GuildManagerHandler.DungeonRankResponse)GuildManagerHandler.DungeonRankResponse.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (GuildManagerHandler.DungeonRankResponse)e.getUnfinishedMessage();
/*       */           throw e;
/*       */         } finally {
/*       */           if (parsedMessage != null)
/*       */             mergeFrom(parsedMessage); 
/*       */         } 
/*       */         return this; }
/*       */       public boolean hasS2CCode() { return ((this.bitField0_ & 0x1) == 1); }
/*       */       public int getS2CCode() { return this.s2CCode_; }
/*       */       public Builder setS2CCode(int value) { this.bitField0_ |= 0x1;
/*       */         this.s2CCode_ = value;
/*       */         onChanged();
/*       */         return this; }
/*       */       public Builder clearS2CCode() { this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.s2CCode_ = 0;
/*       */         onChanged();
/*       */         return this; }
/*       */       public boolean hasS2CMsg() { return ((this.bitField0_ & 0x2) == 2); }
/*       */       public String getS2CMsg() { Object ref = this.s2CMsg_;
/*       */         if (!(ref instanceof String)) {
/*       */           ByteString bs = (ByteString)ref;
/*       */           String s = bs.toStringUtf8();
/*       */           if (bs.isValidUtf8())
/*       */             this.s2CMsg_ = s; 
/*       */           return s;
/*       */         } 
/*       */         return (String)ref; }
/*       */       public ByteString getS2CMsgBytes() { Object ref = this.s2CMsg_;
/*       */         if (ref instanceof String) {
/*       */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           this.s2CMsg_ = b;
/*       */           return b;
/*       */         } 
/*       */         return (ByteString)ref; }
/*       */       public Builder setS2CMsg(String value) { if (value == null)
/*       */           throw new NullPointerException(); 
/*       */         this.bitField0_ |= 0x2;
/*       */         this.s2CMsg_ = value;
/*       */         onChanged();
/*       */         return this; }
/*       */       public Builder clearS2CMsg() { this.bitField0_ &= 0xFFFFFFFD;
/*       */         this.s2CMsg_ = GuildManagerHandler.DungeonRankResponse.getDefaultInstance().getS2CMsg();
/*       */         onChanged();
/*       */         return this; }
/*       */       public Builder setS2CMsgBytes(ByteString value) { if (value == null)
/*       */           throw new NullPointerException(); 
/*       */         this.bitField0_ |= 0x2;
/*       */         this.s2CMsg_ = value;
/*       */         onChanged();
/*       */         return this; }
/*       */       private void ensureS2CDataIsMutable() { if ((this.bitField0_ & 0x4) != 4) {
/*       */           this.s2CData_ = new ArrayList<>(this.s2CData_);
/*       */           this.bitField0_ |= 0x4;
/*       */         }  }
/*       */       public List<GuildManagerHandler.RankInfo> getS2CDataList() { if (this.s2CDataBuilder_ == null)
/*       */           return Collections.unmodifiableList(this.s2CData_); 
/*       */         return this.s2CDataBuilder_.getMessageList(); }
/*       */       public int getS2CDataCount() { if (this.s2CDataBuilder_ == null)
/*       */           return this.s2CData_.size(); 
/*       */         return this.s2CDataBuilder_.getCount(); }
/*       */       public GuildManagerHandler.RankInfo getS2CData(int index) { if (this.s2CDataBuilder_ == null)
/*       */           return this.s2CData_.get(index); 
/*       */         return (GuildManagerHandler.RankInfo)this.s2CDataBuilder_.getMessage(index); }
/*       */       public Builder setS2CData(int index, GuildManagerHandler.RankInfo value) { if (this.s2CDataBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureS2CDataIsMutable();
/*       */           this.s2CData_.set(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CDataBuilder_.setMessage(index, value);
/*       */         } 
/*       */         return this; }
/*       */       public Builder setS2CData(int index, GuildManagerHandler.RankInfo.Builder builderForValue) { if (this.s2CDataBuilder_ == null) {
/*       */           ensureS2CDataIsMutable();
/*       */           this.s2CData_.set(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CDataBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/*       */         return this; }
/*       */       public Builder addS2CData(GuildManagerHandler.RankInfo value) { if (this.s2CDataBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureS2CDataIsMutable();
/*       */           this.s2CData_.add(value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CDataBuilder_.addMessage(value);
/*       */         } 
/*       */         return this; }
/*       */       public Builder addS2CData(int index, GuildManagerHandler.RankInfo value) { if (this.s2CDataBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureS2CDataIsMutable();
/*       */           this.s2CData_.add(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CDataBuilder_.addMessage(index, value);
/*       */         } 
/*       */         return this; }
/*       */       public Builder addS2CData(GuildManagerHandler.RankInfo.Builder builderForValue) { if (this.s2CDataBuilder_ == null) {
/*       */           ensureS2CDataIsMutable();
/*       */           this.s2CData_.add(builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CDataBuilder_.addMessage(builderForValue.build());
/*       */         } 
/*       */         return this; }
/*       */       public Builder addS2CData(int index, GuildManagerHandler.RankInfo.Builder builderForValue) { if (this.s2CDataBuilder_ == null) {
/*       */           ensureS2CDataIsMutable();
/*       */           this.s2CData_.add(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CDataBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/*       */         return this; }
/*       */       public Builder addAllS2CData(Iterable<? extends GuildManagerHandler.RankInfo> values) { if (this.s2CDataBuilder_ == null) {
/*       */           ensureS2CDataIsMutable();
/*       */           AbstractMessageLite.Builder.addAll(values, this.s2CData_);
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CDataBuilder_.addAllMessages(values);
/*       */         } 
/*       */         return this; }
/*       */       public Builder clearS2CData() { if (this.s2CDataBuilder_ == null) {
/*       */           this.s2CData_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFFB;
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CDataBuilder_.clear();
/*       */         } 
/*       */         return this; }
/*       */       public Builder removeS2CData(int index) { if (this.s2CDataBuilder_ == null) {
/*       */           ensureS2CDataIsMutable();
/*       */           this.s2CData_.remove(index);
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CDataBuilder_.remove(index);
/*       */         } 
/*       */         return this; }
/*       */       public GuildManagerHandler.RankInfo.Builder getS2CDataBuilder(int index) { return (GuildManagerHandler.RankInfo.Builder)getS2CDataFieldBuilder().getBuilder(index); }
/*       */       public GuildManagerHandler.RankInfoOrBuilder getS2CDataOrBuilder(int index) { if (this.s2CDataBuilder_ == null)
/*       */           return this.s2CData_.get(index); 
/*       */         return (GuildManagerHandler.RankInfoOrBuilder)this.s2CDataBuilder_.getMessageOrBuilder(index); }
/*       */       public List<? extends GuildManagerHandler.RankInfoOrBuilder> getS2CDataOrBuilderList() { if (this.s2CDataBuilder_ != null)
/*       */           return this.s2CDataBuilder_.getMessageOrBuilderList(); 
/*       */         return Collections.unmodifiableList((List)this.s2CData_); }
/*       */       public GuildManagerHandler.RankInfo.Builder addS2CDataBuilder() { return (GuildManagerHandler.RankInfo.Builder)getS2CDataFieldBuilder().addBuilder(GuildManagerHandler.RankInfo.getDefaultInstance()); }
/*       */       public GuildManagerHandler.RankInfo.Builder addS2CDataBuilder(int index) { return (GuildManagerHandler.RankInfo.Builder)getS2CDataFieldBuilder().addBuilder(index, GuildManagerHandler.RankInfo.getDefaultInstance()); }
/*       */       public List<GuildManagerHandler.RankInfo.Builder> getS2CDataBuilderList() { return getS2CDataFieldBuilder().getBuilderList(); }
/*       */       private RepeatedFieldBuilder<GuildManagerHandler.RankInfo, GuildManagerHandler.RankInfo.Builder, GuildManagerHandler.RankInfoOrBuilder> getS2CDataFieldBuilder() { if (this.s2CDataBuilder_ == null) {
/*       */           this.s2CDataBuilder_ = new RepeatedFieldBuilder(this.s2CData_, ((this.bitField0_ & 0x4) == 4), getParentForChildren(), isClean());
/*       */           this.s2CData_ = null;
/*       */         } 
/*       */         return this.s2CDataBuilder_; } } }
/* 27771 */   public static final class DungeonAwardInfoRequest extends GeneratedMessage implements DungeonAwardInfoRequestOrBuilder { private static final DungeonAwardInfoRequest defaultInstance = new DungeonAwardInfoRequest(true); private final UnknownFieldSet unknownFields; private DungeonAwardInfoRequest(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private DungeonAwardInfoRequest(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static DungeonAwardInfoRequest getDefaultInstance() { return defaultInstance; } public DungeonAwardInfoRequest getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private DungeonAwardInfoRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_DungeonAwardInfoRequest_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_DungeonAwardInfoRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(DungeonAwardInfoRequest.class, Builder.class); } public static Parser<DungeonAwardInfoRequest> PARSER = (Parser<DungeonAwardInfoRequest>)new AbstractParser<DungeonAwardInfoRequest>() { public GuildManagerHandler.DungeonAwardInfoRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.DungeonAwardInfoRequest(input, extensionRegistry); } }; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<DungeonAwardInfoRequest> getParserForType() { return PARSER; } private void initFields() {} public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); getUnknownFields().writeTo(output); } public int getSerializedSize() { int size = this.memoizedSerializedSize; if (size != -1) return size;  size = 0; size += getUnknownFields().getSerializedSize(); this.memoizedSerializedSize = size; return size; } protected Object writeReplace() throws ObjectStreamException { return super.writeReplace(); } public static DungeonAwardInfoRequest parseFrom(ByteString data) throws InvalidProtocolBufferException { return (DungeonAwardInfoRequest)PARSER.parseFrom(data); } public static DungeonAwardInfoRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (DungeonAwardInfoRequest)PARSER.parseFrom(data, extensionRegistry); } public static DungeonAwardInfoRequest parseFrom(byte[] data) throws InvalidProtocolBufferException { return (DungeonAwardInfoRequest)PARSER.parseFrom(data); } public static DungeonAwardInfoRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (DungeonAwardInfoRequest)PARSER.parseFrom(data, extensionRegistry); } public static DungeonAwardInfoRequest parseFrom(InputStream input) throws IOException { return (DungeonAwardInfoRequest)PARSER.parseFrom(input); } public static DungeonAwardInfoRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (DungeonAwardInfoRequest)PARSER.parseFrom(input, extensionRegistry); } public static DungeonAwardInfoRequest parseDelimitedFrom(InputStream input) throws IOException { return (DungeonAwardInfoRequest)PARSER.parseDelimitedFrom(input); } public static DungeonAwardInfoRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (DungeonAwardInfoRequest)PARSER.parseDelimitedFrom(input, extensionRegistry); } public static DungeonAwardInfoRequest parseFrom(CodedInputStream input) throws IOException { return (DungeonAwardInfoRequest)PARSER.parseFrom(input); } public static DungeonAwardInfoRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (DungeonAwardInfoRequest)PARSER.parseFrom(input, extensionRegistry); } public static Builder newBuilder() { return Builder.create(); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder(DungeonAwardInfoRequest prototype) { return newBuilder().mergeFrom(prototype); } public Builder toBuilder() { return newBuilder(this); } protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.DungeonAwardInfoRequestOrBuilder {
/* 27772 */       public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_DungeonAwardInfoRequest_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_DungeonAwardInfoRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.DungeonAwardInfoRequest.class, Builder.class); } private Builder() { maybeForceBuilderInitialization(); } private Builder(GeneratedMessage.BuilderParent parent) { super(parent); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GuildManagerHandler.DungeonAwardInfoRequest.alwaysUseFieldBuilders); } private static Builder create() { return new Builder(); } public Builder clear() { super.clear(); return this; } public Builder clone() { return create().mergeFrom(buildPartial()); } public Descriptors.Descriptor getDescriptorForType() { return GuildManagerHandler.internal_static_pomelo_guild_DungeonAwardInfoRequest_descriptor; } public GuildManagerHandler.DungeonAwardInfoRequest getDefaultInstanceForType() { return GuildManagerHandler.DungeonAwardInfoRequest.getDefaultInstance(); } public GuildManagerHandler.DungeonAwardInfoRequest build() { GuildManagerHandler.DungeonAwardInfoRequest result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public GuildManagerHandler.DungeonAwardInfoRequest buildPartial() { GuildManagerHandler.DungeonAwardInfoRequest result = new GuildManagerHandler.DungeonAwardInfoRequest(this); onBuilt(); return result; } public Builder mergeFrom(Message other) { if (other instanceof GuildManagerHandler.DungeonAwardInfoRequest) return mergeFrom((GuildManagerHandler.DungeonAwardInfoRequest)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(GuildManagerHandler.DungeonAwardInfoRequest other) { if (other == GuildManagerHandler.DungeonAwardInfoRequest.getDefaultInstance()) return this;  mergeUnknownFields(other.getUnknownFields()); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { GuildManagerHandler.DungeonAwardInfoRequest parsedMessage = null; try { parsedMessage = (GuildManagerHandler.DungeonAwardInfoRequest)GuildManagerHandler.DungeonAwardInfoRequest.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (GuildManagerHandler.DungeonAwardInfoRequest)e.getUnfinishedMessage(); throw e; } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } } static { defaultInstance.initFields(); }
/*       */      }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class DiceInfo
/*       */     extends GeneratedMessage
/*       */     implements DiceInfoOrBuilder
/*       */   {
/* 28427 */     private static final DiceInfo defaultInstance = new DiceInfo(true); private final UnknownFieldSet unknownFields; private DiceInfo(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private DiceInfo(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static DiceInfo getDefaultInstance() { return defaultInstance; } public DiceInfo getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private DiceInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 10: bs = input.readBytes(); this.bitField0_ |= 0x1; this.playerName_ = bs; break;case 16: this.bitField0_ |= 0x2; this.playerPro_ = input.readInt32(); break;case 24: this.bitField0_ |= 0x4; this.dicePoint_ = input.readInt32(); break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_DiceInfo_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_DiceInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(DiceInfo.class, Builder.class); } public static Parser<DiceInfo> PARSER = (Parser<DiceInfo>)new AbstractParser<DiceInfo>() { public GuildManagerHandler.DiceInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.DiceInfo(input, extensionRegistry); } }; private int bitField0_; public static final int PLAYERNAME_FIELD_NUMBER = 1; private Object playerName_; public static final int PLAYERPRO_FIELD_NUMBER = 2; private int playerPro_; public static final int DICEPOINT_FIELD_NUMBER = 3; private int dicePoint_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<DiceInfo> getParserForType() { return PARSER; } public boolean hasPlayerName() { return ((this.bitField0_ & 0x1) == 1); } public String getPlayerName() { Object ref = this.playerName_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.playerName_ = s;  return s; } public ByteString getPlayerNameBytes() { Object ref = this.playerName_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.playerName_ = b; return b; }  return (ByteString)ref; } public boolean hasPlayerPro() { return ((this.bitField0_ & 0x2) == 2); } public int getPlayerPro() { return this.playerPro_; } public boolean hasDicePoint() { return ((this.bitField0_ & 0x4) == 4); } public int getDicePoint() { return this.dicePoint_; } private void initFields() { this.playerName_ = ""; this.playerPro_ = 0; this.dicePoint_ = 0; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  if (!hasPlayerName()) { this.memoizedIsInitialized = 0; return false; }  if (!hasPlayerPro()) { this.memoizedIsInitialized = 0; return false; }  if (!hasDicePoint()) { this.memoizedIsInitialized = 0; return false; }  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); if ((this.bitField0_ & 0x1) == 1) output.writeBytes(1, getPlayerNameBytes());  if ((this.bitField0_ & 0x2) == 2) output.writeInt32(2, this.playerPro_);  if ((this.bitField0_ & 0x4) == 4) output.writeInt32(3, this.dicePoint_);  getUnknownFields().writeTo(output); } public int getSerializedSize() { int size = this.memoizedSerializedSize; if (size != -1) return size;  size = 0; if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeBytesSize(1, getPlayerNameBytes());  if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeInt32Size(2, this.playerPro_);  if ((this.bitField0_ & 0x4) == 4) size += CodedOutputStream.computeInt32Size(3, this.dicePoint_);  size += getUnknownFields().getSerializedSize(); this.memoizedSerializedSize = size; return size; } protected Object writeReplace() throws ObjectStreamException { return super.writeReplace(); } public static DiceInfo parseFrom(ByteString data) throws InvalidProtocolBufferException { return (DiceInfo)PARSER.parseFrom(data); } public static DiceInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (DiceInfo)PARSER.parseFrom(data, extensionRegistry); } public static DiceInfo parseFrom(byte[] data) throws InvalidProtocolBufferException { return (DiceInfo)PARSER.parseFrom(data); } public static DiceInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (DiceInfo)PARSER.parseFrom(data, extensionRegistry); } public static DiceInfo parseFrom(InputStream input) throws IOException { return (DiceInfo)PARSER.parseFrom(input); } public static DiceInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (DiceInfo)PARSER.parseFrom(input, extensionRegistry); } public static DiceInfo parseDelimitedFrom(InputStream input) throws IOException { return (DiceInfo)PARSER.parseDelimitedFrom(input); } public static DiceInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (DiceInfo)PARSER.parseDelimitedFrom(input, extensionRegistry); } public static DiceInfo parseFrom(CodedInputStream input) throws IOException { return (DiceInfo)PARSER.parseFrom(input); } public static DiceInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (DiceInfo)PARSER.parseFrom(input, extensionRegistry); } public static Builder newBuilder() { return Builder.create(); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder(DiceInfo prototype) { return newBuilder().mergeFrom(prototype); } public Builder toBuilder() { return newBuilder(this); } protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.DiceInfoOrBuilder {
/* 28428 */       private int bitField0_; private Object playerName_; private int playerPro_; private int dicePoint_; public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_DiceInfo_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_DiceInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.DiceInfo.class, Builder.class); } private Builder() { this.playerName_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessage.BuilderParent parent) { super(parent); this.playerName_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GuildManagerHandler.DiceInfo.alwaysUseFieldBuilders); } private static Builder create() { return new Builder(); } public Builder clear() { super.clear(); this.playerName_ = ""; this.bitField0_ &= 0xFFFFFFFE; this.playerPro_ = 0; this.bitField0_ &= 0xFFFFFFFD; this.dicePoint_ = 0; this.bitField0_ &= 0xFFFFFFFB; return this; } public Builder clone() { return create().mergeFrom(buildPartial()); } public Descriptors.Descriptor getDescriptorForType() { return GuildManagerHandler.internal_static_pomelo_guild_DiceInfo_descriptor; } public GuildManagerHandler.DiceInfo getDefaultInstanceForType() { return GuildManagerHandler.DiceInfo.getDefaultInstance(); } public GuildManagerHandler.DiceInfo build() { GuildManagerHandler.DiceInfo result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public GuildManagerHandler.DiceInfo buildPartial() { GuildManagerHandler.DiceInfo result = new GuildManagerHandler.DiceInfo(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;  result.playerName_ = this.playerName_; if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;  result.playerPro_ = this.playerPro_; if ((from_bitField0_ & 0x4) == 4) to_bitField0_ |= 0x4;  result.dicePoint_ = this.dicePoint_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder mergeFrom(Message other) { if (other instanceof GuildManagerHandler.DiceInfo) return mergeFrom((GuildManagerHandler.DiceInfo)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(GuildManagerHandler.DiceInfo other) { if (other == GuildManagerHandler.DiceInfo.getDefaultInstance()) return this;  if (other.hasPlayerName()) { this.bitField0_ |= 0x1; this.playerName_ = other.playerName_; onChanged(); }  if (other.hasPlayerPro()) setPlayerPro(other.getPlayerPro());  if (other.hasDicePoint()) setDicePoint(other.getDicePoint());  mergeUnknownFields(other.getUnknownFields()); return this; } public final boolean isInitialized() { if (!hasPlayerName()) return false;  if (!hasPlayerPro()) return false;  if (!hasDicePoint()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { GuildManagerHandler.DiceInfo parsedMessage = null; try { parsedMessage = (GuildManagerHandler.DiceInfo)GuildManagerHandler.DiceInfo.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (GuildManagerHandler.DiceInfo)e.getUnfinishedMessage(); throw e; } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasPlayerName() { return ((this.bitField0_ & 0x1) == 1); } public String getPlayerName() { Object ref = this.playerName_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.playerName_ = s;  return s; }  return (String)ref; } public ByteString getPlayerNameBytes() { Object ref = this.playerName_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.playerName_ = b; return b; }  return (ByteString)ref; } public Builder setPlayerName(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.playerName_ = value; onChanged(); return this; } public Builder clearPlayerName() { this.bitField0_ &= 0xFFFFFFFE; this.playerName_ = GuildManagerHandler.DiceInfo.getDefaultInstance().getPlayerName(); onChanged(); return this; } public Builder setPlayerNameBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.playerName_ = value; onChanged(); return this; } public boolean hasPlayerPro() { return ((this.bitField0_ & 0x2) == 2); } public int getPlayerPro() { return this.playerPro_; } public Builder setPlayerPro(int value) { this.bitField0_ |= 0x2; this.playerPro_ = value; onChanged(); return this; } public Builder clearPlayerPro() { this.bitField0_ &= 0xFFFFFFFD; this.playerPro_ = 0; onChanged(); return this; } public boolean hasDicePoint() { return ((this.bitField0_ & 0x4) == 4); } public int getDicePoint() { return this.dicePoint_; } public Builder setDicePoint(int value) { this.bitField0_ |= 0x4; this.dicePoint_ = value; onChanged(); return this; } public Builder clearDicePoint() { this.bitField0_ &= 0xFFFFFFFB; this.dicePoint_ = 0; onChanged(); return this; } } static { defaultInstance.initFields(); }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class AwardInfo
/*       */     extends GeneratedMessage
/*       */     implements AwardInfoOrBuilder
/*       */   {
/* 30150 */     private static final AwardInfo defaultInstance = new AwardInfo(true); private final UnknownFieldSet unknownFields; private AwardInfo(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private AwardInfo(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static AwardInfo getDefaultInstance() { return defaultInstance; } public AwardInfo getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private AwardInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ItemOuterClass.ItemDetail.Builder subBuilder; ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.pos_ = input.readInt32(); break;case 18: subBuilder = null; if ((this.bitField0_ & 0x2) == 2) subBuilder = this.dropItem_.toBuilder();  this.dropItem_ = (ItemOuterClass.ItemDetail)input.readMessage(ItemOuterClass.ItemDetail.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.dropItem_); this.dropItem_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x2; break;case 24: this.bitField0_ |= 0x4; this.dungeonCount_ = input.readInt32(); break;case 34: bs = input.readBytes(); this.bitField0_ |= 0x8; this.playerName_ = bs; break;case 40: this.bitField0_ |= 0x10; this.playerPro_ = input.readInt32(); break;case 48: this.bitField0_ |= 0x20; this.playerDicePoint_ = input.readInt32(); break;case 56: this.bitField0_ |= 0x40; this.state_ = input.readInt32(); break;case 66: if ((mutable_bitField0_ & 0x80) != 128) { this.diceInfo_ = new ArrayList<>(); mutable_bitField0_ |= 0x80; }  this.diceInfo_.add(input.readMessage(GuildManagerHandler.DiceInfo.PARSER, extensionRegistry)); break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x80) == 128) this.diceInfo_ = Collections.unmodifiableList(this.diceInfo_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_AwardInfo_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_AwardInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(AwardInfo.class, Builder.class); } public static Parser<AwardInfo> PARSER = (Parser<AwardInfo>)new AbstractParser<AwardInfo>() { public GuildManagerHandler.AwardInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.AwardInfo(input, extensionRegistry); } }
/* 30151 */     ; private int bitField0_; public static final int POS_FIELD_NUMBER = 1; private int pos_; public static final int DROPITEM_FIELD_NUMBER = 2; private ItemOuterClass.ItemDetail dropItem_; public static final int DUNGEONCOUNT_FIELD_NUMBER = 3; private int dungeonCount_; public static final int PLAYERNAME_FIELD_NUMBER = 4; private Object playerName_; public static final int PLAYERPRO_FIELD_NUMBER = 5; private int playerPro_; public static final int PLAYERDICEPOINT_FIELD_NUMBER = 6; private int playerDicePoint_; public static final int STATE_FIELD_NUMBER = 7; private int state_; public static final int DICEINFO_FIELD_NUMBER = 8; private List<GuildManagerHandler.DiceInfo> diceInfo_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<AwardInfo> getParserForType() { return PARSER; } public boolean hasPos() { return ((this.bitField0_ & 0x1) == 1); } public int getPos() { return this.pos_; } public boolean hasDropItem() { return ((this.bitField0_ & 0x2) == 2); } public ItemOuterClass.ItemDetail getDropItem() { return this.dropItem_; } public ItemOuterClass.ItemDetailOrBuilder getDropItemOrBuilder() { return (ItemOuterClass.ItemDetailOrBuilder)this.dropItem_; } static { defaultInstance.initFields(); }
/*       */      public boolean hasDungeonCount() {
/*       */       return ((this.bitField0_ & 0x4) == 4);
/*       */     } public int getDungeonCount() {
/*       */       return this.dungeonCount_;
/*       */     } public boolean hasPlayerName() {
/*       */       return ((this.bitField0_ & 0x8) == 8);
/*       */     } public String getPlayerName() {
/*       */       Object ref = this.playerName_;
/*       */       if (ref instanceof String)
/*       */         return (String)ref; 
/*       */       ByteString bs = (ByteString)ref;
/*       */       String s = bs.toStringUtf8();
/*       */       if (bs.isValidUtf8())
/*       */         this.playerName_ = s; 
/*       */       return s;
/*       */     } public ByteString getPlayerNameBytes() {
/*       */       Object ref = this.playerName_;
/*       */       if (ref instanceof String) {
/*       */         ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */         this.playerName_ = b;
/*       */         return b;
/*       */       } 
/*       */       return (ByteString)ref;
/*       */     } public boolean hasPlayerPro() {
/*       */       return ((this.bitField0_ & 0x10) == 16);
/*       */     } public int getPlayerPro() {
/*       */       return this.playerPro_;
/*       */     } public boolean hasPlayerDicePoint() {
/*       */       return ((this.bitField0_ & 0x20) == 32);
/*       */     } public int getPlayerDicePoint() {
/*       */       return this.playerDicePoint_;
/*       */     } public boolean hasState() {
/*       */       return ((this.bitField0_ & 0x40) == 64);
/*       */     } public int getState() {
/*       */       return this.state_;
/*       */     } public List<GuildManagerHandler.DiceInfo> getDiceInfoList() {
/*       */       return this.diceInfo_;
/*       */     } public List<? extends GuildManagerHandler.DiceInfoOrBuilder> getDiceInfoOrBuilderList() {
/*       */       return (List)this.diceInfo_;
/*       */     } public int getDiceInfoCount() {
/*       */       return this.diceInfo_.size();
/*       */     } public GuildManagerHandler.DiceInfo getDiceInfo(int index) {
/*       */       return this.diceInfo_.get(index);
/*       */     } public GuildManagerHandler.DiceInfoOrBuilder getDiceInfoOrBuilder(int index) {
/*       */       return this.diceInfo_.get(index);
/*       */     } private void initFields() {
/*       */       this.pos_ = 0;
/*       */       this.dropItem_ = ItemOuterClass.ItemDetail.getDefaultInstance();
/*       */       this.dungeonCount_ = 0;
/*       */       this.playerName_ = "";
/*       */       this.playerPro_ = 0;
/*       */       this.playerDicePoint_ = 0;
/*       */       this.state_ = 0;
/*       */       this.diceInfo_ = Collections.emptyList();
/*       */     } public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1)
/*       */         return true; 
/*       */       if (isInitialized == 0)
/*       */         return false; 
/*       */       if (!hasPos()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       if (!hasDropItem()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       if (!hasDungeonCount()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       if (!hasState()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       if (!getDropItem().isInitialized()) {
/*       */         this.memoizedIsInitialized = 0;
/*       */         return false;
/*       */       } 
/*       */       for (int i = 0; i < getDiceInfoCount(); i++) {
/*       */         if (!getDiceInfo(i).isInitialized()) {
/*       */           this.memoizedIsInitialized = 0;
/*       */           return false;
/*       */         } 
/*       */       } 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     } public void writeTo(CodedOutputStream output) throws IOException {
/*       */       getSerializedSize();
/*       */       if ((this.bitField0_ & 0x1) == 1)
/*       */         output.writeInt32(1, this.pos_); 
/*       */       if ((this.bitField0_ & 0x2) == 2)
/*       */         output.writeMessage(2, (MessageLite)this.dropItem_); 
/*       */       if ((this.bitField0_ & 0x4) == 4)
/*       */         output.writeInt32(3, this.dungeonCount_); 
/*       */       if ((this.bitField0_ & 0x8) == 8)
/*       */         output.writeBytes(4, getPlayerNameBytes()); 
/*       */       if ((this.bitField0_ & 0x10) == 16)
/*       */         output.writeInt32(5, this.playerPro_); 
/*       */       if ((this.bitField0_ & 0x20) == 32)
/*       */         output.writeInt32(6, this.playerDicePoint_); 
/*       */       if ((this.bitField0_ & 0x40) == 64)
/*       */         output.writeInt32(7, this.state_); 
/*       */       for (int i = 0; i < this.diceInfo_.size(); i++)
/*       */         output.writeMessage(8, (MessageLite)this.diceInfo_.get(i)); 
/*       */       getUnknownFields().writeTo(output);
/*       */     } public int getSerializedSize() {
/*       */       int size = this.memoizedSerializedSize;
/*       */       if (size != -1)
/*       */         return size; 
/*       */       size = 0;
/*       */       if ((this.bitField0_ & 0x1) == 1)
/*       */         size += CodedOutputStream.computeInt32Size(1, this.pos_); 
/*       */       if ((this.bitField0_ & 0x2) == 2)
/*       */         size += CodedOutputStream.computeMessageSize(2, (MessageLite)this.dropItem_); 
/*       */       if ((this.bitField0_ & 0x4) == 4)
/*       */         size += CodedOutputStream.computeInt32Size(3, this.dungeonCount_); 
/*       */       if ((this.bitField0_ & 0x8) == 8)
/*       */         size += CodedOutputStream.computeBytesSize(4, getPlayerNameBytes()); 
/*       */       if ((this.bitField0_ & 0x10) == 16)
/*       */         size += CodedOutputStream.computeInt32Size(5, this.playerPro_); 
/*       */       if ((this.bitField0_ & 0x20) == 32)
/*       */         size += CodedOutputStream.computeInt32Size(6, this.playerDicePoint_); 
/*       */       if ((this.bitField0_ & 0x40) == 64)
/*       */         size += CodedOutputStream.computeInt32Size(7, this.state_); 
/*       */       for (int i = 0; i < this.diceInfo_.size(); i++)
/*       */         size += CodedOutputStream.computeMessageSize(8, (MessageLite)this.diceInfo_.get(i)); 
/*       */       size += getUnknownFields().getSerializedSize();
/*       */       this.memoizedSerializedSize = size;
/*       */       return size;
/*       */     } protected Object writeReplace() throws ObjectStreamException {
/*       */       return super.writeReplace();
/*       */     } public static AwardInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (AwardInfo)PARSER.parseFrom(data);
/*       */     } public static AwardInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (AwardInfo)PARSER.parseFrom(data, extensionRegistry);
/*       */     } public static AwardInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (AwardInfo)PARSER.parseFrom(data);
/*       */     } public static AwardInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (AwardInfo)PARSER.parseFrom(data, extensionRegistry);
/*       */     } public static AwardInfo parseFrom(InputStream input) throws IOException {
/*       */       return (AwardInfo)PARSER.parseFrom(input);
/*       */     } public static AwardInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (AwardInfo)PARSER.parseFrom(input, extensionRegistry);
/*       */     } public static AwardInfo parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (AwardInfo)PARSER.parseDelimitedFrom(input);
/*       */     } public static AwardInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (AwardInfo)PARSER.parseDelimitedFrom(input, extensionRegistry);
/*       */     } public static AwardInfo parseFrom(CodedInputStream input) throws IOException {
/*       */       return (AwardInfo)PARSER.parseFrom(input);
/*       */     } public static AwardInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (AwardInfo)PARSER.parseFrom(input, extensionRegistry);
/*       */     } public static Builder newBuilder() {
/*       */       return Builder.create();
/*       */     } public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     } public static Builder newBuilder(AwardInfo prototype) {
/*       */       return newBuilder().mergeFrom(prototype);
/*       */     } public Builder toBuilder() {
/*       */       return newBuilder(this);
/*       */     } protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
/*       */       Builder builder = new Builder(parent);
/*       */       return builder;
/*       */     } public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.AwardInfoOrBuilder { private int bitField0_; private int pos_; private ItemOuterClass.ItemDetail dropItem_; private SingleFieldBuilder<ItemOuterClass.ItemDetail, ItemOuterClass.ItemDetail.Builder, ItemOuterClass.ItemDetailOrBuilder> dropItemBuilder_; private int dungeonCount_; private Object playerName_; private int playerPro_; private int playerDicePoint_; private int state_; private List<GuildManagerHandler.DiceInfo> diceInfo_; private RepeatedFieldBuilder<GuildManagerHandler.DiceInfo, GuildManagerHandler.DiceInfo.Builder, GuildManagerHandler.DiceInfoOrBuilder> diceInfoBuilder_; public static final Descriptors.Descriptor getDescriptor() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_AwardInfo_descriptor;
/*       */       } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_AwardInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.AwardInfo.class, Builder.class);
/*       */       } private Builder() {
/*       */         this.dropItem_ = ItemOuterClass.ItemDetail.getDefaultInstance();
/*       */         this.playerName_ = "";
/*       */         this.diceInfo_ = Collections.emptyList();
/*       */         maybeForceBuilderInitialization();
/*       */       } private Builder(GeneratedMessage.BuilderParent parent) {
/*       */         super(parent);
/*       */         this.dropItem_ = ItemOuterClass.ItemDetail.getDefaultInstance();
/*       */         this.playerName_ = "";
/*       */         this.diceInfo_ = Collections.emptyList();
/*       */         maybeForceBuilderInitialization();
/*       */       } private void maybeForceBuilderInitialization() {
/*       */         if (GuildManagerHandler.AwardInfo.alwaysUseFieldBuilders) {
/*       */           getDropItemFieldBuilder();
/*       */           getDiceInfoFieldBuilder();
/*       */         } 
/*       */       } private static Builder create() {
/*       */         return new Builder();
/*       */       } public Builder clear() {
/*       */         super.clear();
/*       */         this.pos_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         if (this.dropItemBuilder_ == null) {
/*       */           this.dropItem_ = ItemOuterClass.ItemDetail.getDefaultInstance();
/*       */         } else {
/*       */           this.dropItemBuilder_.clear();
/*       */         } 
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         this.dungeonCount_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFFB;
/*       */         this.playerName_ = "";
/*       */         this.bitField0_ &= 0xFFFFFFF7;
/*       */         this.playerPro_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFEF;
/*       */         this.playerDicePoint_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFDF;
/*       */         this.state_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFBF;
/*       */         if (this.diceInfoBuilder_ == null) {
/*       */           this.diceInfo_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFF7F;
/*       */         } else {
/*       */           this.diceInfoBuilder_.clear();
/*       */         } 
/*       */         return this;
/*       */       } public Builder clone() {
/*       */         return create().mergeFrom(buildPartial());
/*       */       } public Descriptors.Descriptor getDescriptorForType() {
/*       */         return GuildManagerHandler.internal_static_pomelo_guild_AwardInfo_descriptor;
/*       */       } public GuildManagerHandler.AwardInfo getDefaultInstanceForType() {
/*       */         return GuildManagerHandler.AwardInfo.getDefaultInstance();
/*       */       } public GuildManagerHandler.AwardInfo build() {
/*       */         GuildManagerHandler.AwardInfo result = buildPartial();
/*       */         if (!result.isInitialized())
/*       */           throw newUninitializedMessageException(result); 
/*       */         return result;
/*       */       } public GuildManagerHandler.AwardInfo buildPartial() {
/*       */         GuildManagerHandler.AwardInfo result = new GuildManagerHandler.AwardInfo(this);
/*       */         int from_bitField0_ = this.bitField0_;
/*       */         int to_bitField0_ = 0;
/*       */         if ((from_bitField0_ & 0x1) == 1)
/*       */           to_bitField0_ |= 0x1; 
/*       */         result.pos_ = this.pos_;
/*       */         if ((from_bitField0_ & 0x2) == 2)
/*       */           to_bitField0_ |= 0x2; 
/*       */         if (this.dropItemBuilder_ == null) {
/*       */           result.dropItem_ = this.dropItem_;
/*       */         } else {
/*       */           result.dropItem_ = (ItemOuterClass.ItemDetail)this.dropItemBuilder_.build();
/*       */         } 
/*       */         if ((from_bitField0_ & 0x4) == 4)
/*       */           to_bitField0_ |= 0x4; 
/*       */         result.dungeonCount_ = this.dungeonCount_;
/*       */         if ((from_bitField0_ & 0x8) == 8)
/*       */           to_bitField0_ |= 0x8; 
/*       */         result.playerName_ = this.playerName_;
/*       */         if ((from_bitField0_ & 0x10) == 16)
/*       */           to_bitField0_ |= 0x10; 
/*       */         result.playerPro_ = this.playerPro_;
/*       */         if ((from_bitField0_ & 0x20) == 32)
/*       */           to_bitField0_ |= 0x20; 
/*       */         result.playerDicePoint_ = this.playerDicePoint_;
/*       */         if ((from_bitField0_ & 0x40) == 64)
/*       */           to_bitField0_ |= 0x40; 
/*       */         result.state_ = this.state_;
/*       */         if (this.diceInfoBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x80) == 128) {
/*       */             this.diceInfo_ = Collections.unmodifiableList(this.diceInfo_);
/*       */             this.bitField0_ &= 0xFFFFFF7F;
/*       */           } 
/*       */           result.diceInfo_ = this.diceInfo_;
/*       */         } else {
/*       */           result.diceInfo_ = this.diceInfoBuilder_.build();
/*       */         } 
/*       */         result.bitField0_ = to_bitField0_;
/*       */         onBuilt();
/*       */         return result;
/*       */       } public Builder mergeFrom(Message other) {
/*       */         if (other instanceof GuildManagerHandler.AwardInfo)
/*       */           return mergeFrom((GuildManagerHandler.AwardInfo)other); 
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       } public Builder mergeFrom(GuildManagerHandler.AwardInfo other) {
/*       */         if (other == GuildManagerHandler.AwardInfo.getDefaultInstance())
/*       */           return this; 
/*       */         if (other.hasPos())
/*       */           setPos(other.getPos()); 
/*       */         if (other.hasDropItem())
/*       */           mergeDropItem(other.getDropItem()); 
/*       */         if (other.hasDungeonCount())
/*       */           setDungeonCount(other.getDungeonCount()); 
/*       */         if (other.hasPlayerName()) {
/*       */           this.bitField0_ |= 0x8;
/*       */           this.playerName_ = other.playerName_;
/*       */           onChanged();
/*       */         } 
/*       */         if (other.hasPlayerPro())
/*       */           setPlayerPro(other.getPlayerPro()); 
/*       */         if (other.hasPlayerDicePoint())
/*       */           setPlayerDicePoint(other.getPlayerDicePoint()); 
/*       */         if (other.hasState())
/*       */           setState(other.getState()); 
/*       */         if (this.diceInfoBuilder_ == null) {
/*       */           if (!other.diceInfo_.isEmpty()) {
/*       */             if (this.diceInfo_.isEmpty()) {
/*       */               this.diceInfo_ = other.diceInfo_;
/*       */               this.bitField0_ &= 0xFFFFFF7F;
/*       */             } else {
/*       */               ensureDiceInfoIsMutable();
/*       */               this.diceInfo_.addAll(other.diceInfo_);
/*       */             } 
/*       */             onChanged();
/*       */           } 
/*       */         } else if (!other.diceInfo_.isEmpty()) {
/*       */           if (this.diceInfoBuilder_.isEmpty()) {
/*       */             this.diceInfoBuilder_.dispose();
/*       */             this.diceInfoBuilder_ = null;
/*       */             this.diceInfo_ = other.diceInfo_;
/*       */             this.bitField0_ &= 0xFFFFFF7F;
/*       */             this.diceInfoBuilder_ = GuildManagerHandler.AwardInfo.alwaysUseFieldBuilders ? getDiceInfoFieldBuilder() : null;
/*       */           } else {
/*       */             this.diceInfoBuilder_.addAllMessages(other.diceInfo_);
/*       */           } 
/*       */         } 
/*       */         mergeUnknownFields(other.getUnknownFields());
/*       */         return this;
/*       */       } public final boolean isInitialized() {
/*       */         if (!hasPos())
/*       */           return false; 
/*       */         if (!hasDropItem())
/*       */           return false; 
/*       */         if (!hasDungeonCount())
/*       */           return false; 
/*       */         if (!hasState())
/*       */           return false; 
/*       */         if (!getDropItem().isInitialized())
/*       */           return false; 
/*       */         for (int i = 0; i < getDiceInfoCount(); i++) {
/*       */           if (!getDiceInfo(i).isInitialized())
/*       */             return false; 
/*       */         } 
/*       */         return true;
/*       */       } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         GuildManagerHandler.AwardInfo parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (GuildManagerHandler.AwardInfo)GuildManagerHandler.AwardInfo.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (GuildManagerHandler.AwardInfo)e.getUnfinishedMessage();
/*       */           throw e;
/*       */         } finally {
/*       */           if (parsedMessage != null)
/*       */             mergeFrom(parsedMessage); 
/*       */         } 
/*       */         return this;
/*       */       } public boolean hasPos() {
/*       */         return ((this.bitField0_ & 0x1) == 1);
/*       */       } public int getPos() {
/*       */         return this.pos_;
/*       */       } public Builder setPos(int value) {
/*       */         this.bitField0_ |= 0x1;
/*       */         this.pos_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       } public Builder clearPos() {
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.pos_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       } public boolean hasDropItem() {
/*       */         return ((this.bitField0_ & 0x2) == 2);
/*       */       } public ItemOuterClass.ItemDetail getDropItem() {
/*       */         if (this.dropItemBuilder_ == null)
/*       */           return this.dropItem_; 
/*       */         return (ItemOuterClass.ItemDetail)this.dropItemBuilder_.getMessage();
/*       */       } public Builder setDropItem(ItemOuterClass.ItemDetail value) {
/*       */         if (this.dropItemBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.dropItem_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.dropItemBuilder_.setMessage((GeneratedMessage)value);
/*       */         } 
/*       */         this.bitField0_ |= 0x2;
/*       */         return this;
/*       */       } public Builder setDropItem(ItemOuterClass.ItemDetail.Builder builderForValue) {
/*       */         if (this.dropItemBuilder_ == null) {
/*       */           this.dropItem_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.dropItemBuilder_.setMessage((GeneratedMessage)builderForValue.build());
/*       */         } 
/*       */         this.bitField0_ |= 0x2;
/*       */         return this;
/*       */       } public Builder mergeDropItem(ItemOuterClass.ItemDetail value) {
/*       */         if (this.dropItemBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x2) == 2 && this.dropItem_ != ItemOuterClass.ItemDetail.getDefaultInstance()) {
/*       */             this.dropItem_ = ItemOuterClass.ItemDetail.newBuilder(this.dropItem_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.dropItem_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.dropItemBuilder_.mergeFrom((GeneratedMessage)value);
/*       */         } 
/*       */         this.bitField0_ |= 0x2;
/*       */         return this;
/*       */       } public Builder clearDropItem() {
/*       */         if (this.dropItemBuilder_ == null) {
/*       */           this.dropItem_ = ItemOuterClass.ItemDetail.getDefaultInstance();
/*       */           onChanged();
/*       */         } else {
/*       */           this.dropItemBuilder_.clear();
/*       */         } 
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         return this;
/*       */       } public ItemOuterClass.ItemDetail.Builder getDropItemBuilder() {
/*       */         this.bitField0_ |= 0x2;
/*       */         onChanged();
/*       */         return (ItemOuterClass.ItemDetail.Builder)getDropItemFieldBuilder().getBuilder();
/*       */       } public ItemOuterClass.ItemDetailOrBuilder getDropItemOrBuilder() {
/*       */         if (this.dropItemBuilder_ != null)
/*       */           return (ItemOuterClass.ItemDetailOrBuilder)this.dropItemBuilder_.getMessageOrBuilder(); 
/*       */         return (ItemOuterClass.ItemDetailOrBuilder)this.dropItem_;
/*       */       } private SingleFieldBuilder<ItemOuterClass.ItemDetail, ItemOuterClass.ItemDetail.Builder, ItemOuterClass.ItemDetailOrBuilder> getDropItemFieldBuilder() {
/*       */         if (this.dropItemBuilder_ == null) {
/*       */           this.dropItemBuilder_ = new SingleFieldBuilder((GeneratedMessage)getDropItem(), getParentForChildren(), isClean());
/*       */           this.dropItem_ = null;
/*       */         } 
/*       */         return this.dropItemBuilder_;
/*       */       } public boolean hasDungeonCount() {
/*       */         return ((this.bitField0_ & 0x4) == 4);
/*       */       } public int getDungeonCount() {
/*       */         return this.dungeonCount_;
/*       */       } public Builder setDungeonCount(int value) {
/*       */         this.bitField0_ |= 0x4;
/*       */         this.dungeonCount_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       } public Builder clearDungeonCount() {
/*       */         this.bitField0_ &= 0xFFFFFFFB;
/*       */         this.dungeonCount_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       } public boolean hasPlayerName() {
/*       */         return ((this.bitField0_ & 0x8) == 8);
/*       */       } public String getPlayerName() {
/*       */         Object ref = this.playerName_;
/*       */         if (!(ref instanceof String)) {
/*       */           ByteString bs = (ByteString)ref;
/*       */           String s = bs.toStringUtf8();
/*       */           if (bs.isValidUtf8())
/*       */             this.playerName_ = s; 
/*       */           return s;
/*       */         } 
/*       */         return (String)ref;
/*       */       } public ByteString getPlayerNameBytes() {
/*       */         Object ref = this.playerName_;
/*       */         if (ref instanceof String) {
/*       */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           this.playerName_ = b;
/*       */           return b;
/*       */         } 
/*       */         return (ByteString)ref;
/*       */       } public Builder setPlayerName(String value) {
/*       */         if (value == null)
/*       */           throw new NullPointerException(); 
/*       */         this.bitField0_ |= 0x8;
/*       */         this.playerName_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       } public Builder clearPlayerName() {
/*       */         this.bitField0_ &= 0xFFFFFFF7;
/*       */         this.playerName_ = GuildManagerHandler.AwardInfo.getDefaultInstance().getPlayerName();
/*       */         onChanged();
/*       */         return this;
/*       */       } public Builder setPlayerNameBytes(ByteString value) {
/*       */         if (value == null)
/*       */           throw new NullPointerException(); 
/*       */         this.bitField0_ |= 0x8;
/*       */         this.playerName_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       } public boolean hasPlayerPro() {
/*       */         return ((this.bitField0_ & 0x10) == 16);
/*       */       }
/*       */       public int getPlayerPro() {
/*       */         return this.playerPro_;
/*       */       }
/*       */       public Builder setPlayerPro(int value) {
/*       */         this.bitField0_ |= 0x10;
/*       */         this.playerPro_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       public Builder clearPlayerPro() {
/*       */         this.bitField0_ &= 0xFFFFFFEF;
/*       */         this.playerPro_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       public boolean hasPlayerDicePoint() {
/*       */         return ((this.bitField0_ & 0x20) == 32);
/*       */       }
/*       */       public int getPlayerDicePoint() {
/*       */         return this.playerDicePoint_;
/*       */       }
/*       */       public Builder setPlayerDicePoint(int value) {
/*       */         this.bitField0_ |= 0x20;
/*       */         this.playerDicePoint_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       public Builder clearPlayerDicePoint() {
/*       */         this.bitField0_ &= 0xFFFFFFDF;
/*       */         this.playerDicePoint_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       public boolean hasState() {
/*       */         return ((this.bitField0_ & 0x40) == 64);
/*       */       }
/*       */       public int getState() {
/*       */         return this.state_;
/*       */       }
/*       */       public Builder setState(int value) {
/*       */         this.bitField0_ |= 0x40;
/*       */         this.state_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       public Builder clearState() {
/*       */         this.bitField0_ &= 0xFFFFFFBF;
/*       */         this.state_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       private void ensureDiceInfoIsMutable() {
/*       */         if ((this.bitField0_ & 0x80) != 128) {
/*       */           this.diceInfo_ = new ArrayList<>(this.diceInfo_);
/*       */           this.bitField0_ |= 0x80;
/*       */         } 
/*       */       }
/*       */       public List<GuildManagerHandler.DiceInfo> getDiceInfoList() {
/*       */         if (this.diceInfoBuilder_ == null)
/*       */           return Collections.unmodifiableList(this.diceInfo_); 
/*       */         return this.diceInfoBuilder_.getMessageList();
/*       */       }
/*       */       public int getDiceInfoCount() {
/*       */         if (this.diceInfoBuilder_ == null)
/*       */           return this.diceInfo_.size(); 
/*       */         return this.diceInfoBuilder_.getCount();
/*       */       }
/*       */       public GuildManagerHandler.DiceInfo getDiceInfo(int index) {
/*       */         if (this.diceInfoBuilder_ == null)
/*       */           return this.diceInfo_.get(index); 
/*       */         return (GuildManagerHandler.DiceInfo)this.diceInfoBuilder_.getMessage(index);
/*       */       }
/*       */       public Builder setDiceInfo(int index, GuildManagerHandler.DiceInfo value) {
/*       */         if (this.diceInfoBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureDiceInfoIsMutable();
/*       */           this.diceInfo_.set(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.diceInfoBuilder_.setMessage(index, value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       public Builder setDiceInfo(int index, GuildManagerHandler.DiceInfo.Builder builderForValue) {
/*       */         if (this.diceInfoBuilder_ == null) {
/*       */           ensureDiceInfoIsMutable();
/*       */           this.diceInfo_.set(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.diceInfoBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       public Builder addDiceInfo(GuildManagerHandler.DiceInfo value) {
/*       */         if (this.diceInfoBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureDiceInfoIsMutable();
/*       */           this.diceInfo_.add(value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.diceInfoBuilder_.addMessage(value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       public Builder addDiceInfo(int index, GuildManagerHandler.DiceInfo value) {
/*       */         if (this.diceInfoBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureDiceInfoIsMutable();
/*       */           this.diceInfo_.add(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.diceInfoBuilder_.addMessage(index, value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       public Builder addDiceInfo(GuildManagerHandler.DiceInfo.Builder builderForValue) {
/*       */         if (this.diceInfoBuilder_ == null) {
/*       */           ensureDiceInfoIsMutable();
/*       */           this.diceInfo_.add(builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.diceInfoBuilder_.addMessage(builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       public Builder addDiceInfo(int index, GuildManagerHandler.DiceInfo.Builder builderForValue) {
/*       */         if (this.diceInfoBuilder_ == null) {
/*       */           ensureDiceInfoIsMutable();
/*       */           this.diceInfo_.add(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.diceInfoBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       public Builder addAllDiceInfo(Iterable<? extends GuildManagerHandler.DiceInfo> values) {
/*       */         if (this.diceInfoBuilder_ == null) {
/*       */           ensureDiceInfoIsMutable();
/*       */           AbstractMessageLite.Builder.addAll(values, this.diceInfo_);
/*       */           onChanged();
/*       */         } else {
/*       */           this.diceInfoBuilder_.addAllMessages(values);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       public Builder clearDiceInfo() {
/*       */         if (this.diceInfoBuilder_ == null) {
/*       */           this.diceInfo_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFF7F;
/*       */           onChanged();
/*       */         } else {
/*       */           this.diceInfoBuilder_.clear();
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       public Builder removeDiceInfo(int index) {
/*       */         if (this.diceInfoBuilder_ == null) {
/*       */           ensureDiceInfoIsMutable();
/*       */           this.diceInfo_.remove(index);
/*       */           onChanged();
/*       */         } else {
/*       */           this.diceInfoBuilder_.remove(index);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       public GuildManagerHandler.DiceInfo.Builder getDiceInfoBuilder(int index) {
/*       */         return (GuildManagerHandler.DiceInfo.Builder)getDiceInfoFieldBuilder().getBuilder(index);
/*       */       }
/*       */       public GuildManagerHandler.DiceInfoOrBuilder getDiceInfoOrBuilder(int index) {
/*       */         if (this.diceInfoBuilder_ == null)
/*       */           return this.diceInfo_.get(index); 
/*       */         return (GuildManagerHandler.DiceInfoOrBuilder)this.diceInfoBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */       public List<? extends GuildManagerHandler.DiceInfoOrBuilder> getDiceInfoOrBuilderList() {
/*       */         if (this.diceInfoBuilder_ != null)
/*       */           return this.diceInfoBuilder_.getMessageOrBuilderList(); 
/*       */         return Collections.unmodifiableList((List)this.diceInfo_);
/*       */       }
/*       */       public GuildManagerHandler.DiceInfo.Builder addDiceInfoBuilder() {
/*       */         return (GuildManagerHandler.DiceInfo.Builder)getDiceInfoFieldBuilder().addBuilder(GuildManagerHandler.DiceInfo.getDefaultInstance());
/*       */       }
/*       */       public GuildManagerHandler.DiceInfo.Builder addDiceInfoBuilder(int index) {
/*       */         return (GuildManagerHandler.DiceInfo.Builder)getDiceInfoFieldBuilder().addBuilder(index, GuildManagerHandler.DiceInfo.getDefaultInstance());
/*       */       }
/*       */       public List<GuildManagerHandler.DiceInfo.Builder> getDiceInfoBuilderList() {
/*       */         return getDiceInfoFieldBuilder().getBuilderList();
/*       */       }
/*       */       private RepeatedFieldBuilder<GuildManagerHandler.DiceInfo, GuildManagerHandler.DiceInfo.Builder, GuildManagerHandler.DiceInfoOrBuilder> getDiceInfoFieldBuilder() {
/*       */         if (this.diceInfoBuilder_ == null) {
/*       */           this.diceInfoBuilder_ = new RepeatedFieldBuilder(this.diceInfo_, ((this.bitField0_ & 0x80) == 128), getParentForChildren(), isClean());
/*       */           this.diceInfo_ = null;
/*       */         } 
/*       */         return this.diceInfoBuilder_;
/*       */       } } }
/* 30823 */   public static final class GetDungeonScoreInfo extends GeneratedMessage implements GetDungeonScoreInfoOrBuilder { private static final GetDungeonScoreInfo defaultInstance = new GetDungeonScoreInfo(true); private final UnknownFieldSet unknownFields; private GetDungeonScoreInfo(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private GetDungeonScoreInfo(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static GetDungeonScoreInfo getDefaultInstance() { return defaultInstance; } public GetDungeonScoreInfo getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private GetDungeonScoreInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.type_ = input.readInt32(); break;case 16: this.bitField0_ |= 0x2; this.value_ = input.readInt32(); break;case 24: this.bitField0_ |= 0x4; this.score_ = input.readInt32(); break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GetDungeonScoreInfo_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GetDungeonScoreInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(GetDungeonScoreInfo.class, Builder.class); } public static Parser<GetDungeonScoreInfo> PARSER = (Parser<GetDungeonScoreInfo>)new AbstractParser<GetDungeonScoreInfo>() { public GuildManagerHandler.GetDungeonScoreInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.GetDungeonScoreInfo(input, extensionRegistry); } }; private int bitField0_; public static final int TYPE_FIELD_NUMBER = 1; private int type_; public static final int VALUE_FIELD_NUMBER = 2; private int value_; public static final int SCORE_FIELD_NUMBER = 3; private int score_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<GetDungeonScoreInfo> getParserForType() { return PARSER; } public boolean hasType() { return ((this.bitField0_ & 0x1) == 1); } public int getType() { return this.type_; } public boolean hasValue() { return ((this.bitField0_ & 0x2) == 2); } public int getValue() { return this.value_; } public boolean hasScore() { return ((this.bitField0_ & 0x4) == 4); } public int getScore() { return this.score_; } private void initFields() { this.type_ = 0; this.value_ = 0; this.score_ = 0; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  if (!hasType()) { this.memoizedIsInitialized = 0; return false; }  if (!hasValue()) { this.memoizedIsInitialized = 0; return false; }  if (!hasScore()) { this.memoizedIsInitialized = 0; return false; }  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.type_);  if ((this.bitField0_ & 0x2) == 2) output.writeInt32(2, this.value_);  if ((this.bitField0_ & 0x4) == 4) output.writeInt32(3, this.score_);  getUnknownFields().writeTo(output); } public int getSerializedSize() { int size = this.memoizedSerializedSize; if (size != -1) return size;  size = 0; if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.type_);  if ((this.bitField0_ & 0x2) == 2) size += CodedOutputStream.computeInt32Size(2, this.value_);  if ((this.bitField0_ & 0x4) == 4) size += CodedOutputStream.computeInt32Size(3, this.score_);  size += getUnknownFields().getSerializedSize(); this.memoizedSerializedSize = size; return size; } protected Object writeReplace() throws ObjectStreamException { return super.writeReplace(); } public static GetDungeonScoreInfo parseFrom(ByteString data) throws InvalidProtocolBufferException { return (GetDungeonScoreInfo)PARSER.parseFrom(data); } public static GetDungeonScoreInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (GetDungeonScoreInfo)PARSER.parseFrom(data, extensionRegistry); } public static GetDungeonScoreInfo parseFrom(byte[] data) throws InvalidProtocolBufferException { return (GetDungeonScoreInfo)PARSER.parseFrom(data); } public static GetDungeonScoreInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (GetDungeonScoreInfo)PARSER.parseFrom(data, extensionRegistry); } public static GetDungeonScoreInfo parseFrom(InputStream input) throws IOException { return (GetDungeonScoreInfo)PARSER.parseFrom(input); } public static GetDungeonScoreInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetDungeonScoreInfo)PARSER.parseFrom(input, extensionRegistry); } public static GetDungeonScoreInfo parseDelimitedFrom(InputStream input) throws IOException { return (GetDungeonScoreInfo)PARSER.parseDelimitedFrom(input); } public static GetDungeonScoreInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetDungeonScoreInfo)PARSER.parseDelimitedFrom(input, extensionRegistry); } public static GetDungeonScoreInfo parseFrom(CodedInputStream input) throws IOException { return (GetDungeonScoreInfo)PARSER.parseFrom(input); } public static GetDungeonScoreInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (GetDungeonScoreInfo)PARSER.parseFrom(input, extensionRegistry); } public static Builder newBuilder() { return Builder.create(); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder(GetDungeonScoreInfo prototype) { return newBuilder().mergeFrom(prototype); } public Builder toBuilder() { return newBuilder(this); } protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.GetDungeonScoreInfoOrBuilder {
/* 30824 */       private int bitField0_; private int type_; private int value_; private int score_; public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_GetDungeonScoreInfo_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_GetDungeonScoreInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.GetDungeonScoreInfo.class, Builder.class); } private Builder() { maybeForceBuilderInitialization(); } private Builder(GeneratedMessage.BuilderParent parent) { super(parent); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GuildManagerHandler.GetDungeonScoreInfo.alwaysUseFieldBuilders); } private static Builder create() { return new Builder(); } public Builder clear() { super.clear(); this.type_ = 0; this.bitField0_ &= 0xFFFFFFFE; this.value_ = 0; this.bitField0_ &= 0xFFFFFFFD; this.score_ = 0; this.bitField0_ &= 0xFFFFFFFB; return this; } public Builder clone() { return create().mergeFrom(buildPartial()); } public Descriptors.Descriptor getDescriptorForType() { return GuildManagerHandler.internal_static_pomelo_guild_GetDungeonScoreInfo_descriptor; } public GuildManagerHandler.GetDungeonScoreInfo getDefaultInstanceForType() { return GuildManagerHandler.GetDungeonScoreInfo.getDefaultInstance(); } public GuildManagerHandler.GetDungeonScoreInfo build() { GuildManagerHandler.GetDungeonScoreInfo result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public GuildManagerHandler.GetDungeonScoreInfo buildPartial() { GuildManagerHandler.GetDungeonScoreInfo result = new GuildManagerHandler.GetDungeonScoreInfo(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;  result.type_ = this.type_; if ((from_bitField0_ & 0x2) == 2) to_bitField0_ |= 0x2;  result.value_ = this.value_; if ((from_bitField0_ & 0x4) == 4) to_bitField0_ |= 0x4;  result.score_ = this.score_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder mergeFrom(Message other) { if (other instanceof GuildManagerHandler.GetDungeonScoreInfo) return mergeFrom((GuildManagerHandler.GetDungeonScoreInfo)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(GuildManagerHandler.GetDungeonScoreInfo other) { if (other == GuildManagerHandler.GetDungeonScoreInfo.getDefaultInstance()) return this;  if (other.hasType()) setType(other.getType());  if (other.hasValue()) setValue(other.getValue());  if (other.hasScore()) setScore(other.getScore());  mergeUnknownFields(other.getUnknownFields()); return this; } public final boolean isInitialized() { if (!hasType()) return false;  if (!hasValue()) return false;  if (!hasScore()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { GuildManagerHandler.GetDungeonScoreInfo parsedMessage = null; try { parsedMessage = (GuildManagerHandler.GetDungeonScoreInfo)GuildManagerHandler.GetDungeonScoreInfo.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (GuildManagerHandler.GetDungeonScoreInfo)e.getUnfinishedMessage(); throw e; } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasType() { return ((this.bitField0_ & 0x1) == 1); } public int getType() { return this.type_; } public Builder setType(int value) { this.bitField0_ |= 0x1; this.type_ = value; onChanged(); return this; } public Builder clearType() { this.bitField0_ &= 0xFFFFFFFE; this.type_ = 0; onChanged(); return this; } public boolean hasValue() { return ((this.bitField0_ & 0x2) == 2); } public int getValue() { return this.value_; } public Builder setValue(int value) { this.bitField0_ |= 0x2; this.value_ = value; onChanged(); return this; } public Builder clearValue() { this.bitField0_ &= 0xFFFFFFFD; this.value_ = 0; onChanged(); return this; } public boolean hasScore() { return ((this.bitField0_ & 0x4) == 4); } public int getScore() { return this.score_; } public Builder setScore(int value) { this.bitField0_ |= 0x4; this.score_ = value; onChanged(); return this; } public Builder clearScore() { this.bitField0_ &= 0xFFFFFFFB; this.score_ = 0; onChanged(); return this; } } static { defaultInstance.initFields(); }
/*       */      }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class DungeonAwardInfoResponse
/*       */     extends GeneratedMessage
/*       */     implements DungeonAwardInfoResponseOrBuilder
/*       */   {
/* 32477 */     private static final DungeonAwardInfoResponse defaultInstance = new DungeonAwardInfoResponse(true); private final UnknownFieldSet unknownFields; private DungeonAwardInfoResponse(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private DungeonAwardInfoResponse(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static DungeonAwardInfoResponse getDefaultInstance() { return defaultInstance; } public DungeonAwardInfoResponse getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private DungeonAwardInfoResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.s2CCode_ = input.readInt32(); break;case 18: bs = input.readBytes(); this.bitField0_ |= 0x2; this.s2CMsg_ = bs; break;case 24: this.bitField0_ |= 0x4; this.diceLeftTime_ = input.readInt32(); break;case 34: if ((mutable_bitField0_ & 0x8) != 8) { this.getDungeonScoreInfo_ = new ArrayList<>(); mutable_bitField0_ |= 0x8; }  this.getDungeonScoreInfo_.add(input.readMessage(GuildManagerHandler.GetDungeonScoreInfo.PARSER, extensionRegistry)); break;case 42: if ((mutable_bitField0_ & 0x10) != 16) { this.itemInfos_ = new ArrayList<>(); mutable_bitField0_ |= 0x10; }  this.itemInfos_.add(input.readMessage(GuildManagerHandler.AwardInfo.PARSER, extensionRegistry)); break;case 48: this.bitField0_ |= 0x8; this.isFightOver_ = input.readInt32(); break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x8) == 8) this.getDungeonScoreInfo_ = Collections.unmodifiableList(this.getDungeonScoreInfo_);  if ((mutable_bitField0_ & 0x10) == 16) this.itemInfos_ = Collections.unmodifiableList(this.itemInfos_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_DungeonAwardInfoResponse_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_DungeonAwardInfoResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(DungeonAwardInfoResponse.class, Builder.class); } public static Parser<DungeonAwardInfoResponse> PARSER = (Parser<DungeonAwardInfoResponse>)new AbstractParser<DungeonAwardInfoResponse>() { public GuildManagerHandler.DungeonAwardInfoResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.DungeonAwardInfoResponse(input, extensionRegistry); } }
/* 32478 */     ; private int bitField0_; public static final int S2C_CODE_FIELD_NUMBER = 1; private int s2CCode_; public static final int S2C_MSG_FIELD_NUMBER = 2; private Object s2CMsg_; public static final int DICELEFTTIME_FIELD_NUMBER = 3; private int diceLeftTime_; public static final int GETDUNGEONSCOREINFO_FIELD_NUMBER = 4; private List<GuildManagerHandler.GetDungeonScoreInfo> getDungeonScoreInfo_; public static final int ITEMINFOS_FIELD_NUMBER = 5; private List<GuildManagerHandler.AwardInfo> itemInfos_; public static final int ISFIGHTOVER_FIELD_NUMBER = 6; private int isFightOver_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<DungeonAwardInfoResponse> getParserForType() { return PARSER; } public boolean hasS2CCode() { return ((this.bitField0_ & 0x1) == 1); } public int getS2CCode() { return this.s2CCode_; } public boolean hasS2CMsg() { return ((this.bitField0_ & 0x2) == 2); } public String getS2CMsg() { Object ref = this.s2CMsg_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.s2CMsg_ = s;  return s; } public ByteString getS2CMsgBytes() { Object ref = this.s2CMsg_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.s2CMsg_ = b; return b; }  return (ByteString)ref; } public boolean hasDiceLeftTime() { return ((this.bitField0_ & 0x4) == 4); } static { defaultInstance.initFields(); } public int getDiceLeftTime() { return this.diceLeftTime_; }
/*       */     public List<GuildManagerHandler.GetDungeonScoreInfo> getGetDungeonScoreInfoList() { return this.getDungeonScoreInfo_; }
/*       */     public List<? extends GuildManagerHandler.GetDungeonScoreInfoOrBuilder> getGetDungeonScoreInfoOrBuilderList() { return (List)this.getDungeonScoreInfo_; }
/*       */     public int getGetDungeonScoreInfoCount() { return this.getDungeonScoreInfo_.size(); }
/*       */     public GuildManagerHandler.GetDungeonScoreInfo getGetDungeonScoreInfo(int index) { return this.getDungeonScoreInfo_.get(index); }
/*       */     public GuildManagerHandler.GetDungeonScoreInfoOrBuilder getGetDungeonScoreInfoOrBuilder(int index) { return this.getDungeonScoreInfo_.get(index); }
/*       */     public List<GuildManagerHandler.AwardInfo> getItemInfosList() { return this.itemInfos_; }
/*       */     public List<? extends GuildManagerHandler.AwardInfoOrBuilder> getItemInfosOrBuilderList() { return (List)this.itemInfos_; }
/*       */     public int getItemInfosCount() { return this.itemInfos_.size(); }
/*       */     public GuildManagerHandler.AwardInfo getItemInfos(int index) { return this.itemInfos_.get(index); }
/*       */     public GuildManagerHandler.AwardInfoOrBuilder getItemInfosOrBuilder(int index) { return this.itemInfos_.get(index); }
/*       */     public boolean hasIsFightOver() { return ((this.bitField0_ & 0x8) == 8); }
/*       */     public int getIsFightOver() { return this.isFightOver_; }
/*       */     private void initFields() { this.s2CCode_ = 0; this.s2CMsg_ = ""; this.diceLeftTime_ = 0; this.getDungeonScoreInfo_ = Collections.emptyList(); this.itemInfos_ = Collections.emptyList(); this.isFightOver_ = 0; }
/*       */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1)
/*       */         return true;  if (isInitialized == 0)
/*       */         return false;  if (!hasS2CCode()) {
/*       */         this.memoizedIsInitialized = 0; return false;
/*       */       }  if (!hasDiceLeftTime()) {
/*       */         this.memoizedIsInitialized = 0; return false;
/*       */       }  if (!hasIsFightOver()) {
/*       */         this.memoizedIsInitialized = 0; return false;
/*       */       }  int i; for (i = 0; i < getGetDungeonScoreInfoCount(); i++) {
/*       */         if (!getGetDungeonScoreInfo(i).isInitialized()) {
/*       */           this.memoizedIsInitialized = 0; return false;
/*       */         } 
/*       */       }  for (i = 0; i < getItemInfosCount(); i++) {
/*       */         if (!getItemInfos(i).isInitialized()) {
/*       */           this.memoizedIsInitialized = 0; return false;
/*       */         } 
/*       */       }  this.memoizedIsInitialized = 1; return true; }
/*       */     public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); if ((this.bitField0_ & 0x1) == 1)
/*       */         output.writeInt32(1, this.s2CCode_);  if ((this.bitField0_ & 0x2) == 2)
/*       */         output.writeBytes(2, getS2CMsgBytes());  if ((this.bitField0_ & 0x4) == 4)
/*       */         output.writeInt32(3, this.diceLeftTime_);  int i; for (i = 0; i < this.getDungeonScoreInfo_.size(); i++)
/*       */         output.writeMessage(4, (MessageLite)this.getDungeonScoreInfo_.get(i));  for (i = 0; i < this.itemInfos_.size(); i++)
/*       */         output.writeMessage(5, (MessageLite)this.itemInfos_.get(i));  if ((this.bitField0_ & 0x8) == 8)
/*       */         output.writeInt32(6, this.isFightOver_);  getUnknownFields().writeTo(output); }
/*       */     public int getSerializedSize() { int size = this.memoizedSerializedSize; if (size != -1)
/*       */         return size;  size = 0; if ((this.bitField0_ & 0x1) == 1)
/*       */         size += CodedOutputStream.computeInt32Size(1, this.s2CCode_);  if ((this.bitField0_ & 0x2) == 2)
/*       */         size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes());  if ((this.bitField0_ & 0x4) == 4)
/*       */         size += CodedOutputStream.computeInt32Size(3, this.diceLeftTime_);  int i; for (i = 0; i < this.getDungeonScoreInfo_.size(); i++)
/*       */         size += CodedOutputStream.computeMessageSize(4, (MessageLite)this.getDungeonScoreInfo_.get(i));  for (i = 0; i < this.itemInfos_.size(); i++)
/*       */         size += CodedOutputStream.computeMessageSize(5, (MessageLite)this.itemInfos_.get(i));  if ((this.bitField0_ & 0x8) == 8)
/*       */         size += CodedOutputStream.computeInt32Size(6, this.isFightOver_);  size += getUnknownFields().getSerializedSize(); this.memoizedSerializedSize = size; return size; }
/*       */     protected Object writeReplace() throws ObjectStreamException { return super.writeReplace(); }
/*       */     public static DungeonAwardInfoResponse parseFrom(ByteString data) throws InvalidProtocolBufferException { return (DungeonAwardInfoResponse)PARSER.parseFrom(data); }
/*       */     public static DungeonAwardInfoResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (DungeonAwardInfoResponse)PARSER.parseFrom(data, extensionRegistry); }
/*       */     public static DungeonAwardInfoResponse parseFrom(byte[] data) throws InvalidProtocolBufferException { return (DungeonAwardInfoResponse)PARSER.parseFrom(data); }
/*       */     public static DungeonAwardInfoResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (DungeonAwardInfoResponse)PARSER.parseFrom(data, extensionRegistry); }
/*       */     public static DungeonAwardInfoResponse parseFrom(InputStream input) throws IOException { return (DungeonAwardInfoResponse)PARSER.parseFrom(input); }
/*       */     public static DungeonAwardInfoResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (DungeonAwardInfoResponse)PARSER.parseFrom(input, extensionRegistry); }
/*       */     public static DungeonAwardInfoResponse parseDelimitedFrom(InputStream input) throws IOException { return (DungeonAwardInfoResponse)PARSER.parseDelimitedFrom(input); }
/*       */     public static DungeonAwardInfoResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (DungeonAwardInfoResponse)PARSER.parseDelimitedFrom(input, extensionRegistry); }
/*       */     public static DungeonAwardInfoResponse parseFrom(CodedInputStream input) throws IOException { return (DungeonAwardInfoResponse)PARSER.parseFrom(input); }
/*       */     public static DungeonAwardInfoResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (DungeonAwardInfoResponse)PARSER.parseFrom(input, extensionRegistry); }
/*       */     public static Builder newBuilder() { return Builder.create(); }
/*       */     public Builder newBuilderForType() { return newBuilder(); }
/*       */     public static Builder newBuilder(DungeonAwardInfoResponse prototype) { return newBuilder().mergeFrom(prototype); }
/*       */     public Builder toBuilder() { return newBuilder(this); }
/*       */     protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) { Builder builder = new Builder(parent); return builder; }
/*       */     public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.DungeonAwardInfoResponseOrBuilder { private int bitField0_; private int s2CCode_; private Object s2CMsg_; private int diceLeftTime_; private List<GuildManagerHandler.GetDungeonScoreInfo> getDungeonScoreInfo_; private RepeatedFieldBuilder<GuildManagerHandler.GetDungeonScoreInfo, GuildManagerHandler.GetDungeonScoreInfo.Builder, GuildManagerHandler.GetDungeonScoreInfoOrBuilder> getDungeonScoreInfoBuilder_; private List<GuildManagerHandler.AwardInfo> itemInfos_; private RepeatedFieldBuilder<GuildManagerHandler.AwardInfo, GuildManagerHandler.AwardInfo.Builder, GuildManagerHandler.AwardInfoOrBuilder> itemInfosBuilder_; private int isFightOver_;
/*       */       public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_DungeonAwardInfoResponse_descriptor; }
/*       */       protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_DungeonAwardInfoResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.DungeonAwardInfoResponse.class, Builder.class); }
/*       */       private Builder() { this.s2CMsg_ = ""; this.getDungeonScoreInfo_ = Collections.emptyList(); this.itemInfos_ = Collections.emptyList(); maybeForceBuilderInitialization(); }
/*       */       private Builder(GeneratedMessage.BuilderParent parent) { super(parent); this.s2CMsg_ = ""; this.getDungeonScoreInfo_ = Collections.emptyList(); this.itemInfos_ = Collections.emptyList(); maybeForceBuilderInitialization(); }
/*       */       private void maybeForceBuilderInitialization() { if (GuildManagerHandler.DungeonAwardInfoResponse.alwaysUseFieldBuilders) {
/*       */           getGetDungeonScoreInfoFieldBuilder(); getItemInfosFieldBuilder();
/*       */         }  }
/*       */       private static Builder create() { return new Builder(); }
/*       */       public Builder clear() { super.clear(); this.s2CCode_ = 0; this.bitField0_ &= 0xFFFFFFFE; this.s2CMsg_ = ""; this.bitField0_ &= 0xFFFFFFFD; this.diceLeftTime_ = 0; this.bitField0_ &= 0xFFFFFFFB; if (this.getDungeonScoreInfoBuilder_ == null) {
/*       */           this.getDungeonScoreInfo_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFF7;
/*       */         } else {
/*       */           this.getDungeonScoreInfoBuilder_.clear();
/*       */         }  if (this.itemInfosBuilder_ == null) {
/*       */           this.itemInfos_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFEF;
/*       */         } else {
/*       */           this.itemInfosBuilder_.clear();
/*       */         }  this.isFightOver_ = 0; this.bitField0_ &= 0xFFFFFFDF; return this; }
/*       */       public Builder clone() { return create().mergeFrom(buildPartial()); }
/*       */       public Descriptors.Descriptor getDescriptorForType() { return GuildManagerHandler.internal_static_pomelo_guild_DungeonAwardInfoResponse_descriptor; }
/*       */       public GuildManagerHandler.DungeonAwardInfoResponse getDefaultInstanceForType() { return GuildManagerHandler.DungeonAwardInfoResponse.getDefaultInstance(); }
/*       */       public GuildManagerHandler.DungeonAwardInfoResponse build() { GuildManagerHandler.DungeonAwardInfoResponse result = buildPartial(); if (!result.isInitialized())
/*       */           throw newUninitializedMessageException(result);  return result; }
/*       */       public GuildManagerHandler.DungeonAwardInfoResponse buildPartial() { GuildManagerHandler.DungeonAwardInfoResponse result = new GuildManagerHandler.DungeonAwardInfoResponse(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) == 1)
/*       */           to_bitField0_ |= 0x1;  result.s2CCode_ = this.s2CCode_; if ((from_bitField0_ & 0x2) == 2)
/*       */           to_bitField0_ |= 0x2;  result.s2CMsg_ = this.s2CMsg_; if ((from_bitField0_ & 0x4) == 4)
/*       */           to_bitField0_ |= 0x4;  result.diceLeftTime_ = this.diceLeftTime_; if (this.getDungeonScoreInfoBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x8) == 8) {
/*       */             this.getDungeonScoreInfo_ = Collections.unmodifiableList(this.getDungeonScoreInfo_); this.bitField0_ &= 0xFFFFFFF7;
/*       */           }  result.getDungeonScoreInfo_ = this.getDungeonScoreInfo_;
/*       */         } else {
/*       */           result.getDungeonScoreInfo_ = this.getDungeonScoreInfoBuilder_.build();
/*       */         }  if (this.itemInfosBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x10) == 16) {
/*       */             this.itemInfos_ = Collections.unmodifiableList(this.itemInfos_); this.bitField0_ &= 0xFFFFFFEF;
/*       */           }  result.itemInfos_ = this.itemInfos_;
/*       */         } else {
/*       */           result.itemInfos_ = this.itemInfosBuilder_.build();
/*       */         }  if ((from_bitField0_ & 0x20) == 32)
/*       */           to_bitField0_ |= 0x8;  result.isFightOver_ = this.isFightOver_; result.bitField0_ = to_bitField0_; onBuilt(); return result; }
/*       */       public Builder mergeFrom(Message other) { if (other instanceof GuildManagerHandler.DungeonAwardInfoResponse)
/*       */           return mergeFrom((GuildManagerHandler.DungeonAwardInfoResponse)other);  super.mergeFrom(other); return this; }
/*       */       public Builder mergeFrom(GuildManagerHandler.DungeonAwardInfoResponse other) { if (other == GuildManagerHandler.DungeonAwardInfoResponse.getDefaultInstance())
/*       */           return this;  if (other.hasS2CCode())
/*       */           setS2CCode(other.getS2CCode());  if (other.hasS2CMsg()) {
/*       */           this.bitField0_ |= 0x2; this.s2CMsg_ = other.s2CMsg_; onChanged();
/*       */         }  if (other.hasDiceLeftTime())
/*       */           setDiceLeftTime(other.getDiceLeftTime());  if (this.getDungeonScoreInfoBuilder_ == null) {
/*       */           if (!other.getDungeonScoreInfo_.isEmpty()) {
/*       */             if (this.getDungeonScoreInfo_.isEmpty()) {
/*       */               this.getDungeonScoreInfo_ = other.getDungeonScoreInfo_; this.bitField0_ &= 0xFFFFFFF7;
/*       */             } else {
/*       */               ensureGetDungeonScoreInfoIsMutable(); this.getDungeonScoreInfo_.addAll(other.getDungeonScoreInfo_);
/*       */             }  onChanged();
/*       */           } 
/*       */         } else if (!other.getDungeonScoreInfo_.isEmpty()) {
/*       */           if (this.getDungeonScoreInfoBuilder_.isEmpty()) {
/*       */             this.getDungeonScoreInfoBuilder_.dispose(); this.getDungeonScoreInfoBuilder_ = null; this.getDungeonScoreInfo_ = other.getDungeonScoreInfo_; this.bitField0_ &= 0xFFFFFFF7; this.getDungeonScoreInfoBuilder_ = GuildManagerHandler.DungeonAwardInfoResponse.alwaysUseFieldBuilders ? getGetDungeonScoreInfoFieldBuilder() : null;
/*       */           } else {
/*       */             this.getDungeonScoreInfoBuilder_.addAllMessages(other.getDungeonScoreInfo_);
/*       */           } 
/*       */         }  if (this.itemInfosBuilder_ == null) {
/*       */           if (!other.itemInfos_.isEmpty()) {
/*       */             if (this.itemInfos_.isEmpty()) {
/*       */               this.itemInfos_ = other.itemInfos_; this.bitField0_ &= 0xFFFFFFEF;
/*       */             } else {
/*       */               ensureItemInfosIsMutable(); this.itemInfos_.addAll(other.itemInfos_);
/*       */             }  onChanged();
/*       */           } 
/*       */         } else if (!other.itemInfos_.isEmpty()) {
/*       */           if (this.itemInfosBuilder_.isEmpty()) {
/*       */             this.itemInfosBuilder_.dispose(); this.itemInfosBuilder_ = null; this.itemInfos_ = other.itemInfos_; this.bitField0_ &= 0xFFFFFFEF; this.itemInfosBuilder_ = GuildManagerHandler.DungeonAwardInfoResponse.alwaysUseFieldBuilders ? getItemInfosFieldBuilder() : null;
/*       */           } else {
/*       */             this.itemInfosBuilder_.addAllMessages(other.itemInfos_);
/*       */           } 
/*       */         }  if (other.hasIsFightOver())
/*       */           setIsFightOver(other.getIsFightOver());  mergeUnknownFields(other.getUnknownFields()); return this; }
/*       */       public final boolean isInitialized() { if (!hasS2CCode())
/*       */           return false;  if (!hasDiceLeftTime())
/*       */           return false;  if (!hasIsFightOver())
/*       */           return false;  int i; for (i = 0; i < getGetDungeonScoreInfoCount(); i++) {
/*       */           if (!getGetDungeonScoreInfo(i).isInitialized())
/*       */             return false; 
/*       */         }  for (i = 0; i < getItemInfosCount(); i++) {
/*       */           if (!getItemInfos(i).isInitialized())
/*       */             return false; 
/*       */         }  return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { GuildManagerHandler.DungeonAwardInfoResponse parsedMessage = null; try {
/*       */           parsedMessage = (GuildManagerHandler.DungeonAwardInfoResponse)GuildManagerHandler.DungeonAwardInfoResponse.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (GuildManagerHandler.DungeonAwardInfoResponse)e.getUnfinishedMessage(); throw e;
/*       */         } finally {
/*       */           if (parsedMessage != null)
/*       */             mergeFrom(parsedMessage); 
/*       */         }  return this; }
/*       */       public boolean hasS2CCode() { return ((this.bitField0_ & 0x1) == 1); }
/*       */       public int getS2CCode() { return this.s2CCode_; }
/*       */       public Builder setS2CCode(int value) { this.bitField0_ |= 0x1; this.s2CCode_ = value; onChanged(); return this; }
/*       */       public Builder clearS2CCode() { this.bitField0_ &= 0xFFFFFFFE; this.s2CCode_ = 0; onChanged(); return this; }
/*       */       public boolean hasS2CMsg() { return ((this.bitField0_ & 0x2) == 2); }
/*       */       public String getS2CMsg() { Object ref = this.s2CMsg_; if (!(ref instanceof String)) {
/*       */           ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8())
/*       */             this.s2CMsg_ = s;  return s;
/*       */         }  return (String)ref; }
/*       */       public ByteString getS2CMsgBytes() { Object ref = this.s2CMsg_; if (ref instanceof String) {
/*       */           ByteString b = ByteString.copyFromUtf8((String)ref); this.s2CMsg_ = b; return b;
/*       */         }  return (ByteString)ref; }
/*       */       public Builder setS2CMsg(String value) { if (value == null)
/*       */           throw new NullPointerException();  this.bitField0_ |= 0x2; this.s2CMsg_ = value; onChanged(); return this; }
/*       */       public Builder clearS2CMsg() { this.bitField0_ &= 0xFFFFFFFD; this.s2CMsg_ = GuildManagerHandler.DungeonAwardInfoResponse.getDefaultInstance().getS2CMsg(); onChanged(); return this; }
/*       */       public Builder setS2CMsgBytes(ByteString value) { if (value == null)
/*       */           throw new NullPointerException();  this.bitField0_ |= 0x2; this.s2CMsg_ = value; onChanged(); return this; }
/*       */       public boolean hasDiceLeftTime() { return ((this.bitField0_ & 0x4) == 4); }
/*       */       public int getDiceLeftTime() { return this.diceLeftTime_; }
/*       */       public Builder setDiceLeftTime(int value) { this.bitField0_ |= 0x4; this.diceLeftTime_ = value; onChanged();
/*       */         return this; }
/*       */       public Builder clearDiceLeftTime() { this.bitField0_ &= 0xFFFFFFFB;
/*       */         this.diceLeftTime_ = 0;
/*       */         onChanged();
/*       */         return this; }
/*       */       private void ensureGetDungeonScoreInfoIsMutable() { if ((this.bitField0_ & 0x8) != 8) {
/*       */           this.getDungeonScoreInfo_ = new ArrayList<>(this.getDungeonScoreInfo_);
/*       */           this.bitField0_ |= 0x8;
/*       */         }  }
/*       */       public List<GuildManagerHandler.GetDungeonScoreInfo> getGetDungeonScoreInfoList() { if (this.getDungeonScoreInfoBuilder_ == null)
/*       */           return Collections.unmodifiableList(this.getDungeonScoreInfo_); 
/*       */         return this.getDungeonScoreInfoBuilder_.getMessageList(); }
/*       */       public int getGetDungeonScoreInfoCount() { if (this.getDungeonScoreInfoBuilder_ == null)
/*       */           return this.getDungeonScoreInfo_.size(); 
/*       */         return this.getDungeonScoreInfoBuilder_.getCount(); }
/*       */       public GuildManagerHandler.GetDungeonScoreInfo getGetDungeonScoreInfo(int index) { if (this.getDungeonScoreInfoBuilder_ == null)
/*       */           return this.getDungeonScoreInfo_.get(index); 
/*       */         return (GuildManagerHandler.GetDungeonScoreInfo)this.getDungeonScoreInfoBuilder_.getMessage(index); }
/*       */       public Builder setGetDungeonScoreInfo(int index, GuildManagerHandler.GetDungeonScoreInfo value) { if (this.getDungeonScoreInfoBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureGetDungeonScoreInfoIsMutable();
/*       */           this.getDungeonScoreInfo_.set(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.getDungeonScoreInfoBuilder_.setMessage(index, value);
/*       */         } 
/*       */         return this; }
/*       */       public Builder setGetDungeonScoreInfo(int index, GuildManagerHandler.GetDungeonScoreInfo.Builder builderForValue) { if (this.getDungeonScoreInfoBuilder_ == null) {
/*       */           ensureGetDungeonScoreInfoIsMutable();
/*       */           this.getDungeonScoreInfo_.set(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.getDungeonScoreInfoBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/*       */         return this; }
/*       */       public Builder addGetDungeonScoreInfo(GuildManagerHandler.GetDungeonScoreInfo value) { if (this.getDungeonScoreInfoBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureGetDungeonScoreInfoIsMutable();
/*       */           this.getDungeonScoreInfo_.add(value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.getDungeonScoreInfoBuilder_.addMessage(value);
/*       */         } 
/*       */         return this; }
/*       */       public Builder addGetDungeonScoreInfo(int index, GuildManagerHandler.GetDungeonScoreInfo value) { if (this.getDungeonScoreInfoBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureGetDungeonScoreInfoIsMutable();
/*       */           this.getDungeonScoreInfo_.add(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.getDungeonScoreInfoBuilder_.addMessage(index, value);
/*       */         } 
/*       */         return this; }
/*       */       public Builder addGetDungeonScoreInfo(GuildManagerHandler.GetDungeonScoreInfo.Builder builderForValue) { if (this.getDungeonScoreInfoBuilder_ == null) {
/*       */           ensureGetDungeonScoreInfoIsMutable();
/*       */           this.getDungeonScoreInfo_.add(builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.getDungeonScoreInfoBuilder_.addMessage(builderForValue.build());
/*       */         } 
/*       */         return this; }
/*       */       public Builder addGetDungeonScoreInfo(int index, GuildManagerHandler.GetDungeonScoreInfo.Builder builderForValue) { if (this.getDungeonScoreInfoBuilder_ == null) {
/*       */           ensureGetDungeonScoreInfoIsMutable();
/*       */           this.getDungeonScoreInfo_.add(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.getDungeonScoreInfoBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/*       */         return this; }
/*       */       public Builder addAllGetDungeonScoreInfo(Iterable<? extends GuildManagerHandler.GetDungeonScoreInfo> values) { if (this.getDungeonScoreInfoBuilder_ == null) {
/*       */           ensureGetDungeonScoreInfoIsMutable();
/*       */           AbstractMessageLite.Builder.addAll(values, this.getDungeonScoreInfo_);
/*       */           onChanged();
/*       */         } else {
/*       */           this.getDungeonScoreInfoBuilder_.addAllMessages(values);
/*       */         } 
/*       */         return this; }
/*       */       public Builder clearGetDungeonScoreInfo() { if (this.getDungeonScoreInfoBuilder_ == null) {
/*       */           this.getDungeonScoreInfo_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFF7;
/*       */           onChanged();
/*       */         } else {
/*       */           this.getDungeonScoreInfoBuilder_.clear();
/*       */         } 
/*       */         return this; }
/*       */       public Builder removeGetDungeonScoreInfo(int index) { if (this.getDungeonScoreInfoBuilder_ == null) {
/*       */           ensureGetDungeonScoreInfoIsMutable();
/*       */           this.getDungeonScoreInfo_.remove(index);
/*       */           onChanged();
/*       */         } else {
/*       */           this.getDungeonScoreInfoBuilder_.remove(index);
/*       */         } 
/*       */         return this; }
/*       */       public GuildManagerHandler.GetDungeonScoreInfo.Builder getGetDungeonScoreInfoBuilder(int index) { return (GuildManagerHandler.GetDungeonScoreInfo.Builder)getGetDungeonScoreInfoFieldBuilder().getBuilder(index); }
/*       */       public GuildManagerHandler.GetDungeonScoreInfoOrBuilder getGetDungeonScoreInfoOrBuilder(int index) { if (this.getDungeonScoreInfoBuilder_ == null)
/*       */           return this.getDungeonScoreInfo_.get(index); 
/*       */         return (GuildManagerHandler.GetDungeonScoreInfoOrBuilder)this.getDungeonScoreInfoBuilder_.getMessageOrBuilder(index); }
/*       */       public List<? extends GuildManagerHandler.GetDungeonScoreInfoOrBuilder> getGetDungeonScoreInfoOrBuilderList() { if (this.getDungeonScoreInfoBuilder_ != null)
/*       */           return this.getDungeonScoreInfoBuilder_.getMessageOrBuilderList(); 
/*       */         return Collections.unmodifiableList((List)this.getDungeonScoreInfo_); }
/*       */       public GuildManagerHandler.GetDungeonScoreInfo.Builder addGetDungeonScoreInfoBuilder() { return (GuildManagerHandler.GetDungeonScoreInfo.Builder)getGetDungeonScoreInfoFieldBuilder().addBuilder(GuildManagerHandler.GetDungeonScoreInfo.getDefaultInstance()); }
/*       */       public GuildManagerHandler.GetDungeonScoreInfo.Builder addGetDungeonScoreInfoBuilder(int index) { return (GuildManagerHandler.GetDungeonScoreInfo.Builder)getGetDungeonScoreInfoFieldBuilder().addBuilder(index, GuildManagerHandler.GetDungeonScoreInfo.getDefaultInstance()); }
/*       */       public List<GuildManagerHandler.GetDungeonScoreInfo.Builder> getGetDungeonScoreInfoBuilderList() { return getGetDungeonScoreInfoFieldBuilder().getBuilderList(); }
/*       */       private RepeatedFieldBuilder<GuildManagerHandler.GetDungeonScoreInfo, GuildManagerHandler.GetDungeonScoreInfo.Builder, GuildManagerHandler.GetDungeonScoreInfoOrBuilder> getGetDungeonScoreInfoFieldBuilder() { if (this.getDungeonScoreInfoBuilder_ == null) {
/*       */           this.getDungeonScoreInfoBuilder_ = new RepeatedFieldBuilder(this.getDungeonScoreInfo_, ((this.bitField0_ & 0x8) == 8), getParentForChildren(), isClean());
/*       */           this.getDungeonScoreInfo_ = null;
/*       */         } 
/*       */         return this.getDungeonScoreInfoBuilder_; }
/*       */       private void ensureItemInfosIsMutable() { if ((this.bitField0_ & 0x10) != 16) {
/*       */           this.itemInfos_ = new ArrayList<>(this.itemInfos_);
/*       */           this.bitField0_ |= 0x10;
/*       */         }  }
/*       */       public List<GuildManagerHandler.AwardInfo> getItemInfosList() { if (this.itemInfosBuilder_ == null)
/*       */           return Collections.unmodifiableList(this.itemInfos_); 
/*       */         return this.itemInfosBuilder_.getMessageList(); }
/*       */       public int getItemInfosCount() { if (this.itemInfosBuilder_ == null)
/*       */           return this.itemInfos_.size(); 
/*       */         return this.itemInfosBuilder_.getCount(); }
/*       */       public GuildManagerHandler.AwardInfo getItemInfos(int index) { if (this.itemInfosBuilder_ == null)
/*       */           return this.itemInfos_.get(index); 
/*       */         return (GuildManagerHandler.AwardInfo)this.itemInfosBuilder_.getMessage(index); }
/*       */       public Builder setItemInfos(int index, GuildManagerHandler.AwardInfo value) { if (this.itemInfosBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureItemInfosIsMutable();
/*       */           this.itemInfos_.set(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.itemInfosBuilder_.setMessage(index, value);
/*       */         } 
/*       */         return this; }
/*       */       public Builder setItemInfos(int index, GuildManagerHandler.AwardInfo.Builder builderForValue) { if (this.itemInfosBuilder_ == null) {
/*       */           ensureItemInfosIsMutable();
/*       */           this.itemInfos_.set(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.itemInfosBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/*       */         return this; }
/*       */       public Builder addItemInfos(GuildManagerHandler.AwardInfo value) { if (this.itemInfosBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureItemInfosIsMutable();
/*       */           this.itemInfos_.add(value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.itemInfosBuilder_.addMessage(value);
/*       */         } 
/*       */         return this; }
/*       */       public Builder addItemInfos(int index, GuildManagerHandler.AwardInfo value) { if (this.itemInfosBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureItemInfosIsMutable();
/*       */           this.itemInfos_.add(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.itemInfosBuilder_.addMessage(index, value);
/*       */         } 
/*       */         return this; }
/*       */       public Builder addItemInfos(GuildManagerHandler.AwardInfo.Builder builderForValue) { if (this.itemInfosBuilder_ == null) {
/*       */           ensureItemInfosIsMutable();
/*       */           this.itemInfos_.add(builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.itemInfosBuilder_.addMessage(builderForValue.build());
/*       */         } 
/*       */         return this; }
/*       */       public Builder addItemInfos(int index, GuildManagerHandler.AwardInfo.Builder builderForValue) { if (this.itemInfosBuilder_ == null) {
/*       */           ensureItemInfosIsMutable();
/*       */           this.itemInfos_.add(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.itemInfosBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/*       */         return this; }
/*       */       public Builder addAllItemInfos(Iterable<? extends GuildManagerHandler.AwardInfo> values) { if (this.itemInfosBuilder_ == null) {
/*       */           ensureItemInfosIsMutable();
/*       */           AbstractMessageLite.Builder.addAll(values, this.itemInfos_);
/*       */           onChanged();
/*       */         } else {
/*       */           this.itemInfosBuilder_.addAllMessages(values);
/*       */         } 
/*       */         return this; }
/*       */       public Builder clearItemInfos() { if (this.itemInfosBuilder_ == null) {
/*       */           this.itemInfos_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFEF;
/*       */           onChanged();
/*       */         } else {
/*       */           this.itemInfosBuilder_.clear();
/*       */         } 
/*       */         return this; }
/*       */       public Builder removeItemInfos(int index) { if (this.itemInfosBuilder_ == null) {
/*       */           ensureItemInfosIsMutable();
/*       */           this.itemInfos_.remove(index);
/*       */           onChanged();
/*       */         } else {
/*       */           this.itemInfosBuilder_.remove(index);
/*       */         } 
/*       */         return this; }
/*       */       public GuildManagerHandler.AwardInfo.Builder getItemInfosBuilder(int index) { return (GuildManagerHandler.AwardInfo.Builder)getItemInfosFieldBuilder().getBuilder(index); }
/*       */       public GuildManagerHandler.AwardInfoOrBuilder getItemInfosOrBuilder(int index) { if (this.itemInfosBuilder_ == null)
/*       */           return this.itemInfos_.get(index); 
/*       */         return (GuildManagerHandler.AwardInfoOrBuilder)this.itemInfosBuilder_.getMessageOrBuilder(index); }
/*       */       public List<? extends GuildManagerHandler.AwardInfoOrBuilder> getItemInfosOrBuilderList() { if (this.itemInfosBuilder_ != null)
/*       */           return this.itemInfosBuilder_.getMessageOrBuilderList(); 
/*       */         return Collections.unmodifiableList((List)this.itemInfos_); }
/*       */       public GuildManagerHandler.AwardInfo.Builder addItemInfosBuilder() { return (GuildManagerHandler.AwardInfo.Builder)getItemInfosFieldBuilder().addBuilder(GuildManagerHandler.AwardInfo.getDefaultInstance()); }
/*       */       public GuildManagerHandler.AwardInfo.Builder addItemInfosBuilder(int index) { return (GuildManagerHandler.AwardInfo.Builder)getItemInfosFieldBuilder().addBuilder(index, GuildManagerHandler.AwardInfo.getDefaultInstance()); }
/*       */       public List<GuildManagerHandler.AwardInfo.Builder> getItemInfosBuilderList() { return getItemInfosFieldBuilder().getBuilderList(); }
/*       */       private RepeatedFieldBuilder<GuildManagerHandler.AwardInfo, GuildManagerHandler.AwardInfo.Builder, GuildManagerHandler.AwardInfoOrBuilder> getItemInfosFieldBuilder() { if (this.itemInfosBuilder_ == null) {
/*       */           this.itemInfosBuilder_ = new RepeatedFieldBuilder(this.itemInfos_, ((this.bitField0_ & 0x10) == 16), getParentForChildren(), isClean());
/*       */           this.itemInfos_ = null;
/*       */         } 
/*       */         return this.itemInfosBuilder_; }
/*       */       public boolean hasIsFightOver() { return ((this.bitField0_ & 0x20) == 32); }
/*       */       public int getIsFightOver() { return this.isFightOver_; }
/*       */       public Builder setIsFightOver(int value) { this.bitField0_ |= 0x20;
/*       */         this.isFightOver_ = value;
/*       */         onChanged();
/*       */         return this; }
/*       */       public Builder clearIsFightOver() { this.bitField0_ &= 0xFFFFFFDF;
/*       */         this.isFightOver_ = 0;
/*       */         onChanged();
/*       */         return this; } } }
/* 32882 */   public static final class DiceAwardRequest extends GeneratedMessage implements DiceAwardRequestOrBuilder { private static final DiceAwardRequest defaultInstance = new DiceAwardRequest(true); private final UnknownFieldSet unknownFields; private DiceAwardRequest(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private DiceAwardRequest(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static DiceAwardRequest getDefaultInstance() { return defaultInstance; } public DiceAwardRequest getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private DiceAwardRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.s2CPos_ = input.readInt32(); break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_DiceAwardRequest_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_DiceAwardRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(DiceAwardRequest.class, Builder.class); } public static Parser<DiceAwardRequest> PARSER = (Parser<DiceAwardRequest>)new AbstractParser<DiceAwardRequest>() { public GuildManagerHandler.DiceAwardRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.DiceAwardRequest(input, extensionRegistry); } }; private int bitField0_; public static final int S2C_POS_FIELD_NUMBER = 1; private int s2CPos_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<DiceAwardRequest> getParserForType() { return PARSER; } public boolean hasS2CPos() { return ((this.bitField0_ & 0x1) == 1); } public int getS2CPos() { return this.s2CPos_; } private void initFields() { this.s2CPos_ = 0; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  if (!hasS2CPos()) { this.memoizedIsInitialized = 0; return false; }  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); if ((this.bitField0_ & 0x1) == 1) output.writeInt32(1, this.s2CPos_);  getUnknownFields().writeTo(output); } public int getSerializedSize() { int size = this.memoizedSerializedSize; if (size != -1) return size;  size = 0; if ((this.bitField0_ & 0x1) == 1) size += CodedOutputStream.computeInt32Size(1, this.s2CPos_);  size += getUnknownFields().getSerializedSize(); this.memoizedSerializedSize = size; return size; } protected Object writeReplace() throws ObjectStreamException { return super.writeReplace(); } public static DiceAwardRequest parseFrom(ByteString data) throws InvalidProtocolBufferException { return (DiceAwardRequest)PARSER.parseFrom(data); } public static DiceAwardRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (DiceAwardRequest)PARSER.parseFrom(data, extensionRegistry); } public static DiceAwardRequest parseFrom(byte[] data) throws InvalidProtocolBufferException { return (DiceAwardRequest)PARSER.parseFrom(data); } public static DiceAwardRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (DiceAwardRequest)PARSER.parseFrom(data, extensionRegistry); } public static DiceAwardRequest parseFrom(InputStream input) throws IOException { return (DiceAwardRequest)PARSER.parseFrom(input); } public static DiceAwardRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (DiceAwardRequest)PARSER.parseFrom(input, extensionRegistry); } public static DiceAwardRequest parseDelimitedFrom(InputStream input) throws IOException { return (DiceAwardRequest)PARSER.parseDelimitedFrom(input); } public static DiceAwardRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (DiceAwardRequest)PARSER.parseDelimitedFrom(input, extensionRegistry); } public static DiceAwardRequest parseFrom(CodedInputStream input) throws IOException { return (DiceAwardRequest)PARSER.parseFrom(input); } public static DiceAwardRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (DiceAwardRequest)PARSER.parseFrom(input, extensionRegistry); } public static Builder newBuilder() { return Builder.create(); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder(DiceAwardRequest prototype) { return newBuilder().mergeFrom(prototype); } public Builder toBuilder() { return newBuilder(this); } protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.DiceAwardRequestOrBuilder {
/* 32883 */       private int bitField0_; private int s2CPos_; public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_DiceAwardRequest_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_DiceAwardRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.DiceAwardRequest.class, Builder.class); } private Builder() { maybeForceBuilderInitialization(); } private Builder(GeneratedMessage.BuilderParent parent) { super(parent); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GuildManagerHandler.DiceAwardRequest.alwaysUseFieldBuilders); } private static Builder create() { return new Builder(); } public Builder clear() { super.clear(); this.s2CPos_ = 0; this.bitField0_ &= 0xFFFFFFFE; return this; } public Builder clone() { return create().mergeFrom(buildPartial()); } public Descriptors.Descriptor getDescriptorForType() { return GuildManagerHandler.internal_static_pomelo_guild_DiceAwardRequest_descriptor; } public GuildManagerHandler.DiceAwardRequest getDefaultInstanceForType() { return GuildManagerHandler.DiceAwardRequest.getDefaultInstance(); } public GuildManagerHandler.DiceAwardRequest build() { GuildManagerHandler.DiceAwardRequest result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public GuildManagerHandler.DiceAwardRequest buildPartial() { GuildManagerHandler.DiceAwardRequest result = new GuildManagerHandler.DiceAwardRequest(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) == 1) to_bitField0_ |= 0x1;  result.s2CPos_ = this.s2CPos_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder mergeFrom(Message other) { if (other instanceof GuildManagerHandler.DiceAwardRequest) return mergeFrom((GuildManagerHandler.DiceAwardRequest)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(GuildManagerHandler.DiceAwardRequest other) { if (other == GuildManagerHandler.DiceAwardRequest.getDefaultInstance()) return this;  if (other.hasS2CPos()) setS2CPos(other.getS2CPos());  mergeUnknownFields(other.getUnknownFields()); return this; } public final boolean isInitialized() { if (!hasS2CPos()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { GuildManagerHandler.DiceAwardRequest parsedMessage = null; try { parsedMessage = (GuildManagerHandler.DiceAwardRequest)GuildManagerHandler.DiceAwardRequest.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (GuildManagerHandler.DiceAwardRequest)e.getUnfinishedMessage(); throw e; } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasS2CPos() { return ((this.bitField0_ & 0x1) == 1); } public int getS2CPos() { return this.s2CPos_; } public Builder setS2CPos(int value) { this.bitField0_ |= 0x1; this.s2CPos_ = value; onChanged(); return this; } public Builder clearS2CPos() { this.bitField0_ &= 0xFFFFFFFE; this.s2CPos_ = 0; onChanged(); return this; } } static { defaultInstance.initFields(); }
/*       */      }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class DiceAwardResponse
/*       */     extends GeneratedMessage
/*       */     implements DiceAwardResponseOrBuilder
/*       */   {
/* 33645 */     private static final DiceAwardResponse defaultInstance = new DiceAwardResponse(true); private final UnknownFieldSet unknownFields; private DiceAwardResponse(GeneratedMessage.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = builder.getUnknownFields(); } private DiceAwardResponse(boolean noInit) { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; this.unknownFields = UnknownFieldSet.getDefaultInstance(); } public static DiceAwardResponse getDefaultInstance() { return defaultInstance; } public DiceAwardResponse getDefaultInstanceForType() { return defaultInstance; } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private DiceAwardResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this.memoizedIsInitialized = -1; this.memoizedSerializedSize = -1; initFields(); int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; GuildManagerHandler.AwardInfo.Builder subBuilder; int tag = input.readTag(); switch (tag) { case 0: done = true; break;case 8: this.bitField0_ |= 0x1; this.s2CCode_ = input.readInt32(); break;case 18: bs = input.readBytes(); this.bitField0_ |= 0x2; this.s2CMsg_ = bs; break;case 26: subBuilder = null; if ((this.bitField0_ & 0x4) == 4) subBuilder = this.s2CItemInfo_.toBuilder();  this.s2CItemInfo_ = (GuildManagerHandler.AwardInfo)input.readMessage(GuildManagerHandler.AwardInfo.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.s2CItemInfo_); this.s2CItemInfo_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x4; break; }  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_DiceAwardResponse_descriptor; } protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_DiceAwardResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(DiceAwardResponse.class, Builder.class); } public static Parser<DiceAwardResponse> PARSER = (Parser<DiceAwardResponse>)new AbstractParser<DiceAwardResponse>() { public GuildManagerHandler.DiceAwardResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new GuildManagerHandler.DiceAwardResponse(input, extensionRegistry); } }
/* 33646 */     ; private int bitField0_; public static final int S2C_CODE_FIELD_NUMBER = 1; private int s2CCode_; public static final int S2C_MSG_FIELD_NUMBER = 2; private Object s2CMsg_; public static final int S2C_ITEMINFO_FIELD_NUMBER = 3; private GuildManagerHandler.AwardInfo s2CItemInfo_; private byte memoizedIsInitialized; private int memoizedSerializedSize; private static final long serialVersionUID = 0L; public Parser<DiceAwardResponse> getParserForType() { return PARSER; } public boolean hasS2CCode() { return ((this.bitField0_ & 0x1) == 1); } public int getS2CCode() { return this.s2CCode_; } public boolean hasS2CMsg() { return ((this.bitField0_ & 0x2) == 2); } public String getS2CMsg() { Object ref = this.s2CMsg_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.s2CMsg_ = s;  return s; } static { defaultInstance.initFields(); }
/*       */     public ByteString getS2CMsgBytes() { Object ref = this.s2CMsg_; if (ref instanceof String) {
/*       */         ByteString b = ByteString.copyFromUtf8((String)ref); this.s2CMsg_ = b; return b;
/*       */       }  return (ByteString)ref; }
/*       */     public boolean hasS2CItemInfo() { return ((this.bitField0_ & 0x4) == 4); }
/*       */     public GuildManagerHandler.AwardInfo getS2CItemInfo() { return this.s2CItemInfo_; }
/*       */     public GuildManagerHandler.AwardInfoOrBuilder getS2CItemInfoOrBuilder() { return this.s2CItemInfo_; }
/*       */     private void initFields() { this.s2CCode_ = 0; this.s2CMsg_ = ""; this.s2CItemInfo_ = GuildManagerHandler.AwardInfo.getDefaultInstance(); }
/*       */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1)
/*       */         return true;  if (isInitialized == 0)
/*       */         return false;  if (!hasS2CCode()) {
/*       */         this.memoizedIsInitialized = 0; return false;
/*       */       }  if (hasS2CItemInfo() && !getS2CItemInfo().isInitialized()) {
/*       */         this.memoizedIsInitialized = 0; return false;
/*       */       }  this.memoizedIsInitialized = 1; return true; }
/*       */     public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); if ((this.bitField0_ & 0x1) == 1)
/*       */         output.writeInt32(1, this.s2CCode_);  if ((this.bitField0_ & 0x2) == 2)
/*       */         output.writeBytes(2, getS2CMsgBytes());  if ((this.bitField0_ & 0x4) == 4)
/*       */         output.writeMessage(3, (MessageLite)this.s2CItemInfo_); 
/*       */       getUnknownFields().writeTo(output); }
/*       */     public int getSerializedSize() { int size = this.memoizedSerializedSize;
/*       */       if (size != -1)
/*       */         return size; 
/*       */       size = 0;
/*       */       if ((this.bitField0_ & 0x1) == 1)
/*       */         size += CodedOutputStream.computeInt32Size(1, this.s2CCode_); 
/*       */       if ((this.bitField0_ & 0x2) == 2)
/*       */         size += CodedOutputStream.computeBytesSize(2, getS2CMsgBytes()); 
/*       */       if ((this.bitField0_ & 0x4) == 4)
/*       */         size += CodedOutputStream.computeMessageSize(3, (MessageLite)this.s2CItemInfo_); 
/*       */       size += getUnknownFields().getSerializedSize();
/*       */       this.memoizedSerializedSize = size;
/*       */       return size; }
/*       */     protected Object writeReplace() throws ObjectStreamException { return super.writeReplace(); }
/*       */     public static DiceAwardResponse parseFrom(ByteString data) throws InvalidProtocolBufferException { return (DiceAwardResponse)PARSER.parseFrom(data); }
/*       */     public static DiceAwardResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (DiceAwardResponse)PARSER.parseFrom(data, extensionRegistry); }
/*       */     public static DiceAwardResponse parseFrom(byte[] data) throws InvalidProtocolBufferException { return (DiceAwardResponse)PARSER.parseFrom(data); }
/*       */     public static DiceAwardResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return (DiceAwardResponse)PARSER.parseFrom(data, extensionRegistry); }
/*       */     public static DiceAwardResponse parseFrom(InputStream input) throws IOException { return (DiceAwardResponse)PARSER.parseFrom(input); }
/*       */     public static DiceAwardResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (DiceAwardResponse)PARSER.parseFrom(input, extensionRegistry); }
/*       */     public static DiceAwardResponse parseDelimitedFrom(InputStream input) throws IOException { return (DiceAwardResponse)PARSER.parseDelimitedFrom(input); }
/*       */     public static DiceAwardResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (DiceAwardResponse)PARSER.parseDelimitedFrom(input, extensionRegistry); }
/*       */     public static DiceAwardResponse parseFrom(CodedInputStream input) throws IOException { return (DiceAwardResponse)PARSER.parseFrom(input); }
/*       */     public static DiceAwardResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return (DiceAwardResponse)PARSER.parseFrom(input, extensionRegistry); }
/*       */     public static Builder newBuilder() { return Builder.create(); }
/*       */     public Builder newBuilderForType() { return newBuilder(); }
/*       */     public static Builder newBuilder(DiceAwardResponse prototype) { return newBuilder().mergeFrom(prototype); }
/*       */     public Builder toBuilder() { return newBuilder(this); }
/*       */     protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) { Builder builder = new Builder(parent);
/*       */       return builder; }
/*       */     public static final class Builder extends GeneratedMessage.Builder<Builder> implements GuildManagerHandler.DiceAwardResponseOrBuilder {
/*       */       private int bitField0_;
/*       */       private int s2CCode_;
/*       */       private Object s2CMsg_;
/*       */       private GuildManagerHandler.AwardInfo s2CItemInfo_;
/*       */       private SingleFieldBuilder<GuildManagerHandler.AwardInfo, GuildManagerHandler.AwardInfo.Builder, GuildManagerHandler.AwardInfoOrBuilder> s2CItemInfoBuilder_;
/*       */       public static final Descriptors.Descriptor getDescriptor() { return GuildManagerHandler.internal_static_pomelo_guild_DiceAwardResponse_descriptor; }
/*       */       protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() { return GuildManagerHandler.internal_static_pomelo_guild_DiceAwardResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(GuildManagerHandler.DiceAwardResponse.class, Builder.class); }
/*       */       private Builder() { this.s2CMsg_ = "";
/*       */         this.s2CItemInfo_ = GuildManagerHandler.AwardInfo.getDefaultInstance();
/*       */         maybeForceBuilderInitialization(); }
/*       */       private Builder(GeneratedMessage.BuilderParent parent) { super(parent);
/*       */         this.s2CMsg_ = "";
/*       */         this.s2CItemInfo_ = GuildManagerHandler.AwardInfo.getDefaultInstance();
/*       */         maybeForceBuilderInitialization(); }
/*       */       private void maybeForceBuilderInitialization() { if (GuildManagerHandler.DiceAwardResponse.alwaysUseFieldBuilders)
/*       */           getS2CItemInfoFieldBuilder();  }
/*       */       private static Builder create() { return new Builder(); }
/*       */       public Builder clear() { super.clear();
/*       */         this.s2CCode_ = 0;
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.s2CMsg_ = "";
/*       */         this.bitField0_ &= 0xFFFFFFFD;
/*       */         if (this.s2CItemInfoBuilder_ == null) {
/*       */           this.s2CItemInfo_ = GuildManagerHandler.AwardInfo.getDefaultInstance();
/*       */         } else {
/*       */           this.s2CItemInfoBuilder_.clear();
/*       */         } 
/*       */         this.bitField0_ &= 0xFFFFFFFB;
/*       */         return this; }
/*       */       public Builder clone() { return create().mergeFrom(buildPartial()); }
/*       */       public Descriptors.Descriptor getDescriptorForType() { return GuildManagerHandler.internal_static_pomelo_guild_DiceAwardResponse_descriptor; }
/*       */       public GuildManagerHandler.DiceAwardResponse getDefaultInstanceForType() { return GuildManagerHandler.DiceAwardResponse.getDefaultInstance(); }
/*       */       public GuildManagerHandler.DiceAwardResponse build() { GuildManagerHandler.DiceAwardResponse result = buildPartial();
/*       */         if (!result.isInitialized())
/*       */           throw newUninitializedMessageException(result); 
/*       */         return result; }
/*       */       public GuildManagerHandler.DiceAwardResponse buildPartial() { GuildManagerHandler.DiceAwardResponse result = new GuildManagerHandler.DiceAwardResponse(this);
/*       */         int from_bitField0_ = this.bitField0_;
/*       */         int to_bitField0_ = 0;
/*       */         if ((from_bitField0_ & 0x1) == 1)
/*       */           to_bitField0_ |= 0x1; 
/*       */         result.s2CCode_ = this.s2CCode_;
/*       */         if ((from_bitField0_ & 0x2) == 2)
/*       */           to_bitField0_ |= 0x2; 
/*       */         result.s2CMsg_ = this.s2CMsg_;
/*       */         if ((from_bitField0_ & 0x4) == 4)
/*       */           to_bitField0_ |= 0x4; 
/*       */         if (this.s2CItemInfoBuilder_ == null) {
/*       */           result.s2CItemInfo_ = this.s2CItemInfo_;
/*       */         } else {
/*       */           result.s2CItemInfo_ = (GuildManagerHandler.AwardInfo)this.s2CItemInfoBuilder_.build();
/*       */         } 
/*       */         result.bitField0_ = to_bitField0_;
/*       */         onBuilt();
/*       */         return result; }
/*       */       public Builder mergeFrom(Message other) { if (other instanceof GuildManagerHandler.DiceAwardResponse)
/*       */           return mergeFrom((GuildManagerHandler.DiceAwardResponse)other); 
/*       */         super.mergeFrom(other);
/*       */         return this; }
/*       */       public Builder mergeFrom(GuildManagerHandler.DiceAwardResponse other) { if (other == GuildManagerHandler.DiceAwardResponse.getDefaultInstance())
/*       */           return this; 
/*       */         if (other.hasS2CCode())
/*       */           setS2CCode(other.getS2CCode()); 
/*       */         if (other.hasS2CMsg()) {
/*       */           this.bitField0_ |= 0x2;
/*       */           this.s2CMsg_ = other.s2CMsg_;
/*       */           onChanged();
/*       */         } 
/*       */         if (other.hasS2CItemInfo())
/*       */           mergeS2CItemInfo(other.getS2CItemInfo()); 
/*       */         mergeUnknownFields(other.getUnknownFields());
/*       */         return this; }
/*       */       public final boolean isInitialized() { if (!hasS2CCode())
/*       */           return false; 
/*       */         if (hasS2CItemInfo() && !getS2CItemInfo().isInitialized())
/*       */           return false; 
/*       */         return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { GuildManagerHandler.DiceAwardResponse parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (GuildManagerHandler.DiceAwardResponse)GuildManagerHandler.DiceAwardResponse.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (GuildManagerHandler.DiceAwardResponse)e.getUnfinishedMessage();
/*       */           throw e;
/*       */         } finally {
/*       */           if (parsedMessage != null)
/*       */             mergeFrom(parsedMessage); 
/*       */         } 
/*       */         return this; }
/*       */       public boolean hasS2CCode() { return ((this.bitField0_ & 0x1) == 1); }
/*       */       public int getS2CCode() { return this.s2CCode_; }
/*       */       public Builder setS2CCode(int value) { this.bitField0_ |= 0x1;
/*       */         this.s2CCode_ = value;
/*       */         onChanged();
/*       */         return this; }
/*       */       public Builder clearS2CCode() { this.bitField0_ &= 0xFFFFFFFE;
/*       */         this.s2CCode_ = 0;
/*       */         onChanged();
/*       */         return this; }
/*       */       public boolean hasS2CMsg() { return ((this.bitField0_ & 0x2) == 2); }
/*       */       public String getS2CMsg() { Object ref = this.s2CMsg_;
/*       */         if (!(ref instanceof String)) {
/*       */           ByteString bs = (ByteString)ref;
/*       */           String s = bs.toStringUtf8();
/*       */           if (bs.isValidUtf8())
/*       */             this.s2CMsg_ = s; 
/*       */           return s;
/*       */         } 
/*       */         return (String)ref; }
/*       */       public ByteString getS2CMsgBytes() { Object ref = this.s2CMsg_;
/*       */         if (ref instanceof String) {
/*       */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           this.s2CMsg_ = b;
/*       */           return b;
/*       */         } 
/*       */         return (ByteString)ref; }
/*       */       public Builder setS2CMsg(String value) { if (value == null)
/*       */           throw new NullPointerException(); 
/*       */         this.bitField0_ |= 0x2;
/*       */         this.s2CMsg_ = value;
/*       */         onChanged();
/*       */         return this; }
/*       */       public Builder clearS2CMsg() { this.bitField0_ &= 0xFFFFFFFD;
/*       */         this.s2CMsg_ = GuildManagerHandler.DiceAwardResponse.getDefaultInstance().getS2CMsg();
/*       */         onChanged();
/*       */         return this; }
/*       */       public Builder setS2CMsgBytes(ByteString value) { if (value == null)
/*       */           throw new NullPointerException(); 
/*       */         this.bitField0_ |= 0x2;
/*       */         this.s2CMsg_ = value;
/*       */         onChanged();
/*       */         return this; }
/*       */       public boolean hasS2CItemInfo() { return ((this.bitField0_ & 0x4) == 4); }
/*       */       public GuildManagerHandler.AwardInfo getS2CItemInfo() { if (this.s2CItemInfoBuilder_ == null)
/*       */           return this.s2CItemInfo_; 
/*       */         return (GuildManagerHandler.AwardInfo)this.s2CItemInfoBuilder_.getMessage(); }
/*       */       public Builder setS2CItemInfo(GuildManagerHandler.AwardInfo value) { if (this.s2CItemInfoBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.s2CItemInfo_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CItemInfoBuilder_.setMessage(value);
/*       */         } 
/*       */         this.bitField0_ |= 0x4;
/*       */         return this; } public Builder setS2CItemInfo(GuildManagerHandler.AwardInfo.Builder builderForValue) { if (this.s2CItemInfoBuilder_ == null) {
/*       */           this.s2CItemInfo_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CItemInfoBuilder_.setMessage(builderForValue.build());
/*       */         } 
/*       */         this.bitField0_ |= 0x4;
/*       */         return this; } public Builder mergeS2CItemInfo(GuildManagerHandler.AwardInfo value) { if (this.s2CItemInfoBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x4) == 4 && this.s2CItemInfo_ != GuildManagerHandler.AwardInfo.getDefaultInstance()) {
/*       */             this.s2CItemInfo_ = GuildManagerHandler.AwardInfo.newBuilder(this.s2CItemInfo_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.s2CItemInfo_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CItemInfoBuilder_.mergeFrom(value);
/*       */         } 
/*       */         this.bitField0_ |= 0x4;
/*       */         return this; } public Builder clearS2CItemInfo() { if (this.s2CItemInfoBuilder_ == null) {
/*       */           this.s2CItemInfo_ = GuildManagerHandler.AwardInfo.getDefaultInstance();
/*       */           onChanged();
/*       */         } else {
/*       */           this.s2CItemInfoBuilder_.clear();
/*       */         } 
/*       */         this.bitField0_ &= 0xFFFFFFFB;
/*       */         return this; } public GuildManagerHandler.AwardInfo.Builder getS2CItemInfoBuilder() { this.bitField0_ |= 0x4;
/*       */         onChanged();
/*       */         return (GuildManagerHandler.AwardInfo.Builder)getS2CItemInfoFieldBuilder().getBuilder(); } public GuildManagerHandler.AwardInfoOrBuilder getS2CItemInfoOrBuilder() { if (this.s2CItemInfoBuilder_ != null)
/*       */           return (GuildManagerHandler.AwardInfoOrBuilder)this.s2CItemInfoBuilder_.getMessageOrBuilder(); 
/*       */         return this.s2CItemInfo_; } private SingleFieldBuilder<GuildManagerHandler.AwardInfo, GuildManagerHandler.AwardInfo.Builder, GuildManagerHandler.AwardInfoOrBuilder> getS2CItemInfoFieldBuilder() { if (this.s2CItemInfoBuilder_ == null) {
/*       */           this.s2CItemInfoBuilder_ = new SingleFieldBuilder(getS2CItemInfo(), getParentForChildren(), isClean());
/*       */           this.s2CItemInfo_ = null;
/*       */         } 
/*       */         return this.s2CItemInfoBuilder_; } }
/* 33875 */   } public static Descriptors.FileDescriptor getDescriptor() { return descriptor; }
/*       */ 
/*       */ 
/*       */   
/*       */   static {
/* 33880 */     String[] descriptorData = { "\n\031guildManagerHandler.proto\022\fpomelo.guild\032\nitem.proto\032\fplayer.proto\"6\n\007UseCond\022\r\n\005level\030\001 \001(\005\022\017\n\007upLevel\030\002 \001(\005\022\013\n\003job\030\003 \002(\005\"=\n\013QualityCond\022\r\n\005level\030\001 \001(\005\022\017\n\007upLevel\030\002 \001(\005\022\016\n\006qColor\030\003 \001(\005\"\001\n\016DepotCondition\022&\n\007useCond\030\001 \001(\0132\025.pomelo.guild.UseCond\022*\n\007minCond\030\002 \001(\0132\031.pomelo.guild.QualityCond\022*\n\007maxCond\030\003 \001(\0132\031.pomelo.guild.QualityCond\"%\n\bRoleInfo\022\013\n\003pro\030\001 \001(\005\022\f\n\004name\030\002 \001(\t\".\n\016ItemRecordInfo\022\016\n\006qColor", "\030\001 \001(\005\022\f\n\004name\030\002 \001(\t\"Î\001\n\nRecordInfo\022%\n\005role1\030\001 \001(\0132\026.pomelo.guild.RoleInfo\022%\n\005role2\030\002 \001(\0132\026.pomelo.guild.RoleInfo\022\021\n\tresultNum\030\003 \001(\005\022\021\n\tresultStr\030\004 \001(\t\022\f\n\004time\030\005 \001(\t\022\022\n\nrecordType\030\006 \001(\005\022*\n\004item\030\007 \001(\0132\034.pomelo.guild.ItemRecordInfo\"\031\n\027GetDepotAllGridsRequest\"\033\n\031GetDepotAllDetailsRequest\".\n\032GetDepotOneGridInfoRequest\022\020\n\bbagIndex\030\001 \001(\005\"\025\n\023GetDepotInfoRequest\"%\n\025GetDepotRecordRequest\022\f\n\004page\030\001 \001(\005\"\025\n\023G", "etBlessInfoRequest\"%\n\025GetBlessRecordRequest\022\f\n\004page\030\001 \001(\005\"\031\n\027GetBuildingLevelRequest\"\001\n\007BagInfo\022\024\n\fbagGridCount\030\001 \001(\005\022\025\n\rbagTotalCount\030\002 \001(\005\022#\n\bbagGrids\030\003 \003(\0132\021.pomelo.item.Grid\022+\n\nbagDetails\030\004 \003(\0132\027.pomelo.item.ItemDetail\"`\n\fBagGridsInfo\022\024\n\fbagGridCount\030\001 \001(\005\022\025\n\rbagTotalCount\030\002 \001(\005\022#\n\bbagGrids\030\003 \003(\0132\021.pomelo.item.Grid\"x\n\tDepotInfo\022\r\n\005level\030\001 \002(\005\022/\n\tdepotCond\030\002 \001(\0132\034.pomelo.guild.DepotCondition\022\023", "\n\013deleteCount\030\003 \001(\005\022\026\n\016deleteCountMax\030\004 \001(\005\"n\n\030GetDepotAllGridsResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022/\n\013s2c_bagInfo\030\003 \001(\0132\032.pomelo.guild.BagGridsInfo\"p\n\032GetDepotAllDetailsResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022/\n\016s2c_bagDetails\030\003 \003(\0132\027.pomelo.item.ItemDetail\"\001\n\033GetDepotOneGridInfoResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022&\n\013s2c_bagGrid\030\003 \001(\0132\021.pomelo.item.Grid\022.\n\rs2c_bagDetail\030\004 \001(\0132", "\027.pomelo.item.ItemDetail\"\001\n\024GetDepotInfoResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022.\n\rs2c_depotInfo\030\003 \001(\0132\027.pomelo.guild.DepotInfo\022+\n\fs2c_depotBag\030\004 \001(\0132\025.pomelo.guild.BagInfo\"\n\026GetDepotRecordResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\0220\n\016s2c_recordList\030\003 \003(\0132\030.pomelo.guild.RecordInfo\022\020\n\bs2c_page\030\004 \001(\005\"O\n\tBlessItem\022\n\n\002id\030\001 \001(\005\022#\n\004item\030\002 \001(\0132\025.pomelo.item.MiniItem\022\021\n\tfinishNum\030\003 \001(\005\"¡\001\n\016GuildBle", "ssInfo\022\r\n\005level\030\001 \001(\005\022\022\n\nblessValue\030\002 \001(\005\022\025\n\rblessValueMax\030\003 \001(\005\022\023\n\013finishState\030\004 \003(\005\022)\n\bitemList\030\005 \003(\0132\027.pomelo.guild.BlessItem\022\025\n\rblessCountMax\030\006 \001(\005\"n\n\024GetBlessInfoResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\0223\n\rs2c_blessInfo\030\004 \001(\0132\034.pomelo.guild.GuildBlessInfo\"\n\026GetBlessRecordResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\0220\n\016s2c_recordList\030\003 \003(\0132\030.pomelo.guild.RecordInfo\022\020\n\bs2c_page\030\004 \001(\005\"J\n\rBuil", "dingLevel\022\022\n\ndepotLevel\030\001 \001(\005\022\022\n\nblessLevel\030\002 \001(\005\022\021\n\ttechLevel\030\003 \001(\005\"q\n\030GetBuildingLevelResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\0222\n\rs2c_levelInfo\030\003 \001(\0132\033.pomelo.guild.BuildingLevel\"\031\n\027OpenGuildDungeonRequest\"S\n\030OpenGuildDungeonResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022\024\n\fs2c_waitTime\030\003 \001(\005\"\031\n\027GuildDungeonListRequest\"\001\n\013DungeonInfo\022\021\n\tdungeonId\030\001 \002(\005\0224\n\020killedPlayerInfo\030\002 \001(\0132\032.pomelo.player.", "PlayerBasic\022\025\n\rcurrPlayerNum\030\003 \001(\005\022\026\n\016totalPlayerNum\030\004 \001(\005\"\001\n\013DungeonList\022\030\n\020currDungeonCount\030\001 \002(\005\022\027\n\017maxDungeonCount\030\002 \002(\005\022\r\n\005state\030\003 \002(\005\022\f\n\004time\030\004 \002(\005\022\020\n\bopenTime\030\005 \002(\005\022.\n\013dungeonList\030\006 \003(\0132\031.pomelo.guild.DungeonInfo\"j\n\030GuildDungeonListResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022+\n\bs2c_list\030\003 \002(\0132\031.pomelo.guild.DungeonList\"&\n\022DungeonRankRequest\022\020\n\bs2c_type\030\001 \002(\005\"w\n\bRankInfo\022\020\n\bplayerId\030\001 \002(\t\022\022", "\n\nplayerName\030\002 \002(\t\022\021\n\tplayerPro\030\003 \002(\005\022\r\n\005level\030\004 \002(\005\022\024\n\fupGradeLevel\030\005 \002(\005\022\r\n\005value\030\006 \002(\005\"b\n\023DungeonRankResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022(\n\bs2c_data\030\003 \003(\0132\026.pomelo.guild.RankInfo\"\031\n\027DungeonAwardInfoRequest\"D\n\bDiceInfo\022\022\n\nplayerName\030\001 \002(\t\022\021\n\tplayerPro\030\002 \002(\005\022\021\n\tdicePoint\030\003 \002(\005\"Ò\001\n\tAwardInfo\022\013\n\003pos\030\001 \002(\005\022)\n\bdropItem\030\002 \002(\0132\027.pomelo.item.ItemDetail\022\024\n\fdungeonCount\030\003 \002(\005\022\022\n\nplayerName\030\004 \001(\t\022\021", "\n\tplayerPro\030\005 \001(\005\022\027\n\017playerDicePoint\030\006 \001(\005\022\r\n\005state\030\007 \002(\005\022(\n\bdiceInfo\030\b \003(\0132\026.pomelo.guild.DiceInfo\"A\n\023GetDungeonScoreInfo\022\f\n\004type\030\001 \002(\005\022\r\n\005value\030\002 \002(\005\022\r\n\005score\030\003 \002(\005\"Ô\001\n\030DungeonAwardInfoResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022\024\n\fdiceLeftTime\030\003 \002(\005\022>\n\023getDungeonScoreInfo\030\004 \003(\0132!.pomelo.guild.GetDungeonScoreInfo\022*\n\titemInfos\030\005 \003(\0132\027.pomelo.guild.AwardInfo\022\023\n\013isFightOver\030\006 \002(\005\"#\n\020DiceAwardReques", "t\022\017\n\007s2c_pos\030\001 \002(\005\"e\n\021DiceAwardResponse\022\020\n\bs2c_code\030\001 \002(\005\022\017\n\007s2c_msg\030\002 \001(\t\022-\n\fs2c_itemInfo\030\003 \001(\0132\027.pomelo.guild.AwardInfo2¾\n\n\023guildManagerHandler\022h\n\027getDepotAllGridsRequest\022%.pomelo.guild.GetDepotAllGridsRequest\032&.pomelo.guild.GetDepotAllGridsResponse\022n\n\031getDepotAllDetailsRequest\022'.pomelo.guild.GetDepotAllDetailsRequest\032(.pomelo.guild.GetDepotAllDetailsResponse\022q\n\032getDepotOneGridInfoRequest\022(.pome", "lo.guild.GetDepotOneGridInfoRequest\032).pomelo.guild.GetDepotOneGridInfoResponse\022\\\n\023getDepotInfoRequest\022!.pomelo.guild.GetDepotInfoRequest\032\".pomelo.guild.GetDepotInfoResponse\022b\n\025getDepotRecordRequest\022#.pomelo.guild.GetDepotRecordRequest\032$.pomelo.guild.GetDepotRecordResponse\022\\\n\023getBlessInfoRequest\022!.pomelo.guild.GetBlessInfoRequest\032\".pomelo.guild.GetBlessInfoResponse\022b\n\025getBlessRecordRequest\022#.pomelo", ".guild.GetBlessRecordRequest\032$.pomelo.guild.GetBlessRecordResponse\022h\n\027getBuildingLevelRequest\022%.pomelo.guild.GetBuildingLevelRequest\032&.pomelo.guild.GetBuildingLevelResponse\022h\n\027openGuildDungeonRequest\022%.pomelo.guild.OpenGuildDungeonRequest\032&.pomelo.guild.OpenGuildDungeonResponse\022h\n\027guildDungeonListRequest\022%.pomelo.guild.GuildDungeonListRequest\032&.pomelo.guild.GuildDungeonListResponse\022Y\n\022dungeonRankR", "equest\022 .pomelo.guild.DungeonRankRequest\032!.pomelo.guild.DungeonRankResponse\022h\n\027dungeonAwardInfoRequest\022%.pomelo.guild.DungeonAwardInfoRequest\032&.pomelo.guild.DungeonAwardInfoResponse\022S\n\020diceAwardRequest\022\036.pomelo.guild.DiceAwardRequest\032\037.pomelo.guild.DiceAwardResponse" };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 34019 */     Descriptors.FileDescriptor.InternalDescriptorAssigner assigner = new Descriptors.FileDescriptor.InternalDescriptorAssigner()
/*       */       {
/*       */         public ExtensionRegistry assignDescriptors(Descriptors.FileDescriptor root)
/*       */         {
/* 34023 */           GuildManagerHandler.descriptor = root;
/* 34024 */           return null;
/*       */         }
/*       */       };
/*       */     
/* 34028 */     Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData, new Descriptors.FileDescriptor[] {
/*       */           
/* 34030 */           ItemOuterClass.getDescriptor(), 
/* 34031 */           PlayerOuterClass.getDescriptor() }, assigner);
/*       */   }
/*       */   
/* 34034 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_UseCond_descriptor = getDescriptor().getMessageTypes().get(0);
/* 34035 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_UseCond_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_UseCond_descriptor, new String[] { "Level", "UpLevel", "Job" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34040 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_QualityCond_descriptor = getDescriptor().getMessageTypes().get(1);
/* 34041 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_QualityCond_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_QualityCond_descriptor, new String[] { "Level", "UpLevel", "QColor" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34046 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_DepotCondition_descriptor = getDescriptor().getMessageTypes().get(2);
/* 34047 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_DepotCondition_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_DepotCondition_descriptor, new String[] { "UseCond", "MinCond", "MaxCond" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34052 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_RoleInfo_descriptor = getDescriptor().getMessageTypes().get(3);
/* 34053 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_RoleInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_RoleInfo_descriptor, new String[] { "Pro", "Name" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34058 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_ItemRecordInfo_descriptor = getDescriptor().getMessageTypes().get(4);
/* 34059 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_ItemRecordInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_ItemRecordInfo_descriptor, new String[] { "QColor", "Name" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34064 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_RecordInfo_descriptor = getDescriptor().getMessageTypes().get(5);
/* 34065 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_RecordInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_RecordInfo_descriptor, new String[] { "Role1", "Role2", "ResultNum", "ResultStr", "Time", "RecordType", "Item" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34070 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_GetDepotAllGridsRequest_descriptor = getDescriptor().getMessageTypes().get(6);
/* 34071 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_GetDepotAllGridsRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_GetDepotAllGridsRequest_descriptor, new String[0]);
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34076 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_GetDepotAllDetailsRequest_descriptor = getDescriptor().getMessageTypes().get(7);
/* 34077 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_GetDepotAllDetailsRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_GetDepotAllDetailsRequest_descriptor, new String[0]);
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34082 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_GetDepotOneGridInfoRequest_descriptor = getDescriptor().getMessageTypes().get(8);
/* 34083 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_GetDepotOneGridInfoRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_GetDepotOneGridInfoRequest_descriptor, new String[] { "BagIndex" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34088 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_GetDepotInfoRequest_descriptor = getDescriptor().getMessageTypes().get(9);
/* 34089 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_GetDepotInfoRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_GetDepotInfoRequest_descriptor, new String[0]);
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34094 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_GetDepotRecordRequest_descriptor = getDescriptor().getMessageTypes().get(10);
/* 34095 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_GetDepotRecordRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_GetDepotRecordRequest_descriptor, new String[] { "Page" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34100 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_GetBlessInfoRequest_descriptor = getDescriptor().getMessageTypes().get(11);
/* 34101 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_GetBlessInfoRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_GetBlessInfoRequest_descriptor, new String[0]);
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34106 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_GetBlessRecordRequest_descriptor = getDescriptor().getMessageTypes().get(12);
/* 34107 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_GetBlessRecordRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_GetBlessRecordRequest_descriptor, new String[] { "Page" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34112 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_GetBuildingLevelRequest_descriptor = getDescriptor().getMessageTypes().get(13);
/* 34113 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_GetBuildingLevelRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_GetBuildingLevelRequest_descriptor, new String[0]);
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34118 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_BagInfo_descriptor = getDescriptor().getMessageTypes().get(14);
/* 34119 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_BagInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_BagInfo_descriptor, new String[] { "BagGridCount", "BagTotalCount", "BagGrids", "BagDetails" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34124 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_BagGridsInfo_descriptor = getDescriptor().getMessageTypes().get(15);
/* 34125 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_BagGridsInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_BagGridsInfo_descriptor, new String[] { "BagGridCount", "BagTotalCount", "BagGrids" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34130 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_DepotInfo_descriptor = getDescriptor().getMessageTypes().get(16);
/* 34131 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_DepotInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_DepotInfo_descriptor, new String[] { "Level", "DepotCond", "DeleteCount", "DeleteCountMax" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34136 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_GetDepotAllGridsResponse_descriptor = getDescriptor().getMessageTypes().get(17);
/* 34137 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_GetDepotAllGridsResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_GetDepotAllGridsResponse_descriptor, new String[] { "S2CCode", "S2CMsg", "S2CBagInfo" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34142 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_GetDepotAllDetailsResponse_descriptor = getDescriptor().getMessageTypes().get(18);
/* 34143 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_GetDepotAllDetailsResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_GetDepotAllDetailsResponse_descriptor, new String[] { "S2CCode", "S2CMsg", "S2CBagDetails" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34148 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_GetDepotOneGridInfoResponse_descriptor = getDescriptor().getMessageTypes().get(19);
/* 34149 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_GetDepotOneGridInfoResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_GetDepotOneGridInfoResponse_descriptor, new String[] { "S2CCode", "S2CMsg", "S2CBagGrid", "S2CBagDetail" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34154 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_GetDepotInfoResponse_descriptor = getDescriptor().getMessageTypes().get(20);
/* 34155 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_GetDepotInfoResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_GetDepotInfoResponse_descriptor, new String[] { "S2CCode", "S2CMsg", "S2CDepotInfo", "S2CDepotBag" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34160 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_GetDepotRecordResponse_descriptor = getDescriptor().getMessageTypes().get(21);
/* 34161 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_GetDepotRecordResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_GetDepotRecordResponse_descriptor, new String[] { "S2CCode", "S2CMsg", "S2CRecordList", "S2CPage" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34166 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_BlessItem_descriptor = getDescriptor().getMessageTypes().get(22);
/* 34167 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_BlessItem_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_BlessItem_descriptor, new String[] { "Id", "Item", "FinishNum" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34172 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_GuildBlessInfo_descriptor = getDescriptor().getMessageTypes().get(23);
/* 34173 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_GuildBlessInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_GuildBlessInfo_descriptor, new String[] { "Level", "BlessValue", "BlessValueMax", "FinishState", "ItemList", "BlessCountMax" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34178 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_GetBlessInfoResponse_descriptor = getDescriptor().getMessageTypes().get(24);
/* 34179 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_GetBlessInfoResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_GetBlessInfoResponse_descriptor, new String[] { "S2CCode", "S2CMsg", "S2CBlessInfo" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34184 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_GetBlessRecordResponse_descriptor = getDescriptor().getMessageTypes().get(25);
/* 34185 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_GetBlessRecordResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_GetBlessRecordResponse_descriptor, new String[] { "S2CCode", "S2CMsg", "S2CRecordList", "S2CPage" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34190 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_BuildingLevel_descriptor = getDescriptor().getMessageTypes().get(26);
/* 34191 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_BuildingLevel_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_BuildingLevel_descriptor, new String[] { "DepotLevel", "BlessLevel", "TechLevel" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34196 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_GetBuildingLevelResponse_descriptor = getDescriptor().getMessageTypes().get(27);
/* 34197 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_GetBuildingLevelResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_GetBuildingLevelResponse_descriptor, new String[] { "S2CCode", "S2CMsg", "S2CLevelInfo" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34202 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_OpenGuildDungeonRequest_descriptor = getDescriptor().getMessageTypes().get(28);
/* 34203 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_OpenGuildDungeonRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_OpenGuildDungeonRequest_descriptor, new String[0]);
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34208 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_OpenGuildDungeonResponse_descriptor = getDescriptor().getMessageTypes().get(29);
/* 34209 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_OpenGuildDungeonResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_OpenGuildDungeonResponse_descriptor, new String[] { "S2CCode", "S2CMsg", "S2CWaitTime" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34214 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_GuildDungeonListRequest_descriptor = getDescriptor().getMessageTypes().get(30);
/* 34215 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_GuildDungeonListRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_GuildDungeonListRequest_descriptor, new String[0]);
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34220 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_DungeonInfo_descriptor = getDescriptor().getMessageTypes().get(31);
/* 34221 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_DungeonInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_DungeonInfo_descriptor, new String[] { "DungeonId", "KilledPlayerInfo", "CurrPlayerNum", "TotalPlayerNum" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34226 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_DungeonList_descriptor = getDescriptor().getMessageTypes().get(32);
/* 34227 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_DungeonList_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_DungeonList_descriptor, new String[] { "CurrDungeonCount", "MaxDungeonCount", "State", "Time", "OpenTime", "DungeonList" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34232 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_GuildDungeonListResponse_descriptor = getDescriptor().getMessageTypes().get(33);
/* 34233 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_GuildDungeonListResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_GuildDungeonListResponse_descriptor, new String[] { "S2CCode", "S2CMsg", "S2CList" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34238 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_DungeonRankRequest_descriptor = getDescriptor().getMessageTypes().get(34);
/* 34239 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_DungeonRankRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_DungeonRankRequest_descriptor, new String[] { "S2CType" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34244 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_RankInfo_descriptor = getDescriptor().getMessageTypes().get(35);
/* 34245 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_RankInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_RankInfo_descriptor, new String[] { "PlayerId", "PlayerName", "PlayerPro", "Level", "UpGradeLevel", "Value" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34250 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_DungeonRankResponse_descriptor = getDescriptor().getMessageTypes().get(36);
/* 34251 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_DungeonRankResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_DungeonRankResponse_descriptor, new String[] { "S2CCode", "S2CMsg", "S2CData" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34256 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_DungeonAwardInfoRequest_descriptor = getDescriptor().getMessageTypes().get(37);
/* 34257 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_DungeonAwardInfoRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_DungeonAwardInfoRequest_descriptor, new String[0]);
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34262 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_DiceInfo_descriptor = getDescriptor().getMessageTypes().get(38);
/* 34263 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_DiceInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_DiceInfo_descriptor, new String[] { "PlayerName", "PlayerPro", "DicePoint" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34268 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_AwardInfo_descriptor = getDescriptor().getMessageTypes().get(39);
/* 34269 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_AwardInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_AwardInfo_descriptor, new String[] { "Pos", "DropItem", "DungeonCount", "PlayerName", "PlayerPro", "PlayerDicePoint", "State", "DiceInfo" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34274 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_GetDungeonScoreInfo_descriptor = getDescriptor().getMessageTypes().get(40);
/* 34275 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_GetDungeonScoreInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_GetDungeonScoreInfo_descriptor, new String[] { "Type", "Value", "Score" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34280 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_DungeonAwardInfoResponse_descriptor = getDescriptor().getMessageTypes().get(41);
/* 34281 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_DungeonAwardInfoResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_DungeonAwardInfoResponse_descriptor, new String[] { "S2CCode", "S2CMsg", "DiceLeftTime", "GetDungeonScoreInfo", "ItemInfos", "IsFightOver" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34286 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_DiceAwardRequest_descriptor = getDescriptor().getMessageTypes().get(42);
/* 34287 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_DiceAwardRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_DiceAwardRequest_descriptor, new String[] { "S2CPos" });
/*       */ 
/*       */ 
/*       */ 
/*       */   
/* 34292 */   private static final Descriptors.Descriptor internal_static_pomelo_guild_DiceAwardResponse_descriptor = getDescriptor().getMessageTypes().get(43);
/* 34293 */   private static GeneratedMessage.FieldAccessorTable internal_static_pomelo_guild_DiceAwardResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(internal_static_pomelo_guild_DiceAwardResponse_descriptor, new String[] { "S2CCode", "S2CMsg", "S2CItemInfo" });
/*       */   private static Descriptors.FileDescriptor descriptor;
/*       */   
/*       */   static {
/* 34297 */     ItemOuterClass.getDescriptor();
/* 34298 */     PlayerOuterClass.getDescriptor();
/*       */   }
/*       */   
/*       */   public static interface DiceAwardResponseOrBuilder extends MessageOrBuilder {
/*       */     boolean hasS2CCode();
/*       */     
/*       */     int getS2CCode();
/*       */     
/*       */     boolean hasS2CMsg();
/*       */     
/*       */     String getS2CMsg();
/*       */     
/*       */     ByteString getS2CMsgBytes();
/*       */     
/*       */     boolean hasS2CItemInfo();
/*       */     
/*       */     GuildManagerHandler.AwardInfo getS2CItemInfo();
/*       */     
/*       */     GuildManagerHandler.AwardInfoOrBuilder getS2CItemInfoOrBuilder();
/*       */   }
/*       */   
/*       */   public static interface DiceAwardRequestOrBuilder extends MessageOrBuilder {
/*       */     boolean hasS2CPos();
/*       */     
/*       */     int getS2CPos();
/*       */   }
/*       */   
/*       */   public static interface DungeonAwardInfoResponseOrBuilder extends MessageOrBuilder {
/*       */     boolean hasS2CCode();
/*       */     
/*       */     int getS2CCode();
/*       */     
/*       */     boolean hasS2CMsg();
/*       */     
/*       */     String getS2CMsg();
/*       */     
/*       */     ByteString getS2CMsgBytes();
/*       */     
/*       */     boolean hasDiceLeftTime();
/*       */     
/*       */     int getDiceLeftTime();
/*       */     
/*       */     List<GuildManagerHandler.GetDungeonScoreInfo> getGetDungeonScoreInfoList();
/*       */     
/*       */     GuildManagerHandler.GetDungeonScoreInfo getGetDungeonScoreInfo(int param1Int);
/*       */     
/*       */     int getGetDungeonScoreInfoCount();
/*       */     
/*       */     List<? extends GuildManagerHandler.GetDungeonScoreInfoOrBuilder> getGetDungeonScoreInfoOrBuilderList();
/*       */     
/*       */     GuildManagerHandler.GetDungeonScoreInfoOrBuilder getGetDungeonScoreInfoOrBuilder(int param1Int);
/*       */     
/*       */     List<GuildManagerHandler.AwardInfo> getItemInfosList();
/*       */     
/*       */     GuildManagerHandler.AwardInfo getItemInfos(int param1Int);
/*       */     
/*       */     int getItemInfosCount();
/*       */     
/*       */     List<? extends GuildManagerHandler.AwardInfoOrBuilder> getItemInfosOrBuilderList();
/*       */     
/*       */     GuildManagerHandler.AwardInfoOrBuilder getItemInfosOrBuilder(int param1Int);
/*       */     
/*       */     boolean hasIsFightOver();
/*       */     
/*       */     int getIsFightOver();
/*       */   }
/*       */   
/*       */   public static interface GetDungeonScoreInfoOrBuilder extends MessageOrBuilder {
/*       */     boolean hasType();
/*       */     
/*       */     int getType();
/*       */     
/*       */     boolean hasValue();
/*       */     
/*       */     int getValue();
/*       */     
/*       */     boolean hasScore();
/*       */     
/*       */     int getScore();
/*       */   }
/*       */   
/*       */   public static interface AwardInfoOrBuilder extends MessageOrBuilder {
/*       */     boolean hasPos();
/*       */     
/*       */     int getPos();
/*       */     
/*       */     boolean hasDropItem();
/*       */     
/*       */     ItemOuterClass.ItemDetail getDropItem();
/*       */     
/*       */     ItemOuterClass.ItemDetailOrBuilder getDropItemOrBuilder();
/*       */     
/*       */     boolean hasDungeonCount();
/*       */     
/*       */     int getDungeonCount();
/*       */     
/*       */     boolean hasPlayerName();
/*       */     
/*       */     String getPlayerName();
/*       */     
/*       */     ByteString getPlayerNameBytes();
/*       */     
/*       */     boolean hasPlayerPro();
/*       */     
/*       */     int getPlayerPro();
/*       */     
/*       */     boolean hasPlayerDicePoint();
/*       */     
/*       */     int getPlayerDicePoint();
/*       */     
/*       */     boolean hasState();
/*       */     
/*       */     int getState();
/*       */     
/*       */     List<GuildManagerHandler.DiceInfo> getDiceInfoList();
/*       */     
/*       */     GuildManagerHandler.DiceInfo getDiceInfo(int param1Int);
/*       */     
/*       */     int getDiceInfoCount();
/*       */     
/*       */     List<? extends GuildManagerHandler.DiceInfoOrBuilder> getDiceInfoOrBuilderList();
/*       */     
/*       */     GuildManagerHandler.DiceInfoOrBuilder getDiceInfoOrBuilder(int param1Int);
/*       */   }
/*       */   
/*       */   public static interface DiceInfoOrBuilder extends MessageOrBuilder {
/*       */     boolean hasPlayerName();
/*       */     
/*       */     String getPlayerName();
/*       */     
/*       */     ByteString getPlayerNameBytes();
/*       */     
/*       */     boolean hasPlayerPro();
/*       */     
/*       */     int getPlayerPro();
/*       */     
/*       */     boolean hasDicePoint();
/*       */     
/*       */     int getDicePoint();
/*       */   }
/*       */   
/*       */   public static interface DungeonAwardInfoRequestOrBuilder extends MessageOrBuilder {}
/*       */   
/*       */   public static interface DungeonRankResponseOrBuilder extends MessageOrBuilder {
/*       */     boolean hasS2CCode();
/*       */     
/*       */     int getS2CCode();
/*       */     
/*       */     boolean hasS2CMsg();
/*       */     
/*       */     String getS2CMsg();
/*       */     
/*       */     ByteString getS2CMsgBytes();
/*       */     
/*       */     List<GuildManagerHandler.RankInfo> getS2CDataList();
/*       */     
/*       */     GuildManagerHandler.RankInfo getS2CData(int param1Int);
/*       */     
/*       */     int getS2CDataCount();
/*       */     
/*       */     List<? extends GuildManagerHandler.RankInfoOrBuilder> getS2CDataOrBuilderList();
/*       */     
/*       */     GuildManagerHandler.RankInfoOrBuilder getS2CDataOrBuilder(int param1Int);
/*       */   }
/*       */   
/*       */   public static interface RankInfoOrBuilder extends MessageOrBuilder {
/*       */     boolean hasPlayerId();
/*       */     
/*       */     String getPlayerId();
/*       */     
/*       */     ByteString getPlayerIdBytes();
/*       */     
/*       */     boolean hasPlayerName();
/*       */     
/*       */     String getPlayerName();
/*       */     
/*       */     ByteString getPlayerNameBytes();
/*       */     
/*       */     boolean hasPlayerPro();
/*       */     
/*       */     int getPlayerPro();
/*       */     
/*       */     boolean hasLevel();
/*       */     
/*       */     int getLevel();
/*       */     
/*       */     boolean hasUpGradeLevel();
/*       */     
/*       */     int getUpGradeLevel();
/*       */     
/*       */     boolean hasValue();
/*       */     
/*       */     int getValue();
/*       */   }
/*       */   
/*       */   public static interface DungeonRankRequestOrBuilder extends MessageOrBuilder {
/*       */     boolean hasS2CType();
/*       */     
/*       */     int getS2CType();
/*       */   }
/*       */   
/*       */   public static interface GuildDungeonListResponseOrBuilder extends MessageOrBuilder {
/*       */     boolean hasS2CCode();
/*       */     
/*       */     int getS2CCode();
/*       */     
/*       */     boolean hasS2CMsg();
/*       */     
/*       */     String getS2CMsg();
/*       */     
/*       */     ByteString getS2CMsgBytes();
/*       */     
/*       */     boolean hasS2CList();
/*       */     
/*       */     GuildManagerHandler.DungeonList getS2CList();
/*       */     
/*       */     GuildManagerHandler.DungeonListOrBuilder getS2CListOrBuilder();
/*       */   }
/*       */   
/*       */   public static interface DungeonListOrBuilder extends MessageOrBuilder {
/*       */     boolean hasCurrDungeonCount();
/*       */     
/*       */     int getCurrDungeonCount();
/*       */     
/*       */     boolean hasMaxDungeonCount();
/*       */     
/*       */     int getMaxDungeonCount();
/*       */     
/*       */     boolean hasState();
/*       */     
/*       */     int getState();
/*       */     
/*       */     boolean hasTime();
/*       */     
/*       */     int getTime();
/*       */     
/*       */     boolean hasOpenTime();
/*       */     
/*       */     int getOpenTime();
/*       */     
/*       */     List<GuildManagerHandler.DungeonInfo> getDungeonListList();
/*       */     
/*       */     GuildManagerHandler.DungeonInfo getDungeonList(int param1Int);
/*       */     
/*       */     int getDungeonListCount();
/*       */     
/*       */     List<? extends GuildManagerHandler.DungeonInfoOrBuilder> getDungeonListOrBuilderList();
/*       */     
/*       */     GuildManagerHandler.DungeonInfoOrBuilder getDungeonListOrBuilder(int param1Int);
/*       */   }
/*       */   
/*       */   public static interface DungeonInfoOrBuilder extends MessageOrBuilder {
/*       */     boolean hasDungeonId();
/*       */     
/*       */     int getDungeonId();
/*       */     
/*       */     boolean hasKilledPlayerInfo();
/*       */     
/*       */     PlayerOuterClass.PlayerBasic getKilledPlayerInfo();
/*       */     
/*       */     PlayerOuterClass.PlayerBasicOrBuilder getKilledPlayerInfoOrBuilder();
/*       */     
/*       */     boolean hasCurrPlayerNum();
/*       */     
/*       */     int getCurrPlayerNum();
/*       */     
/*       */     boolean hasTotalPlayerNum();
/*       */     
/*       */     int getTotalPlayerNum();
/*       */   }
/*       */   
/*       */   public static interface GuildDungeonListRequestOrBuilder extends MessageOrBuilder {}
/*       */   
/*       */   public static interface OpenGuildDungeonResponseOrBuilder extends MessageOrBuilder {
/*       */     boolean hasS2CCode();
/*       */     
/*       */     int getS2CCode();
/*       */     
/*       */     boolean hasS2CMsg();
/*       */     
/*       */     String getS2CMsg();
/*       */     
/*       */     ByteString getS2CMsgBytes();
/*       */     
/*       */     boolean hasS2CWaitTime();
/*       */     
/*       */     int getS2CWaitTime();
/*       */   }
/*       */   
/*       */   public static interface OpenGuildDungeonRequestOrBuilder extends MessageOrBuilder {}
/*       */   
/*       */   public static interface GetBuildingLevelResponseOrBuilder extends MessageOrBuilder {
/*       */     boolean hasS2CCode();
/*       */     
/*       */     int getS2CCode();
/*       */     
/*       */     boolean hasS2CMsg();
/*       */     
/*       */     String getS2CMsg();
/*       */     
/*       */     ByteString getS2CMsgBytes();
/*       */     
/*       */     boolean hasS2CLevelInfo();
/*       */     
/*       */     GuildManagerHandler.BuildingLevel getS2CLevelInfo();
/*       */     
/*       */     GuildManagerHandler.BuildingLevelOrBuilder getS2CLevelInfoOrBuilder();
/*       */   }
/*       */   
/*       */   public static interface BuildingLevelOrBuilder extends MessageOrBuilder {
/*       */     boolean hasDepotLevel();
/*       */     
/*       */     int getDepotLevel();
/*       */     
/*       */     boolean hasBlessLevel();
/*       */     
/*       */     int getBlessLevel();
/*       */     
/*       */     boolean hasTechLevel();
/*       */     
/*       */     int getTechLevel();
/*       */   }
/*       */   
/*       */   public static interface GetBlessRecordResponseOrBuilder extends MessageOrBuilder {
/*       */     boolean hasS2CCode();
/*       */     
/*       */     int getS2CCode();
/*       */     
/*       */     boolean hasS2CMsg();
/*       */     
/*       */     String getS2CMsg();
/*       */     
/*       */     ByteString getS2CMsgBytes();
/*       */     
/*       */     List<GuildManagerHandler.RecordInfo> getS2CRecordListList();
/*       */     
/*       */     GuildManagerHandler.RecordInfo getS2CRecordList(int param1Int);
/*       */     
/*       */     int getS2CRecordListCount();
/*       */     
/*       */     List<? extends GuildManagerHandler.RecordInfoOrBuilder> getS2CRecordListOrBuilderList();
/*       */     
/*       */     GuildManagerHandler.RecordInfoOrBuilder getS2CRecordListOrBuilder(int param1Int);
/*       */     
/*       */     boolean hasS2CPage();
/*       */     
/*       */     int getS2CPage();
/*       */   }
/*       */   
/*       */   public static interface GetBlessInfoResponseOrBuilder extends MessageOrBuilder {
/*       */     boolean hasS2CCode();
/*       */     
/*       */     int getS2CCode();
/*       */     
/*       */     boolean hasS2CMsg();
/*       */     
/*       */     String getS2CMsg();
/*       */     
/*       */     ByteString getS2CMsgBytes();
/*       */     
/*       */     boolean hasS2CBlessInfo();
/*       */     
/*       */     GuildManagerHandler.GuildBlessInfo getS2CBlessInfo();
/*       */     
/*       */     GuildManagerHandler.GuildBlessInfoOrBuilder getS2CBlessInfoOrBuilder();
/*       */   }
/*       */   
/*       */   public static interface GuildBlessInfoOrBuilder extends MessageOrBuilder {
/*       */     boolean hasLevel();
/*       */     
/*       */     int getLevel();
/*       */     
/*       */     boolean hasBlessValue();
/*       */     
/*       */     int getBlessValue();
/*       */     
/*       */     boolean hasBlessValueMax();
/*       */     
/*       */     int getBlessValueMax();
/*       */     
/*       */     List<Integer> getFinishStateList();
/*       */     
/*       */     int getFinishStateCount();
/*       */     
/*       */     int getFinishState(int param1Int);
/*       */     
/*       */     List<GuildManagerHandler.BlessItem> getItemListList();
/*       */     
/*       */     GuildManagerHandler.BlessItem getItemList(int param1Int);
/*       */     
/*       */     int getItemListCount();
/*       */     
/*       */     List<? extends GuildManagerHandler.BlessItemOrBuilder> getItemListOrBuilderList();
/*       */     
/*       */     GuildManagerHandler.BlessItemOrBuilder getItemListOrBuilder(int param1Int);
/*       */     
/*       */     boolean hasBlessCountMax();
/*       */     
/*       */     int getBlessCountMax();
/*       */   }
/*       */   
/*       */   public static interface BlessItemOrBuilder extends MessageOrBuilder {
/*       */     boolean hasId();
/*       */     
/*       */     int getId();
/*       */     
/*       */     boolean hasItem();
/*       */     
/*       */     ItemOuterClass.MiniItem getItem();
/*       */     
/*       */     ItemOuterClass.MiniItemOrBuilder getItemOrBuilder();
/*       */     
/*       */     boolean hasFinishNum();
/*       */     
/*       */     int getFinishNum();
/*       */   }
/*       */   
/*       */   public static interface GetDepotRecordResponseOrBuilder extends MessageOrBuilder {
/*       */     boolean hasS2CCode();
/*       */     
/*       */     int getS2CCode();
/*       */     
/*       */     boolean hasS2CMsg();
/*       */     
/*       */     String getS2CMsg();
/*       */     
/*       */     ByteString getS2CMsgBytes();
/*       */     
/*       */     List<GuildManagerHandler.RecordInfo> getS2CRecordListList();
/*       */     
/*       */     GuildManagerHandler.RecordInfo getS2CRecordList(int param1Int);
/*       */     
/*       */     int getS2CRecordListCount();
/*       */     
/*       */     List<? extends GuildManagerHandler.RecordInfoOrBuilder> getS2CRecordListOrBuilderList();
/*       */     
/*       */     GuildManagerHandler.RecordInfoOrBuilder getS2CRecordListOrBuilder(int param1Int);
/*       */     
/*       */     boolean hasS2CPage();
/*       */     
/*       */     int getS2CPage();
/*       */   }
/*       */   
/*       */   public static interface GetDepotInfoResponseOrBuilder extends MessageOrBuilder {
/*       */     boolean hasS2CCode();
/*       */     
/*       */     int getS2CCode();
/*       */     
/*       */     boolean hasS2CMsg();
/*       */     
/*       */     String getS2CMsg();
/*       */     
/*       */     ByteString getS2CMsgBytes();
/*       */     
/*       */     boolean hasS2CDepotInfo();
/*       */     
/*       */     GuildManagerHandler.DepotInfo getS2CDepotInfo();
/*       */     
/*       */     GuildManagerHandler.DepotInfoOrBuilder getS2CDepotInfoOrBuilder();
/*       */     
/*       */     boolean hasS2CDepotBag();
/*       */     
/*       */     GuildManagerHandler.BagInfo getS2CDepotBag();
/*       */     
/*       */     GuildManagerHandler.BagInfoOrBuilder getS2CDepotBagOrBuilder();
/*       */   }
/*       */   
/*       */   public static interface GetDepotOneGridInfoResponseOrBuilder extends MessageOrBuilder {
/*       */     boolean hasS2CCode();
/*       */     
/*       */     int getS2CCode();
/*       */     
/*       */     boolean hasS2CMsg();
/*       */     
/*       */     String getS2CMsg();
/*       */     
/*       */     ByteString getS2CMsgBytes();
/*       */     
/*       */     boolean hasS2CBagGrid();
/*       */     
/*       */     ItemOuterClass.Grid getS2CBagGrid();
/*       */     
/*       */     ItemOuterClass.GridOrBuilder getS2CBagGridOrBuilder();
/*       */     
/*       */     boolean hasS2CBagDetail();
/*       */     
/*       */     ItemOuterClass.ItemDetail getS2CBagDetail();
/*       */     
/*       */     ItemOuterClass.ItemDetailOrBuilder getS2CBagDetailOrBuilder();
/*       */   }
/*       */   
/*       */   public static interface GetDepotAllDetailsResponseOrBuilder extends MessageOrBuilder {
/*       */     boolean hasS2CCode();
/*       */     
/*       */     int getS2CCode();
/*       */     
/*       */     boolean hasS2CMsg();
/*       */     
/*       */     String getS2CMsg();
/*       */     
/*       */     ByteString getS2CMsgBytes();
/*       */     
/*       */     List<ItemOuterClass.ItemDetail> getS2CBagDetailsList();
/*       */     
/*       */     ItemOuterClass.ItemDetail getS2CBagDetails(int param1Int);
/*       */     
/*       */     int getS2CBagDetailsCount();
/*       */     
/*       */     List<? extends ItemOuterClass.ItemDetailOrBuilder> getS2CBagDetailsOrBuilderList();
/*       */     
/*       */     ItemOuterClass.ItemDetailOrBuilder getS2CBagDetailsOrBuilder(int param1Int);
/*       */   }
/*       */   
/*       */   public static interface GetDepotAllGridsResponseOrBuilder extends MessageOrBuilder {
/*       */     boolean hasS2CCode();
/*       */     
/*       */     int getS2CCode();
/*       */     
/*       */     boolean hasS2CMsg();
/*       */     
/*       */     String getS2CMsg();
/*       */     
/*       */     ByteString getS2CMsgBytes();
/*       */     
/*       */     boolean hasS2CBagInfo();
/*       */     
/*       */     GuildManagerHandler.BagGridsInfo getS2CBagInfo();
/*       */     
/*       */     GuildManagerHandler.BagGridsInfoOrBuilder getS2CBagInfoOrBuilder();
/*       */   }
/*       */   
/*       */   public static interface DepotInfoOrBuilder extends MessageOrBuilder {
/*       */     boolean hasLevel();
/*       */     
/*       */     int getLevel();
/*       */     
/*       */     boolean hasDepotCond();
/*       */     
/*       */     GuildManagerHandler.DepotCondition getDepotCond();
/*       */     
/*       */     GuildManagerHandler.DepotConditionOrBuilder getDepotCondOrBuilder();
/*       */     
/*       */     boolean hasDeleteCount();
/*       */     
/*       */     int getDeleteCount();
/*       */     
/*       */     boolean hasDeleteCountMax();
/*       */     
/*       */     int getDeleteCountMax();
/*       */   }
/*       */   
/*       */   public static interface BagGridsInfoOrBuilder extends MessageOrBuilder {
/*       */     boolean hasBagGridCount();
/*       */     
/*       */     int getBagGridCount();
/*       */     
/*       */     boolean hasBagTotalCount();
/*       */     
/*       */     int getBagTotalCount();
/*       */     
/*       */     List<ItemOuterClass.Grid> getBagGridsList();
/*       */     
/*       */     ItemOuterClass.Grid getBagGrids(int param1Int);
/*       */     
/*       */     int getBagGridsCount();
/*       */     
/*       */     List<? extends ItemOuterClass.GridOrBuilder> getBagGridsOrBuilderList();
/*       */     
/*       */     ItemOuterClass.GridOrBuilder getBagGridsOrBuilder(int param1Int);
/*       */   }
/*       */   
/*       */   public static interface BagInfoOrBuilder extends MessageOrBuilder {
/*       */     boolean hasBagGridCount();
/*       */     
/*       */     int getBagGridCount();
/*       */     
/*       */     boolean hasBagTotalCount();
/*       */     
/*       */     int getBagTotalCount();
/*       */     
/*       */     List<ItemOuterClass.Grid> getBagGridsList();
/*       */     
/*       */     ItemOuterClass.Grid getBagGrids(int param1Int);
/*       */     
/*       */     int getBagGridsCount();
/*       */     
/*       */     List<? extends ItemOuterClass.GridOrBuilder> getBagGridsOrBuilderList();
/*       */     
/*       */     ItemOuterClass.GridOrBuilder getBagGridsOrBuilder(int param1Int);
/*       */     
/*       */     List<ItemOuterClass.ItemDetail> getBagDetailsList();
/*       */     
/*       */     ItemOuterClass.ItemDetail getBagDetails(int param1Int);
/*       */     
/*       */     int getBagDetailsCount();
/*       */     
/*       */     List<? extends ItemOuterClass.ItemDetailOrBuilder> getBagDetailsOrBuilderList();
/*       */     
/*       */     ItemOuterClass.ItemDetailOrBuilder getBagDetailsOrBuilder(int param1Int);
/*       */   }
/*       */   
/*       */   public static interface GetBuildingLevelRequestOrBuilder extends MessageOrBuilder {}
/*       */   
/*       */   public static interface GetBlessRecordRequestOrBuilder extends MessageOrBuilder {
/*       */     boolean hasPage();
/*       */     
/*       */     int getPage();
/*       */   }
/*       */   
/*       */   public static interface GetBlessInfoRequestOrBuilder extends MessageOrBuilder {}
/*       */   
/*       */   public static interface GetDepotRecordRequestOrBuilder extends MessageOrBuilder {
/*       */     boolean hasPage();
/*       */     
/*       */     int getPage();
/*       */   }
/*       */   
/*       */   public static interface GetDepotInfoRequestOrBuilder extends MessageOrBuilder {}
/*       */   
/*       */   public static interface GetDepotOneGridInfoRequestOrBuilder extends MessageOrBuilder {
/*       */     boolean hasBagIndex();
/*       */     
/*       */     int getBagIndex();
/*       */   }
/*       */   
/*       */   public static interface GetDepotAllDetailsRequestOrBuilder extends MessageOrBuilder {}
/*       */   
/*       */   public static interface GetDepotAllGridsRequestOrBuilder extends MessageOrBuilder {}
/*       */   
/*       */   public static interface RecordInfoOrBuilder extends MessageOrBuilder {
/*       */     boolean hasRole1();
/*       */     
/*       */     GuildManagerHandler.RoleInfo getRole1();
/*       */     
/*       */     GuildManagerHandler.RoleInfoOrBuilder getRole1OrBuilder();
/*       */     
/*       */     boolean hasRole2();
/*       */     
/*       */     GuildManagerHandler.RoleInfo getRole2();
/*       */     
/*       */     GuildManagerHandler.RoleInfoOrBuilder getRole2OrBuilder();
/*       */     
/*       */     boolean hasResultNum();
/*       */     
/*       */     int getResultNum();
/*       */     
/*       */     boolean hasResultStr();
/*       */     
/*       */     String getResultStr();
/*       */     
/*       */     ByteString getResultStrBytes();
/*       */     
/*       */     boolean hasTime();
/*       */     
/*       */     String getTime();
/*       */     
/*       */     ByteString getTimeBytes();
/*       */     
/*       */     boolean hasRecordType();
/*       */     
/*       */     int getRecordType();
/*       */     
/*       */     boolean hasItem();
/*       */     
/*       */     GuildManagerHandler.ItemRecordInfo getItem();
/*       */     
/*       */     GuildManagerHandler.ItemRecordInfoOrBuilder getItemOrBuilder();
/*       */   }
/*       */   
/*       */   public static interface ItemRecordInfoOrBuilder extends MessageOrBuilder {
/*       */     boolean hasQColor();
/*       */     
/*       */     int getQColor();
/*       */     
/*       */     boolean hasName();
/*       */     
/*       */     String getName();
/*       */     
/*       */     ByteString getNameBytes();
/*       */   }
/*       */   
/*       */   public static interface RoleInfoOrBuilder extends MessageOrBuilder {
/*       */     boolean hasPro();
/*       */     
/*       */     int getPro();
/*       */     
/*       */     boolean hasName();
/*       */     
/*       */     String getName();
/*       */     
/*       */     ByteString getNameBytes();
/*       */   }
/*       */   
/*       */   public static interface DepotConditionOrBuilder extends MessageOrBuilder {
/*       */     boolean hasUseCond();
/*       */     
/*       */     GuildManagerHandler.UseCond getUseCond();
/*       */     
/*       */     GuildManagerHandler.UseCondOrBuilder getUseCondOrBuilder();
/*       */     
/*       */     boolean hasMinCond();
/*       */     
/*       */     GuildManagerHandler.QualityCond getMinCond();
/*       */     
/*       */     GuildManagerHandler.QualityCondOrBuilder getMinCondOrBuilder();
/*       */     
/*       */     boolean hasMaxCond();
/*       */     
/*       */     GuildManagerHandler.QualityCond getMaxCond();
/*       */     
/*       */     GuildManagerHandler.QualityCondOrBuilder getMaxCondOrBuilder();
/*       */   }
/*       */   
/*       */   public static interface QualityCondOrBuilder extends MessageOrBuilder {
/*       */     boolean hasLevel();
/*       */     
/*       */     int getLevel();
/*       */     
/*       */     boolean hasUpLevel();
/*       */     
/*       */     int getUpLevel();
/*       */     
/*       */     boolean hasQColor();
/*       */     
/*       */     int getQColor();
/*       */   }
/*       */   
/*       */   public static interface UseCondOrBuilder extends MessageOrBuilder {
/*       */     boolean hasLevel();
/*       */     
/*       */     int getLevel();
/*       */     
/*       */     boolean hasUpLevel();
/*       */     
/*       */     int getUpLevel();
/*       */     
/*       */     boolean hasJob();
/*       */     
/*       */     int getJob();
/*       */   }
/*       */ }


/* Location:              D:\Yxdl\xmds-server\mmoarpg-game.jar!\pomelo\guild\GuildManagerHandler.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */